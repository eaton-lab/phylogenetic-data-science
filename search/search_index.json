{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Phylogenetic Data Science","text":"<p>Welcome to Phylogenetic Data Science, a draft on-line textbook for  learning computational phylogenetics through interactive coding exercises  in Python. A goal of this textbook is to introduce a new generation of  students to algorithms used in phylogenetics and population genetics  for studying evolutionary relationships from phylogenetic trees,  and to introduce these concepts through a data-driven approach geared  towards treating phylogenetics as a form of data science.</p>"},{"location":"#ethos","title":"Ethos","text":"<ul> <li>free: all resources are available free and on-line.</li> <li>easy: coding exercises can be run on cloud-based servers using any  computer.</li> <li>interactive: learn by doing; equations and algorithms are paired with example   code.</li> <li>community: anyone can contribute changes for editorial approval.</li> <li>translatable: a Python bootcamp and coding exercises aim to demonstrate modern best practices.</li> <li>modern: chapters reference recent advances and software tools. </li> <li>organized: on-line search enables fast lookup of examples and references.</li> </ul>"},{"location":"#developerscontributors","title":"Developers/Contributors","text":"<ul> <li>Deren Eaton, Columbia University</li> <li>Carlos Alonso Maya-Lastra, Columbia University</li> </ul>"},{"location":"#contributing","title":"Contributing","text":"<p>This textbook is completely free and open source, and is intended to be a  living document that will evolve and improve over time. Anyone can contribute to either the text or code, and we strongly encourage everyone to consider contributing if you find any errors, or have ideas for improvements.  You can easily contribute to this textbook by clicking the pencil icon  () in the upper right corner of any page. This will open  a Markdown document of the page which you can fork, edit, and contribute  back through a pull request.</p>"},{"location":"#funding","title":"Funding","text":"<p>The development of this textbook was supported by NSF grant DEB-2046813 to D. Eaton. </p>"},{"location":"#license","title":"License","text":"<p>All text and code encompassing this textbook is hosted on GitHub under the GPLv3 licence.</p>"},{"location":"TODO/","title":"TODO","text":""},{"location":"TODO/#priorities","title":"Priorities","text":"<ul> <li> <p>1.5</p> <ul> <li>make a simple traversal chapter for readers who are not getting so deep into coding yet.</li> <li>describe that Nodes are useful as data storage objects.</li> </ul> </li> <li> <p>1.7</p> <ul> <li>show Node() reprs in Indexable class section.</li> <li>put iterable class before indexable class.</li> <li>make line numbered sections w/ highlight to describe update func.</li> <li>demonstrate get functions.</li> <li>demonstrate scatterplot and line plotting to make a tree.</li> </ul> </li> <li> <p>Substitution Models Animations</p> <ul> <li>Create a toytree function to generate likelihood models as cirlces with lines connecting them, and optional animation of ball bouncing  between states. This can be created using keyframes by custom editing of the css post toyplot, similar to the traversal algorithms. This could be coded in a utils animation subpackage.</li> </ul> </li> <li> <p>6.1</p> <ul> <li>Move pandas versus numpy speed comparison to bootcamp and link to it in this tutorial.</li> <li>At end, use the </li> </ul> </li> </ul>"},{"location":"course/","title":"Computational phylogenetics EEEB G6500","text":"<p>During Spring 2022 a computational phylogenetics graduate level course will be assisting in the development of this textbook through  reading discussions and coding exercises. </p>"},{"location":"course/#relevant-links","title":"Relevant links","text":"<ul> <li>syllabus</li> <li>project rubric</li> </ul>"},{"location":"installation/","title":"Installation and Software","text":"<p> You can complete all exercises in this textbook without installing anything.</p> <p>That's right, all you really need is a web-browser.  The exercises are hosted on a free cloud-based service called MyBinder,  which allows you to access Jupyter notebooks running on a remote server  with all required software pre-installed. You can find links to these  notebooks in each chapter, and all links are also listed at the end of  each chapter in the table of contents. As an example, the following link connects you to a notebook from the Coding bootcamp on learning to  use Jupyter: ( jupyter-exercise.ipynb).</p> <p>Nevertheless, you may wish to install the software dependencies  and run code from the textbook exercises locally on your computer, which  can provide a much greater opportunity for you to explore, modify,  and learn about the code. Below I provide a brief summary of what  this involves, and a link to our installation instructions.</p>"},{"location":"installation/#software-used-in-this-textbook","title":"Software used in this textbook","text":"<p>This textbook aims to teach basic and advanced Python coding skills  alongside lessons on phylogenetics with the goal of making complex algorithms more easily understandable as a set of simpler step-by-step  routines. This is a relatively difficult task, and obviously we cannot cover all aspects of Python coding, phylogenetic theory, and phylogenetic  software in this book. In general, decisions about which subjects to focus on, how to write code, and which existing tools to highlight, uses the  following guidelines:</p> <ul> <li> <p>Coding style follows the 'Zen of Python', which includes such  enlightened ideas as \"Beautiful is better than ugly\", \"Simple is better  than complex\", and \"Readability counts\".</p> </li> <li> <p>All software and package versions are clearly shown and updated frequently.</p> </li> <li> <p>All demonstrated software is easy to install (specifically, using <code>conda</code>).</p> </li> <li> <p>...</p> </li> </ul>"},{"location":"installation/#python-libraries","title":"Python libraries","text":"<p>Whenever possible we strive to use as few Python dependencies as possible,  and to develop examples using the most common libraries for scientific  programing in Python. Currently this includes the following:</p> <ul> <li>Python Data Science:  <ul> <li>Numpy: arrays, tensors, and numeric processing.  </li> <li>Pandas: tabular dataframes, statistical processing.  </li> <li>Scipy: statistical distributions.  </li> <li>Numba: just-in-time compilation for speed-optimized functions.  </li> </ul> </li> <li>Visualization:  <ul> <li>Toyplot: minimalist interactive vector-based plotting.</li> </ul> </li> <li>Tree objects:  <ul> <li>Toytree: tree-based operations and tree plotting using toyplot.  </li> </ul> </li> <li>Coalescent simulations:  <ul> <li>Ipcoal: coalescent simulation library integrated with toytree visualization.  </li> <li>Msprime: coalescent simulation backend for ipcoal.  </li> <li>Tskit: tree sequence class backend for msprime.  </li> </ul> </li> <li>Machine learning:  <ul> <li>scikit-learn: simple and well documented machine learning code.   </li> </ul> </li> </ul>"},{"location":"installation/#external-binaries","title":"External binaries","text":"<p>In addition to learning to implement phylogenetic algorithms in Python,  we also demonstrate usage of established external software tools in many exercises. When multiple options are available we tend to select tools  that are easiest to install (e.g., using conda), and which have a command line interface (as opposed to graphical user interface). This includes  the following software tools:</p> <ul> <li>Compiled software tools:<ul> <li>RAxML: Maximum likelihood tree inference software.</li> <li>MrBayes: Bayesian tree inference software.</li> <li>BPP: Multispecies coalescent species tree software.</li> <li>...</li> </ul> </li> </ul>"},{"location":"installation/#optional-installation-instructions","title":"Optional Installation Instructions","text":"<p>If you want to follow along with the exercises in this textbook on your  own computer, rather than use the cloud-based binder notebooks, you can do so by installing the necessary software into a conda environment. You can find detailed instructions for this in the Coding bootcamp.</p>"},{"location":"bootcamp/0.0-installation-conda/","title":"Installing software with conda","text":""},{"location":"bootcamp/0.0-installation-conda/#what-is-conda","title":"What is conda?","text":"<p>Conda is an open-source software management  tool for installing other software, as well as their dependencies, and  creating sandboxed environments for executing code. Using the <code>conda</code> command line tool you can use simple commands to search for software packages, select  specific versions, and install them locally on your machine. This automated process makes installing and removing software simple and reproducible which makes it easier to design, distribute and use working software.</p>"},{"location":"bootcamp/0.0-installation-conda/#why-use-conda","title":"Why use conda?","text":"<p>The many advantages of using conda include:</p> <ul> <li> <p>command-line convenience: the conda command line program allows you to  search for and install tools with simple commands that can even be written as scripts for automation. This makes it easy to replicate the set of software tools installed on one computer onto another machine. </p> </li> <li> <p>finding dependencies: Almost every software program builds on and requires other software packages as dependencies. Rather than telling a user to go  find and install each of these dependencies on their own (a sure sign of  a poorly developed tool by today's standards) a software package manager can instead fetch and install of the dependencies for them. This might even include different dependencies or versions depending on their specific operating system. This is a very complex task and something conda does very well.</p> </li> <li> <p>sandboxed directory: conda installs software into a sandboxed location  on your computer (usually a directory within <code>$HOME</code>), which is done purposefully to keep your conda software completely separate and isolated from your  system-wide software (which is usually in <code>/bin</code> or <code>/usr/bin</code>).  This gives you peace of mind to install, update, and remove packages as much as you want inside of your conda directory without having to worry that it  might ever impact your system programs. </p> </li> <li> <p>environments: In addition to allowing you to install software programs into a sandboxed location, conda also allows you to keep many separate environments, where you can keep different sets of software or versions of them. This makes it easy  to test software tools across different version of dependencies, or to keep  software separate that uses different conflicting dependencies.</p> </li> </ul>"},{"location":"bootcamp/0.0-installation-conda/#install-conda-miniconda3","title":"Install conda (miniconda3)","text":"<p>There are two flavors of conda that you can install: <code>Anaconda</code> and  <code>Miniconda</code>. Both include an installation of <code>Python</code> and the <code>conda</code> program  (which is written in Python) as well as a few dependencies of <code>conda</code>.  However, the two flavors differ in terms of which other tools come pre-loaded with these basics. <code>Anaconda</code> comes fully loaded with dozens of  commonly used Python packages, whereas <code>Miniconda</code> is totally minimal, and  doesn't come with anything extra at all. I always recommend installing  <code>Miniconda</code>, and later adding to it any software that you want to install. </p> <p>To install <code>Miniconda</code> follow the command-line instructions below, which are derived from the Miniconda docs. When installing either flavor of <code>conda</code> it is important that you select the appropriate version for your operating system (e.g., MacOSX, Linux, Windows).</p> <p>Attention</p> <p>If you are on Windows I generally recommend installing <code>Windows Subsystem for Linux (WSL2)</code>, which allows you to run a fully functional Linux system inside of your Windows machine. From there, you can then run all of the  Linux-based installation instructions. In general this is much more  reliable for running scientific software, since many tools are not written for Windows.</p> <p>If you do not yet have <code>conda</code> installed then copy and paste the following  code into your terminal to download and install <code>conda</code> into its default (recommended) location in a folder in your <code>$HOME</code> directory that will be named <code>miniconda3/</code>.</p> LinuxOSX <pre><code># download installer script\nwget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh\n\n# call the installer script in batch (-b) mode\nbash Miniconda3-latest-Linux-x86_64.sh -b\n\n# call the init script (see below for description of what this does.)\n~/miniconda3/condabin/conda init\n</code></pre> <pre><code># download installer script (flag is a big letter o, not zero)\ncurl -O https://repo.anaconda.com/miniconda/Miniconda3-latest-MacOSX-x86_64.sh\n\n# call the installer script in batch (-b) mode\nbash Miniconda3-latest-MacOSX-x86_64.sh -b\n\n# call the init script (see below for description of what this does.)\n~/miniconda3/condabin/conda init\n</code></pre> <p>For your terminal to find and detect the newly installed <code>conda</code> environment you can either re-init your terminal, or more simply, close your terminal and re-open it. Then, to validate that you have <code>conda</code> properly installed  you can run the following commands from your terminal:</p> <pre><code># prints the path to your conda binary\nwhich conda\n</code></pre> <pre><code># prints information about your conda installation\nconda info\n</code></pre> <pre><code># prints the software currently installed in your conda directory\nconda list\n</code></pre>"},{"location":"bootcamp/0.0-installation-conda/#conda-and-path","title":"Conda and <code>$PATH</code>","text":"<p>After running the commands above you will likely see a small change to the text that is shown before the cursor in your terminal. Perhaps it  shows something like <code>(base)</code>. This is telling you the name of the <code>conda</code> environment that you currently have loaded. An environment is simply a  subfolder within your <code>miniconda3/</code> directory where software is stored. You can create multiple environments with different sets of software for different projects. If you just installed <code>conda</code> then your base environment will hardly have any software in it.</p> <p>The purpose of having an environment loaded is to make software from  that particular folder accessible. This relates to the way that you shell looks for software, which is by looking in a set of specified folders in  order until it either finds the first occurrence of the requested software name, or no occurrence of it. This set of ordered folders is called your <code>PATH</code> variable, and you can view it from the command shell. Below I  show an example in a Linux shell:</p> <pre><code># show your current shell PATH variable\necho $PATH\n\n# /home/deren/miniconda3/bin:/home/deren/miniconda3/condabin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin\n</code></pre> <p>This shows multiple paths to directories each separated by a colon.  You should notice that there are two references to <code>miniconda3</code> in the  <code>PATH</code>. One points to <code>.../miniconda3/condabin/...</code> and another to  <code>.../miniconda3/bin</code>. The former is the location where your <code>conda</code> binary is located -- the tool that is used to call <code>conda</code> commands including loading or deactivating environments. The second is a path to binaries (programs) in the base <code>conda</code> environment. This includes the  version of <code>Python</code> that is installed. </p> <p>Towards the end of the <code>PATH</code> you will find references to other directories  such as <code>/usr/bin</code>. These are places where system-wide software is  located. <code>Python</code> is also used by most operating systems to complete  mundane tasks, but that system-wide version is different from the one we  just installed -- they are installed in different places. So, when we now type <code>python</code> (the name of the program to start a <code>Python</code> interpreter) into  the terminal it needs to decide which of the multiple versions of <code>python</code>  present on the system it should execute. Because the binary in our  <code>miniconda3</code> directory is located before the path to the system-wide binary in our <code>PATH</code> variable the miniconda version will be loaded. </p> <p>We can verify this quickly by deactivating the <code>conda</code> environment, and then re-loading it. This is something worth becoming comfortable with. You want  to know which <code>conda</code> environment is loaded at any time so you know which  software versions you are working with (this is why the env name is shown is the prompt of your terminal).</p> <pre><code># deactivate the current conda env\nconda deactivate\n\n# print the PATH now (`miniconda/bin` should be gone)\necho $PATH\n\n# re-activate the conda environment\nconda activate base\n\n# print the PATH again (`miniconda/bin` should be back)\necho $PATH\n</code></pre> <p>Now that you have conda installed you can use it to install software,  create and load environments, and/or remove software and environments. See the following conda cheatsheet for some tips on available commands.</p>"},{"location":"bootcamp/0.0-installation-conda/#installing-packages-using-channels","title":"Installing packages (using channels)","text":"<p>Many many many software packages are available to install using <code>conda</code>.  The best way to find instructions to install a tool is to google search 'conda install tool-name'. (You can also run the command <code>conda search toolname</code> from a terminal, but I find the former is generally faster). This will provide the proper instructions for installing the package,  including the name of a channel from which it should be installed.  Here is an example that will install the <code>requests</code> Python package from  the <code>conda-forge</code> channel.</p> <pre><code># install the requests Python package from the conda-forge channel\nconda install requests -c conda-forge\n</code></pre> <p>Tip</p> <p>The channel <code>conda-forge</code> is special in that it contains very up-to-date versions of most common Python packages. In this way, it serves as an  alternative to the standard channel (listing no channel at all). If you use <code>conda-forge</code> for some packages, it is generally recommended to use it for all of your packages, otherwise, you will continually have  versions of standard Python dependencies being switched back and forth between super up-to-date versions from conda-forge and not quite as  up-to-date versions from the standard channel. The easiest way to ensure that you don't forget to do this is to set <code>conda-forge</code> as your  default channel, which you can do with the following command:</p> <pre><code>conda config --add channels conda-forge\n</code></pre>"},{"location":"bootcamp/0.0-installation-conda/#creating-an-environment","title":"Creating an environment","text":"<p>As mentioned already, you can create separate environments and install separate versions of software into them. As an example, let's create a  new environment called 'test', install a package into it, and then  remove it, since it is just a test example. This example also shows another important lesson: you can list multiple channels which will be searched in sorted order (like PATH) to find the package and its dependencies. Here I  install <code>raxml</code> which will look first in the <code>conda-forge</code> and then <code>bioconda</code> channels.</p> <pre><code># create new env, activate, install softare, and call software\nconda create -n test\nconda activate test\nconda install raxml -c conda-forge -c bioconda\nraxmlHPC -v\n</code></pre> <pre><code># switch back to the 'base' env and remove 'test' env\nconda activate base\nconda env remove -n test\n</code></pre>"},{"location":"bootcamp/0.0-installation-conda/#an-environment-for-this-textbook","title":"An environment for this textbook","text":"<p>Finally, we've reached the point where you are ready to install all of the  software associated with exercises in this textbook. As you might expect,  I recommend installing this into a conda environment. This can be done easily using a special file called <code>environment.yml</code>, which is used to  provide instructions to conda for installing many packages. </p> example environment.yml file <pre><code>name: phylodatascience\nchannels:\n- conda-forge\n- bioconda\ndependencies:\n- python&gt;=3.7\n- jupyter\n- numpy\n- pandas\n- scipy\n- numba\n- loguru\n- toytree&gt;=3.0\n- msprime&gt;=1.0\n- raxml\n# ...TODO\n</code></pre> <p>You can get this file by cloning the <code>git</code> repository for this textbook. </p> <pre><code># clone the repo to a location (I use ~/Documents/) and cd into it.\ncd ~/Documents/\ngit clone https://github.com/eaton-lab/phylogenetic-data-science\ncd phylogenetic-data-science/\n\n# create new env and install all dependencies into it.\nconda env create -f environment.yml\n\n# activate this environment\nconda activate phylodatascience\n</code></pre>"},{"location":"bootcamp/0.0-installation-conda/#installing-development-versions-temporary","title":"Installing development versions (temporary)","text":"<p>Both <code>toytree</code> and <code>ipcoal</code> are currently under active development to introduce new code that can be used in this class. To keep up  with the latest versions you can install the source code for these packages directly from GitHub in development mode, which allow  you to keep them up-to-date with a simple <code>git pull</code> call. Follow the instructions below:</p> <p>First, let's create a folder to store the git repos for the two  packages. This can be anywhere on your computer, its up to you. <pre><code># create a folder to store repos\nmkdir -p phylodatascience/\ncd phylodatascience/\n</code></pre></p> <p>Now let's install toytree in development mode: <pre><code># clone the toy3 branch of toytree\ngit clone -b toy3 https://github.com/eaton-lab/toytree.git\ncd toytree/\n\n# get all dependencies from conda\nconda install toytree -c conda-forge --only-deps\n\n# install toytree in development mode\npip install -e . --no-deps\n</code></pre></p> <p>And similarly for ipcoal:</p> <p>Now let's install toytree in development mode: <pre><code># clone the toy3 branch of toytree\ngit clone -b toy3 https://github.com/eaton-lab/ipcoal.git\ncd ipcoal/\n\n# get all dependencies from conda\nconda install ipcoal -c conda-forge --only-deps\n\n# install toytree in development mode\npip install -e . --no-deps\n</code></pre></p> <p>You now have the latest versions installed in development mode. Later, if you hear there was an update to either package you can pull in the  updates easily by <code>cd</code>ing back into its directory and running the command below. That's it, the code will update and your installation will continue to be pointing to this updated code:</p> <pre><code># example: pull in updates to toytree\ncd toytree/\ngit pull\n</code></pre>"},{"location":"bootcamp/0.1-jupyter-and-binder/","title":"Introduction to Jupyter Notebooks","text":"<p>Jupyter notebooks are a type of interactive document that combines  executable code (usually Python, but many other languages are  supported as well) with rendered text (Markdown/HTML) and other media.  They serve as a powerful teaching tool for embedding lesson instructions  alongside code that users edit and execute interactively.  They are also widely used in research, and for sharing reproducible  results and workflows.</p> <p> </p>"},{"location":"bootcamp/0.1-jupyter-and-binder/#jupyter-servers","title":"Jupyter servers","text":"<p>But what is a jupyter notebook? Let's dive a bit deeper into how they  work. Jupyter notebooks themselves are simply a document (a type of file with the suffix <code>.ipynb</code>) that records the information that is entered into it. These notebooks are opened and run by servers, which are  programs that send and receive information over a network. This could be a local network (just within your computer) or a public network  (i.e., the internet). Jupyter servers work by connecting a notebook,  as the frontend, to a Python kernel (a running session of Python), as  the backend, communicating information back and forth between the two. This is the idea behind jupyter notebooks: A Python backend that uses  a web-interface frontend to receive commands from users and send back  results, which can then be saved to the notebook file.</p> <p>Most of the time, jupyter notebooks are run locally on a single computer. Below you can find instructions for installing and running jupyter locally. But, before we proceed to that, I want to introduce the concept of using remote servers to run jupyter. This is the process of starting  a jupyter server on a remote machine, where all backend computation will  take place, but connecting to it through a browser from your local machine. This may sound a bit complicated, and to some extent it is, but fortunately, for certain purposes, the process has become very streamlined through  services such as Binder.</p>"},{"location":"bootcamp/0.1-jupyter-and-binder/#binder-remote-server","title":"Binder (remote server)","text":"<p>Binder (mybinder.org) is a free web service that can be used to run  a temporary jupyter server accessible from a public URI. Once it is setup you can simply share the link with anyone and when clicked it will quickly start a new server and open the notebooks for the user. It is a great way to share tutorials and lessons for teaching. You can even configure the servers to install and load the specific software versions that are  required to run your code (this process is done using <code>conda</code>). It has  some limitations: the servers have only 2 processors available and a limited amount of disk space and RAM, but the amount is usually adequate for most simple tutorials. As a developer, it can be a great way to share examples of your code without requiring wary users to install anything new.  We will use binder notebooks often throughout this textbook to share  coding exercises. </p>"},{"location":"bootcamp/0.1-jupyter-and-binder/#using-jupyter-a-binder-example","title":"Using jupyter: A binder example","text":"<p>The best way to learn how to use jupyter notebooks is to jump in and  try one yourself. Click the following link to connect to a binder-hosted  jupyter notebook. This notebook includes a lesson on the basics of  editing Markdown and code blocks, switching between the two, executing code,  and about other options available in notebooks:   jupyter-intro.ipynb</p>"},{"location":"bootcamp/0.1-jupyter-and-binder/#installing-jupyter-locally","title":"Installing jupyter locally","text":"<p>Now that you are familiar with how notebooks work, you may wish to install jupyter locally on your machine so that you can get started using jupyter to learn Python and create notebooks of your own. Jupyter and all its  dependencies can be easily installed with <code>conda</code>:</p> <pre><code>conda install jupyter -c conda-forge\n</code></pre>"},{"location":"bootcamp/0.1-jupyter-and-binder/#configuring-jupyter","title":"Configuring jupyter","text":"<p>Although it is not required, I recommend running a one-time configuration of jupyter which makes it a bit for convenient to use. Call the command  below to create a jupyter configuration file which will be stored in  a <code>.jupyter/</code> dir in your home directory.</p> <pre><code>jupyter-notebook --generate-config\n</code></pre> <p>Now that this file exists you can mostly forget about it, unless you wish to customize your notebooks in some way. However, a benefit of it existing is that you can store a password for your server by running the command  below. This is a measure that adds additional security, and also will stop jupyter from asking you to use random passwords.</p> <pre><code>jupyter-notebook password\n</code></pre>"},{"location":"bootcamp/0.1-jupyter-and-binder/#running-jupyter-locally","title":"Running jupyter locally","text":"<p>Now we can start a jupyter notebook server with the following command. The  option <code>--no-browser</code> is not necessary for everyone. For WSL2 users it will hide a warning message that would otherwise pop up telling you that it cannot open a browser automatically from your WLS2 system. Either way, once the server is running you can open a browser on your own and connect to it by entering the  URI that will appear in your terminal.</p> <pre><code># move to your home directory, and start a notebook server from here.\ncd ~\njupyter-notebook --no-browser\n</code></pre> <p>If you entered the option above then the notebook will not automatically  open in your browser. You will simply see some text being printed in  the terminal. Open a tab in your browser of choice and go to <code>localhost:8888</code>.  This tells your browser a local address which is receiving information from the local jupyter server running on your computer. Specifically, it is  sending information to port number 8888, the default port used by jupyter. </p>"},{"location":"bootcamp/0.1-jupyter-and-binder/#jupyter-filesystem-interface","title":"Jupyter filesystem interface","text":"<p>As you have seen before, the jupyter interface will show you a view of your  filesystem, including folder and files, from which you can either select an  existing file to open, or create a new one. Jupyter notebooks are saved in a  file format with the suffix <code>.ipynb</code>, and these will appear with little  notebook icons next to them. </p>"},{"location":"bootcamp/0.1-jupyter-and-binder/#stopping-the-server","title":"Stopping the server","text":"<p>When you start a jupyter server in a terminal, you can just minimize that terminal or stick it in a corner. The server will continue to function for as long as you  have this server running. When you are done using, and have saved your notebooks,  you can stop the server by closing it (or interrupt it by pressing  ctrl-c). Try this now by clicking on the terminal running the  server and interrupting it. You can also close the browser tabs that were open. You can start the notebook server again at any time following the  same commands be used above.</p>"},{"location":"bootcamp/0.1-jupyter-and-binder/#running-a-jupyter-server-remotely","title":"Running a jupyter server remotely","text":"<p>This is an advanced topic that you will likely not use yet as a new user.</p> <p>Although binder makes it easy to connect to a free server running in the  cloud, the process of setting up jupyter to run on one of your own  servers remotely is not that complicated. This is useful if, for example, you want to run notebooks from an HPC cluster. This type of  connection of course requires much greater security than to run  jupyter on a single machine, since you do not want just anybody to be able to connect to your jupyter server, which would give them nearly full access to your machine. The simple solution is to tunnel the  connection through SSH:</p> <pre><code># a server on machine X serving on port 9999\njupyter-lab --ip=$(hostname) --port=9999 --no-browser\n</code></pre> <pre><code># a user on machine Y securely connects to machine X:9999\n# creating a tunnel that serves content to Y:9999\nssh -N -L 9999:X:9999 user@hostname.hpc.edu\n</code></pre> <p>The user would then leave this SSH tunnel open in a terminal on their  laptop (machine Y) for as long as they want the tunnel connection  to be established. The user could then open their browser to  <code>localhost:9999</code> and they should have access to the notebook server.</p> <p>The user can stop the SSH tunnel at any time by closing the terminal and  the notebook server would continue to run, just with nobody connecting to it on the other end. When the user wishes to re-connect they simply need to start the SSH tunnel again and refresh their browser.</p>"},{"location":"bootcamp/0.2-python-types/","title":"Diving into Python types","text":"<p> Follow along in a binder jupyter notebook:  python-types.ipynb.</p> <p>An introduction to basic types in Python is outside of the scope of this textbook. If needed, I refer readers to the official Python [tutorial]. Instead, this section will focus on describing differences among  commonly used types and specifically why some types are used over others in certain situations. As this comes up in coding exercises in the  textbook this section will be referred back to.</p>"},{"location":"bootcamp/0.3-python-funcs/","title":"Functions in Python","text":"<p> Follow along in a binder jupyter notebook:  python-funcs.ipynb.</p> <p>A quick reminder about how functions are defined in Python and  some other aspects to have in mind when they are part of your code.</p> <p>For more information about functions in Python, you can read the official documentation in the link below: https://docs.python.org/3/tutorial/controlflow.html#defining-functions</p>"},{"location":"bootcamp/0.4-python-classes/","title":"Classes in Python","text":"<p> Follow along in a binder jupyter notebook:  python-classes.ipynb.</p> <p>In this tutorial you can find a simple explanaition of classes in Python. </p> <p>For more information about Classes in Python, you can read the official documentation in the link below: https://docs.python.org/3/tutorial/classes.html</p>"},{"location":"bootcamp/0.5-python-style/","title":"Python Styles","text":"<p>Python is a scripting language that is intended to be easy to read and write, and this underlies much of its popularity and growth over the last few  decades.</p> <p>Python was designed as a high human-readable programing language; nevertheless, this programing language is pretty flexible and does not enforce its writing in certain ways (e.g., upper or lower case for declaring variables).  For that reason, it is common to find high variability in the style of writing from one developer to another. The only major constraint found in Python is the mandatory indentation, which is absent in most modern programming languages.</p> <p>For this reason, there are some proposed styles that help  developers write code having in mind its high readability, promoting standardization. Having a very organized code is important to communicate the purpose  to other developers or even for yourself. The style guidelines are useful  for the coding organization, and they are also handy for documenting the code's functionality.</p> <p>There are two main topics about styling, documentation styling and coding styling. Both are related, but they count with different style guidelines to follow.</p>"},{"location":"bootcamp/0.5-python-style/#documentation-styling","title":"Documentation styling","text":""},{"location":"bootcamp/0.5-python-style/#docstrings","title":"Docstrings","text":"<p>As we saw in function definitions, a documentation string (docstring)  is used to provide information about  a piece of code. For any public-facing part of your code, this should  include sufficient description that a user can understand what the code is for, how to use it, and what to expect as a result. For private parts of your code, not intended to be viewed by users, docstrings are still  incredibly useful. These docstrings are found in functions, classes, and  modules. Several conventions have been established for writing docstrings. An example is the PEP257 convention below. The description of this convention lays out some general rules to increase the legibility of docstrings.</p> PEP 257 - (older) Docstring convention<pre><code>def funtion(real=0.0, imag=0.0):\n\"\"\"Form a complex number.\n\n    Keyword arguments:\n    real -- the real part (default 0.0)\n    imag -- the imaginary part (default 0.0)\n    \"\"\"\n    if imag == 0.0 and real == 0.0:\n        return complex_zero\n    ...\n</code></pre>"},{"location":"bootcamp/0.5-python-style/#online-documentation","title":"Online documentation","text":"<p>Sphinx, mkdocs, and other tools can be used to build documentation for a  package, including tutorials, etc. In fact, this textbook was made using  a version of mkdocs called mkdocs-material. Automated documentation is  useful because it can be made to update each time you make changes to the  code.</p>"},{"location":"bootcamp/0.5-python-style/#automating-documentation","title":"Automating documentation","text":"<p>A benefit of automating documentation is that in addition to the documentation that you write yourself, using Markdown or REST, parts of your documentation can also be built automatically by extracting information from the docstrings in your code. This greatly improves the utility of docstrings in the code,  since they can become searchable mini tutorials to describe the proper usage of every function in a package.</p> <p>To automate documentation from docstrings you must properly format the  docstrings using one of several newer even more standardized formats  have been developed for this purpose. These are useful not only because  they can be parsed and understood by software, but following these practices will also make your documentation easier to understand, since users will recognize the common format it is written in. </p>"},{"location":"bootcamp/0.5-python-style/#examples","title":"Examples","text":"<p>The following examples can be interpreted by Sphinx (software).</p> Sphinx (RTD) style<pre><code>def function_with_types_in_docstring(param1, param2):\n\"\"\"Example function with types documented in the docstring.\n\n    `PEP 484`_ type annotations are supported. If attribute, parameter, and\n    return types are annotated according to `PEP 484`_, they do not need to be\n    included in the docstring:\n\n    :param param1: The first parameter.\n    :type param1: int\n    :param param2: The second parameter.\n    :type param2: str\n    :return: The return value. True for success, False otherwise.\n    :rtype: [ReturnType]\n    \"\"\"\n</code></pre> <p>Google style<pre><code>def function_with_types_in_docstring(param1, param2):\n\"\"\"Example function with types documented in the docstring.\n\n    `PEP 484`_ type annotations are supported. If attribute, parameter, and\n    return types are annotated according to `PEP 484`_, they do not need to be\n    included in the docstring:\n\n    Args:\n        param1 (int): The first parameter.\n        param2 (str): The second parameter.\n\n    Returns:\n        bool: The return value. True for success, False otherwise.\n    \"\"\"\n</code></pre> Source</p> <p>Numpy style<pre><code>def function_with_types_in_docstring(param1, param2):\n\"\"\"Example function with types documented in the docstring.\n\n    `PEP 484`_ type annotations are supported. If attribute, parameter, and\n    return types are annotated according to `PEP 484`_, they do not need to be\n    included in the docstring:\n\n    Parameters\n    ----------\n    param1 : int\n        The first parameter.\n    param2 : str\n        The second parameter.\n\n    Returns\n    -------\n    bool\n        True if successful, False otherwise.\n    \"\"\"\n</code></pre> Source</p>"},{"location":"bootcamp/0.5-python-style/#coding-styling","title":"Coding styling","text":"<p>The coding style is optional but highly recommended. It does not affect the functionality of your code. For this reason, even if your code is not very friendly in terms of readability, it still can do a good job.</p> <p>Some practices may affect the readability of a code subtly; for example: the maximum length that a line can have (usually people limit it to 79 characters) or the quotation marks that you used (Black guideline recommends use <code>\"</code> instead of <code>'</code>) However, some other practices are more commonly avoided because they affect, in a considerable way, the comprehension of the code. One of those cases is the all-in-one-line instructions.</p> <p>The following snippet is an exampel of code to create a DataFrame that appears in another part of this bootcamp, but here written in a more condensed way in a single line. It is still functional, but it is very hard to read and  difficult debug to some extent. Example of difficult to read code.<pre><code>import pandas as pd\npd.concat([pd.DataFrame({'Column+one': ['A', 'B', 'C', 'D', 'E', 'F'], 'Column_2': ['s', 't', 'r', 'i', 'n', 'g'], 'Column*3': [1, 2, 3, 4, 4, 3]}),pd.DataFrame([['E','n', 4],['F', 'g', 3]], columns=['Column+one', 'Column_2', 'Column*3'])])\n</code></pre></p> <p>To avoid this kind of practice, members of the Python community commonly  update some guidelines. The main resource for styling Python coding is the official style guide for  Python code or PEP 8. Here is a  stylized version of this guide: https://pep8.org/.</p> <p>There are some tools to help to maintain some styles.  Linters are software that scan code to search for some potential  inconsistencies with some styling guidelines. One of the most popular linters for Python is Pylint which is fully compliant with  PEP 8. Formatters are software that not only scan the code to check some  styling problems but also offer an automatic alternative version following  some predefined guidelines. One example of this category is  Black. You can try it out on this simple web service https://black.vercel.app/.</p> <p>Some of these Linters or Formatters define many of their our guidelines;  for example, Black is defined by their proponents and developers as a strict subset of PEP 8.</p> <p>Developers should keep in mind that code is intended not only  to make a computer do something but also it is a tool to communicate some ideas to other developers. It is for this reason that styling can be very useful. Nonetheless, styling is not a mandatory or a strict rule. Finally,  it is the decision of each team to agree on what kind of practices they can incorporate in their coding routine that fit better with their developing  environment.</p>"},{"location":"bootcamp/0.5-python-style/#examples_1","title":"Examples","text":""},{"location":"bootcamp/0.5-python-style/#pep-8-official-style-guide-for-python-code","title":"PEP 8 - Official Style Guide for Python Code","text":"<p>The source of all these examples is the official PEP 8. Add 4 spaces (instead of TAB) to distinguish args from the rest<pre><code>## RECOMMENDED\ndef long_function_name(\n        var_one, var_two, var_three,\n        var_four):\n    print(var_one)\n\n#-----------------\n## NOT RECOMMENDED\ndef long_function_name(\n    var_one, var_two, var_three,\n    var_four):\n    print(var_one)\n</code></pre></p> Use backslashes to avoid a long line, but they are not recommended for other uses<pre><code>## RECOMMENDED\nwith open('/path/to/some/file/you/want/to/read', 'r') as file_1, \\\n     open('/path/to/some/file/being/written', 'w') as file_2:\n    file_2.write(file_1.read())\n\n#-----------------\n## NOT RECOMMENDED\nwith open('/path/to/some/file/you/want/to/read', 'r') as file_1, open('/path/to/some/file/being/written', 'w') as file_2:\n    file_2.write(file_1.read())\n</code></pre> Operators should be next of their operands (not after)<pre><code>## RECOMMENDED\nincome = (gross_wages\n          + taxable_interest\n          + (dividends - qualified_dividends)\n          - ira_deduction\n          - student_loan_interest)\n\n#-----------------\n## NOT RECOMMENDED\nincome = (gross_wages +\n          taxable_interest +\n          (dividends - qualified_dividends) -\n          ira_deduction -\n          student_loan_interest)\n</code></pre> Only one module per line (but multiple submodules must be in the same line)<pre><code>## RECOMMENDED\nimport os\nimport sys\nfrom typing import List, Tuple\n\n#-----------------\n## NOT RECOMMENDED\nimport sys, os\nfrom typing import List\nfrom typing import Tuple\n</code></pre> No spaces at parenthesis, brackets or curly brackets; always spaces at operands, commas, and after colons<pre><code># Spaces must be only around operands and after colons and commas.\n\n## RECOMMENDED\nspam(ham[1], {eggs: 2})\n\n#-----------------\n## NOT RECOMMENDED\nspam( ham[ 1 ], { eggs: 2 } )\n</code></pre>"},{"location":"bootcamp/0.x-utilities/","title":"0.x utilities","text":""},{"location":"bootcamp/0.x-utilities/#useful-development-skills","title":"Useful development skills","text":""},{"location":"bootcamp/0.x-utilities/#measuring-the-speedtime-of-code-execution","title":"Measuring the speed/time of code execution","text":""},{"location":"bootcamp/getting-started/","title":"Getting started","text":"<p>This bootcamp tutorial is not intended to be a starting point for  learning Python. There are many resources for that which are much  more in depth (I recommend the official Python tutorial and  documentation).  Instead, this bootcamp is intended for those who are already proficient at the command line, and familiar with Python, but may not have taken a formal programming class or had training in recent developments in Python. The goals of this bootcamp are to: </p> <ol> <li>provide a refresher on Python basics; </li> <li>provide a reference for methods that will be employed in this textbook;</li> <li>to reinforce style and uniformity that will make code easier to read and understand.</li> </ol>"},{"location":"bootcamp/getting-started/#where-to-start","title":"Where to start","text":"<p>If you wish to skip learning about software installation and jump right into learning Python coding then you can skip lesson 0.0 on  software installation, and start with lesson 0.1 as an introduction to jupyter notebooks.</p>"},{"location":"chapter-1/","title":"Index","text":""},{"location":"chapter-1/#classes","title":"Classes","text":"<ul> <li> <p>1.1: introduction</p> <ul> <li>Learning objectives</li> <li>What is computational phylogenetics?</li> <li>What is a phylogenetic tree?</li> <li>What does a tree represent: Many possible things.<ul> <li>Examples</li> </ul> </li> <li>What do we learn from phylogenetic trees:<ul> <li>Biodiversity Systematics</li> <li>Epidemiology and forensics</li> <li>Function and homology</li> </ul> </li> <li>What do we learn from collections of trees:<ul> <li>Biogeography</li> <li>Demography and rates of change</li> <li>...</li> </ul> </li> <li>Trees as data, and data science.</li> </ul> </li> <li> <p>1.2 Tree thinking</p> <ul> <li>What does tree thinking mean</li> <li>Terminology in trees</li> <li>Reading from the tips</li> <li>Rotations</li> <li>Rooting<ul> <li>unrooted versus rooted</li> <li>what is a root node or edge</li> <li>changing the rooting changes the relationships</li> </ul> </li> <li>Units<ul> <li>...</li> </ul> </li> <li>Tree shapes<ul> <li>topology</li> </ul> </li> <li>Meta data<ul> <li>edge lengths</li> <li>support values</li> </ul> </li> <li>Trees as data:<ul> <li>a visualization</li> <li>a model (depends on units and model of change)</li> <li>a variance-covariance matrix</li> <li>a relational object</li> </ul> </li> <li>Saving trees<ul> <li>newick format</li> <li>nexus format</li> <li>xml format</li> <li>other formats<ul> <li>tree sequence table</li> <li>json</li> </ul> </li> </ul> </li> <li>Tree databases<ul> <li>treebase</li> </ul> </li> <li>Interpreting trees</li> </ul> </li> <li> <p>1.3: Tree visualizations</p> <ul> <li>A history of visualizations</li> <li>Drawing (plotting) a tree </li> <li>The toytree Python library<ul> <li>go to docs page</li> </ul> </li> <li>Tree I/O</li> <li>Random trees</li> <li>Tree layout</li> <li>Edge lengths<ul> <li>transform, show scale, ...</li> </ul> </li> <li>Rooting, reroot</li> <li>Transform<ul> <li>drop tips, </li> </ul> </li> <li>Example:<ul> <li>Load the mammal tree</li> <li>Prune a subclade</li> <li>Relabel, color, style, annotate.</li> </ul> </li> <li>Exercises:      nb-1.3: tree thinking, toytree, upham tree.</li> <li>reading: Felsenstein 34</li> </ul> </li> <li> <p>1.4. Genealogy</p> <ul> <li>Wright-Fisher Process<ul> <li>1.4.1: Visualize the WF process</li> </ul> </li> <li>Kingman coalescent<ul> <li>1.4.2: Infer Ne based on coalescent reps</li> </ul> </li> <li>Coalescent simulations (msprime)<ul> <li>1.4.3: Simulate coalescent histories for a single pop</li> </ul> </li> <li>Demographic models<ul> <li>1.4.4: </li> </ul> </li> <li>Species Tree simulations (ipcoal)<ul> <li>1.4.5: </li> </ul> </li> <li>Reading and Exercises<ul> <li>1.4</li> </ul> </li> </ul> </li> <li> <p>Mutations</p> <ul> <li>4.0 - 'infinite-sites' mutations: 4.0-mutations.md</li> <li>4.1 - Markov substitution models: 4.1-substituions.md</li> <li>4.2 - Statistical properties of Markov models: 4.2-markov-models.md</li> <li>Reading and Exercises: 1-reading-list.md      </li> </ul> </li> </ul>"},{"location":"chapter-1/1.1-introduction/","title":"Introduction to Computational Phylogenetics","text":""},{"location":"chapter-1/1.1-introduction/#to-be-updated","title":"TO BE UPDATED...","text":""},{"location":"chapter-1/1.1-introduction/#learning-objectives","title":"Learning objectives","text":"<p>This chapter will introduce the topic of trees as data objects. </p> <p>And it will act partly as a teaser to what is coming in this chapter,  and in later chapters. This is big chapter that will probably not be ready for class v1.</p> <ul> <li> <p>What type of data can be represented as trees?</p> <ul> <li>species/populations</li> <li>individuals</li> <li>genes</li> <li>alleles</li> </ul> </li> <li> <p>teasers</p> <ul> <li>coalescent links popgen to phylogenetics...</li> <li>mutations</li> </ul> </li> <li> <p>do not cover yet b/c it comes up next:</p> <ul> <li>common ancestry is the core concept?</li> </ul> </li> </ul>"},{"location":"chapter-1/1.1-introduction/#computational-phylogenetics","title":"Computational phylogenetics","text":"<p>The term phylogenetics refers to a broad array of scientific methods used ... and has evolved over time. It is sometimes viewed as separate from  population genetics, which is concerned with changes over shorter evolutionary time scales. Despite major differences in scope, and many common assumptions,  however, this distinction is mostly artificial. All evolutionary processes can be contextualized through the study of genealogical (tree-based)</p> <ul> <li>statistical</li> <li>heuristic</li> <li>algorithmic, Bayesian, machine learning, linear algebra, calculus.</li> </ul>"},{"location":"chapter-1/1.1-introduction/#phylogenetic-algorithms","title":"Phylogenetic algorithms","text":"<ul> <li>traversal</li> <li>inheritance</li> <li>genetic drift (Brownian evolution)</li> <li> <p>divergence</p> </li> <li> <p>substition models</p> </li> <li> <p>coalescence</p> </li> <li> <p>homoplasy</p> </li> <li>convergence</li> <li>diversification</li> </ul>"},{"location":"chapter-1/1.1-introduction/#what-is-a-phylogenetic-tree","title":"What is a phylogenetic tree?","text":""},{"location":"chapter-1/1.1-introduction/#what-does-a-tree-represent","title":"What does a tree represent?","text":"<p>A tree represents a hierarchical relationship. In the context of evolutionary biology these relationships are typically interpreted as a pattern of ancestry through time, i.e., ancestor-descendant relationships. </p>"},{"location":"chapter-1/1.1-introduction/#ancestor-descendant-relationships","title":"Ancestor-descendant relationships","text":"<ul> <li>genes and gene families</li> <li>individuals (genealogical)</li> <li>haplotypes (genealogical)</li> <li>population or species (model)<ul> <li>what is a species? A concept? Then how can we model the relationships among conceptual things that we can't define precisely?</li> </ul> </li> </ul> <p>However, this is not always the case, and thus to properly understand a  tree it is important to understand what underlying data was used to infer the tree, and what type of inference method was used.</p>"},{"location":"chapter-1/1.1-introduction/#arbitrary-representations-of-similarity","title":"Arbitrary representations of similarity","text":"<p>Trees are used widely throughout mathematics, statistics, biology, and many other fields to represent any type of data that has a hierarchical structure,  which includes pretty much any quantitative data for which pairwise distances can be measured. </p> <p>Such approaches are employed commonly in the social sciences to group samples by some quantitative measure of similarity. Examples include the study of  human language families^1, of belief systems^2. Phylogenetic methods are thus not solely applicable to inferring evolutionary patterns. </p> <p>You will often see results displaying a figure that looks something like  the one below. Let's consider an example like that from [this study] by  XXX et al. (xxxx), which used transcriptome sequencing to measure gene  expression of different tissue types in a mouse and then performed  UPGMA clustering to ...</p> <p>Chapter XXX covers distance-based phylogenetic inference methods in much more detail.</p> Example code to create hierarchical tree from random data points <pre><code>import toytree\nimport numpy as np\nfrom scipy import spatial, cluster\n\n# init a random number generator\nrng = np.random.default_rng(seed=123)\n\n# generate 100 random data points for 12 'samples'\ndata = rng.random(size=(12, 100))\n\n# calculate a measure of distance between samples\ndists = toytree.distance.calculate_distances(data, method=\"pdist\")\n\n# infer a tree by clustering samples by avg distance\nedges = toytree.distance.cluster_distances(dists, method=\"average\")\n\n# translate edges into a tree\ntree = toytree.distance.get_tree_from_dists(edges)\n\n# draw the tree\ncanvas, axes, mark = tree.draw()\n\n# draw a heatmap next to the tree\nmark2 = axes.table(data)\n</code></pre> <p> </p> A tree representing hierarchical relationships among       arbitrary data looks similar to an evolutionary tree, but has      a different meaning."},{"location":"chapter-1/1.1-introduction/#evolutionary-models-in-phylogenetics","title":"Evolutionary models in phylogenetics","text":"<p>How are evolutionary models distinct from other tree-based methods?  Evolutionary models are probabilistic </p>"},{"location":"chapter-1/1.1-introduction/#references","title":"References","text":"<ul> <li>https://github.com/mam288/Bioinformatics-IV</li> </ul>"},{"location":"chapter-1/1.2-tree-thinking/","title":"Tree Thinking (TO BE UPDATED)","text":"<p> Follow along in a binder jupyter notebook:  tree-thinking.ipynb</p>"},{"location":"chapter-1/1.2-tree-thinking/#learning-objectives","title":"Learning objectives","text":"<p>By the end of this notebook you will:</p> <ol> <li>Be able to interpret relationships on a phylogenetic tree.</li> <li>Have increased understanding of the newick format for storing tree data.</li> <li>Know how to root, unroot, and re-root phylogenetic trees.</li> <li>Be more familiar with the toytree Python package.</li> </ol>"},{"location":"chapter-1/1.2-tree-thinking/#understanding-evolution-using-tree-thinking","title":"Understanding evolution using tree-thinking","text":"<p>The philosopher of science Robert O'Hara stated, \"It is impossible to really understand evolution without an ability to accurately interpret phylogenetic trees\", and that \"evolution itself is a theory of evolutionary trees\" (O'Hara 1988, 1997). In biology generally, and in this book already, you have seen several examples of phylogenetic trees. But have you thought carefully about how to interpret these trees, and what information is being presented? There are actually several common pitfalls that most beginners make when interpreting phylogenetic trees, and that even practiced biologists often commit as well. Recognizing and avoiding these mistakes will make you a better biologist, by allowing you to better question and interpret hypotheses about evolutionary relationships from trees.</p>"},{"location":"chapter-1/1.2-tree-thinking/#phylogenetic-trees","title":"Phylogenetic trees","text":"<p>A phylogenetic tree is a hypothesis of the inferred evolutionary relationships among a set of samples; the units represented at the tips. Sometimes, when we have fossil or ancient DNA data, we may have additional information about ancestral (internal) nodes in a tree. At the extreme, we may even have historical samples that are direct ancestors of later samples, such as in experimental evolution studies. However, most of the time, the observed samples are represented as tips of a phylogeny, and all of other information represents a hypothesis. It is an attempt to describe a model of how a set of samples are related through evolutionary history.</p> <p>The way we interact with phylogenetic trees most frequently is as images. Most people have seen a phylogeny in a museum, or television program, or in the news. Phylogenies are ubiquitous throughout biology, where they are used to describe the relationships among species, populations, individuals (genealogies), genes, and gene copies. However, not all tree diagrams are phylogenies. Many other types of hierarchically structured data can also be visualized as trees, but often with a very different interpretation. </p> <p>Phylogenetic trees are distinct in that they are explicitly intended to represent evolution. This has consequence for how internal nodes in phylogenetic trees should be interpreted (as common ancestors), for the directionality in which they should read (root-to-tip, or vice versa), and for the types of relationships and information that can be extracted (i.e., how to describe evolutionary relationships).</p>"},{"location":"chapter-1/1.2-tree-thinking/#more-than-an-image","title":"More than an image","text":"<p>Although we most often see phylogenetic trees as images, they can also be interpreted as statistical models. At its minimum, a phylogenetic tree represents a set of ancestor-descendant relationships. In addition, it may include information such as edge lengths that describe the magnitude of divergence between sets of samples; or probabilities/weights as measures of confidence/support for relationships. Many additional types of information can be contained in a phylogenetic tree that together represent a rich description of evolution, and often relate to parameters of the statistical inference method that was used to infer the phylogeny.</p>"},{"location":"chapter-1/1.2-tree-thinking/#trees-in-python","title":"Trees in Python","text":"<p>The best way to start to understand phylogenies as a type of data, as opposed to simply a drawing, is to explore the use of trees as computational data structures. Below we will use the toytree Python package to load, manipulate, draw, and deconstruct trees to better understand the type of information contained in phylogenetic trees. In the chapters that follow this one, we will dive deeper into tree data structures, both as a general concept, and more specifically in terms of how to code a Toytree-like class in Python.</p> <pre><code>import toytree\n</code></pre>"},{"location":"chapter-1/1.2-tree-thinking/#newick-data-format","title":"Newick data format","text":"<p>The text string below defines a tree in newick format. When researchers are working with phylogenetic trees as data, this is the main type of data they are working with: simple text files! This format is quite flexible. It could contain just the relationships -- described by nested parentheses like below -- or it can contain additional information such as branch lengths and/or support values, which we'll discuss more in a later chapter. You can see how the nested hierarchical relationship of a phylogeny (clades nested within clades) is easily represented by sets of parentheses nested within sets of parentheses.</p> <p>In the Python code block below, a string (the text contained within quotations) is stored to a variable that we will name <code>newick1</code>. The name of the variable is arbitrary, we could have named it anything. Now we can reuse this object by referring to <code>newick1</code>, as we do in the next code block.</p> <pre><code># create a string variable storing a tree in newick format.\nnewick1 = \"(gibbon, (orangutan, (gorilla, (chimp, human))));\"\n</code></pre>"},{"location":"chapter-1/1.2-tree-thinking/#a-tree-object","title":"A tree object","text":"<p>We can now parse this newick string to get a <code>ToyTree</code> object, which is a way of representing a tree data structure in Python. Here this is done by calling the function <code>toytree.tree</code> and using our newick string as a input argument to the function. The return <code>ToyTree</code> object is then stored as a new variable named <code>tree1</code>. This new object has many functions associated with it for  manipulating, drawings, comparing, and extracting information about trees,  as will see soon.</p> <pre><code># parse the 'newick1' string into a ToyTree object named 'tree1'\ntree1 = toytree.tree(newick1)\n</code></pre> <p>This <code>ToyTree</code> object is a Python class instance. We can see this by calling the <code>print</code> statement on it to see its representation, which simply states  that it is a <code>toytree.ToyTree</code> object, followed by some information about its  position in memory. </p> <p><pre><code># this ToyTree is just a Python class object in memory.\nprint(tree1)\n</code></pre> <pre><code># &lt;toytree.ToyTree at 0x7f42cc7d3550&gt;\n</code></pre></p>"},{"location":"chapter-1/1.2-tree-thinking/#drawing-and-interpreting-trees","title":"Drawing and interpreting trees","text":"<p>Below is visualization of this tree created by calling the <code>.draw</code> function  of the <code>ToyTree</code> object with a styling argument that shows an integer label  for every node.</p> <p>This tree is rooted, with the gibbon as the outgroup (more on what this  means in a minute). Because we know that the tree is rooted, we can interpret  the evolutionary relationships by reading from the tips towards the root of  the tree. To do so, select any two tips and trace back along their edges until you find the node where they meet. That is their most recent common ancestor  (MRCA). Ancestors are by definition older than their descendants. Two  samples which share a younger MRCA are more closely related than two samples  that share an older MRCA. Using this method, we can identify which samples  are more closely related to each other than others.</p> <pre><code># call .draw function of tree1 to return a drawing that will display\ntree1.draw(tree_style='s');\n</code></pre>"},{"location":"chapter-1/1.2-tree-thinking/#write-in-a-notebook-below","title":"WRITE IN A NOTEBOOK BELOW...","text":""},{"location":"chapter-1/1.2-tree-thinking/#common-ancestry","title":"Common ancestry","text":""},{"location":"chapter-1/1.2-tree-thinking/#terminology","title":"Terminology","text":"<p>Trees, undirected cyclic graph.</p> <p>Edges, branches, ...</p> <p>Nodes, vertices, ...</p>"},{"location":"chapter-1/1.2-tree-thinking/#rotation","title":"Rotation","text":""},{"location":"chapter-1/1.2-tree-thinking/#rooting","title":"Rooting","text":""},{"location":"chapter-1/1.2-tree-thinking/#units","title":"Units","text":"<p>What are the units of branch lengths in a tree? As we learned in chapter 1.1,  trees can be used to represent many different things, and so there is no one answer for this. </p>"},{"location":"chapter-1/1.2-tree-thinking/#tree-shapes","title":"Tree shapes","text":"<p>Special shapes:      - caterpillar or ladder tree.     - balanced tree     - fan, comb, or unresolved tree.</p> <p>Random trees.     - </p>"},{"location":"chapter-1/1.2-tree-thinking/#tree-shapes-as-data","title":"Tree shapes as data","text":"<ul> <li>analysis of tree shapes using ABC for ...</li> <li>analysis of tree shapes for diversification ...</li> </ul> <p>This methods seem to have fallen out of favor, as they are less commonly employed as more powerful statistical methods have been developed for testing hypotheses about diversification rates (cite), and further statistical  developments have highlighted challenges to simpler methods in distinguishing between alternative hypotheses for observed patterns of trees.</p>"},{"location":"chapter-1/1.2-tree-thinking/#references","title":"References","text":"<ol> <li> <p>Baum, David A., Stacey DeWitt Smith, and Samuel S. S. Donovan. 2005. \u201cThe Tree-Thinking Challenge.\u201d Science 310 (5750): 979\u201380. https://doi.org/10.1126/science.1117727.\u00a0\u21a9</p> </li> <li> <p>Baum, David A., and Susan Offner. 2008. \u201cPhylogenics &amp; Tree-Thinking.\u201d The American Biology Teacher 70 (4): 222\u201329. https://doi.org/10.1662/0002-7685(2008)70[222:PT]2.0.CO;2.\u00a0\u21a9</p> </li> <li> <p>Baum, David A., and Stacey D. Smith. 2012. Tree Thinking: An Introduction to Phylogenetic Biology. 1st edition. Greenwood Village, Colo: W. H. Freeman.\u00a0\u21a9</p> </li> <li> <p>Darwin, Charles. 1859. On the Origin of Species by Means of Natural Selection, Or, The Preservation of Favoured Races in the Struggle for Life. J. Murray.\u00a0\u21a9</p> </li> </ol>"},{"location":"chapter-1/1.3-visualization/","title":"Tree Visualization","text":"<p>A core purpose of inferring phylogenetic trees is to interpret evolutionary relationships, and to assess confidence in the results. A first step in  doing so is usually to visualize a tree, examining the topology, edge  lengths, and additional meta-data, such as confidence scores recorded by  the inference software. One may infer multiple trees using different sets  of data, or inference tools, or parameter settings of those tools, and the  differences among many different inferred trees will often be reported in  a publication. In this way, tree visualizations serve a purpose not only  for communicating scientific findings to others, but also as a core tool that researchers use to interpret their own results. Learning how to  work with tree visualization tools efficiently is an important skill.</p>"},{"location":"chapter-1/1.3-visualization/#tree-visualization-tools","title":"Tree visualization tools","text":"<p>A large number of tree visualization tools are now available, ranging  from desktop applications with a graphical user interface, such as  Mesquite, FigTree, or Dendroscope; to simple and fast web-based apps  like icytree, phyd3, and TreeTom. These represent  a huge step forward from the days of hand-drawn trees, allowing for  the production of customized publication-quality figures by simply loading a newick file and clicking a few buttons. </p> <p>As we will see in the following chapters, there are great advantages to working with phylogenetic trees not only as drawings of evolutionary  relationships, but also as data objects. And this approach has advantages for creating tree visualizations as well. This type of computational approach to working with trees is practiced in several scientific coding languages,  such as in the <code>ape</code>, <code>phytools</code>, and <code>ggtree</code> packages in R, and <code>ete3</code>,  <code>dendropy</code>, and <code>toytree</code> packages in Python. These allow users to write  scripts to customize the visualization of trees and associated data,  which also serves as a basis for exploring and interpreting information  for tree-based scientific analyses.</p>"},{"location":"chapter-1/1.3-visualization/#trees-as-data-objects","title":"Trees as data objects","text":"<p>The next two chapters will walk through how to develop simple <code>Node</code> and <code>Tree</code> class objects in Python, similar to the core objects in the  <code>toytree</code> package. As an aside, an optional chapter is also available to  dive deeper into designing effective user-facing class objects in Python  that provides some further explanation of how <code>toytree</code> works. The example classes we will create are simplified to introduce and emphasize core  concepts about extracting data from tree objects. Once familiar with the  data that exists in trees, its format, and how to extract it, you will see  that creating tree visualizations from this data is relatively simple.</p>"},{"location":"chapter-1/1.4-features-of-trees/","title":"Trees as data objects","text":""},{"location":"chapter-1/1.4-features-of-trees/#the-features-of-a-tree","title":"The Features of a Tree","text":"<p>A tree can be represented in a variety of ways. Its representation can be visual, as we have seen already in drawings/plots of trees generated with  graphical tools, but trees can also be represented as a data structure --  an object for storing and retrieving information. In fact, trees are widely used throughout computer science as an efficient data structure for working with hierarchically structured data. Because the evolutionary process  inherently gives rise to hierarchically structured information in the form of ancestry, trees are also widely used in biology both as a  hypothesis/model, and as a data structure for studying and analyzing  evolutionary data. How can we create a tree data structure, and  what does that even mean? Let's walk through it.</p> <p>A goal of representing a tree as a data structure is to be able to extract information from the tree. To understand this, its helpful to first think about what types of information can or must exist in a tree structureobject.  Look at the tree drawing below to try to identify its core features.</p> Example code to create simple tree figure <pre><code># generate a random 8 tip ultrametric tree\ntree = toytree.rtree.unittree(ntips=8, seed=123)\n\n# draw facing downw with node index labels shown\ntree.draw(layout='d', node_labels=\"idx\", node_sizes=18, node_mask=False)\n</code></pre> <p> </p>"},{"location":"chapter-1/1.4-features-of-trees/#basic-terminology","title":"Basic Terminology","text":"<p>There are a number of terms that are used to refer to the parts of a tree,  and this often varies depending on the field of study in which trees are being used, such as mathematics, computer science, or biology. For example, the circles in the figure above are usually referred to as nodes or  vertices, and the lines connecting these are usually referred to as  edges or branches. These terms for each are often used interchangeably.  This terminology is also used to describe graphs, which are a similar data structure widely used in mathematics, and increasingly in biology  as well. </p> <p>The most fundamental features of a tree are the nodes and edges. But, you may have also identified additional information in the tree drawing, such as the lengths of edges; the labels of nodes; whether or  not each node is a tip or root node (i.e., the number of edges connected  to each node), and perhaps other information as well. Given that a tree composes a somewhat heterogenous collection of information, it begs the question: what is the best way to represent a tree as a data structure?  In other words, how can we most conveniently access its information for the purpose of scientific analyses?</p>"},{"location":"chapter-1/1.4-features-of-trees/#mathematical-terminology","title":"Mathematical Terminology","text":"<p>Let's start by describing a tree in mathematical terms, where it is considered a special type of graph called a directed acyclic graph (DAG). This  simply means it is a graph where edges point from one vertex to another,  and cannot form a closed loop (the descendant of a node cannot also be its own ancestor). This property of DAGs makes them well suited for representing  hierarchical data which, by definition, has the same non-looping property.  (By contrast, a cyclic graph could be used to represent a network of  roads, or social connections, where loops in the graph are possible.)</p> <p>In a more syntactic form, a graph (G) can be defined by a set of  vertices (V) and edges (E). We can refer to the vertices by a set  of unique labels assigned to each one, e.g., <code>V = {A,B,C,D,E,F}</code>.  Each edge is defined by a pair of vertices. In the case of a DAG, these are treated as directed edges, pointing from the first to the second  vertex: <code>E = {(A,B),(A,C),(C,D),(C,E),(C,F)}</code>.  This is a common way in which a tree or graph might be described in a  mathematical paper. It is a statement, in this case, that six vertices  exist, and there are five edges connecting them.  The exact syntax that might be used in a paper, in terms of using  curly brackets and/or parentheses, may vary, but usually curly brackets are  used to represent sets of unique items (just like the <code>set</code> object type in  Python). In fact, from looking at this mathematical description you may  already have started to think of it as Python code, and this is because it is very similar. So, let's also write the same thing in Python, here  using strings as labels for the unique vertices.</p> create sets of vertices and edges<pre><code>V = {\"A\", \"B\", \"C\", \"D\", \"E\", \"F\"}\nE = {(\"A\",\"B\"), (\"A\",\"C\"), (\"C\",\"D\"), (\"C\",\"E\"), (\"C\",\"F\")}\n</code></pre>"},{"location":"chapter-1/1.4-features-of-trees/#nodes","title":"Nodes","text":"<p>Nodes can be referred to by some type of unique label, such as a name or  number. An important feature of a Node is its degree, the number of edges  that connect to it. For example, in G from above, the node A has degree=2, whereas the node C has degree=4. This can easily be computed for each vertex by  iterating over each item in the edges set and counting how many edges each  Node is a member of.</p> print the degree of each vertex <pre><code>for vertex in sorted(V):\n    degree = 0\n    for edge in E:\n        if vertex in edge:\n            degree += 1\n    print(f\"vertex {vertex} has degree={degree}\")\n</code></pre> <pre><code>vertex A has degree=2\nvertex B has degree=1\nvertex C has degree=4\nvertex D has degree=1\nvertex E has degree=1\nvertex F has degree=1\n</code></pre> <p>In DAGs, because the edges are directed, the edge <code>(A,B)</code> has a different  meaning than the edge <code>(B,A)</code>; only one or the other can exist. Thus, we  can also refer to the in-degree and out-degree of each Node as the  number of edges pointing to or from each node, respectively. </p> print the directed degree of each vertex <pre><code>for vertex in sorted(V):\n    in_degree = sum(1 for edge in E if vertex in edge[1])\n    out_degree = sum(1 for edge in E if vertex in edge[0])\n    print(f\"vertex {vertex} has in_degree={in_degree}, out_degree={out_degree}\")\n</code></pre> <pre><code>vertex A has in_degree=0; out_degree=2\nvertex B has in_degree=1; out_degree=0\nvertex C has in_degree=1; out_degree=3\nvertex D has in_degree=1; out_degree=0\nvertex E has in_degree=1; out_degree=0\nvertex F has in_degree=1; out_degree=0\n</code></pre> <p>This leads to a simple way of distinguishing several different types of  Nodes that are associated with different meanings in phylogenetics. For  example, Nodes that represent extant samples in a phylogenetic tree have a special meaning. These are the actual observations. All internal nodes, by contrast, are theoretical constructs representing inferred ancestors, and whose properties are a consequence of the type of inference model that is  used to infer the tree. The extant samples in a tree are referred to as tip nodes, or leaves. In terms of their degree, tip nodes  always have <code>in_degree=1</code>, and <code>out_degree=0</code>. You can see that our graph G has four tips nodes: B, D, E and F. By contrast, internal nodes of a  tree will always have <code>in_degree=1</code> and <code>out_degree&gt;=2</code>. As an example,  vertex C in G is an internal node that has one ancestor and three  descendants. </p> <p>A bifurcating phylogenetic tree is a tree in which every internal node has exactly two descendants, i.e., <code>out_degree=2</code>. In our  example, the tree is non-bifurcating, because vertex C represents a  polytomy, containing &gt;2 descendants. Finally, the root node is defined by having an <code>in_degree=0</code>, since there is no information about its ancestor.  The degrees of Nodes in a graph constrain the types of structures that it can represent. As an example, a node in a phylogenetic tree cannot have  an <code>in_degree&gt;1</code>, meaning that a node would have more than one ancestor in  the tree. It is possible for a node to have &gt;=2 ancestors in a  in a related data structure called a phylogenetic network, which is  mathematically similar to a phylogenetic tree, but with different constraints. </p>"},{"location":"chapter-1/1.4-features-of-trees/#edges","title":"Edges","text":"<p>As we saw above, the edge set is the core information defining the  relationships among vertices, including their degree.  Although a vertex can vary in the number of  connections it forms with other vertices (its degree), edges are  simpler: they always connect just one vertex to another, no more or less.  In this way, edges can be represented simply as a collection of the  start and end vertices of each edge, as in the set E from above.  As we will see later, however, we are often interested in storing  additional information about edges, such as their length, which can be  used as a weight, or confidence score, and this information is usually stored separately from the edge set. </p>"},{"location":"chapter-1/1.4-features-of-trees/#coding-trees","title":"Coding Trees","text":"<p>Different approaches to representing trees as data structures have  different challenges for storing and working with information about  nodes, edges, and their metadata. Below are the two most common approaches for representing trees/graphs: tables and tree structures. </p>"},{"location":"chapter-1/1.4-features-of-trees/#tabular-data-structure","title":"Tabular data structure","text":"<p>Storing trees as a table has potential benefits over alternative approaches. For one, a table is very memory efficient. If you have a tree with 1 million Nodes this could be stored in the space required for storing two columns of 1 million integers. This fact is taken advantage of in software tools like <code>tskit</code>, which is used to study collections of genealogical trees  across entire genomes, which can include millions of trees of large  size. This software is particularly designed for studying genealogies that represent linked trees, a specific problem in which many trees share  parts (nodes) that are identical. For example, this is common among  genealogies from regions of the genome that are in linkage disequilibrium. In this context, a table can store the redundant information among linked  trees very efficiently. We will learn more about this library and its data  objects in a later chapter.</p> <p>While tables can be efficient for storing and studying fixed trees, they  are not very efficient when the tree structure needs to be mutable, i.e., when we plan to modify the tree at various times by adding and/or  removing Nodes from the tree. Depending on where the new Nodes are placed,  we would need to increment the labels of each Node to update which ones are  connected to which. Similarly, if we wanted to re-root the tree, or change  other attributes such as the edge lengths, many changes to the table would need to be made. </p> get edge table from ToyTree <pre><code>tree = toytree.rtree.unittree(ntips=8, seed=123)\netable = tree.get_edges()\nprint(etable)\n</code></pre> <p></p> <pre><code>    child  parent\n0       0       8\n1       1       8\n2       2       9\n3       3       9\n4       4      11\n5       5      11\n6       6      13\n7       7      13\n8       8      10\n9       9      10\n10     10      12\n11     11      12\n12     12      14\n13     13      14\n</code></pre> <p> For example, say we wanted to find the names of all descendants of internal  Node 10 in the tree above. Using a table this would require multiple lookups in the table to ask which nodes are directly descended from Node 10, and then  which are descended from those descendants. In Python, a table would likely  be stored as an array, ndarray, or DataFrame, where such lookups can be fast  in absolute terms, but would require multiple iterations over the table,  making it slow relative to some alternative approaches.</p>"},{"location":"chapter-1/1.4-features-of-trees/#tree-data-structure","title":"Tree Data Structure","text":"<p>A common way to store hierarchical data is to use a Tree data structure.  This can be created in any object-oriented programming (OOP) language where arbitrary class objects can be created in memory, and references/pointers  among these objects can be created. This approach is particularly common  in languages like C, Java, and Python. Each Node in a tree can be represented by an object in memory (e.g., a Python class instance), and Edges are  represented simply by references, stored as an attribute to each Node, of  which other Nodes it is directly connected to.</p> <p>This design has a number of advantages. First, it has only a slightly larger memory footprint than using tables, while allowing much greater flexibility for storing information in a way that preserves hierarchical relationships.  Second, it naturally allows for the use of traversal methods, which are used to trace a path through the connections among Nodes, from one to the  next, in a particular order. This process, termed a <code>tree traversal</code>, turns out to be a very common algorithm used throughout computer science.  Consequently, the development of tree data structures has been well studied. For example, the file system on your computer represents a tree data  structure, where folders are nested within folders nested within folders.  We can even write the structure of folder names in newick format to draw it as a tree, like in the example below:</p> Example: parse file system as a newick tree and draw <pre><code>mock_file_system = \"((((...)Docs,(...)Pics,(...)Music)deren)home, (...)usr,(...)bin,(...)tmp,(...)dev)/;\"\ntree = toytree.tree(mock_file_system)\ntree.draw(\n    width=500,\n    node_sizes=20,\n    node_mask=False,\n    node_colors=\"lightgrey\",\n    node_markers=\"r2x1\",\n    node_style={\"stroke-width\": 2},\n    node_labels=\"name\",\n    node_labels_style={\"font-size\": \"14px\"},\n    tip_labels=False, \n    layout='d',\n);\n</code></pre> <p> </p> <p>File browsers and other computer programs <code>traverse</code> the file system  frequently, for example when looking for files of a certain name or type. This design allows such algorithms to fetch information very quickly by  partitioning information into nested hierarchies, e.g., only looking in  locations descended from a particular location, rather than searching  the entire file system, which would be much slower.</p> <p>The traversal process turns out to be highly useful for calculating  statistics on hierarchical data as well, where information can often be calculated on subsets at a time without needing to load all objects at once. For example, consider the problem of calculating the size of all files on your filesystem. Writing a function to do this may at first seem daunting. But, if you think of the filesystem as a tree that can be traversed then the  problem is greatly simplified. You would simply need to write a function that performs the same operation on every node (folder) of the file system.  For example, working from the tips towards the root, this would be to sum the size of files in a folder, plus the sizes of any folders directly descended from it. If applied to folders in the order of a traversal that will first visit the tip nodes, then their ancestors, and so on so that it visits the root last, then this will sum to the size of all files in the system. In the next chapter we will implement traversal algorithms firsthand to  better understand this process and how it can make calculating statistics on trees very simple and elegant.</p>"},{"location":"chapter-1/1.5-code-node-class/","title":"1.5 - Code - Node class","text":"<p> Follow along in a jupyter notebook on binder:  Node-class.ipynb</p>"},{"location":"chapter-1/1.5-code-node-class/#learning-objectives","title":"Learning objectives","text":"<p>The goal of this chapter is to introduce coding concepts underlying the tree objects used in computational packages like <code>toytree</code>. By gaining a better understanding of how these objects are designed, they will be easier to work with. By the end of this chapter you will:</p> <ol> <li>Practice development of a custom Python class object.</li> <li>Have an improved understanding of object-oriented programming principles.</li> <li>Understand how Node class objects can represent a Tree data structure.</li> </ol>"},{"location":"chapter-1/1.5-code-node-class/#coding-practices","title":"Coding practices","text":"<p>This is one of our first in depth coding exercises, so we will start relatively slowly, describing the steps that are taken and why. This lesson will use concepts from the bootcamp chapters including types, functions (including type hints), and classes. You can find an additional review of relevant concepts in the Python tutorial chapter on classes.</p>"},{"location":"chapter-1/1.5-code-node-class/#a-node-based-tree","title":"A Node-based Tree","text":"<p>In the last chapter we briefly introduced the concept of a tree data structure as a computational concept that allows for efficient storage and access to hierarchical data. In this chapter we will elaborate on this concept by developing a Python class objects as an example of such a data structure.</p> <p>A tree is composed of nodes and edges. These could each be represented by separate objects in memory, for example as Python classes, but it turns out that the simplest approach is to only represent one or the other, since they are inherently linked (edges describe relationships among nodes). Therefore a tree data structure is typically represented only by Node objects.</p> <p>Node objects can store information about a Node, such as its name (label) and any other arbitrary data we might want to apply to it. In addition, it can store pointers that reference other Nodes that it is directly connected to. In this way, the pointers act as edges of the tree structure, but do not take up space in memory (e.g., we don't need to create a separate table to store the edge information). This usage of assigning pointer attributes to Node objects is similar to how dictionaries work in Python, where keys act as pointers to other Python objects that exist in memory. Since Nodes contain references to each other, an entire tree structure can be stored simply as a collection of Nodes.</p>"},{"location":"chapter-1/1.5-code-node-class/#node-class-simple","title":"Node class (simple)","text":"<p>We will walk through several examples of developing Node class objects, starting with a very simple example, and then iteratively building it into a more complex class. Here is our first bare-bones starting point.</p> <pre><code>class Node:\n    def __init__(self, name):\n        self.name = name\n        self.children = ()\n        self.up = None\n</code></pre> <p>Because this is our first class we'll walk through it slowly. This is a class that takes a single argument to store a <code>.name</code> attribute, and also includes two additional attributes, <code>.children</code> and <code>.up</code>, which will be used to store references to other Nodes that are descendant or ancestral from this Node, respectively. As with any <code>class</code>, its definition starts with an <code>__init__</code> function, which is used to create (initialize) instances of the class. This is where any arguments input by the user, such as <code>name</code> in this case, are stored as attributes, and any other attributes of the class that we want to create should be defined and set to a starting value (e.g., children and up). This is done by assigning attributes to the special keyword <code>self</code>, which is a reference to the new instance that is being created.</p> <p>Now that we have defined this new class, we can use it to create new <code>Node</code> instances. Let's create an instance and store it as a variable so that we can use it to explore more about its structure.</p> <p><pre><code>node_A = Node(name=\"A\")\nprint(node_A)\n</code></pre> <pre><code># &lt;__main__.Node at 0x7fa22228e790&gt;\n</code></pre> The printed output of our Node will look like below, which is simply the default representation for a custom class which shows the object type and location where it is defined (<code>__main__.Node</code>) and some random-looking information (<code>at 0x...</code>) that represents its place in memory (i.e., a hash table). We will see in a little bit how we can customize this to be a bit more informative and pretty.</p>"},{"location":"chapter-1/1.5-code-node-class/#class-style","title":"Class Style","text":"<p>Following our style guide a more complete example of this class would look like below, which includes a detailed sphinx-compatible docstring, type hints, and comments in the code. For the sake of brevity we will not write all of the docstrings in as verbose of way throughout this chapter, but do so here to provide an example of good coding practices. From this example we can see more clearly what object types will be used to fill the different attributes of the Node class, and how to use it.</p> <pre><code>from typing import Tuple, Optional\n\nclass Node:\n\"\"\"A single Node that connects to other Nodes to create a tree structure.\n\n    Parameters\n    ----------\n    name: str\n        A string label applied to this Node.\n\n    Attributes\n    ----------\n    children: Tuple of Nodes\n        An ordered tuple of Nodes directly descended (children) of this Node.\n    up: Node or None\n        The parent (ancestor) of this Node\n\n    Examples\n    --------\n    &gt;&gt;&gt; node_a = Node(name=\"A\")\n    &gt;&gt;&gt; node_b = Node(name=\"B\")\n    &gt;&gt;&gt; node_a.children = (node_b,)\n    &gt;&gt;&gt; node_b.up = node_a\n    \"\"\"\n    def __init__(self, name: str):\n        self.name = name\n\n        # attributes to be updated after init to form connections.\n        self.children: Tuple['Node'] = ()\n        self.up: Optional['Node'] = None\n</code></pre>"},{"location":"chapter-1/1.5-code-node-class/#connecting-nodes","title":"Connecting Nodes","text":"<p>Our class is very simple at this point, and so not yet very useful. But already we can begin to create a tree data structure simply by forming connections among multiple Node instances. Below we create three Node instances with different names, and then update the <code>.children</code> and <code>.up</code> attributes to create references (pointers) from one to another, such that the node named \"A\" is parent to Nodes \"B\" and \"C\".</p> <pre><code># create several Node instances\nnode_a = Node(name=\"A\")\nnode_b = Node(name=\"B\")\nnode_c = Node(name=\"C\")\n\n# connect them by setting their children and/or up attributes\nnode_a.children = (node_b, node_c)\nnode_b.up = node_a\nnode_c.up = node_a\n</code></pre> <p>That's it, we have created a tree structure. By visiting each Node we could now extract a complete edge table. As an example, the code below will visit each Node using a for-loop to print the edge information extracted from each Node's <code>.up</code> and <code>.children</code> attributes, by referencing each Node by its <code>.name</code> attribute. This tree contains two edges, which we can find in multiple ways:</p> <pre><code># e.g., get edge information from Nodes .children attributes\nfor node in (node_a, node_b, node_c):\n    for child in node.children:\n        print(node.name, \"--&gt;\", child.name)\n</code></pre> <pre><code># e.g., get edge information from Nodes .up attributes\nfor node in (node_a, node_b, node_c):\n    if node.up:\n        print(node.up.name, \"--&gt;\", node.name)\n</code></pre> <p>Both methods will print the following: <pre><code># A --&gt; B\n# A --&gt; C\n</code></pre></p>"},{"location":"chapter-1/1.5-code-node-class/#object-oriented-programming","title":"Object-oriented programming","text":"<p>The development of a custom class object for creating a tree structure is an example of object-oriented programming (OOP). This is a design principle in programming that can be used to organize code to make it easier to read and understand for programmers, and also easier to use and learn for users. A key concept of OOP is the creation of class methods, which are functions that are inherently attached to a class object. Let's start by creating an example, in the form of a function that can be used to form connections among Nodes similar to what we did in the example above. We will call this function <code>add_child()</code>.</p> <pre><code>class Node:\n\"\"\"A Node instance that includes a method as an example.\"\"\"\n    def __init__(self, name: str):\n        self.name = name\n        self.children: Tuple[\"Node\"] = ()\n        self.up: Optional[\"Node\"] = None\n\n    def add_child(self, name: str) -&gt; None:\n\"\"\"Creates a new Node and connects it as a child to this Node.\"\"\"\n        new_node = Node(name=name)\n        new_node.up = self\n        self.children += (new_node, )\n</code></pre> <p>The new version of our Node class above now includes a method which can be used to create a new Node and attach it to the existing Node that calls this function. As you can see, the first argument to the <code>add_child</code> method is <code>self</code>, this is because the method includes references to <code>self</code>, and so it must accept <code>self</code> as an argument. It is typical that almost all methods of a class will start with <code>self</code> as the first argument. In addition, our function takes another argument for the name that it will give to the new Node that will be created. Finally, note that the <code>def</code> line ends with a <code>-&gt;</code> pointing to the type that is expected to be returned. This is a type hint. It does not affect how the code functions, but simply indicates to the developer and user what to expect to happen when the function is run. In this case, it doesn't return anything (i.e., it returns None). Below is an example of how we can use this new code to create the same tree structure that we did above.</p> <pre><code>node_a = Node(\"A\")\nnode_a.add_child(\"B\")\nnode_a.add_child(\"C\")\n</code></pre> <p>This provides a much simpler and more understandable workflow than in the first example. We can use tab-completion in an interactive environment, like a jupyter notebook, to see the attributes and methods available from a Node instance, and we would see that <code>add_child</code> is an option of this class. In this way, the design of the class itself makes it easy for us to understand what it is possible to do using it. This is a strength of OOP: organizing functions that operate on classes to be associated with the class objects themselves. By contrast, if there was just a function in the global namespace called <code>add_child</code> we might not be aware of it, or know what type of objects it is intended to be used on.</p>"},{"location":"chapter-1/1.5-code-node-class/#node-class-advanced","title":"Node class (advanced)","text":"<p>Now that we have introduced the <code>__init__</code> function, and additional custom functions of a class, let's start to adding several additional details to the class. Here I added:</p> <ol> <li> <p>An additional argument to the <code>__init__</code> that allows for setting a <code>.dist</code> attribute, which will be used to represent the length of the edge from this Node to its parent. In addition, I set default values for both <code>name</code> and <code>dist</code> in the <code>__init__</code> to \"\" and 0, respectively. These same arguments and default were also added to the <code>add_child</code> method.</p> </li> <li> <p>Two additional functions called <code>is_leaf()</code> and <code>is_root()</code> that return a boolean indicating the type of Node that each is based on information about its degree (number of in_degree or out_degree connections). For example, if a node has no in_degree edges then it must be the root. If it has no out_degree edges then it must be a leaf.</p> </li> <li> <p>A custom dunder method called <code>__repr__</code>. Class functions that are surrounded by double underscores represent a special type of function called a dunder. These do not appear when using auto-complete in a jupyter notebook unless you type the underscores manually. They are intended to be private functions that the user does not need to see, unless they go searching for it. It turns out that all classes have several dunders that are automatically created by default. The <code>__repr__</code> is an example. This is the representation of what will be shown when the object is returned (e.g., when it appears in the output cell of a Jupyter notebook). There is a related function called <code>__str__</code> that can be used to separately format what it will look like when called in a print function. Here we overwrite the existing default <code>__repr__</code> function to make our Node objects a bit easier to understand, so that they will simply show a Node as <code>'Node(name)'</code> instead of <code>__main__.Node at 0x....</code> when we view them.</p> </li> <li> <p>I modified the <code>add_child</code> function to now return the new Node object that it creates so that we can store it as a variable if we want to. This makes it easier in the example code below to iterate over each Node that has been created, since we have not yet created functions to traverse the tree, which we will begin to do in the next chapter. You'll notice that the type hint now shows that it returns a \"Node\".</p> </li> </ol> <pre><code>class Node:\n\"\"\"A Node instance that can connect with other Nodes to form a Tree.\n\n    Parameters\n    ----------\n    name: str\n        A name string associated with a Node when printed or visualized.\n    dist: float\n        A float value as the distance between this Node and its parent (up)\n\n    Attributes\n    ----------\n    children: Tuple\n        A tuple of Node instances that are descended from this Node.\n    up: Node or None\n        A Node that is ancestral to this Node, or None if this Node is root.\n    \"\"\"\n    def __init__(self, name: str=\"\", dist: float=0.):\n        self.name = str(name)\n        self.dist = float(dist)\n        self.children: Tuple['Node'] = ()\n        self.up: Optional['Node'] = None\n\n    def __repr__(self) -&gt; str:\n\"\"\"Return string representation as Node(name).\"\"\"\n        return f\"Node({self.name})\"\n\n    def is_leaf(self) -&gt; bool:\n\"\"\"Return True if Node is a leaf (i.e., has no children).\"\"\"\n        return not bool(self.children)\n\n    def is_root(self) -&gt; bool:\n\"\"\"Return True if Node is the root (i.e., has no ancestor).\"\"\"\n        return bool(self.up is None)\n\n    def add_child(self, name: str=\"\", dist: float=0.) -&gt; \"Node\":\n\"\"\"Add a Node as a child to this one.\"\"\"\n        new_node = Node(name=name, dist=dist)\n        new_node.up = self\n        self.children += (new_node,)\n        return new_node\n</code></pre> <p>Let's try out the new Node class by making several Nodes with different edge lengths to their parents, and print several types of information about each of them.</p> <pre><code># create three connected Nodes\nnode_a = Node(\"A\", dist=0)\nnode_b = node_a.add_child(\"B\", dist=1)\nnode_c = node_a.add_child(\"C\", dist=2)\n\n# iteratate over Nodes and print information\nfor node in (node_a, node_b, node_c):\n    print(node, node.name, node.dist, node.is_leaf(), node.is_root(), node.children)\n</code></pre> <p>This returns the following below. The first thing to notice here is the first and last element in each row, which lists the Node object and its children. You can see Node objects are now being represented by the <code>Node(name)</code> representation that we set using the <code>__repr__</code> method of our class. Next you can see that each Node has a name and dist value corresponding to the values that were set in our code. Finally, the functions <code>is_leaf</code> and <code>is_root</code> return different boolean answers for the two different Node types that we created, a root Node (A) and two leaf Nodes (B and C).</p> <pre><code># Node(A) A 0.0 False True (Node(B), Node(C))\n# Node(B) B 1.0 True False ()\n# Node(C) C 2.0 True False ()\n</code></pre> <p>Already we can see that with very little coding we are creating a class object that can be used to extract a lot of information about individual parts of a tree. As the tree gets bigger, however, it will become more difficult to keep track of the collection of many Node objects. A convenient solution to this is to use <code>traversal</code> algorithms, which will allow one to easily move up or down the tree from any given point, or to traverse every connected Node in a tree in an expected order. In the next chapter we will develop traversal functions.</p>"},{"location":"chapter-1/1.5-code-node-class/#class-inheritance","title":"Class Inheritance","text":"<p>Before moving on, since we are discussing object-oriented programming in this chapter, it is worth mentioning one more useful principle of OOP which is class inheritance. This is another coding principle that does not actually affect the performance of your code, but is rather a design principle used by developers to make their code easier to read and debug. It is a way to take a simple class definition, like the ones we created above, and to create variants of these classes that are similar (because they inherit any properties of their parent class), but can differ in any ways that are defined in the new class.</p> <p>As an example, let's create a new class that is a constrained version of our previous class: one where you can only connect at most two children to any Node (i.e., it enforces that the tree must be bifurcating). We can create this very simply by inheriting from our previous class, and then adding some kind of check that will raise an exception is the user tries to add &gt;2 children to a Node. This is done below by creating a new class that we will call <code>BiNode</code> that uses the parent class (<code>Node</code>) inside parentheses to indicate it is inherting from this. We then overwrite the <code>add_child</code> function to include an if-statement that raises an exception if adding a child would create a polytomy, and also to make this function create and return BiNode objects instead of Nodes. We also overwrite the <code>__repr__</code> func to show BiNode instead of Node. But, as you can see, we do not need to write the other functions such as <code>is_leaf</code> or <code>is_root</code> again. Since we did not overwrite them, they are inherited from Node and act is the exact same way they would in that class.</p> <pre><code>class BiNode(Node):\n\"\"\"A subclass of Node that cannot add &gt;2 children to a BiNode.\"\"\"\n\n    def __repr__(self):\n\"\"\"Return string representation of this class instance\"\"\"\n        return f\"BiNode({self.name})\"\n\n    def add_child(self, name: str, dist: float=0.) -&gt; 'BiNode':\n\"\"\"Creates a new BiNode and connects it as a child to this BiNode.\"\"\"\n        # raise an exception if the BiNode already has 2 children.\n        if len(self.children) &gt;= 2:\n            raise ValueError(\"Cannot add &gt;2 children to a BiNode.\")\n        # else, create and connect the new BiNode\n        new_node = BiNode(name=name, dist=dist)\n        new_node.up = self\n        self.children += (new_node, )\n        return new_node\n</code></pre> <p>We can now create a tree of connected BiNodes just as we did with Nodes, and print information about them as we did before to get the same kind of result. The main difference arises when we try to add third child to BiNode(A) which will raise a ValueError, as we instructed as a constraint in our new class.</p> <pre><code># create three connected BiNodes\nnode_a = BiNode(\"A\", dist=0)\nnode_b = node_a.add_child(\"B\", dist=1)\nnode_c = node_a.add_child(\"C\", dist=2)\n\n# iteratate over BiNodes and print information\nfor node in (node_a, node_b, node_c):\n    print(node, node.name, node.dist, node.is_leaf(), node.is_root(), node.children)\n</code></pre> <p>This is expected to raise an exception due to the new class's constraints: <pre><code>node_a.add_child(\"D\")\n</code></pre> <pre><code>---------------------------------------------------------------------------\nValueError                                Traceback (most recent call last)\nInput In [268], in &lt;module&gt;\n----&gt; 1 node_a.add_child(\"D\")\n\nInput In [266], in BiNode.add_child(self, name, dist)\n      9 # raise an exception if the BiNode already has 2 children.\n     10 if len(self.children) &gt;= 2:\n---&gt; 11     raise ValueError(\"Cannot add &gt;2 children to a BiNode.\")\n     12 # else, create and connect the new BiNode\n     13 new_node = BiNode(name=name, dist=dist)\n\nValueError: Cannot add &gt;2 children to a BiNode.\n</code></pre></p>"},{"location":"chapter-1/1.5-code-node-class/#summary","title":"Summary","text":"<p>In summary, classes are ...</p>"},{"location":"chapter-1/1.6-code-tree-traversal/","title":"1.6 - Code - Tree traversal","text":""},{"location":"chapter-1/1.6-code-tree-traversal/#in-development","title":"IN DEVELOPMENT","text":""},{"location":"chapter-1/1.6-code-tree-traversal/#learning-objectives","title":"Learning objectives","text":"<p>The goal of this chapter is to introduce the concept of tree traversals. By the end of this chapter you will:</p> <ol> <li>Understand how traversal over connected Nodes is useful for working with trees.</li> <li>Be familiar with different tree traversal algorithms.</li> <li>Practice writing tree traversal functions using iterators and recursion.</li> </ol>"},{"location":"chapter-1/1.6-code-tree-traversal/#chapter-goals","title":"Chapter goals","text":"<p>A key feature of tree data structures is the process of traversal, by which each Node is visited in some determined order. Traversal algorithms make it possible to calculate information on trees fast and efficiently, typically by performing calculations on parts of the tree which can be used for later calculations. Examples of this include Felsenstein's pruning algorithm, which we will cover later, as an efficient traversal algorithm for calculating parsimony or likelihood scores on trees (citation). Here we will first cover several more simple examples, showing how different traversal algorithms visit Nodes in different orders, and why this is useful for different types of operations.</p>"},{"location":"chapter-1/1.6-code-tree-traversal/#node-class","title":"Node class","text":"<p>We will reuse the simple Node class object that we developed in the last chapter. As a reminder, an instance of this class represents a single Node, but by creating multiple Nodes that include references to each other, the collection of Nodes can represent a tree data structure.</p> Node class definition <pre><code>from typing import Tuple, Optional\n\nclass Node:\n\"\"\"A Node instance that can connect with other Nodes to form a Tree.\n\n    Parameters\n    ----------\n    name: str\n        A name string associated with a Node when printed or visualized.\n    dist: float\n        A float value as the distance between this Node and its parent (up)\n\n    Attributes\n    ----------\n    children: Tuple\n        A tuple of Node instances that are descended from this Node.\n    up: Node or None\n        A Node that is ancestral to this Node, or None if this Node is root.\n\n    Examples\n    --------\n    &gt;&gt;&gt; node = Node(\"A\")\n    &gt;&gt;&gt; node.add_child(\"B\")\n    &gt;&gt;&gt; print(node.name, node.children)\n    \"\"\"\n    def __init__(self, name: str=\"\", dist: float=0.):\n        self.name = str(name)\n        self.dist = float(dist)\n        self.children: Tuple['Node'] = ()\n        self.up: Optional['Node'] = None\n\n    def __repr__(self) -&gt; str:\n\"\"\"Return string representation as Node(name).\"\"\"\n        return f\"Node({self.name})\"\n\n    def is_leaf(self) -&gt; bool:\n\"\"\"Return True if Node is a leaf (i.e., has no children).\"\"\"\n        return not bool(self.children)\n\n    def is_root(self) -&gt; bool:\n\"\"\"Return True if Node is the root (i.e., has no ancestor).\"\"\"\n        return bool(self.up is None)\n\n    def add_child(self, name: str=\"\", dist: float=0.) -&gt; \"Node\":\n\"\"\"Add a Node as a child to this one.\"\"\"\n        new_node = Node(name=name, dist=dist)\n        new_node.up = self\n        self.children += (new_node,)\n        return new_node\n</code></pre> <p><pre><code># example: create a tree of connected Node class instances\nnode_a = Node(\"A\")\nnode_a.add_child(\"B\")\nnode_a.add_child(\"C\")\nprint(node_a, node_a.children)\n</code></pre> <pre><code># Node(A) (Node(B), Node(C))\n</code></pre></p>"},{"location":"chapter-1/1.6-code-tree-traversal/#generating-trees","title":"Generating Trees","text":"<p>So far we have worked with just a few connected Nodes at a time, but we want to also be able to work with a tree composed of many connected Nodes. So let's create a function that can connect many Nodes together automatically. This function, <code>get_random_tree</code>, will build a tree by repeatedly creating bifurcations by selecting a tip Node at random (starting with just a single root Node) and adding two child Nodes until the desired number of tip Nodes  exist. </p> get_random_tree function definition <pre><code>from typing import Optional\nimport random\n\ndef get_random_tree(ntips: int, seed: Optional[int] = None) -&gt; \"Node\":\n\"\"\"Return a ladder-like tree of Node objects with 'ntips' tip Nodes.\n\n    Parameters\n    ----------\n    ntips: int\n        The number of tip Nodes that must exist before the tree is returned.\n\n    Returns\n    -------\n    Node\n        The root Node of the set of connected Nodes is returned.\n    \"\"\"\n    # set random seed\n    random.seed(seed)\n\n    # create root Node with name=root\n    root = Node(name=\"root\", dist=0)\n\n    # store Nodes in a list that are currently tips\n    tips = [root]\n\n    # add tip Nodes by splitting 'node' into a bifurcation until ntips exist.\n    for idx in range(1, ntips):\n\n        # randomly sample one of the current tip Nodes\n        node = random.choice(tips)\n        tips.remove(node)\n\n        # create two new tips from 'node' and add to tips list  \n        child_l = node.add_child(name=f\"left{idx}\", dist=1)\n        child_r = node.add_child(name=f\"right{idx}\", dist=1)\n        tips.extend([child_l, child_r])\n\n    # return root Node that now has ntips descended tip Nodes\n    return root\n</code></pre> <p><pre><code># example: create a tree of connected Node class instances\nroot_node = get_random_tree(ntips=5, seed=123)\nprint(root_node)\n</code></pre> <pre><code># Node(root)\n</code></pre></p> <p>Using this function we can now create a tree, like above. This example has  10 tip Nodes, and because it is fully bifurcating, it has 19 total Nodes  (2 * ntips - 1). We could now interact with the collection of Nodes in this  tree in a number of ways. For example, we might create a list that includes  all of the Nodes, or a dict that maps Node names to the Node instances. But  either of those approaches would essentially linearize the Node collection,  rather than treating it hierarchically. Instead, our function above has  returned just one Node instance, the root, as a representation of the entire  tree. This approach works because we know that every Node is connected to  some other Node by its pointers, and thus it is possible to visit all Nodes  by moving down through the hierarchy of children descended from the root  (i.e., using a tree traversal). </p>"},{"location":"chapter-1/1.6-code-tree-traversal/#coding-traversal-algorithms","title":"Coding traversal algorithms","text":"<p>A traversal algorithm represents a set of rules for consistently iterating over Nodes in a tree to visit each Node exactly once. There are several common traversal algorithms which we will cover shortly. The first that  we will code below is called preorder traversal, which starts at the root and visits Nodes by proceeding down the left and then right subtrees of each Node (more on this in a bit).</p> <p>Coding traversal algorithms is an interesting computational exercise, and is thus often included as part of an introductory computer science course.  There are two efficient methods for coding tree traversals:  recursion and iteration. These two approaches produce identical outcomes, and are identical in their speed and memory usage. Thus, the decision to  implement one approach versus the other boils down to preference by the  developer. Personally, I tend to prefer iterators in most circumstances.  Both approaches can be very elegant in their simplicity, but I find iteration to be easier to read and comprehend than recursion. Below I introduce  both approaches, but we will focus more on the use of iteration afterwards.</p>"},{"location":"chapter-1/1.6-code-tree-traversal/#traversal-by-recursion","title":"Traversal by recursion","text":"<p>A recursive function is a function that calls itself internally. This approach is well suited for the Node class object that we have created, since, for  example, we can write a function that takes a Node as input and then calls the same function again on the Nodes children (or parent, depending on the directin of recursion) until there are no more Nodes to operate on. In this way the function reaches every Node in a very simple and elegant way. </p> <p>Below is a function called <code>traverse_preorder_by_recursion</code> that takes a  Node as input and returns an ordered list of Nodes as a result. The returned list represents the order in which Nodes were visited. To understand how this Node works read it from top to bottom thinking about what would happen if it is called on a Node that is a leaf, versus a Node that is not a leaf. In the case below, we first call it on the root Node (not a leaf), so it skips the first part of the function, and runs the second part. In the second part, it creates a list containing the current Node (root), and then adds to it the result of calling the <code>traverse_preorder_by_recursion</code> function on  each of its child Nodes. So we need to think about what would be returned by this function when it is called on those Nodes. Well, if the Node is a  leaf then it would return the child Node as a list (i.e., it runs the  first part of the function); if the Node is not a leaf, however, then it  would do the same thing that happened when it was run on the root, it  continues recursively to call the same function on its own children until it is called on a child Node. This is the recursion. Consequently, the  results from the leaf Nodes are bubbled up until the children of the root Node is a list of Nodes, which is returned as the result.</p> <p>If that was confusing, I totally understand. Recursive functions can take time to understand. Try inserting a print statement into the function to  print information during each step of the process to better understand what is going on.</p> <pre><code>def traverse_preorder_by_recursion(node) -&gt; List['Node']:\n\"\"\"Return a list of Nodes in 'preorder' traversal order.\"\"\"\n\n    # Node is a leaf: return the Node\n    if not node.children:\n        return [node]\n\n    # Node is not leaf: return this Node + func called on each child.\n    nodes = [node]\n    for child in node.children:\n        nodes.extend(traverse_preorder_by_recursion(child))\n    return nodes\n</code></pre> <p><pre><code># example: print the preorder traversal order\nprint(traverse_preorder_by_recursion(root_node))\n</code></pre> <pre><code># [Node(root), Node(left1), Node(left3), Node(right3), Node(left4), Node(right4), Node(right1), Node(left2), Node(right2)]\n</code></pre></p>"},{"location":"chapter-1/1.6-code-tree-traversal/#traversal-by-iteration","title":"Traversal by iteration","text":"<p>Iteration is the process of repetitively executing a process, such as with  a for-loop. Because this is such a common practice in computation, Python provides a number of ways to iterate over data structures. One particularly useful method is the use of generators, which are functions that behave like an iterator. This means that instead of computing the entire collection of values in an iterable object before returning it, it instead generates only the next value at a time and return it when it is requested. This has a number of advantages. First, it reduces the number of values that need to be stored in memory; second, it is possible to stop the iteration when a  desired value is reached before the end; and third, it can be used to write simpler and more understandable code.</p> <p>Once you understand generators, using them is quite easy. They are like  a normal function but instead of using the <code>return</code> expression you instead use <code>yield</code>. Whereas a function completely stops when <code>return</code> is called,  <code>yield</code> instead returns the current value and then sits idle, able to continue from where it left off inside the function when the next value is requested. Below is an example generator function to iterate over Node objects in  preorder traversal order. We will discuss this example in more detail in a  little bit.</p> <pre><code>from typing import Iterator, List\n\ndef traverse_preorder_by_iteration(node) -&gt; Iterator['Node']:\n\"\"\"Yield Nodes in 'preorder' traversal order.\"\"\"\n    queue = [node]\n    while queue:\n        node = queue.pop()\n        yield node\n        queue.extend(node.children[::-1])\n</code></pre> <p><pre><code># example: print the preorder traversal order\nprint(traverse_preorder_by_iteration(root_node))\n</code></pre> <pre><code># &lt;generator object traverse_preorder_by_iteration at 0x7f0166e91660&gt;\n</code></pre></p> <p>The first thing you will notice when you call a generator function is that it does not show the contents of the generator, in contrast to the recursive function above which returned a list. This is because the contents of the  generator have not been created yet: you need to iterate over it, where upon the values will be generated. This could be done with a for-loop, or, a simple shortcut is to call the <code>list</code> function to convert it to a list. As you can  see below, this returns a list that is the same order of Nodes as returned by  the recursive function above.</p> <p><pre><code># example: print the preorder traversal order\nprint(list(traverse_preorder_by_iteration(root_node)))\n</code></pre> <pre><code># [Node(root), Node(left1), Node(left3), Node(right3), Node(left4), Node(right4), Node(right1), Node(left2), Node(right2)]\n</code></pre></p>"},{"location":"chapter-1/1.6-code-tree-traversal/#traversal-strategies","title":"Traversal strategies","text":"<p>The purpose of a tree traversal is to visit each Node in a specific order  exactly once. Because from any given Node there is more than one possible  next node, an algorithm must be used to consistently follow the same set of  rules for selecting the next node, regardless of the tree size or shape. Below you can find a description and animation demonstrating the order in  which nodes are visited under several common traversal algorithms. </p> A function to draw animated trees using toyplot and toytree <pre><code>import toyplot\nimport toytree\n\n# This animation code is a bit advanced, so don't worry if you do \n# fully understand it at this point. It is included here simply for\n# reference in case it is of interest.\n\ndef plot_traversal_order(tree: toytree.ToyTree, strategy: str=\"postorder\") -&gt; toyplot.canvas.Canvas\n\"\"\"Return an animated toyplot canvas showing a traversal order.\n\n    Parameters\n    ----------\n    tree: ToyTree\n        A ToyTree class instance that will be drawn and animated.\n    strategy: str\n        The name of a traversal strategy supported by ToyTree.traverse().\n    \"\"\"\n    # draw the ToyTree with nodes colored\n    canvas, axes, mark = tree.draw(layout='d', tip_labels=False)\n    canvas.text(canvas.width / 2, 20, f'\"{strategy}\" traversal', style={\"font-size\": \"16px\"})\n    canvas.style[\"background-color\"] = \"white\"\n\n    # get node coordinates table\n    coords = tree.get_node_coordinates(layout='d')\n\n    # get node indices in specified traversal order\n    nidxs = [i.idx for i in tree.traverse(strategy)]\n\n    # create labeled markers in traversal order\n    markers = [toyplot.marker.create(shape=\"o\", label=str(idx)) for idx, nidx in enumerate(nidxs)]\n\n    # get scatterplot Mark\n    mark = axes.scatterplot(coords.x[nidxs], coords.y[nidxs], size=20, marker=markers)\n\n    # iterate over each datum as a frame at 2 frames / second\n    for frame in canvas.frames((coords.shape[0] + 1, 2)):\n\n        # set opacity very low on all Nodes initially\n        if frame.number == 0:\n            for i in range(coords.shape[0]):\n                frame.set_datum_style(mark, 0, i, style={\"opacity\":0.1})\n\n        # increase opacity as each frame \n        else:\n            frame.set_datum_style(mark, 0, frame.number - 1, style={\"opacity\":1.0})\n    return canvas\n\n\n# Example: generate random tree and plot \"levelorder\" traversal strategy.\ntree = toytree.rtree.unittree(ntips=8, seed=123)\nfor strategy in [\"levelorder\", \"postorder\", \"preorder\", \"idxorder\"]:\n    canvas = plot_traversal_order(tree, strategy)\n    toyplot.html.render(canvas, f\"traversal-{strategy}-animated.html\", style={\"text-align\": \"center\"})\n</code></pre>"},{"location":"chapter-1/1.6-code-tree-traversal/#levelorder-traversal","title":"levelorder traversal","text":"<p>A levelorder traversal (also called a breadth-first search BFS) is an  algorithm that starts at the root and visits all Nodes at a given depth descended from the root before moving to the next level. The Nodes in each level are visited in left to right order in <code>toytree</code>, but the opposite could just as easily be implemented.  The primary utility of this traversal strategy is that it is topologically  sorted, such that a parent is always visited before any of its children.</p> 01234567891011121314\"levelorder\" traversal          (function()         {             var root_id = \"t441d115920fb4cd49438049fde184d4b\";             var frame_durations = [0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5];             var state_changes = [{\"set-datum-style\": [{\"mark\": \"t4e259691fde1461c81483298e47b5c8d\", \"series\": 0, \"datum\": 0, \"style\": {\"opacity\": 0.1}}, {\"mark\": \"t4e259691fde1461c81483298e47b5c8d\", \"series\": 0, \"datum\": 1, \"style\": {\"opacity\": 0.1}}, {\"mark\": \"t4e259691fde1461c81483298e47b5c8d\", \"series\": 0, \"datum\": 2, \"style\": {\"opacity\": 0.1}}, {\"mark\": \"t4e259691fde1461c81483298e47b5c8d\", \"series\": 0, \"datum\": 3, \"style\": {\"opacity\": 0.1}}, {\"mark\": \"t4e259691fde1461c81483298e47b5c8d\", \"series\": 0, \"datum\": 4, \"style\": {\"opacity\": 0.1}}, {\"mark\": \"t4e259691fde1461c81483298e47b5c8d\", \"series\": 0, \"datum\": 5, \"style\": {\"opacity\": 0.1}}, {\"mark\": \"t4e259691fde1461c81483298e47b5c8d\", \"series\": 0, \"datum\": 6, \"style\": {\"opacity\": 0.1}}, {\"mark\": \"t4e259691fde1461c81483298e47b5c8d\", \"series\": 0, \"datum\": 7, \"style\": {\"opacity\": 0.1}}, {\"mark\": \"t4e259691fde1461c81483298e47b5c8d\", \"series\": 0, \"datum\": 8, \"style\": {\"opacity\": 0.1}}, {\"mark\": \"t4e259691fde1461c81483298e47b5c8d\", \"series\": 0, \"datum\": 9, \"style\": {\"opacity\": 0.1}}, {\"mark\": \"t4e259691fde1461c81483298e47b5c8d\", \"series\": 0, \"datum\": 10, \"style\": {\"opacity\": 0.1}}, {\"mark\": \"t4e259691fde1461c81483298e47b5c8d\", \"series\": 0, \"datum\": 11, \"style\": {\"opacity\": 0.1}}, {\"mark\": \"t4e259691fde1461c81483298e47b5c8d\", \"series\": 0, \"datum\": 12, \"style\": {\"opacity\": 0.1}}, {\"mark\": \"t4e259691fde1461c81483298e47b5c8d\", \"series\": 0, \"datum\": 13, \"style\": {\"opacity\": 0.1}}, {\"mark\": \"t4e259691fde1461c81483298e47b5c8d\", \"series\": 0, \"datum\": 14, \"style\": {\"opacity\": 0.1}}]}, {\"set-datum-style\": [{\"mark\": \"t4e259691fde1461c81483298e47b5c8d\", \"series\": 0, \"datum\": 0, \"style\": {\"opacity\": 1.0}}]}, {\"set-datum-style\": [{\"mark\": \"t4e259691fde1461c81483298e47b5c8d\", \"series\": 0, \"datum\": 1, \"style\": {\"opacity\": 1.0}}]}, {\"set-datum-style\": [{\"mark\": \"t4e259691fde1461c81483298e47b5c8d\", \"series\": 0, \"datum\": 2, \"style\": {\"opacity\": 1.0}}]}, {\"set-datum-style\": [{\"mark\": \"t4e259691fde1461c81483298e47b5c8d\", \"series\": 0, \"datum\": 3, \"style\": {\"opacity\": 1.0}}]}, {\"set-datum-style\": [{\"mark\": \"t4e259691fde1461c81483298e47b5c8d\", \"series\": 0, \"datum\": 4, \"style\": {\"opacity\": 1.0}}]}, {\"set-datum-style\": [{\"mark\": \"t4e259691fde1461c81483298e47b5c8d\", \"series\": 0, \"datum\": 5, \"style\": {\"opacity\": 1.0}}]}, {\"set-datum-style\": [{\"mark\": \"t4e259691fde1461c81483298e47b5c8d\", \"series\": 0, \"datum\": 6, \"style\": {\"opacity\": 1.0}}]}, {\"set-datum-style\": [{\"mark\": \"t4e259691fde1461c81483298e47b5c8d\", \"series\": 0, \"datum\": 7, \"style\": {\"opacity\": 1.0}}]}, {\"set-datum-style\": [{\"mark\": \"t4e259691fde1461c81483298e47b5c8d\", \"series\": 0, \"datum\": 8, \"style\": {\"opacity\": 1.0}}]}, {\"set-datum-style\": [{\"mark\": \"t4e259691fde1461c81483298e47b5c8d\", \"series\": 0, \"datum\": 9, \"style\": {\"opacity\": 1.0}}]}, {\"set-datum-style\": [{\"mark\": \"t4e259691fde1461c81483298e47b5c8d\", \"series\": 0, \"datum\": 10, \"style\": {\"opacity\": 1.0}}]}, {\"set-datum-style\": [{\"mark\": \"t4e259691fde1461c81483298e47b5c8d\", \"series\": 0, \"datum\": 11, \"style\": {\"opacity\": 1.0}}]}, {\"set-datum-style\": [{\"mark\": \"t4e259691fde1461c81483298e47b5c8d\", \"series\": 0, \"datum\": 12, \"style\": {\"opacity\": 1.0}}]}, {\"set-datum-style\": [{\"mark\": \"t4e259691fde1461c81483298e47b5c8d\", \"series\": 0, \"datum\": 13, \"style\": {\"opacity\": 1.0}}]}, {\"set-datum-style\": [{\"mark\": \"t4e259691fde1461c81483298e47b5c8d\", \"series\": 0, \"datum\": 14, \"style\": {\"opacity\": 1.0}}]}];              var current_frame = null;             var timeout = null;              function set_timeout(value)             {                 if(timeout !== null)                     window.clearTimeout(timeout);                 timeout = value;             }              function set_current_frame(frame)             {                 current_frame = frame;                 document.querySelector(\"#\" + root_id + \" .toyplot-current-frame\").value = frame;             }              function play_reverse()             {                 set_current_frame((current_frame - 1 + frame_durations.length) % frame_durations.length);                 render_changes(0, current_frame+1)                 set_timeout(window.setTimeout(play_reverse, frame_durations[(current_frame - 1 + frame_durations.length) % frame_durations.length] * 1000));             }              function play_forward()             {                 set_current_frame((current_frame + 1) % frame_durations.length);                 render_changes(current_frame, current_frame+1);                 set_timeout(window.setTimeout(play_forward, frame_durations[current_frame] * 1000));             }              var item_cache = {};             function get_item(id)             {                 if(!(id in item_cache))                     item_cache[id] = document.getElementById(id);                 return item_cache[id];             }              function render_changes(begin, end)             {                 for(var frame = begin; frame != end; ++frame)                 {                     var changes = state_changes[frame];                     for(var type in changes)                     {                         var states = changes[type]                         if(type == \"set-mark-style\")                         {                             for(var i = 0; i != states.length; ++i)                             {                                 var state = states[i];                                 var mark = get_item(state.mark);                                 for(var key in state.style)                                 {                                     mark.style.setProperty(key, state[1][key]);                                 }                             }                         }                         else if(type == \"set-datum-style\")                         {                             for(var i = 0; i != states.length; ++i)                             {                                 var state = states[i];                                 var datum = get_item(state.mark).querySelectorAll(\".toyplot-Series\")[state.series].querySelectorAll(\".toyplot-Datum\")[state.datum];                                 for(var key in state.style)                                 {                                     datum.style.setProperty(key, state.style[key]);                                 }                             }                         }                         else if(type == \"set-datum-text\")                         {                             for(var i = 0; i != states.length; ++i)                             {                                 var state = states[i];                                 var datum = get_item(state.mark).querySelectorAll(\".toyplot-Series\")[state.series].querySelectorAll(\".toyplot-Datum\")[state.datum];                                 var layout = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");                                 layout.innerHTML = state.layout;                                 layout = layout.firstChild;                                  while(datum.firstElementChild)                                     datum.removeChild(datum.firstElementChild);                                 while(layout.firstElementChild)                                     datum.appendChild(layout.removeChild(layout.firstElementChild));                             }                         }                     }                 }             }              function on_set_frame()             {             set_timeout(null);             set_current_frame(document.querySelector(\"#\" + root_id + \" .toyplot-current-frame\").valueAsNumber);             render_changes(0, current_frame+1);             }              function on_frame_rewind()             {             set_timeout(null);             set_current_frame((current_frame - 1 + frame_durations.length) % frame_durations.length);             render_changes(0, current_frame+1);             }              function on_rewind()             {             set_current_frame(0);             render_changes(0, current_frame+1);             }              function on_play_reverse()             {             set_timeout(window.setTimeout(play_reverse, frame_durations[(current_frame - 1 + frame_durations.length) % frame_durations.length] * 1000));             }              function on_stop()             {             set_timeout(null);             }              function on_play_forward()             {             set_timeout(window.setTimeout(play_forward, frame_durations[current_frame] * 1000));             }              function on_fast_forward()             {             set_timeout(null);             set_current_frame(frame_durations.length - 1);             render_changes(0, current_frame + 1)             }              function on_frame_advance()             {             set_timeout(null);             set_current_frame((current_frame + 1) % frame_durations.length);             render_changes(current_frame, current_frame+1);             }              set_current_frame(0);             render_changes(0, current_frame+1);             set_timeout(window.setTimeout(play_forward, frame_durations[current_frame] * 1000));                          document.querySelector(\"#\" + root_id + \" .toyplot-current-frame\").oninput = on_set_frame;             document.querySelector(\"#\" + root_id + \" .toyplot-rewind\").onclick = on_rewind;             document.querySelector(\"#\" + root_id + \" .toyplot-reverse-play\").onclick = on_play_reverse;             document.querySelector(\"#\" + root_id + \" .toyplot-frame-rewind\").onclick = on_frame_rewind;             document.querySelector(\"#\" + root_id + \" .toyplot-stop\").onclick = on_stop;             document.querySelector(\"#\" + root_id + \" .toyplot-frame-advance\").onclick = on_frame_advance;             document.querySelector(\"#\" + root_id + \" .toyplot-forward-play\").onclick = on_play_forward;             document.querySelector(\"#\" + root_id + \" .toyplot-fast-forward\").onclick = on_fast_forward;         })();"},{"location":"chapter-1/1.6-code-tree-traversal/#preorder-traversal","title":"preorder traversal","text":"<p>A preorder traversal is an example of a Depth-first search algorithm.  It starts at the root Node and explores as far as possible along each  descendant subtree before backtracking. The default in <code>toytree</code> is to  visit the left subtree before the right subtree, such that the algorithm could be summarized as NLR (Node, left subtree, right subtree). The primary utility of this traversal strategy is that it is topologically sorted, such that a parent is always visited before any of its children. This property is also shared with levelorder traversal. The primary concern in distinguishing between these two strategies is if you plan to stop the traversal when a certain Node is found (e.g., to prevent having to traverse a very large set of Nodes),  in which case the two will differ in the order in which they may find the stopping Node.</p> 01234567891011121314\"preorder\" traversal(function() { var modules={}; modules[\"toyplot/tables\"] = (function()     {         var tables = [];          var module = {};          module.set = function(owner, key, names, columns)         {             tables.push({owner: owner, key: key, names: names, columns: columns});         }          module.get = function(owner, key)         {             for(var i = 0; i != tables.length; ++i)             {                 var table = tables[i];                 if(table.owner != owner)                     continue;                 if(table.key != key)                     continue;                 return {names: table.names, columns: table.columns};             }         }          module.get_csv = function(owner, key)         {             var table = module.get(owner, key);             if(table != undefined)             {                 var csv = \"\";                 csv += table.names.join(\",\") + \"\\n\";                 for(var i = 0; i != table.columns[0].length; ++i)                 {                   for(var j = 0; j != table.columns.length; ++j)                   {                     if(j)                       csv += \",\";                     csv += table.columns[j][i];                   }                   csv += \"\\n\";                 }                 return csv;             }         }          return module;     })(); modules[\"toyplot/root/id\"] = \"t706c0135b55641229977c2d93cd9f5a7\"; modules[\"toyplot/root\"] = (function(root_id)     {         return document.querySelector(\"#\" + root_id);     })(modules[\"toyplot/root/id\"]); modules[\"toyplot/canvas/id\"] = \"t424fa1640ed24734a3d29025dff20961\"; modules[\"toyplot/canvas\"] = (function(canvas_id)     {         return document.querySelector(\"#\" + canvas_id);     })(modules[\"toyplot/canvas/id\"]); modules[\"toyplot/menus/context\"] = (function(root, canvas)     {         var wrapper = document.createElement(\"div\");         wrapper.innerHTML = \"&lt;ul class='toyplot-context-menu' style='background:#eee; border:1px solid #b8b8b8; border-radius:5px; box-shadow: 0px 0px 8px rgba(0%,0%,0%,0.25); margin:0; padding:3px 0; position:fixed; visibility:hidden;'&gt;&lt;/ul&gt;\"         var menu = wrapper.firstChild;          root.appendChild(menu);          var items = [];          var ignore_mouseup = null;         function open_menu(e)         {             var show_menu = false;             for(var index=0; index != items.length; ++index)             {                 var item = items[index];                 if(item.show(e))                 {                     item.item.style.display = \"block\";                     show_menu = true;                 }                 else                 {                     item.item.style.display = \"none\";                 }             }              if(show_menu)             {                 ignore_mouseup = true;                 menu.style.left = (e.clientX + 1) + \"px\";                 menu.style.top = (e.clientY - 5) + \"px\";                 menu.style.visibility = \"visible\";                 e.stopPropagation();                 e.preventDefault();             }         }          function close_menu()         {             menu.style.visibility = \"hidden\";         }          function contextmenu(e)         {             open_menu(e);         }          function mousemove(e)         {             ignore_mouseup = false;         }          function mouseup(e)         {             if(ignore_mouseup)             {                 ignore_mouseup = false;                 return;             }             close_menu();         }          function keydown(e)         {             if(e.key == \"Escape\" || e.key == \"Esc\" || e.keyCode == 27)             {                 close_menu();             }         }          canvas.addEventListener(\"contextmenu\", contextmenu);         canvas.addEventListener(\"mousemove\", mousemove);         document.addEventListener(\"mouseup\", mouseup);         document.addEventListener(\"keydown\", keydown);          var module = {};         module.add_item = function(label, show, activate)         {             var wrapper = document.createElement(\"div\");             wrapper.innerHTML = \"&lt;li class='toyplot-context-menu-item' style='background:#eee; color:#333; padding:2px 20px; list-style:none; margin:0; text-align:left;'&gt;\" + label + \"&lt;/li&gt;\"             var item = wrapper.firstChild;              items.push({item: item, show: show});              function mouseover()             {                 this.style.background = \"steelblue\";                 this.style.color = \"white\";             }              function mouseout()             {                 this.style.background = \"#eee\";                 this.style.color = \"#333\";             }              function choose_item(e)             {                 close_menu();                 activate();                  e.stopPropagation();                 e.preventDefault();             }              item.addEventListener(\"mouseover\", mouseover);             item.addEventListener(\"mouseout\", mouseout);             item.addEventListener(\"mouseup\", choose_item);             item.addEventListener(\"contextmenu\", choose_item);              menu.appendChild(item);         };         return module;     })(modules[\"toyplot/root\"],modules[\"toyplot/canvas\"]); modules[\"toyplot/io\"] = (function()     {         var module = {};         module.save_file = function(mime_type, charset, data, filename)         {             var uri = \"data:\" + mime_type + \";charset=\" + charset + \",\" + data;             uri = encodeURI(uri);              var link = document.createElement(\"a\");             if(typeof link.download != \"undefined\")             {               link.href = uri;               link.style = \"visibility:hidden\";               link.download = filename;                document.body.appendChild(link);               link.click();               document.body.removeChild(link);             }             else             {               window.open(uri);             }         };         return module;     })(); (function(tables, context_menu, io, owner_id, key, label, names, columns, filename)         {             tables.set(owner_id, key, names, columns);              var owner = document.querySelector(\"#\" + owner_id);             function show_item(e)             {                 return owner.contains(e.target);             }              function choose_item()             {                 io.save_file(\"text/csv\", \"utf-8\", tables.get_csv(owner_id, key), filename + \".csv\");             }              context_menu.add_item(\"Save \" + label + \" as CSV\", show_item, choose_item);         })(modules[\"toyplot/tables\"],modules[\"toyplot/menus/context\"],modules[\"toyplot/io\"],\"t9d416c93df784344afb16ad0ecca5360\",\"data\",\"point\",[\"x\", \"y0\"],[[4.75, 3.0, 1.5, 0.5, 0.0, 1.0, 2.5, 2.0, 3.0, 4.5, 4.0, 5.0, 6.5, 6.0, 7.0], [1.0, 0.75, 0.5, 0.25, 0.0, 0.0, 0.25, 0.0, 0.0, 0.5, 0.0, 0.0, 0.75, 0.0, 0.0]],\"toyplot\"); })();          (function()         {             var root_id = \"t706c0135b55641229977c2d93cd9f5a7\";             var frame_durations = [0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5];             var state_changes = [{\"set-datum-style\": [{\"mark\": \"t9d416c93df784344afb16ad0ecca5360\", \"series\": 0, \"datum\": 0, \"style\": {\"opacity\": 0.1}}, {\"mark\": \"t9d416c93df784344afb16ad0ecca5360\", \"series\": 0, \"datum\": 1, \"style\": {\"opacity\": 0.1}}, {\"mark\": \"t9d416c93df784344afb16ad0ecca5360\", \"series\": 0, \"datum\": 2, \"style\": {\"opacity\": 0.1}}, {\"mark\": \"t9d416c93df784344afb16ad0ecca5360\", \"series\": 0, \"datum\": 3, \"style\": {\"opacity\": 0.1}}, {\"mark\": \"t9d416c93df784344afb16ad0ecca5360\", \"series\": 0, \"datum\": 4, \"style\": {\"opacity\": 0.1}}, {\"mark\": \"t9d416c93df784344afb16ad0ecca5360\", \"series\": 0, \"datum\": 5, \"style\": {\"opacity\": 0.1}}, {\"mark\": \"t9d416c93df784344afb16ad0ecca5360\", \"series\": 0, \"datum\": 6, \"style\": {\"opacity\": 0.1}}, {\"mark\": \"t9d416c93df784344afb16ad0ecca5360\", \"series\": 0, \"datum\": 7, \"style\": {\"opacity\": 0.1}}, {\"mark\": \"t9d416c93df784344afb16ad0ecca5360\", \"series\": 0, \"datum\": 8, \"style\": {\"opacity\": 0.1}}, {\"mark\": \"t9d416c93df784344afb16ad0ecca5360\", \"series\": 0, \"datum\": 9, \"style\": {\"opacity\": 0.1}}, {\"mark\": \"t9d416c93df784344afb16ad0ecca5360\", \"series\": 0, \"datum\": 10, \"style\": {\"opacity\": 0.1}}, {\"mark\": \"t9d416c93df784344afb16ad0ecca5360\", \"series\": 0, \"datum\": 11, \"style\": {\"opacity\": 0.1}}, {\"mark\": \"t9d416c93df784344afb16ad0ecca5360\", \"series\": 0, \"datum\": 12, \"style\": {\"opacity\": 0.1}}, {\"mark\": \"t9d416c93df784344afb16ad0ecca5360\", \"series\": 0, \"datum\": 13, \"style\": {\"opacity\": 0.1}}, {\"mark\": \"t9d416c93df784344afb16ad0ecca5360\", \"series\": 0, \"datum\": 14, \"style\": {\"opacity\": 0.1}}]}, {\"set-datum-style\": [{\"mark\": \"t9d416c93df784344afb16ad0ecca5360\", \"series\": 0, \"datum\": 0, \"style\": {\"opacity\": 1.0}}]}, {\"set-datum-style\": [{\"mark\": \"t9d416c93df784344afb16ad0ecca5360\", \"series\": 0, \"datum\": 1, \"style\": {\"opacity\": 1.0}}]}, {\"set-datum-style\": [{\"mark\": \"t9d416c93df784344afb16ad0ecca5360\", \"series\": 0, \"datum\": 2, \"style\": {\"opacity\": 1.0}}]}, {\"set-datum-style\": [{\"mark\": \"t9d416c93df784344afb16ad0ecca5360\", \"series\": 0, \"datum\": 3, \"style\": {\"opacity\": 1.0}}]}, {\"set-datum-style\": [{\"mark\": \"t9d416c93df784344afb16ad0ecca5360\", \"series\": 0, \"datum\": 4, \"style\": {\"opacity\": 1.0}}]}, {\"set-datum-style\": [{\"mark\": \"t9d416c93df784344afb16ad0ecca5360\", \"series\": 0, \"datum\": 5, \"style\": {\"opacity\": 1.0}}]}, {\"set-datum-style\": [{\"mark\": \"t9d416c93df784344afb16ad0ecca5360\", \"series\": 0, \"datum\": 6, \"style\": {\"opacity\": 1.0}}]}, {\"set-datum-style\": [{\"mark\": \"t9d416c93df784344afb16ad0ecca5360\", \"series\": 0, \"datum\": 7, \"style\": {\"opacity\": 1.0}}]}, {\"set-datum-style\": [{\"mark\": \"t9d416c93df784344afb16ad0ecca5360\", \"series\": 0, \"datum\": 8, \"style\": {\"opacity\": 1.0}}]}, {\"set-datum-style\": [{\"mark\": \"t9d416c93df784344afb16ad0ecca5360\", \"series\": 0, \"datum\": 9, \"style\": {\"opacity\": 1.0}}]}, {\"set-datum-style\": [{\"mark\": \"t9d416c93df784344afb16ad0ecca5360\", \"series\": 0, \"datum\": 10, \"style\": {\"opacity\": 1.0}}]}, {\"set-datum-style\": [{\"mark\": \"t9d416c93df784344afb16ad0ecca5360\", \"series\": 0, \"datum\": 11, \"style\": {\"opacity\": 1.0}}]}, {\"set-datum-style\": [{\"mark\": \"t9d416c93df784344afb16ad0ecca5360\", \"series\": 0, \"datum\": 12, \"style\": {\"opacity\": 1.0}}]}, {\"set-datum-style\": [{\"mark\": \"t9d416c93df784344afb16ad0ecca5360\", \"series\": 0, \"datum\": 13, \"style\": {\"opacity\": 1.0}}]}, {\"set-datum-style\": [{\"mark\": \"t9d416c93df784344afb16ad0ecca5360\", \"series\": 0, \"datum\": 14, \"style\": {\"opacity\": 1.0}}]}];              var current_frame = null;             var timeout = null;              function set_timeout(value)             {                 if(timeout !== null)                     window.clearTimeout(timeout);                 timeout = value;             }              function set_current_frame(frame)             {                 current_frame = frame;                 document.querySelector(\"#\" + root_id + \" .toyplot-current-frame\").value = frame;             }              function play_reverse()             {                 set_current_frame((current_frame - 1 + frame_durations.length) % frame_durations.length);                 render_changes(0, current_frame+1)                 set_timeout(window.setTimeout(play_reverse, frame_durations[(current_frame - 1 + frame_durations.length) % frame_durations.length] * 1000));             }              function play_forward()             {                 set_current_frame((current_frame + 1) % frame_durations.length);                 render_changes(current_frame, current_frame+1);                 set_timeout(window.setTimeout(play_forward, frame_durations[current_frame] * 1000));             }              var item_cache = {};             function get_item(id)             {                 if(!(id in item_cache))                     item_cache[id] = document.getElementById(id);                 return item_cache[id];             }              function render_changes(begin, end)             {                 for(var frame = begin; frame != end; ++frame)                 {                     var changes = state_changes[frame];                     for(var type in changes)                     {                         var states = changes[type]                         if(type == \"set-mark-style\")                         {                             for(var i = 0; i != states.length; ++i)                             {                                 var state = states[i];                                 var mark = get_item(state.mark);                                 for(var key in state.style)                                 {                                     mark.style.setProperty(key, state[1][key]);                                 }                             }                         }                         else if(type == \"set-datum-style\")                         {                             for(var i = 0; i != states.length; ++i)                             {                                 var state = states[i];                                 var datum = get_item(state.mark).querySelectorAll(\".toyplot-Series\")[state.series].querySelectorAll(\".toyplot-Datum\")[state.datum];                                 for(var key in state.style)                                 {                                     datum.style.setProperty(key, state.style[key]);                                 }                             }                         }                         else if(type == \"set-datum-text\")                         {                             for(var i = 0; i != states.length; ++i)                             {                                 var state = states[i];                                 var datum = get_item(state.mark).querySelectorAll(\".toyplot-Series\")[state.series].querySelectorAll(\".toyplot-Datum\")[state.datum];                                 var layout = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");                                 layout.innerHTML = state.layout;                                 layout = layout.firstChild;                                  while(datum.firstElementChild)                                     datum.removeChild(datum.firstElementChild);                                 while(layout.firstElementChild)                                     datum.appendChild(layout.removeChild(layout.firstElementChild));                             }                         }                     }                 }             }              function on_set_frame()             {             set_timeout(null);             set_current_frame(document.querySelector(\"#\" + root_id + \" .toyplot-current-frame\").valueAsNumber);             render_changes(0, current_frame+1);             }              function on_frame_rewind()             {             set_timeout(null);             set_current_frame((current_frame - 1 + frame_durations.length) % frame_durations.length);             render_changes(0, current_frame+1);             }              function on_rewind()             {             set_current_frame(0);             render_changes(0, current_frame+1);             }              function on_play_reverse()             {             set_timeout(window.setTimeout(play_reverse, frame_durations[(current_frame - 1 + frame_durations.length) % frame_durations.length] * 1000));             }              function on_stop()             {             set_timeout(null);             }              function on_play_forward()             {             set_timeout(window.setTimeout(play_forward, frame_durations[current_frame] * 1000));             }              function on_fast_forward()             {             set_timeout(null);             set_current_frame(frame_durations.length - 1);             render_changes(0, current_frame + 1)             }              function on_frame_advance()             {             set_timeout(null);             set_current_frame((current_frame + 1) % frame_durations.length);             render_changes(current_frame, current_frame+1);             }              set_current_frame(0);             render_changes(0, current_frame+1);             set_timeout(window.setTimeout(play_forward, frame_durations[current_frame] * 1000));              document.querySelector(\"#\" + root_id + \" .toyplot-current-frame\").oninput = on_set_frame;             document.querySelector(\"#\" + root_id + \" .toyplot-rewind\").onclick = on_rewind;             document.querySelector(\"#\" + root_id + \" .toyplot-reverse-play\").onclick = on_play_reverse;             document.querySelector(\"#\" + root_id + \" .toyplot-frame-rewind\").onclick = on_frame_rewind;             document.querySelector(\"#\" + root_id + \" .toyplot-stop\").onclick = on_stop;             document.querySelector(\"#\" + root_id + \" .toyplot-frame-advance\").onclick = on_frame_advance;             document.querySelector(\"#\" + root_id + \" .toyplot-forward-play\").onclick = on_play_forward;             document.querySelector(\"#\" + root_id + \" .toyplot-fast-forward\").onclick = on_fast_forward;         })();"},{"location":"chapter-1/1.6-code-tree-traversal/#postorder-traversal","title":"postorder traversal","text":"<p>A preorder traversal is also a Depth-first search algorithm, similar to  postorder traversal. It starts by traversing down the left subtree from the root until it reaches a tip Node (i.e., no more left subtree exists on the current Node), it then checks for a right subtree, and then visits the  current Node. As with other algorithms, it could similarly be designed to visit right before left. Given the implementation in <code>toytree</code>, this algorithm could be summarized as LRN (left subtree, right subtree, Node). The primary  utility of this traversal strategy is that it is topologically sorted,  such that a all children are always visited before their parent. This is especially useful for algorithms where parent values are calculated dependent on their child values. In a phylogenetic context, this involves algorithms  for calculating likelihoods of data observed at the tips, for inferring ancestral state reconstructions, node depth/height calculations, and many more.</p> 01234567891011121314\"postorder\" traversal(function() { var modules={}; modules[\"toyplot/tables\"] = (function()     {         var tables = [];          var module = {};          module.set = function(owner, key, names, columns)         {             tables.push({owner: owner, key: key, names: names, columns: columns});         }          module.get = function(owner, key)         {             for(var i = 0; i != tables.length; ++i)             {                 var table = tables[i];                 if(table.owner != owner)                     continue;                 if(table.key != key)                     continue;                 return {names: table.names, columns: table.columns};             }         }          module.get_csv = function(owner, key)         {             var table = module.get(owner, key);             if(table != undefined)             {                 var csv = \"\";                 csv += table.names.join(\",\") + \"\\n\";                 for(var i = 0; i != table.columns[0].length; ++i)                 {                   for(var j = 0; j != table.columns.length; ++j)                   {                     if(j)                       csv += \",\";                     csv += table.columns[j][i];                   }                   csv += \"\\n\";                 }                 return csv;             }         }          return module;     })(); modules[\"toyplot/root/id\"] = \"td56f59eb992640b09c70ba3bf9b103d0\"; modules[\"toyplot/root\"] = (function(root_id)     {         return document.querySelector(\"#\" + root_id);     })(modules[\"toyplot/root/id\"]); modules[\"toyplot/canvas/id\"] = \"td377ae4473a54e138eb02c4f266ee3ae\"; modules[\"toyplot/canvas\"] = (function(canvas_id)     {         return document.querySelector(\"#\" + canvas_id);     })(modules[\"toyplot/canvas/id\"]); modules[\"toyplot/menus/context\"] = (function(root, canvas)     {         var wrapper = document.createElement(\"div\");         wrapper.innerHTML = \"&lt;ul class='toyplot-context-menu' style='background:#eee; border:1px solid #b8b8b8; border-radius:5px; box-shadow: 0px 0px 8px rgba(0%,0%,0%,0.25); margin:0; padding:3px 0; position:fixed; visibility:hidden;'&gt;&lt;/ul&gt;\"         var menu = wrapper.firstChild;          root.appendChild(menu);          var items = [];          var ignore_mouseup = null;         function open_menu(e)         {             var show_menu = false;             for(var index=0; index != items.length; ++index)             {                 var item = items[index];                 if(item.show(e))                 {                     item.item.style.display = \"block\";                     show_menu = true;                 }                 else                 {                     item.item.style.display = \"none\";                 }             }              if(show_menu)             {                 ignore_mouseup = true;                 menu.style.left = (e.clientX + 1) + \"px\";                 menu.style.top = (e.clientY - 5) + \"px\";                 menu.style.visibility = \"visible\";                 e.stopPropagation();                 e.preventDefault();             }         }          function close_menu()         {             menu.style.visibility = \"hidden\";         }          function contextmenu(e)         {             open_menu(e);         }          function mousemove(e)         {             ignore_mouseup = false;         }          function mouseup(e)         {             if(ignore_mouseup)             {                 ignore_mouseup = false;                 return;             }             close_menu();         }          function keydown(e)         {             if(e.key == \"Escape\" || e.key == \"Esc\" || e.keyCode == 27)             {                 close_menu();             }         }          canvas.addEventListener(\"contextmenu\", contextmenu);         canvas.addEventListener(\"mousemove\", mousemove);         document.addEventListener(\"mouseup\", mouseup);         document.addEventListener(\"keydown\", keydown);          var module = {};         module.add_item = function(label, show, activate)         {             var wrapper = document.createElement(\"div\");             wrapper.innerHTML = \"&lt;li class='toyplot-context-menu-item' style='background:#eee; color:#333; padding:2px 20px; list-style:none; margin:0; text-align:left;'&gt;\" + label + \"&lt;/li&gt;\"             var item = wrapper.firstChild;              items.push({item: item, show: show});              function mouseover()             {                 this.style.background = \"steelblue\";                 this.style.color = \"white\";             }              function mouseout()             {                 this.style.background = \"#eee\";                 this.style.color = \"#333\";             }              function choose_item(e)             {                 close_menu();                 activate();                  e.stopPropagation();                 e.preventDefault();             }              item.addEventListener(\"mouseover\", mouseover);             item.addEventListener(\"mouseout\", mouseout);             item.addEventListener(\"mouseup\", choose_item);             item.addEventListener(\"contextmenu\", choose_item);              menu.appendChild(item);         };         return module;     })(modules[\"toyplot/root\"],modules[\"toyplot/canvas\"]); modules[\"toyplot/io\"] = (function()     {         var module = {};         module.save_file = function(mime_type, charset, data, filename)         {             var uri = \"data:\" + mime_type + \";charset=\" + charset + \",\" + data;             uri = encodeURI(uri);              var link = document.createElement(\"a\");             if(typeof link.download != \"undefined\")             {               link.href = uri;               link.style = \"visibility:hidden\";               link.download = filename;                document.body.appendChild(link);               link.click();               document.body.removeChild(link);             }             else             {               window.open(uri);             }         };         return module;     })(); (function(tables, context_menu, io, owner_id, key, label, names, columns, filename)         {             tables.set(owner_id, key, names, columns);              var owner = document.querySelector(\"#\" + owner_id);             function show_item(e)             {                 return owner.contains(e.target);             }              function choose_item()             {                 io.save_file(\"text/csv\", \"utf-8\", tables.get_csv(owner_id, key), filename + \".csv\");             }              context_menu.add_item(\"Save \" + label + \" as CSV\", show_item, choose_item);         })(modules[\"toyplot/tables\"],modules[\"toyplot/menus/context\"],modules[\"toyplot/io\"],\"tb41951952e554ef6a9b88ddf52715f98\",\"data\",\"point\",[\"x\", \"y0\"],[[0.0, 1.0, 0.5, 2.0, 3.0, 2.5, 1.5, 4.0, 5.0, 4.5, 3.0, 6.0, 7.0, 6.5, 4.75], [0.0, 0.0, 0.25, 0.0, 0.0, 0.25, 0.5, 0.0, 0.0, 0.5, 0.75, 0.0, 0.0, 0.75, 1.0]],\"toyplot\"); })();          (function()         {             var root_id = \"td56f59eb992640b09c70ba3bf9b103d0\";             var frame_durations = [0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5];             var state_changes = [{\"set-datum-style\": [{\"mark\": \"tb41951952e554ef6a9b88ddf52715f98\", \"series\": 0, \"datum\": 0, \"style\": {\"opacity\": 0.1}}, {\"mark\": \"tb41951952e554ef6a9b88ddf52715f98\", \"series\": 0, \"datum\": 1, \"style\": {\"opacity\": 0.1}}, {\"mark\": \"tb41951952e554ef6a9b88ddf52715f98\", \"series\": 0, \"datum\": 2, \"style\": {\"opacity\": 0.1}}, {\"mark\": \"tb41951952e554ef6a9b88ddf52715f98\", \"series\": 0, \"datum\": 3, \"style\": {\"opacity\": 0.1}}, {\"mark\": \"tb41951952e554ef6a9b88ddf52715f98\", \"series\": 0, \"datum\": 4, \"style\": {\"opacity\": 0.1}}, {\"mark\": \"tb41951952e554ef6a9b88ddf52715f98\", \"series\": 0, \"datum\": 5, \"style\": {\"opacity\": 0.1}}, {\"mark\": \"tb41951952e554ef6a9b88ddf52715f98\", \"series\": 0, \"datum\": 6, \"style\": {\"opacity\": 0.1}}, {\"mark\": \"tb41951952e554ef6a9b88ddf52715f98\", \"series\": 0, \"datum\": 7, \"style\": {\"opacity\": 0.1}}, {\"mark\": \"tb41951952e554ef6a9b88ddf52715f98\", \"series\": 0, \"datum\": 8, \"style\": {\"opacity\": 0.1}}, {\"mark\": \"tb41951952e554ef6a9b88ddf52715f98\", \"series\": 0, \"datum\": 9, \"style\": {\"opacity\": 0.1}}, {\"mark\": \"tb41951952e554ef6a9b88ddf52715f98\", \"series\": 0, \"datum\": 10, \"style\": {\"opacity\": 0.1}}, {\"mark\": \"tb41951952e554ef6a9b88ddf52715f98\", \"series\": 0, \"datum\": 11, \"style\": {\"opacity\": 0.1}}, {\"mark\": \"tb41951952e554ef6a9b88ddf52715f98\", \"series\": 0, \"datum\": 12, \"style\": {\"opacity\": 0.1}}, {\"mark\": \"tb41951952e554ef6a9b88ddf52715f98\", \"series\": 0, \"datum\": 13, \"style\": {\"opacity\": 0.1}}, {\"mark\": \"tb41951952e554ef6a9b88ddf52715f98\", \"series\": 0, \"datum\": 14, \"style\": {\"opacity\": 0.1}}]}, {\"set-datum-style\": [{\"mark\": \"tb41951952e554ef6a9b88ddf52715f98\", \"series\": 0, \"datum\": 0, \"style\": {\"opacity\": 1.0}}]}, {\"set-datum-style\": [{\"mark\": \"tb41951952e554ef6a9b88ddf52715f98\", \"series\": 0, \"datum\": 1, \"style\": {\"opacity\": 1.0}}]}, {\"set-datum-style\": [{\"mark\": \"tb41951952e554ef6a9b88ddf52715f98\", \"series\": 0, \"datum\": 2, \"style\": {\"opacity\": 1.0}}]}, {\"set-datum-style\": [{\"mark\": \"tb41951952e554ef6a9b88ddf52715f98\", \"series\": 0, \"datum\": 3, \"style\": {\"opacity\": 1.0}}]}, {\"set-datum-style\": [{\"mark\": \"tb41951952e554ef6a9b88ddf52715f98\", \"series\": 0, \"datum\": 4, \"style\": {\"opacity\": 1.0}}]}, {\"set-datum-style\": [{\"mark\": \"tb41951952e554ef6a9b88ddf52715f98\", \"series\": 0, \"datum\": 5, \"style\": {\"opacity\": 1.0}}]}, {\"set-datum-style\": [{\"mark\": \"tb41951952e554ef6a9b88ddf52715f98\", \"series\": 0, \"datum\": 6, \"style\": {\"opacity\": 1.0}}]}, {\"set-datum-style\": [{\"mark\": \"tb41951952e554ef6a9b88ddf52715f98\", \"series\": 0, \"datum\": 7, \"style\": {\"opacity\": 1.0}}]}, {\"set-datum-style\": [{\"mark\": \"tb41951952e554ef6a9b88ddf52715f98\", \"series\": 0, \"datum\": 8, \"style\": {\"opacity\": 1.0}}]}, {\"set-datum-style\": [{\"mark\": \"tb41951952e554ef6a9b88ddf52715f98\", \"series\": 0, \"datum\": 9, \"style\": {\"opacity\": 1.0}}]}, {\"set-datum-style\": [{\"mark\": \"tb41951952e554ef6a9b88ddf52715f98\", \"series\": 0, \"datum\": 10, \"style\": {\"opacity\": 1.0}}]}, {\"set-datum-style\": [{\"mark\": \"tb41951952e554ef6a9b88ddf52715f98\", \"series\": 0, \"datum\": 11, \"style\": {\"opacity\": 1.0}}]}, {\"set-datum-style\": [{\"mark\": \"tb41951952e554ef6a9b88ddf52715f98\", \"series\": 0, \"datum\": 12, \"style\": {\"opacity\": 1.0}}]}, {\"set-datum-style\": [{\"mark\": \"tb41951952e554ef6a9b88ddf52715f98\", \"series\": 0, \"datum\": 13, \"style\": {\"opacity\": 1.0}}]}, {\"set-datum-style\": [{\"mark\": \"tb41951952e554ef6a9b88ddf52715f98\", \"series\": 0, \"datum\": 14, \"style\": {\"opacity\": 1.0}}]}];              var current_frame = null;             var timeout = null;              function set_timeout(value)             {                 if(timeout !== null)                     window.clearTimeout(timeout);                 timeout = value;             }              function set_current_frame(frame)             {                 current_frame = frame;                 document.querySelector(\"#\" + root_id + \" .toyplot-current-frame\").value = frame;             }              function play_reverse()             {                 set_current_frame((current_frame - 1 + frame_durations.length) % frame_durations.length);                 render_changes(0, current_frame+1)                 set_timeout(window.setTimeout(play_reverse, frame_durations[(current_frame - 1 + frame_durations.length) % frame_durations.length] * 1000));             }              function play_forward()             {                 set_current_frame((current_frame + 1) % frame_durations.length);                 render_changes(current_frame, current_frame+1);                 set_timeout(window.setTimeout(play_forward, frame_durations[current_frame] * 1000));             }              var item_cache = {};             function get_item(id)             {                 if(!(id in item_cache))                     item_cache[id] = document.getElementById(id);                 return item_cache[id];             }              function render_changes(begin, end)             {                 for(var frame = begin; frame != end; ++frame)                 {                     var changes = state_changes[frame];                     for(var type in changes)                     {                         var states = changes[type]                         if(type == \"set-mark-style\")                         {                             for(var i = 0; i != states.length; ++i)                             {                                 var state = states[i];                                 var mark = get_item(state.mark);                                 for(var key in state.style)                                 {                                     mark.style.setProperty(key, state[1][key]);                                 }                             }                         }                         else if(type == \"set-datum-style\")                         {                             for(var i = 0; i != states.length; ++i)                             {                                 var state = states[i];                                 var datum = get_item(state.mark).querySelectorAll(\".toyplot-Series\")[state.series].querySelectorAll(\".toyplot-Datum\")[state.datum];                                 for(var key in state.style)                                 {                                     datum.style.setProperty(key, state.style[key]);                                 }                             }                         }                         else if(type == \"set-datum-text\")                         {                             for(var i = 0; i != states.length; ++i)                             {                                 var state = states[i];                                 var datum = get_item(state.mark).querySelectorAll(\".toyplot-Series\")[state.series].querySelectorAll(\".toyplot-Datum\")[state.datum];                                 var layout = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");                                 layout.innerHTML = state.layout;                                 layout = layout.firstChild;                                  while(datum.firstElementChild)                                     datum.removeChild(datum.firstElementChild);                                 while(layout.firstElementChild)                                     datum.appendChild(layout.removeChild(layout.firstElementChild));                             }                         }                     }                 }             }              function on_set_frame()             {             set_timeout(null);             set_current_frame(document.querySelector(\"#\" + root_id + \" .toyplot-current-frame\").valueAsNumber);             render_changes(0, current_frame+1);             }              function on_frame_rewind()             {             set_timeout(null);             set_current_frame((current_frame - 1 + frame_durations.length) % frame_durations.length);             render_changes(0, current_frame+1);             }              function on_rewind()             {             set_current_frame(0);             render_changes(0, current_frame+1);             }              function on_play_reverse()             {             set_timeout(window.setTimeout(play_reverse, frame_durations[(current_frame - 1 + frame_durations.length) % frame_durations.length] * 1000));             }              function on_stop()             {             set_timeout(null);             }              function on_play_forward()             {             set_timeout(window.setTimeout(play_forward, frame_durations[current_frame] * 1000));             }              function on_fast_forward()             {             set_timeout(null);             set_current_frame(frame_durations.length - 1);             render_changes(0, current_frame + 1)             }              function on_frame_advance()             {             set_timeout(null);             set_current_frame((current_frame + 1) % frame_durations.length);             render_changes(current_frame, current_frame+1);             }              set_current_frame(0);             render_changes(0, current_frame+1);             set_timeout(window.setTimeout(play_forward, frame_durations[current_frame] * 1000));              document.querySelector(\"#\" + root_id + \" .toyplot-current-frame\").oninput = on_set_frame;             document.querySelector(\"#\" + root_id + \" .toyplot-rewind\").onclick = on_rewind;             document.querySelector(\"#\" + root_id + \" .toyplot-reverse-play\").onclick = on_play_reverse;             document.querySelector(\"#\" + root_id + \" .toyplot-frame-rewind\").onclick = on_frame_rewind;             document.querySelector(\"#\" + root_id + \" .toyplot-stop\").onclick = on_stop;             document.querySelector(\"#\" + root_id + \" .toyplot-frame-advance\").onclick = on_frame_advance;             document.querySelector(\"#\" + root_id + \" .toyplot-forward-play\").onclick = on_play_forward;             document.querySelector(\"#\" + root_id + \" .toyplot-fast-forward\").onclick = on_fast_forward;         })();"},{"location":"chapter-1/1.6-code-tree-traversal/#idxorder-traversal","title":"idxorder traversal","text":"<p>This is a custom traversal order used by <code>toytree</code>. It could similarly be called \"tips-first-then-postorder\" traversal, because it works by first  visiting the tip Nodes from left to right, and then proceeds by visiting  internal nodes in a postorder manner (left then right subtrees, then their parent). This traversal strategy turns out be particularly convenient for working with phylogenetic trees, since the tip Nodes represent the actual extant samples in our dataset, and are therefore usually of greatest interest. This traversal thus makes it easier to select and find the tip Nodes by knowing that the first N Nodes in a tree will be the tips.</p> 01234567891011121314\"idxorder\" traversal(function() { var modules={}; modules[\"toyplot/tables\"] = (function()     {         var tables = [];          var module = {};          module.set = function(owner, key, names, columns)         {             tables.push({owner: owner, key: key, names: names, columns: columns});         }          module.get = function(owner, key)         {             for(var i = 0; i != tables.length; ++i)             {                 var table = tables[i];                 if(table.owner != owner)                     continue;                 if(table.key != key)                     continue;                 return {names: table.names, columns: table.columns};             }         }          module.get_csv = function(owner, key)         {             var table = module.get(owner, key);             if(table != undefined)             {                 var csv = \"\";                 csv += table.names.join(\",\") + \"\\n\";                 for(var i = 0; i != table.columns[0].length; ++i)                 {                   for(var j = 0; j != table.columns.length; ++j)                   {                     if(j)                       csv += \",\";                     csv += table.columns[j][i];                   }                   csv += \"\\n\";                 }                 return csv;             }         }          return module;     })(); modules[\"toyplot/root/id\"] = \"ta1efdb8c9418465db6c7938c6a4a0b36\"; modules[\"toyplot/root\"] = (function(root_id)     {         return document.querySelector(\"#\" + root_id);     })(modules[\"toyplot/root/id\"]); modules[\"toyplot/canvas/id\"] = \"t9291e9588bf54aed9e4a404013a1c7c9\"; modules[\"toyplot/canvas\"] = (function(canvas_id)     {         return document.querySelector(\"#\" + canvas_id);     })(modules[\"toyplot/canvas/id\"]); modules[\"toyplot/menus/context\"] = (function(root, canvas)     {         var wrapper = document.createElement(\"div\");         wrapper.innerHTML = \"&lt;ul class='toyplot-context-menu' style='background:#eee; border:1px solid #b8b8b8; border-radius:5px; box-shadow: 0px 0px 8px rgba(0%,0%,0%,0.25); margin:0; padding:3px 0; position:fixed; visibility:hidden;'&gt;&lt;/ul&gt;\"         var menu = wrapper.firstChild;          root.appendChild(menu);          var items = [];          var ignore_mouseup = null;         function open_menu(e)         {             var show_menu = false;             for(var index=0; index != items.length; ++index)             {                 var item = items[index];                 if(item.show(e))                 {                     item.item.style.display = \"block\";                     show_menu = true;                 }                 else                 {                     item.item.style.display = \"none\";                 }             }              if(show_menu)             {                 ignore_mouseup = true;                 menu.style.left = (e.clientX + 1) + \"px\";                 menu.style.top = (e.clientY - 5) + \"px\";                 menu.style.visibility = \"visible\";                 e.stopPropagation();                 e.preventDefault();             }         }          function close_menu()         {             menu.style.visibility = \"hidden\";         }          function contextmenu(e)         {             open_menu(e);         }          function mousemove(e)         {             ignore_mouseup = false;         }          function mouseup(e)         {             if(ignore_mouseup)             {                 ignore_mouseup = false;                 return;             }             close_menu();         }          function keydown(e)         {             if(e.key == \"Escape\" || e.key == \"Esc\" || e.keyCode == 27)             {                 close_menu();             }         }          canvas.addEventListener(\"contextmenu\", contextmenu);         canvas.addEventListener(\"mousemove\", mousemove);         document.addEventListener(\"mouseup\", mouseup);         document.addEventListener(\"keydown\", keydown);          var module = {};         module.add_item = function(label, show, activate)         {             var wrapper = document.createElement(\"div\");             wrapper.innerHTML = \"&lt;li class='toyplot-context-menu-item' style='background:#eee; color:#333; padding:2px 20px; list-style:none; margin:0; text-align:left;'&gt;\" + label + \"&lt;/li&gt;\"             var item = wrapper.firstChild;              items.push({item: item, show: show});              function mouseover()             {                 this.style.background = \"steelblue\";                 this.style.color = \"white\";             }              function mouseout()             {                 this.style.background = \"#eee\";                 this.style.color = \"#333\";             }              function choose_item(e)             {                 close_menu();                 activate();                  e.stopPropagation();                 e.preventDefault();             }              item.addEventListener(\"mouseover\", mouseover);             item.addEventListener(\"mouseout\", mouseout);             item.addEventListener(\"mouseup\", choose_item);             item.addEventListener(\"contextmenu\", choose_item);              menu.appendChild(item);         };         return module;     })(modules[\"toyplot/root\"],modules[\"toyplot/canvas\"]); modules[\"toyplot/io\"] = (function()     {         var module = {};         module.save_file = function(mime_type, charset, data, filename)         {             var uri = \"data:\" + mime_type + \";charset=\" + charset + \",\" + data;             uri = encodeURI(uri);              var link = document.createElement(\"a\");             if(typeof link.download != \"undefined\")             {               link.href = uri;               link.style = \"visibility:hidden\";               link.download = filename;                document.body.appendChild(link);               link.click();               document.body.removeChild(link);             }             else             {               window.open(uri);             }         };         return module;     })(); (function(tables, context_menu, io, owner_id, key, label, names, columns, filename)         {             tables.set(owner_id, key, names, columns);              var owner = document.querySelector(\"#\" + owner_id);             function show_item(e)             {                 return owner.contains(e.target);             }              function choose_item()             {                 io.save_file(\"text/csv\", \"utf-8\", tables.get_csv(owner_id, key), filename + \".csv\");             }              context_menu.add_item(\"Save \" + label + \" as CSV\", show_item, choose_item);         })(modules[\"toyplot/tables\"],modules[\"toyplot/menus/context\"],modules[\"toyplot/io\"],\"t1697f89c4fa74386baf33f35e771df06\",\"data\",\"point\",[\"x\", \"y0\"],[[0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 0.5, 2.5, 1.5, 4.5, 3.0, 6.5, 4.75], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.25, 0.25, 0.5, 0.5, 0.75, 0.75, 1.0]],\"toyplot\"); })();          (function()         {             var root_id = \"ta1efdb8c9418465db6c7938c6a4a0b36\";             var frame_durations = [0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5];             var state_changes = [{\"set-datum-style\": [{\"mark\": \"t1697f89c4fa74386baf33f35e771df06\", \"series\": 0, \"datum\": 0, \"style\": {\"opacity\": 0.1}}, {\"mark\": \"t1697f89c4fa74386baf33f35e771df06\", \"series\": 0, \"datum\": 1, \"style\": {\"opacity\": 0.1}}, {\"mark\": \"t1697f89c4fa74386baf33f35e771df06\", \"series\": 0, \"datum\": 2, \"style\": {\"opacity\": 0.1}}, {\"mark\": \"t1697f89c4fa74386baf33f35e771df06\", \"series\": 0, \"datum\": 3, \"style\": {\"opacity\": 0.1}}, {\"mark\": \"t1697f89c4fa74386baf33f35e771df06\", \"series\": 0, \"datum\": 4, \"style\": {\"opacity\": 0.1}}, {\"mark\": \"t1697f89c4fa74386baf33f35e771df06\", \"series\": 0, \"datum\": 5, \"style\": {\"opacity\": 0.1}}, {\"mark\": \"t1697f89c4fa74386baf33f35e771df06\", \"series\": 0, \"datum\": 6, \"style\": {\"opacity\": 0.1}}, {\"mark\": \"t1697f89c4fa74386baf33f35e771df06\", \"series\": 0, \"datum\": 7, \"style\": {\"opacity\": 0.1}}, {\"mark\": \"t1697f89c4fa74386baf33f35e771df06\", \"series\": 0, \"datum\": 8, \"style\": {\"opacity\": 0.1}}, {\"mark\": \"t1697f89c4fa74386baf33f35e771df06\", \"series\": 0, \"datum\": 9, \"style\": {\"opacity\": 0.1}}, {\"mark\": \"t1697f89c4fa74386baf33f35e771df06\", \"series\": 0, \"datum\": 10, \"style\": {\"opacity\": 0.1}}, {\"mark\": \"t1697f89c4fa74386baf33f35e771df06\", \"series\": 0, \"datum\": 11, \"style\": {\"opacity\": 0.1}}, {\"mark\": \"t1697f89c4fa74386baf33f35e771df06\", \"series\": 0, \"datum\": 12, \"style\": {\"opacity\": 0.1}}, {\"mark\": \"t1697f89c4fa74386baf33f35e771df06\", \"series\": 0, \"datum\": 13, \"style\": {\"opacity\": 0.1}}, {\"mark\": \"t1697f89c4fa74386baf33f35e771df06\", \"series\": 0, \"datum\": 14, \"style\": {\"opacity\": 0.1}}]}, {\"set-datum-style\": [{\"mark\": \"t1697f89c4fa74386baf33f35e771df06\", \"series\": 0, \"datum\": 0, \"style\": {\"opacity\": 1.0}}]}, {\"set-datum-style\": [{\"mark\": \"t1697f89c4fa74386baf33f35e771df06\", \"series\": 0, \"datum\": 1, \"style\": {\"opacity\": 1.0}}]}, {\"set-datum-style\": [{\"mark\": \"t1697f89c4fa74386baf33f35e771df06\", \"series\": 0, \"datum\": 2, \"style\": {\"opacity\": 1.0}}]}, {\"set-datum-style\": [{\"mark\": \"t1697f89c4fa74386baf33f35e771df06\", \"series\": 0, \"datum\": 3, \"style\": {\"opacity\": 1.0}}]}, {\"set-datum-style\": [{\"mark\": \"t1697f89c4fa74386baf33f35e771df06\", \"series\": 0, \"datum\": 4, \"style\": {\"opacity\": 1.0}}]}, {\"set-datum-style\": [{\"mark\": \"t1697f89c4fa74386baf33f35e771df06\", \"series\": 0, \"datum\": 5, \"style\": {\"opacity\": 1.0}}]}, {\"set-datum-style\": [{\"mark\": \"t1697f89c4fa74386baf33f35e771df06\", \"series\": 0, \"datum\": 6, \"style\": {\"opacity\": 1.0}}]}, {\"set-datum-style\": [{\"mark\": \"t1697f89c4fa74386baf33f35e771df06\", \"series\": 0, \"datum\": 7, \"style\": {\"opacity\": 1.0}}]}, {\"set-datum-style\": [{\"mark\": \"t1697f89c4fa74386baf33f35e771df06\", \"series\": 0, \"datum\": 8, \"style\": {\"opacity\": 1.0}}]}, {\"set-datum-style\": [{\"mark\": \"t1697f89c4fa74386baf33f35e771df06\", \"series\": 0, \"datum\": 9, \"style\": {\"opacity\": 1.0}}]}, {\"set-datum-style\": [{\"mark\": \"t1697f89c4fa74386baf33f35e771df06\", \"series\": 0, \"datum\": 10, \"style\": {\"opacity\": 1.0}}]}, {\"set-datum-style\": [{\"mark\": \"t1697f89c4fa74386baf33f35e771df06\", \"series\": 0, \"datum\": 11, \"style\": {\"opacity\": 1.0}}]}, {\"set-datum-style\": [{\"mark\": \"t1697f89c4fa74386baf33f35e771df06\", \"series\": 0, \"datum\": 12, \"style\": {\"opacity\": 1.0}}]}, {\"set-datum-style\": [{\"mark\": \"t1697f89c4fa74386baf33f35e771df06\", \"series\": 0, \"datum\": 13, \"style\": {\"opacity\": 1.0}}]}, {\"set-datum-style\": [{\"mark\": \"t1697f89c4fa74386baf33f35e771df06\", \"series\": 0, \"datum\": 14, \"style\": {\"opacity\": 1.0}}]}];              var current_frame = null;             var timeout = null;              function set_timeout(value)             {                 if(timeout !== null)                     window.clearTimeout(timeout);                 timeout = value;             }              function set_current_frame(frame)             {                 current_frame = frame;                 document.querySelector(\"#\" + root_id + \" .toyplot-current-frame\").value = frame;             }              function play_reverse()             {                 set_current_frame((current_frame - 1 + frame_durations.length) % frame_durations.length);                 render_changes(0, current_frame+1)                 set_timeout(window.setTimeout(play_reverse, frame_durations[(current_frame - 1 + frame_durations.length) % frame_durations.length] * 1000));             }              function play_forward()             {                 set_current_frame((current_frame + 1) % frame_durations.length);                 render_changes(current_frame, current_frame+1);                 set_timeout(window.setTimeout(play_forward, frame_durations[current_frame] * 1000));             }              var item_cache = {};             function get_item(id)             {                 if(!(id in item_cache))                     item_cache[id] = document.getElementById(id);                 return item_cache[id];             }              function render_changes(begin, end)             {                 for(var frame = begin; frame != end; ++frame)                 {                     var changes = state_changes[frame];                     for(var type in changes)                     {                         var states = changes[type]                         if(type == \"set-mark-style\")                         {                             for(var i = 0; i != states.length; ++i)                             {                                 var state = states[i];                                 var mark = get_item(state.mark);                                 for(var key in state.style)                                 {                                     mark.style.setProperty(key, state[1][key]);                                 }                             }                         }                         else if(type == \"set-datum-style\")                         {                             for(var i = 0; i != states.length; ++i)                             {                                 var state = states[i];                                 var datum = get_item(state.mark).querySelectorAll(\".toyplot-Series\")[state.series].querySelectorAll(\".toyplot-Datum\")[state.datum];                                 for(var key in state.style)                                 {                                     datum.style.setProperty(key, state.style[key]);                                 }                             }                         }                         else if(type == \"set-datum-text\")                         {                             for(var i = 0; i != states.length; ++i)                             {                                 var state = states[i];                                 var datum = get_item(state.mark).querySelectorAll(\".toyplot-Series\")[state.series].querySelectorAll(\".toyplot-Datum\")[state.datum];                                 var layout = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");                                 layout.innerHTML = state.layout;                                 layout = layout.firstChild;                                  while(datum.firstElementChild)                                     datum.removeChild(datum.firstElementChild);                                 while(layout.firstElementChild)                                     datum.appendChild(layout.removeChild(layout.firstElementChild));                             }                         }                     }                 }             }              function on_set_frame()             {             set_timeout(null);             set_current_frame(document.querySelector(\"#\" + root_id + \" .toyplot-current-frame\").valueAsNumber);             render_changes(0, current_frame+1);             }              function on_frame_rewind()             {             set_timeout(null);             set_current_frame((current_frame - 1 + frame_durations.length) % frame_durations.length);             render_changes(0, current_frame+1);             }              function on_rewind()             {             set_current_frame(0);             render_changes(0, current_frame+1);             }              function on_play_reverse()             {             set_timeout(window.setTimeout(play_reverse, frame_durations[(current_frame - 1 + frame_durations.length) % frame_durations.length] * 1000));             }              function on_stop()             {             set_timeout(null);             }              function on_play_forward()             {             set_timeout(window.setTimeout(play_forward, frame_durations[current_frame] * 1000));             }              function on_fast_forward()             {             set_timeout(null);             set_current_frame(frame_durations.length - 1);             render_changes(0, current_frame + 1)             }              function on_frame_advance()             {             set_timeout(null);             set_current_frame((current_frame + 1) % frame_durations.length);             render_changes(current_frame, current_frame+1);             }              set_current_frame(0);             render_changes(0, current_frame+1);             set_timeout(window.setTimeout(play_forward, frame_durations[current_frame] * 1000));              document.querySelector(\"#\" + root_id + \" .toyplot-current-frame\").oninput = on_set_frame;             document.querySelector(\"#\" + root_id + \" .toyplot-rewind\").onclick = on_rewind;             document.querySelector(\"#\" + root_id + \" .toyplot-reverse-play\").onclick = on_play_reverse;             document.querySelector(\"#\" + root_id + \" .toyplot-frame-rewind\").onclick = on_frame_rewind;             document.querySelector(\"#\" + root_id + \" .toyplot-stop\").onclick = on_stop;             document.querySelector(\"#\" + root_id + \" .toyplot-frame-advance\").onclick = on_frame_advance;             document.querySelector(\"#\" + root_id + \" .toyplot-forward-play\").onclick = on_play_forward;             document.querySelector(\"#\" + root_id + \" .toyplot-fast-forward\").onclick = on_fast_forward;         })();"},{"location":"chapter-1/1.6-code-tree-traversal/#coding-node-traversals","title":"Coding Node Traversals","text":"<p>Now that you have seen several traversal strategies, we can implement them as methods of our <code>Node</code> class object. In fact, the final <code>Node</code> class that we have developed below is pretty similar to the <code>Node</code> class that is used under the hood in the <code>toytree</code> library. You can  expand the collapsable code block below to see the entire new <code>Node</code> class definition that now includes several new functions. Browse through this  slowly to try to understand how it works. Don't worry if it seems a bit  much, we will break it down into parts below.</p> Full Node class definition (w/ traversal functions and more) <pre><code>from typing import Tuple, Optional, Iterator\nfrom collections import deque\n\nclass Node:\n\"\"\"A Node instance that can connect with other Nodes to form a Tree.\n\n    Parameters\n    ----------\n    name: str\n        A name string associated with a Node when printed or visualized.\n    dist: float\n        A float value as the distance between this Node and its parent (up)\n\n    Attributes\n    ----------\n    children: Tuple\n        A tuple of Node instances that are descended from this Node.\n    up: Node or None\n        A Node that is ancestral to this Node, or None if this Node is root.\n\n    Examples\n    --------\n    &gt;&gt;&gt; node = Node(\"A\")\n    &gt;&gt;&gt; node.add_child(\"B\")\n    &gt;&gt;&gt; print(node.name, node.children)\n    \"\"\"\n    def __init__(self, name: str=\"\", dist: float=0.):\n        self.name = str(name)\n        self.dist = float(dist)\n        self.children: Tuple['Node'] = ()\n        self.up: Optional['Node'] = None\n\n    def __repr__(self) -&gt; str:\n\"\"\"Return string representation as Node(name).\"\"\"\n        return f\"Node({self.name})\"\n\n    def is_leaf(self) -&gt; bool:\n\"\"\"Return True if Node is a leaf (i.e., has no children).\"\"\"\n        return not bool(self.children)\n\n    def is_root(self) -&gt; bool:\n\"\"\"Return True if Node is the root (i.e., has no ancestor).\"\"\"\n        return bool(self.up is None)\n\n    def add_child(self, name: str=\"\", dist: float=0.) -&gt; \"Node\":\n\"\"\"Add a Node as a child to this one.\"\"\"\n        new_node = Node(name=name, dist=dist)\n        new_node.up = self\n        self.children += (new_node,)\n        return new_node\n\n    ############################################################\n    ## TRAVERSAL FUNCTIONS                                    ##\n    ############################################################\n\n    def traverse(self, strategy: str=\"levelorder\") -&gt; Iterator['Node']:\n\"\"\"Return a generator over all Nodes using a tree traversal strategy.\n\n        Parameters\n        ----------\n        strategy: str\n            A traversal strategy for the order in which nodes will\n            be visited: 'preorder', 'postorder', 'levelorder',\n            'inorder', or 'idxorder'.\n\n        Notes\n        -----\n        preorder:\n            Parents are visited before children. Traverses all the way\n            down each left subtree before backtracking to right subtree.\n        postorder:\n            Children are visited before parents. The left subtree is\n            visited, then right, then the parent.\n        levelorder:\n            Nodes the same depth from root are visited left to\n            right, before descending to next level.\n        idxorder:\n            Leaf nodes are visited left to right, followed by internal\n            nodes in postorder traversal order.\n        \"\"\"\n        if strategy == \"preorder\":\n            return self._traverse_preorder()\n        if strategy == \"levelorder\":\n            return self._traverse_levelorder()\n        if strategy == \"postorder\":\n            return self._traverse_postorder()\n        if strategy == \"idxorder\":\n            return self._traverse_idxorder()\n        raise ValueError(\n            f\"strategy {strategy} is not a supported traversal algorithm\")\n\n    def _traverse_preorder(self) -&gt; Iterator['Node']:\n\"\"\"Iterate over all nodes by 'preorder' traversal.\"\"\"\n        queue = [self]\n        while queue:\n            node = queue.pop()\n            yield node\n            queue.extend(node.children[::-1])\n\n    def _traverse_levelorder(self) -&gt; Iterator['Node']:\n\"\"\"Iterate over all desdecendant nodes in levelorder.\"\"\"\n        queue = deque([self])\n        while queue:\n            node = queue.popleft()\n            yield node\n            queue.extend(node.children)\n\n    def _traverse_postorder(self) -&gt; Iterator['Node']:\n\"\"\"Iterate over all descendant nodes in tip-to-root order.\"\"\"\n        queue = [self]\n        stack = []\n        while queue:\n            # get node from queue and add to the output stack\n            node = queue.pop()\n            stack.append(node)\n            # add node's children to the queue\n            queue.extend(node.children)\n        # yield nodes in reverse order they were added to stack\n        while stack:\n            yield stack.pop()\n\n    def _traverse_idxorder(self) -&gt; Iterator['Node']:\n\"\"\"Iterates over all nodes in 'idx' order.\"\"\"\n        queue = [self]\n        inner_stack = []\n        outer_stack = []\n        node = self\n        while queue:\n\n            # get node from end of the queue\n            node = queue.pop()\n\n            # if node is leaf insert to output stack ntips from right\n            if node.is_leaf():\n                outer_stack.append(node)\n\n            # if not leaf then insert to output stack...\n            else:\n                inner_stack.append(node)\n\n            # add node's children to the queue\n            queue.extend(node.children)\n\n        # return nodes in reverse order they were added to stack\n        while outer_stack:\n            yield outer_stack.pop()\n        while inner_stack:\n            yield inner_stack.pop()\n\n    ######################################################\n    ## LEAF AND NAME RETRIEVAL                          ##\n    ######################################################\n\n    def _iter_leaves(self) -&gt; Iterator['Node']:\n\"\"\"Return a Generator of leaves descended from this node in\n        idxorder.\"\"\"\n        for node in self.traverse(strategy=\"idxorder\"):\n            if not node.children:\n                yield node\n\n    def get_leaves(self) -&gt; Tuple['Node']:\n\"\"\"Return a list of leaf nodes descended from this node in\n        idxorder.\"\"\"\n        return tuple(self._iter_leaves())\n\n    def _iter_leaf_names(self) -&gt; Iterator[str]:\n\"\"\"Return a Generator of names of Nodes descended from this\n        node in idxorder.\"\"\"\n        for node in self._iter_leaves():\n            yield node.name\n\n    def get_leaf_names(self) -&gt; Tuple[str]:\n\"\"\"Return a list of names of Nodes descended from this node\n        in idxorder.\"\"\"\n        return tuple(self._iter_leaf_names())\n\n    #################################################\n    ## NODE RELATIVE RETRIEVAL / TRAVERSAL\n    #################################################\n\n    def _iter_sisters(self) -&gt; Iterator['Node']:\n\"\"\"Return a Generator to iterate over sister nodes.\"\"\"\n        if self.up:\n            for child in self.up.children:\n                if child != self:\n                    yield child\n\n    def get_sisters(self) -&gt; Tuple['Node']:\n\"\"\"Return list of other Nodes that are children of same parent.\"\"\"\n        return tuple(self._iter_sisters())\n\n    def _iter_descendants(self, strategy: str=\"levelorder\") -&gt; Iterator['Node']:\n\"\"\"Return a Generator of descendant Nodes (not including self).\"\"\"\n        for node in self.traverse(strategy=strategy):\n            yield node\n\n    def get_descendants(self, strategy: str=\"levelorder\") -&gt; Tuple['Node']:\n\"\"\"Return a list of descendant Nodes (not including self).\"\"\"\n        return tuple(self._iter_descendants(strategy=strategy))\n\n    def _iter_ancestors(self) -&gt; Iterator['Node']:\n\"\"\"Return a Generator of Nodes on path from this node to root.\"\"\"\n        node = self\n        while node.up:\n            yield node\n\n    def get_ancestors(self) -&gt; Tuple['Node']:\n\"\"\"Return a list of Nodes on path from this node to root.\"\"\"\n        return tuple(self._iter_ancestors())            \n</code></pre> <p>The new sections of the code are located below a commented block that  says \"## TRAVERSAL FUNCTIONS\". I'll briefly describe each of these functions in turn, referring to them by name and by line numbers. </p> <ul> <li> <p><code>traverse()</code> (lines 56-90): This is a simple function that takes a traversal strategy name as a string and then calls one of the several possible traversal  functions that are defined below it. The purpose of this function is simply to provide a single function that users can interface with to select a  traversal strategy, and where a single documentation string can provide a lot of detail on the methods that are available. You'll notice that the other functions have names that start with an underscore, such as   <code>_traverse_preorder()</code>. These are called private functions. This is simply a convention in Python for naming functions that are not intended to  be called by users. By starting the name with an underscore this ensures it  will not show up by default during tab auto-completion in interactive environments like jupyter, and thus users will usually see just <code>traverse()</code> and not the  private functions that <code>traverse()</code> is intended to call.</p> </li> <li> <p><code>_traverse_preorder()</code> (lines 92-98): This  is one of the simplest traversal algorithms to code, and the one that we  used for demonstration already earlier in this chapter.  Starting from the root Node, a list is created (line 94) to hold the Nodes  that should be yielded from next. A while loop runs until all Nodes are  processed (line 95). Each iteration the last Node in the queue is <code>pop</code>'ed (removed) and yielded (lines 96-97). If the Node has any children,  they are added to the queue to be processed next, with the left child placed  at the right end of the queue so it will be yielded before the right child (line 98).</p> </li> </ul> <pre><code>    def _traverse_preorder(self) -&gt; Iterator['Node']:\n\"\"\"Iterate over all nodes by 'preorder' traversal.\"\"\"\n        queue = [self]\n        while queue:\n            node = queue.pop()\n            yield node\n            queue.extend(node.children[::-1])\n</code></pre> <ul> <li><code>_traverse_levelorder()</code> (lines 100-106): This function is similar to preorder traversal, and differs in code only in that we use a new type of object called a <code>deque</code> that is imported from the Python standard library module <code>collections</code>. This is a double-ended queue, which is similar to a  list but can append or pop from either end, instead of just the right side. So we use the <code>deque</code> as a queue this time, and <code>pop</code> Nodes from the left side of it (line 107), while new child Nodes are still added to the right  end (line 109). This ensures that Nodes are yielded in the order of their  depth from the root.</li> </ul> <pre><code>    def _traverse_levelorder(self) -&gt; Iterator['Node']:\n\"\"\"Iterate over all desdecendant nodes in levelorder.\"\"\"\n        queue = deque([self])\n        while queue:\n            node = queue.popleft()\n            yield node\n            queue.extend(node.children)\n</code></pre> <ul> <li><code>_traverse_postorder()</code> (lines 108-120): This function is similar to preorder traversal, but differs in an important way. It requires the  use of an additional list to be used as a stack to store the order that Nodes will eventually be yielded (line 111). Instead of yielding Nodes as they are first popped from the queue (line 114), they are instead added to  the stack (line 115). Only after the stack is full is it unpacked and Nodes are yielded one at a time in postorder (lines 119-120). The use of this  additional stack makes this traversal method slightly slower and much less memory efficient than the first two methods. This trade-off is required,  however, to provide the fastest option for yielding Nodes in reverse  topological sort, where children come before parents.</li> </ul> <pre><code>    def _traverse_postorder(self) -&gt; Iterator['Node']:\n\"\"\"Iterate over all descendant nodes in tip-to-root order.\"\"\"\n        queue = [self]\n        stack = []\n        while queue:\n            # get node from queue and add to the output stack\n            node = queue.pop()\n            stack.append(node)\n            # add node's children to the queue\n            queue.extend(node.children)\n        # yield nodes in reverse order they were added to stack\n        while stack:\n            yield stack.pop()\n</code></pre> <ul> <li><code>_traverse_idxorder()</code> (lines 122-48): This function is similar to postorder traversal in that it returns tip Nodes before internal Nodes and therefore requires the use of an additional stack. It uses two separate stacks, one for tips and one for internal Nodes, and yields from these  in order, so that tips are yielded first from left to right, followed by  internal Nodes in postorder traversal.</li> </ul> <pre><code>    def _traverse_idxorder(self) -&gt; Iterator['Node']:\n\"\"\"Iterates over all nodes in 'idx' order.\"\"\"\n        queue = [self]\n        inner_stack = []\n        outer_stack = []\n        node = self\n        while queue:\n\n            # get node from end of the queue\n            node = queue.pop()\n\n            # if node is leaf insert to output stack ntips from right\n            if node.is_leaf():\n                outer_stack.append(node)\n\n            # if not leaf then insert to output stack...\n            else:\n                inner_stack.append(node)\n\n            # add node's children to the queue\n            queue.extend(node.children)\n\n        # return nodes in reverse order they were added to stack\n        while outer_stack:\n            yield outer_stack.pop()\n        while inner_stack:\n            yield inner_stack.pop()\n</code></pre>"},{"location":"chapter-1/1.6-code-tree-traversal/#using-traversals","title":"Using Traversals","text":"<p>Finally, let's now explore the use of our Node traversal functions. As we  have seen already, we can print the order of the Nodes, which is interesting,  but not yet very useful. In addition to this, the next two sections  demonstrate some more useful applications of traversals for extracting  information about the tree or measuring statistics on a tree. </p> <p><pre><code># get a random 10-tip tree of connected Nodes\nroot_node = get_random_tree(ntips=6, seed=123)\n\n# print Nodes in each traversal order\nfor strategy in [\"levelorder\", \"postorder\", \"preorder\", \"idxorder\"]:\n    order = root_node.traverse(strategy=strategy)\n    print(strategy, list(order))\n</code></pre> <pre><code># levelorder [Node(root), Node(left1), Node(right1), Node(left3), Node(right3), Node(left2), Node(right2), Node(left5), Node(right5), Node(left4), Node(right4)]\n# postorder [Node(left5), Node(right5), Node(left3), Node(left4), Node(right4), Node(right3), Node(left1), Node(left2), Node(right2), Node(right1), Node(root)]\n# preorder [Node(root), Node(left1), Node(left3), Node(left5), Node(right5), Node(right3), Node(left4), Node(right4), Node(right1), Node(left2), Node(right2)]\n# idxorder [Node(left5), Node(right5), Node(left4), Node(right4), Node(left2), Node(right2), Node(left3), Node(right3), Node(left1), Node(right1), Node(root)]\n</code></pre></p>"},{"location":"chapter-1/1.6-code-tree-traversal/#leaf-and-name-retrieval","title":"Leaf and Name Retrieval","text":"<p>The new Node object includes a section starting at line 150 defining several functions for accessng information about leaf Nodes and their names. This  is a frequent way to interrogate parts of a tree, by asking which tips are descended from a given Node. A style choice was made in the design of this <code>Node</code> class to write the generator functions as private functions (starting  with an underscore) and to make a public versions of each that return the  fully built collection as a tuple. I write it this way here to show that it is the same way in <code>toytree</code>. The generator functions are available if you  know about them, but because most non-power-users do not need to use iteration,  the alternative methods are less scary and easier to use. The code below is  very easy to write and understand, since converting generators to tuples  is very simple.</p> <pre><code>    ######################################################\n    ## LEAF AND NAME RETRIEVAL                          ##\n    ######################################################\n\n    def _iter_leaves(self) -&gt; Iterator['Node']:\n\"\"\"Return a Generator of leaves descended from this node in\n        idxorder.\"\"\"\n        for node in self.traverse(strategy=\"idxorder\"):\n            if not node.children:\n                yield node\n\n    def get_leaves(self) -&gt; Tuple['Node']:\n\"\"\"Return a list of leaf nodes descended from this node in\n        idxorder.\"\"\"\n        return tuple(self._iter_leaves())\n\n    def _iter_leaf_names(self) -&gt; Iterator[str]:\n\"\"\"Return a Generator of names of Nodes descended from this\n        node in idxorder.\"\"\"\n        for node in self._iter_leaves():\n            yield node.name\n\n    def get_leaf_names(self) -&gt; Tuple[str]:\n\"\"\"Return a list of names of Nodes descended from this node\n        in idxorder.\"\"\"\n        return tuple(self._iter_leaf_names())\n</code></pre> <p><pre><code># example: print each Node and its descendants\nfor node in root_node.traverse(\"levelorder\"):\n    names = node.get_leaf_names()\n    print(f\"{node}:\\ttips={names}\")\n</code></pre> <pre><code># Node(root):     tips=('left5', 'right5', 'left4', 'right4', 'left2', 'right2')\n# Node(left1):    tips=('left5', 'right5', 'left4', 'right4')\n# Node(right1):   tips=('left2', 'right2')\n# Node(left3):    tips=('left5', 'right5')\n# Node(right3):   tips=('left4', 'right4')\n# Node(left2):    tips=('left2',)\n# Node(right2):   tips=('right2',)\n# Node(left5):    tips=('left5',)\n# Node(right5):   tips=('right5',)\n# Node(left4):    tips=('left4',)\n# Node(right4):   tips=('right4',)\n</code></pre></p>"},{"location":"chapter-1/1.6-code-tree-traversal/#node-relationships","title":"Node Relationships","text":"<p>The relationships among Nodes can also be retrieved using simple operations involving traversal, and the up and children attributes of Nodes. These  functions are also available from <code>Node</code> class objects in <code>toytree</code>.</p> <pre><code>    #################################################\n    ## NODE RELATIVE RETRIEVAL / TRAVERSAL\n    #################################################\n\n    def _iter_sisters(self) -&gt; Iterator['Node']:\n\"\"\"Return a Generator to iterate over sister nodes.\"\"\"\n        if self.up:\n            for child in self.up.children:\n                if child != self:\n                    yield child\n\n    def get_sisters(self) -&gt; Tuple['Node']:\n\"\"\"Return list of other Nodes that are children of same parent.\"\"\"\n        return tuple(self._iter_sisters())\n\n    def _iter_descendants(self, strategy: str=\"levelorder\") -&gt; Iterator['Node']:\n\"\"\"Return a Generator of descendant Nodes (not including self).\"\"\"\n        for node in self.traverse(strategy=strategy):\n            yield node\n\n    def get_descendants(self, strategy: str=\"levelorder\") -&gt; Tuple['Node']:\n\"\"\"Return a list of descendant Nodes (not including self).\"\"\"\n        return tuple(self._iter_descendants(strategy=strategy))\n\n    def _iter_ancestors(self) -&gt; Iterator['Node']:\n\"\"\"Return a Generator of Nodes on path from this node to root.\"\"\"\n        node = self\n        while node.up:\n            yield node\n\n    def get_ancestors(self) -&gt; Tuple['Node']:\n\"\"\"Return a list of Nodes on path from this node to root.\"\"\"\n        return tuple(self._iter_ancestors())            \n</code></pre>"},{"location":"chapter-1/1.6-code-tree-traversal/#preorder-usage","title":"Preorder usage","text":"<p>The preorder traversal can be useful for calculating metrics that require information about the parents. For example, we could write the function  below to count the depth of every Node (number of Nodes it is away from the root). At each Node instead of having to measure the distance independently to the root,  it can simply fetch the value already calculated for its parent, and then just add 1. A simple function is written below that uses preorder traversal and returns the result as a dict. Having a traversal function makes this very easy to code.</p> <pre><code>from typing import Dict\n\ndef get_node_depths(root_node) -&gt; Dict['Node', int]:\n\"\"\"Yield tuple of (Node, int) with depths of each Node from the root.\"\"\"\n    depths = {}\n    for node in root_node.traverse(\"preorder\"):\n        if node.is_root():\n            depths[node] = 0\n        else:\n            depths[node] = depths[node.up] + 1\n    return depths\n\n# example\nroot_node = get_random_tree(ntips=6, seed=123)\nget_node_depths(root_node)\n</code></pre> <pre><code># {Node(root): 0,\n#  Node(left1): 1,\n#  Node(left3): 2,\n#  Node(left5): 3,\n#  Node(right5): 3,\n#  Node(right3): 2,\n#  Node(left4): 3,\n#  Node(right4): 3,\n#  Node(right1): 1,\n#  Node(left2): 2,\n#  Node(right2): 2}\n</code></pre>"},{"location":"chapter-1/1.6-code-tree-traversal/#postorder-usage","title":"Postorder usage","text":"<p>The postorder traversal is particularly powerful for counting metrics  over Nodes, or other operations that require operating first on the children before the parents. An example is calculating the number of descendants  of each Node. We could use one of our earlier functions such as  <code>get_descendants</code> to count the number at each Node, but that would involve calling a new traversal at every single Node (slow). A much faster operation can be done by using only a single traversal in postorder. In this case, each Node  simply takes the value of one of its children and then adds to it its own number of  children. </p> <p>In contrast to the last function which filled and returned a dict object, I wrote this one as a generator that yields Tuples of (Node, int)  each iteration. As you can see, we can easily create a dict from this  afterwards so the result is similar to the previous function. In both  cases, the use of traversal functions makes it quite simple and elegant.</p> <p><pre><code>def iter_ndescendants(root_node) -&gt; Iterator[Tuple['Node', int]]:\n\"\"\"Yield tuples of (Node, int) containing n descendants of each Node.\"\"\" \n    for node in root_node.traverse(\"postorder\"):\n        if node.is_leaf():\n            node.ndesc = 0\n        else:\n            node.ndesc = node.children[0].ndescendants + len(node.children)\n        yield (node, node.ndesc)\n\n# example\nroot_node = get_random_tree(ntips=6, seed=123)\ndict(iter_ndescendants(root_node))\n</code></pre> <pre><code># {Node(left5): 0,\n#  Node(right5): 0,\n#  Node(left3): 2,\n#  Node(left4): 0,\n#  Node(right4): 0,\n#  Node(right3): 2,\n#  Node(left1): 4,\n#  Node(left2): 0,\n#  Node(right2): 0,\n#  Node(right1): 2,\n#  Node(root): 6}\n</code></pre></p>"},{"location":"chapter-1/1.6-code-tree-traversal/#summary","title":"Summary","text":"<ul> <li>A collection of connected Nodes represents a tree data structure.</li> <li>Any connected Node can be accessed from another Node. The root Node is  the most convenient starting point since all other Nodes are descended from it.</li> <li>Tree traversal algorithms can be used to acccess each Node exactly once in  a specific order.</li> <li>Traversals that visit children before parents, or vice-versa, are  topologically sorted, and can be used to build functions for calculating  information on a tree. </li> <li>Generator functions return an iterable by using the <code>yield</code>  expression, and are a powerful tool for writing tree traversal and other  functions.</li> </ul>"},{"location":"chapter-1/1.6-code-tree-traversal/#references","title":"References","text":"<ul> <li>https://www.techiedelight.com/postorder-tree-traversal-iterative-recursive/</li> <li>https://en.wikipedia.org/wiki/Tree_traversal#Breadth-first_search</li> </ul>"},{"location":"chapter-1/1.7-code-tree-class/","title":"The ToyTree class","text":"<p>In the last lesson we developed a <code>Node</code> class object that is similar to the <code>toytree.Node</code> class, and which is used to represent a tree data  structure. In this chapter we will develop another class that is closer  in design to the <code>toytree.ToyTree</code> class, and which is used to represent an entire tree. This will help to illuminate how to use the <code>toytree</code> library more effectively, while also demonstrating some coding practices that can  be useful in many other contexts.</p>"},{"location":"chapter-1/1.7-code-tree-class/#learning-objectives","title":"Learning objectives","text":"<p>By the end of this chapter you will:</p> <ol> <li>learn about caching and measuring the speed of Python code.</li> <li>understand the difference between the <code>toytree.Node</code> and <code>toytree.ToyTree</code> classes.</li> <li>be able to extract Node coordinates to draw a tree from a Tree object.</li> </ol>"},{"location":"chapter-1/1.7-code-tree-class/#caching-traversals","title":"Caching Traversals","text":"<p>Although we just learned that tree traversal algorithms are widely useful  for working with tree data structures, I am now going to going to argue a slightly contrary point, which is that for the purpose of writing  super-efficient Python code, you should try to limit the use of tree  traversals as much as possible. </p> <p>This is to say, if a tree isn't changed in some way (e.g., by modifying the  topology or edge lengths), then a single tree traversal can be performed to  cache the information about the tree structure (e.g., a specific traversal  order), and any subsequent operations can make use of this cached information  rather than traversing the entire tree again. This can make code run much faster since fetching information from a cache (e.g., a dictionary) is  pretty much the fastest thing you can do in Python; much faster than  traversing an entire tree. Of course, if the tree does change in some way (e.g., it is re-rooted) then a tree traversal will need to be performed to  learn the new structure and update the cached information again.</p> <p>To make this point more clear, let's walk through an example. Let's say that we want to access the names of every leaf Node in a tree of connected Nodes.  In the previous chapter we wrote a function in our <code>Node</code> class that can do  this by performing a tree traversal and yielding the names of leaf Nodes as  they are visited. The speed of this operation is the speed of traversing the entire tree. I'll first re-use our code from the last chapter to generate a random tree of Nodes. </p> Node class and get_random_tree function definitions (see last chapter) <pre><code>from typing import Tuple, Optional, Iterator\nimport random\nfrom collections import deque\n\nclass Node:\n\"\"\"A Node instance that can connect with other Nodes to form a Tree.\n\n    Parameters\n    ----------\n    name: str\n        A name string associated with a Node when printed or visualized.\n    dist: float\n        A float value as the distance between this Node and its parent (up)\n\n    Attributes\n    ----------\n    children: Tuple\n        A tuple of Node instances that are descended from this Node.\n    up: Node or None\n        A Node that is ancestral to this Node, or None if this Node is root.\n\n    Examples\n    --------\n    &gt;&gt;&gt; node = Node(\"A\")\n    &gt;&gt;&gt; node.add_child(\"B\")\n    &gt;&gt;&gt; print(node.name, node.children)\n    \"\"\"\n    def __init__(self, name: str=\"\", dist: float=0.):\n        self.name = str(name)\n        self.dist = float(dist)\n        self.children: Tuple['Node'] = ()\n        self.up: Optional['Node'] = None\n\n    def __repr__(self) -&gt; str:\n\"\"\"Return string representation as Node(name).\"\"\"\n        return f\"Node({self.name})\"\n\n    def is_leaf(self) -&gt; bool:\n\"\"\"Return True if Node is a leaf (i.e., has no children).\"\"\"\n        return not bool(self.children)\n\n    def is_root(self) -&gt; bool:\n\"\"\"Return True if Node is the root (i.e., has no ancestor).\"\"\"\n        return bool(self.up is None)\n\n    def add_child(self, name: str=\"\", dist: float=0.) -&gt; \"Node\":\n\"\"\"Add a Node as a child to this one.\"\"\"\n        new_node = Node(name=name, dist=dist)\n        new_node.up = self\n        self.children += (new_node,)\n        return new_node\n\n    ############################################################\n    ## TRAVERSAL FUNCTIONS                                    ##\n    ############################################################\n\n    def traverse(self, strategy: str=\"levelorder\") -&gt; Iterator['Node']:\n\"\"\"Return a generator over all Nodes using a tree traversal strategy.\n\n        Parameters\n        ----------\n        strategy: str\n            A traversal strategy for the order in which nodes will\n            be visited: 'preorder', 'postorder', 'levelorder',\n            'inorder', or 'idxorder'.\n\n        Notes\n        -----\n        preorder:\n            Parents are visited before children. Traverses all the way\n            down each left subtree before backtracking to right subtree.\n        postorder:\n            Children are visited before parents. The left subtree is\n            visited, then right, then the parent.\n        levelorder:\n            Nodes the same depth from root are visited left to\n            right, before descending to next level.\n        idxorder:\n            Leaf nodes are visited left to right, followed by internal\n            nodes in postorder traversal order.\n        \"\"\"\n        if strategy == \"preorder\":\n            return self._traverse_preorder()\n        if strategy == \"levelorder\":\n            return self._traverse_levelorder()\n        if strategy == \"postorder\":\n            return self._traverse_postorder()\n        if strategy == \"idxorder\":\n            return self._traverse_idxorder()\n        raise ValueError(\n            f\"strategy {strategy} is not a supported traversal algorithm\")\n\n    def _traverse_preorder(self) -&gt; Iterator['Node']:\n\"\"\"Iterate over all nodes by 'preorder' traversal.\"\"\"\n        queue = deque([self])\n        while queue:\n            node = queue.pop()\n            yield node\n            queue.extend(node.children[::-1])\n\n    def _traverse_levelorder(self) -&gt; Iterator['Node']:\n\"\"\"Iterate over all desdecendant nodes in levelorder.\"\"\"\n        queue = deque([self])\n        while queue:\n            node = queue.popleft()\n            yield node\n            queue.extend(node.children)\n\n    def _traverse_postorder(self) -&gt; Iterator['Node']:\n\"\"\"Iterate over all descendant nodes in tip-to-root order.\"\"\"\n        queue = deque([self])\n        stack = deque()\n        while queue:\n            # get node from queue and add to the output stack\n            node = queue.pop()\n            stack.append(node)\n            # add node's children to the queue\n            queue.extend(node.children)\n        # yield nodes in reverse order they were added to stack\n        while stack:\n            yield stack.pop()\n\n    def _traverse_idxorder(self) -&gt; Iterator['Node']:\n\"\"\"Iterates over all nodes in 'idx' order.\"\"\"\n        queue = deque([self])\n        inner_stack = deque()\n        outer_stack = deque()\n        node = self\n        while queue:\n\n            # get node from end of the queue\n            node = queue.pop()\n\n            # if node is leaf insert to output stack ntips from right\n            if node.is_leaf():\n                outer_stack.append(node)\n\n            # if not leaf then insert to output stack...\n            else:\n                inner_stack.append(node)\n\n            # add node's children to the queue\n            queue.extend(node.children)\n\n        # return nodes in reverse order they were added to stack\n        while outer_stack:\n            yield outer_stack.pop()\n        while inner_stack:\n            yield inner_stack.pop()\n\n    ######################################################\n    ## LEAF AND NAME RETRIEVAL                          ##\n    ######################################################\n\n    def _iter_leaves(self) -&gt; Iterator['Node']:\n\"\"\"Return a Generator of leaves descended from this node in\n        idxorder.\"\"\"\n        for node in self.traverse(strategy=\"idxorder\"):\n            if not node.children:\n                yield node\n\n    def get_leaves(self) -&gt; Tuple['Node']:\n\"\"\"Return a list of leaf nodes descended from this node in\n        idxorder.\"\"\"\n        return tuple(self._iter_leaves())\n\n    def _iter_leaf_names(self) -&gt; Iterator[str]:\n\"\"\"Return a Generator of names of Nodes descended from this\n        node in idxorder.\"\"\"\n        for node in self._iter_leaves():\n            yield node.name\n\n    def get_leaf_names(self) -&gt; Tuple[str]:\n\"\"\"Return a list of names of Nodes descended from this node\n        in idxorder.\"\"\"\n        return tuple(self._iter_leaf_names())\n\n    #################################################\n    ## NODE RELATIVE RETRIEVAL / TRAVERSAL\n    #################################################\n\n    def _iter_sisters(self) -&gt; Iterator['Node']:\n\"\"\"Return a Generator to iterate over sister nodes.\"\"\"\n        if self.up:\n            for child in self.up.children:\n                if child != self:\n                    yield child\n\n    def get_sisters(self) -&gt; Tuple['Node']:\n\"\"\"Return list of other Nodes that are children of same parent.\"\"\"\n        return tuple(self._iter_sisters())\n\n    def _iter_descendants(self, strategy: str=\"levelorder\") -&gt; Iterator['Node']:\n\"\"\"Return a Generator of descendant Nodes (not including self).\"\"\"\n        for node in self.traverse(strategy=strategy):\n            yield node\n\n    def get_descendants(self, strategy: str=\"levelorder\") -&gt; Tuple['Node']:\n\"\"\"Return a list of descendant Nodes (not including self).\"\"\"\n        return tuple(self._iter_descendants(strategy=strategy))\n\n    def _iter_ancestors(self) -&gt; Iterator['Node']:\n\"\"\"Return a Generator of Nodes on path from this node to root.\"\"\"\n        node = self\n        while node.up:\n            yield node\n\n    def get_ancestors(self) -&gt; Tuple['Node']:\n\"\"\"Return a list of Nodes on path from this node to root.\"\"\"\n        return tuple(self._iter_ancestors())            \n\n\ndef get_random_tree(ntips: int, seed: Optional[int] = None) -&gt; \"Node\":\n\"\"\"Return a ladder-like tree of Node objects with 'ntips' tip Nodes.\n\n    Parameters\n    ----------\n    ntips: int\n        The number of tip Nodes that must exist before the tree is returned.\n\n    Returns\n    -------\n    Node\n        The root Node of the set of connected Nodes is returned.\n    \"\"\"\n    # set random seed\n    random.seed(seed)\n\n    # create root Node with name=root\n    root = Node(name=\"root\", dist=0)\n\n    # store Nodes in a list that are currently tips\n    tips = [root]\n\n    # add tip Nodes by splitting 'node' into a bifurcation until ntips exist.\n    for idx in range(1, ntips):\n\n        # randomly sample one of the current tip Nodes\n        node = random.choice(tips)\n        tips.remove(node)\n\n        # create two new tips from 'node' and add to tips list  \n        child_l = node.add_child(name=f\"left{idx}\", dist=1)\n        child_r = node.add_child(name=f\"right{idx}\", dist=1)\n        tips.extend([child_l, child_r])\n\n    # return root Node that now has ntips descended tip Nodes\n    return root\n</code></pre> <p><pre><code># example: iterate over tree traversal to get names of all tip Nodes.\nroot_node = get_random_tree(ntips=10, seed=123)\nprint(root_node.get_leaf_names())\n</code></pre> <pre><code># ('left5', 'right5', 'left4', 'right4', 'left6', 'left7', 'left9', 'right9', 'left8', 'right8')\n</code></pre></p> <p>To measure the speed of this code we can use the <code>%%timeit</code> magic command as  the first line of a code block in an interactive Python session (e.g., in  jupyter). This will run the function many times iteratively and report the average time it takes to complete. On my computer this function takes about 7 \u00b5s (microseconds). <pre><code>%%timeit\nroot_node.get_leaf_names()\n</code></pre> <pre><code># 7.08 \u00b5s \u00b1 117 ns per loop (mean \u00b1 std. dev. of 7 runs, 100,000 loops each)\n</code></pre></p> <p>Now let's compare this to the speed of fetching the names of the tip Nodes  from a cached collection. As we will learn more about soon, <code>toytree.ToyTree</code> objects store a dictionary to cache a reference to every Node according  to a label representing the order in which it will be visiting using the idxorder traversal. In other words, it stores a dictionary that looks like this <code>{0: Node(A), 1: Node(B), 2: Node(C), ...}</code>. This dict is stored and  reused for many purposes that require fetching information about one or more Nodes.</p> <p>So let's start by creating a dictionary like this, which can be done in a  number of ways. This example uses the builtin <code>enumerate</code> function,  which returns a generator that yields tuples for each element in an iterable where the first element is an increasing counter from 0-nitems. Explore this  function if you are not familiar with it, because we will use  <code>enumerate</code> frequently. A dict is constructed by passing this  generator of tuples to the <code>dict</code> function.</p> <p><pre><code># create a dictionary to cache a reference to each Node\nidx_dict = dict(enumerate(root_node.traverse(\"idxorder\")))\nidx_dict\n</code></pre> <pre><code># {0: Node(left5),\n#  1: Node(right5),\n#  2: Node(left4),\n#  3: Node(right4),\n#  4: Node(left6),\n#  5: Node(left7),\n#  6: Node(left9),\n#  7: Node(right9),\n#  8: Node(left8),\n#  9: Node(right8),\n#  10: Node(left3),\n#  11: Node(right3),\n#  12: Node(left1),\n#  13: Node(right7),\n#  14: Node(right6),\n#  15: Node(left2),\n#  16: Node(right2),\n#  17: Node(right1),\n#  18: Node(root)}\n</code></pre></p> <p>Now let's compare how long it takes to fetch the tip Node names from this dict. The values were stored using a reference to their order in an idxorder  traversal, which we will refer to as a Node's index (<code>idx</code>). We know that for a tree with 10 tips the idx 0-9 will be the tip Nodes, since idxorder is a traversal that visits all tips before internal Nodes. Therefore, we just  need to fetch the first 10 Nodes. As you can see below, this operation takes only 546 ns (nanoseconds), which is equivalent to 0.546 \u00b5s, making it  approximately 13X faster than using a traversal! That's pretty dramatic.  The degree to which caching is faster than traversing will also increase  very fast as the tree becomes larger, since both operations scale linearly  with tree size.</p> <p><pre><code>%%timeit\n[idx_dict[i] for i in range(10)]\n</code></pre> <pre><code># 546 ns \u00b1 11.7 ns per loop (mean \u00b1 std. dev. of 7 runs, 1,000,000 loops each)\n</code></pre></p>"},{"location":"chapter-1/1.7-code-tree-class/#trees-versus-nodes","title":"Trees versus Nodes","text":"<p>The significant difference between the speed of fetching Node data  cached in a dictionary versus traversing a tree to find a specific set of Nodes underlies the core reason why the <code>toytree</code> library uses two separate class objects, <code>toytree.Node</code> and <code>toytree.ToyTree</code>. The former represents  individual Nodes, just as we have been working with until now. The <code>ToyTree</code>  class, by contrast, is intended to represent an entire tree (a fixed  collection of Node objects), referenced by its root <code>Node</code>. When a <code>ToyTree</code>  is initialized it creates a cached dictionary to store references to the Nodes in idxorder, and it reuses this cached dictionary to perform many tree-based operations much faster than could be done by traversal with <code>Node</code> objects.  Thus, as you will see, the <code>ToyTree</code> class contains many more functions than  the <code>Node</code> class for working with trees, to fetch tree info, perform  statistical analyses, create tree drawings, and modify the tree data  structure (by editing Node attributes and then updating the cached Node info). This distinction between <code>Node</code> and <code>ToyTree</code> class objects was a design  decision for making code faster and more organized, and to separate code that is used to build trees (Nodes) from code that is used to study trees (Trees).</p>"},{"location":"chapter-1/1.7-code-tree-class/#tree-class","title":"Tree Class","text":"<p>To better understand this, we will walk through the development of a simple <code>Tree</code> class object in this tutorial that is similar to <code>toytree.ToyTree</code>,  just like our <code>Node</code> is analagous to <code>toytree.Node</code>. </p> <pre><code>from typing import Iterator\n\nclass Tree:\n\"\"\"A Tree is a collection of Nodes with cached traversal data.\n\n    A Tree is initialized from a root Node, where upon it will perform a\n    tree traversal to cache Node data and store the idxorder traversal. \n    This cache will be auto-updated if the tree topology is changed.\n\n    Parameters\n    ----------\n    treenode: Node\n        The root Node of a tree data structure of Nodes.\n\n    Attributes\n    ----------\n    nnodes: int\n        The number of total Nodes in the tree.\n    ntips: int\n        The number of tip Nodes in the tree.\n\n    Examples\n    --------\n    &gt;&gt;&gt; treenode = get_random_tree(ntips=20)\n    &gt;&gt;&gt; tree = Tree(treenode)\n    &gt;&gt;&gt; print(tree)\n    \"\"\"\n    def __init__(self, treenode: \"Node\"):\n        self.treenode = treenode\n\n        # attributes to be filled: cached traversal data\n        self.nnodes: int = 0\n        self.ntips: int = 0\n        self._idx_dict: Dict[int, 'Node'] = {}\n\n        # run caching of Node data.\n        self._update()\n\n    def __repr__(self) -&gt; str:\n\"\"\"Return a representation of the tree as a string.\"\"\"\n        return f\"&lt;Tree ntips={self.ntips}&gt;\"\n\n    def __getitem__(self, idx: int) -&gt; \"Node\":\n\"\"\"Return a Node by its cached idxorder label (idx)\"\"\"\n        return self._idx_dict[idx]  \n\n    def __iter__(self) -&gt; Iterator[\"Node\"]:\n\"\"\"Return an iterator over Nodes in idxorder.\"\"\"\n        return (self[i] for i in range(self.nnodes))\n\n    def _update(self) -&gt; None:\n\"\"\"Set Tree attributes nnodes, ntips, _idx_dict, and set Node._idx.\n\n        This function must be called anytime the tree structure is modified\n        by including it at the end of a function that modifies the tree.\n        \"\"\"\n        # reset values\n        self.nnodes = 0\n        self.ntips = 0\n        self._idx_dict.clear()\n\n        # iterate in idxorder to set Node.idx attributes and counters\n        for idx, node in enumerate(self.traverse('idxorder')):\n            node._idx = idx\n            self._idx_dict[node._idx] = node\n            if node.is_leaf():\n                self.ntips = idx\n        self.nnodes = idx\n</code></pre> <p>Our simple <code>Tree</code> class object has a few special class methods that we have  not seen before. This includes the <code>__getitem__</code> and <code>__iter__</code> dunders  which we'll discuss in a minute. But first, focus on the <code>__init__</code>. Our <code>Tree</code> class requires a Node as an input argument, which it stores as an  attribute called <code>.treenode</code>. It then also creates three attributes  (<code>.nnodes</code>, <code>.ntips</code>, and <code>._idx_dict</code>) that are initially set to default  values. Finally, at the end of <code>__init__</code> another function named  <code>_update()</code> is called. If we follow down through the class definition we can find this function's definition. It performs a single tree traversal and as it iterates over Nodes it stores a reference to each in a dictionary named <code>._idx_dict</code> (stored as a private attibute of <code>Tree</code>), and it increments the <code>.nnodes</code> and <code>.ntips</code> values as counters. Thus, we now have a cached dict that can be used to reference each Node, and we know how many nodes and tips there are in the tree.</p> <pre><code># get the root Node of a collection of Nodes\nroot_node = get_random_tree(ntips=10, seed=123)\n\n# get a Tree that stores the Node as its root.\ntree = Tree(root_node)\nprint(tree)\n</code></pre> <pre><code># &lt;Tree ntips=10&gt;\n</code></pre>"},{"location":"chapter-1/1.7-code-tree-class/#indexable-class","title":"Indexable class","text":"<p>One really cool feature of having the Node traversal data cached to our  object is that we can now fetch Nodes from the <code>_idx_dict</code> dictionary by  using their unique key labels. Here we purposefully used the idxorder  traversal because it has the feature that we know Nodes 0-ntips are the  tips, and that the final node (nnodes) will be the root. To make our <code>Tree</code> object even more sleek, we have added a <code>__getitem__</code> function to it, which is a special class function in Python that allows an object to be indexed, just like a dict or list. This means we can use square brackets to enter an  index key to it. Within the <code>__getitem__</code> definition we can tell it to do anything we want to find the value to return. Our function simply tells it to return the value from the <code>_idx_dict</code> attribute that is paired with the  entered key. The reason we defined the <code>_idx_dict</code> to be a private attribute is because indexing provides a cleaner alternative method for indexing from  this cache.</p> <pre><code># get and print the tip Nodes\nprint([tree[i].idx for i in range(tree.ntips)])\n\n# get and print the root Node\nprint(tree.treenode.idx)\n\n# get and print all nodes in idxorder (topogically sorted)\nprint([tree[i].idx for i in range(tree.nnodes)])\n\n# get and print all nodes in reverse idxorder (topogically sorted)\nprint([tree[i].idx for i in range(tree.nnodes)[::-1]])\n\n# get a specific Node by its idx label\nprint(tree[5].idx)\n</code></pre> <pre><code># [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]\n# 18\n# [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18]\n# [18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0]\n# 5\n</code></pre>"},{"location":"chapter-1/1.7-code-tree-class/#iterable-class","title":"Iterable class","text":"<p>As we saw above, iterating over cached objects in a dict is much faster than repeating a traversal algorithm. For most purposes, our main concern is  whether the order of Nodes is topologically sorted, meaning that parents will come before children, or vice versa, The cached idxorder has this feature,  and can be iterated over in either direction, start to end, or end to start, to visit each Node in either topologically sorted direction. As another  convenient design feature of our <code>Tree</code> class I have added an <code>__iter__</code>  method, which allows an instance of this class to act as a generator. Within this function I use a generator comprehension to return an iterator over  all Nodes in idxorder. Thus, we can also iterate over the cached Nodes using the very concise syntax below:</p> <pre><code># Iterate over cached Nodes in idxorder (faster than true traversal)\nfor node in tree:\n    print(node)\n</code></pre>"},{"location":"chapter-1/1.7-code-tree-class/#tree-class-advanced","title":"Tree Class (Advanced)","text":"<p>One example of this is Node heights. Calculating heights seems simple, it  is just the sum of edge lengths from the root Node, right? Well, in an  ultrametric tree (all tips are aligned) that would be true, however, not  all trees are ultrametric. If tips are different distances from the root then heights must be measured relative to the tip that is farthest from the  root. This requires at least two iterations through the tree, one to  calculate distances from the root, and another to set the new height values on each Node. Not too complicated. But, as we just stated, there is no  reason to perform two traversals, since we can cache an ordered reference to Nodes after the first traversal, and then just reuse that information.</p> <p>This is the strategy in the <code>ToyTree</code> class. In fact, from the last chapter you may remember that levelorder and idxorder traversals require storing Nodes in a stack and then unpacking the stack to yield them in a specified order. Thus, this traversal actually already visits each Node twice. Therefore, we can add some additional code to this traversal method to allow it to  calculate and store information while it is already performing this  traversal. An example of this is in the code below, where we define a new modified version of the <code>Node</code> and <code>Tree</code> classes such that the <code>Node</code> now has two additional attributes for storing coordinate positions (<code>height</code> and <code>x</code>) and one for storing its traversal order (<code>idx</code>). The  <code>Tree</code> class has a more complex <code>_update</code> function now that is used to  update all of the Node information while it is performing the traversal.</p> Node and Tree class definitions <pre><code>from typing import Tuple, Iterator\nimport pandas as pd\n\n\nclass Node:\n\"\"\"A simple Node class for storing connections among Nodes.\"\"\"\n    def __init__(self, name: str=\"\", dist: float=1.):\n        self.name = name\n        self.dist = dist\n\n        # attributes to be updated.\n        self.up: Optional['Node'] = None\n        self.children: Tuple['Node'] = ()\n        self.idx: int = 0\n        self.height: float = 0.\n        self.x: float = 0.\n\n    def __repr__(self) -&gt; str:\n\"\"\"Return string representation as Node(name).\"\"\"\n        return f\"Node({self.name})\"\n\n    def is_leaf(self) -&gt; bool:\n\"\"\"Return True if Node is a leaf (i.e., has no children).\"\"\"\n        return not bool(self.children)\n\n    def is_root(self) -&gt; bool:\n\"\"\"Return True if Node is the root (i.e., has no ancestor).\"\"\"\n        return bool(self.up is None)\n\n    def add_child(self, name: str=\"\", dist: float=0.) -&gt; \"Node\":\n\"\"\"Add a Node as a child to this one.\"\"\"\n        new_node = Node(name=name, dist=dist)\n        new_node.up = self\n        self.children += (new_node,)\n        return new_node\n\n\nclass Tree:\n\"\"\"A simple Tree class that caches traversal order of connected Nodes\"\"\"\n    def __init__(self, treenode: 'Node'):\n        self.treenode = treenode\n\n        # attributes to be filled.\n        self.ntips: int = 0\n        self.nnodes: int = 0\n        self._idx_dict: Dict[int, 'Node'] = {}\n\n        # cache Node idxorder info\n        self._update()\n\n    def __iter__(self) -&gt; Iterator[Node]:\n\"\"\"ToyTree is iterable, returning Nodes in idx order.\"\"\"\n        return (self[i] for i in range(self.nnodes))\n\n    def __getitem__(self, idx: int) -&gt; Node:\n\"\"\"ToyTree is indexable by idx label to access Nodes.\"\"\"\n        return self._idx_dict[idx]\n\n    def __repr__(self) -&gt; str:\n\"\"\"Short object representation for toytree.core.tree.ToyTree\"\"\"\n        return f\"&lt;toytree.ToyTree at {hex(id(self))}&gt;\"            \n\n    def _update(self) -&gt; None:\n\"\"\"Set and cache Node idxorder and coordinates.\n\n        idxorder traversal is used to fill the ToyTree._idx_dict to \n        make Nodes easily indexable. While doing this it also calculates\n        Node heights and spacing (x) and counts nnodes and ntips.\n        \"\"\"\n        # clear depth counters used to get heights during traversal\n        depths = {self.treenode: 0}\n\n        # queue starts with root children, and stack starts with root.\n        queue = list(self.treenode.children)\n        inner_stack = [self.treenode]\n        outer_stack = []\n\n        # traverse left then right subtrees to fill and pull from queue\n        while queue:\n            # get node from start of queue to proceed levelorder\n            node = queue.pop()\n\n            # set depth of this node from the root\n            depths[node] = depths[node.up] + node.dist\n\n            # if leaf add to output stack and update farthest depth\n            if node.is_leaf():\n                outer_stack.append(node)\n            else:\n                inner_stack.append(node)\n\n            # add node's children to the queue (left child on end)\n            queue.extend(node.children)\n\n        # get max_depth from root, height is measured relative to this.\n        max_depth = max(depths.values())\n\n        # clear idx cache and counter to be filled next\n        idx = 0\n        self._idx_dict.clear()\n\n        # return nodes in reverse order they were added to stack\n        while outer_stack:\n            node = outer_stack.pop()\n            node.height = max_depth - depths[node]\n            node.x = idx\n            node.idx = idx\n            self._idx_dict[idx] = node\n            idx += 1\n        self.ntips = idx\n\n        # return internal nodes.\n        while inner_stack:\n            node = inner_stack.pop()\n            node.height = max_depth - depths[node]            \n            node.x = sum(i.x for i in node.children) / 2            \n            node.idx = idx\n            self._idx_dict[idx] = node            \n            idx += 1\n        self.nnodes = idx\n\n    def get_node_coordinates(self) -&gt; pd.DataFrame:\n\"\"\"Return a DataFrame with Node coordinates for down-facing tree.\"\"\"\n        iter_coords = ((i.x, i.height) for i in tree)\n        return pd.DataFrame(data=iter_coords, columns=('x', 'y'))\n\n    def get_edges(self) -&gt; pd.DataFrame:\n\"\"\"Return a DataFrame with edges of the tree.\"\"\"\n        edges = ((i.idx, i.up.idx) for i in self if i.up)\n        return pd.DataFrame(data=edges, columns=(\"child\", \"parent\"))\n</code></pre> <p>The new <code>._update</code> function of the <code>Tree</code> class is now quite a bit more complex...</p>"},{"location":"chapter-1/1.x-exercises/","title":"Exercises","text":"<p>The following challenges are inteded to assess your comprehension of  major concepts in chapter 1. </p>"},{"location":"chapter-1/1.x-exercises/#binder-notebook","title":"Binder notebook","text":"<p>...</p>"},{"location":"chapter-1/1.x-exercises/#tree-thinking","title":"Tree thinking","text":""},{"location":"chapter-1/1.x-exercises/#tree-visualizations","title":"Tree visualizations","text":"<p>Use the <code>toytree</code> library to complete the following challenges...</p>"},{"location":"chapter-1/1.x-exercises/#node-and-tree-classes","title":"Node and Tree classes","text":"<ul> <li> <p>define a simple Python <code>Node</code> class and create a tree of five connected Node instances.</p> </li> <li> <p>...</p> </li> </ul>"},{"location":"chapter-1/1.x-exercises/#_1","title":"1.x exercises","text":""},{"location":"chapter-2/2.0-modeling-evolution/","title":"Wright-Fisher","text":""},{"location":"chapter-2/2.0-modeling-evolution/#under-construction","title":"Under Construction","text":""},{"location":"chapter-2/2.0-modeling-evolution/#learning-objectives","title":"Learning objectives","text":"<p>This chapter ...</p>"},{"location":"chapter-2/2.0-modeling-evolution/#modeling-evolution","title":"Modeling evolution","text":"<p>The previous chapter introduced trees as a type of data structure, discussing terminology and methods for using trees to understand and describe evolutionary history. In this chapter we will turn our focus to theoretical models underlying the case for treating evolution as a tree-like process, spanning from the scale of molecules to the entire tree of life.</p> <p>Generally, when we think of phylogenetic trees it invokes an image of  relationships among species, or perhaps even higher-level clades, such as  taxonomic families or orders. At this scale, the labels at the tips of a tree, such as Diptera or Arecaceae, are far-removed from the biological  sample from which data was collected to infer the tree. In fact, this is  very often the case. A label at the tip of a tree represents a hypothesis  for the history of a lineage -- a theoretical concept or model for  the idea of a cohesive population that has evolved through time.  Thus, even when doing something as simple as reading a  phylogeny, we are inherently making assumptions about a model of  how populations evolve.</p> <p>A less familiar type of phylogenetic tree is one that represents  evolutionary relationships among the actual units of heritable  information that descend from one generation to the next. At this scale the tips of a phylogenetic tree are in fact the biological samples for  which the relationships are being depicted. An example is a phylogeny of gene copies, also called a genealogy. </p>"},{"location":"chapter-2/2.0-modeling-evolution/#gene-copies","title":"Gene copies","text":"<p>As a diploid organism your genome exists in two copies, one inherited from each of your two parents. These two copies are likely not identical, having  accumulated mutations over time. Here the term copy is used somewhat  confusingly to refer to the fact that these units can replicate themselves and be inherited from one generation to the next. It is not a reference to whether or not they share mutations. In a population of size N there will exist 2N gene copies for any given gene. Here, similarly, the term gene  is also somewhat misleading, since we do not actually care in this context whether or not it is a coding or non-coding region of the genome. A gene  copy can simply be thought of as a haploid region of a genome.</p>"},{"location":"chapter-2/2.0-modeling-evolution/#genealogies","title":"Genealogies","text":"<p>A genealogy is a record of ancestor-descendant relationships. It is  similar to a phylogenetic tree, and often modeled as one, but in reality can include complex network-like relationships as well. Most people are familiar with the concept of genealogy as it relates to tracing  family trees. For example, a genealogy of your family would show that  you are descended from your two parents (one generation back), and that they are descended from your four grandparents (two generations back),  and on and on. Your siblings, cousins, uncles/aunts, and other relatives could be represented as well. This type of genealogy is a genealogy of individuals, and although it can be similar to a genealogy of gene copies at very short time scales, these two trees deviate significantly over time. ... The difference between a genetic and individual-level genealogy is  detailed in a later chapter.</p>"},{"location":"chapter-2/2.0-modeling-evolution/#genetic-genealogy","title":"Genetic genealogy","text":"<p>A genetic genealogy, in contrast to an individual-level genealogy, is a genealogy of gene copies for some region of a genome. Although there exists only one genealogy for you as an individual, your genome is composed of  millions of distinct genealogies of gene copies. This is because each  region of your genome can have a different genealogy from other regions,  and even within a region, your two gene copies will trace back different  histories. Each chromosome in an individual's genome is a mosaic of  recombined segments from its many different ancestors.</p> <p>For example, the two gene copies at gene A in an individual's genome may  come, respectively, from its father's father, and mother's father (i.e., the individual's two grandfathers). At gene B, by contrast, the two copies  came from its father's mother and mother's mother, respectively. Thus,  no information from either of the individual's grandmothers is present at  gene A, and no information from either of its grandfathers is present at  gene B. The gene copies at these two regions have different genealogical  histories.</p> <p> </p> Fig. 2.0.0 Ancestry of two gene copies at a single locus. <p>This process continues backwards in time. The gene copies that exist in each grandparent were also inherited from only a fraction of that  grandparent's ancestors. In fact, the probability that one of an individual's  ancestors continues to be one of its genetic ancestors -- by contributing at  least some genetic material to its genome -- decreases rapidly with the  number of generations back to that ancestor. References to some interesting  papers, etc. on this topic.</p>"},{"location":"chapter-2/2.0-modeling-evolution/#independent-assortment","title":"Independent assortment","text":"<p>Even if we make the simplifiying assumption that recombination is absent,  different chromosomes in a genome are still expected to have different  genealogical histories, since each is inherited independently of the other. For example, consider a diploid organism with two copies of chromosomes A  and B, labeled (A1, A2, B1, and B2). When this organism forms haploid gametes during reproduction, there is equal probability that a gamete will inherit either copy of either chromosome, such that A1B1 is just as likely as  A1B2, A2B1, or A2B2. This is called the law independent assortment.</p> <p>Remember Mendel's pea experiments? Well, that's where this idea comes from. The rule of segregation and independent assortment was not only an  interesting experiment for understanding overdominance in the phenotypes of  wrinkled peas, but rather, the fundamental finding of this work was that  genes get passed on to descendants as discrete units independently of one  another. This process turns out to be relevant to modeling genealogical  relationships of gene copies, where the genealogy of gene copies at one  gene in a genome can be completely independent of the genealogy for gene  copies at different genes in the same diploid organism's genome. The  distribution of different genealogies throughout a single genome, and among populations, is the focus of lessons in this chapter. </p>"},{"location":"chapter-2/2.0-modeling-evolution/#nested-hierarchy","title":"Nested hierarchy","text":"<ul> <li>A genealogy represents a special type of phylogenetic tree.</li> <li>Evolutionary relationships exist in a nested hierarchy. <ul> <li>haplotype genealogy nested within individual genealogies</li> <li>ind genealogies nested within population/species trees.</li> </ul> </li> <li>Higher-level phylogenetic trees are a model for the expected  distribution of genealogical trees...</li> </ul>"},{"location":"chapter-2/2.0-modeling-evolution/#effective-population-size","title":"Effective population size","text":"<p>One of the most challenging concepts in population genetics is that of  effective population size (\\(N_e\\)). This is not to be confused with the population census size, which is the number of individuals in a  population. </p> <p>The concept of effective population size was first developed by Sewall  Wright (1931, 1933) as a metric for describing the rate of genetic drift, or inbreeding. Specifically, it was developed in reference to populations evolving under a WF process, where an idealized population will  experience changes in allele frequencies over time due to only a single evolutionary force, genetic drift caused by a finite population size (\\(N_e\\)). </p> <p>The effective population is usually smaller than the actual population  census size, representing the effects of deviations from the assumptions  of an idealized population. In the WF process model, it is easy to  interpret \\(N_e\\), since it is equivalent to the census population size,  N. However, in more complex models, and especially in real populations,  \\(N_e\\) becomes a summary statistic for the impacts of many possible  evolutionary processes that violate the assumptions of an idealized  population, causing genetic drift and inbreeding at higher rates than would occur in a population of the same size if it were an idealized population. </p> <p>For example, an idealized population of census size N=10,000 will have  an effective population size of \\(N_e\\)=10,000. By contrast, a different  population of census size N=10,000 that experiences non-random mating may have an effective population size of \\(N_e\\)=6,000. This value can be interpreted to mean that the second population will experience genetic drift at the same rate as an idealized population of size N=6,000, even though it in fact contains 10,000 individuals.</p> <p>Review papers continue to be written on the subject of \\(N_e\\), and how it  should be interpreted, and the development of methods for measuring \\(N_e\\)  as a descriptor of evolution remain at the forefront of population genetics. Recent work includes methods for examining \\(N_e\\) as a variable metric  spatially across regions of genomes in a population, as well as for  estimating changes in \\(N_e\\) through time. As we will see, there are  also alternative statistical approaches for describing \\(N_e\\) based on  probabilities of coalescence, which we will discuss in the next lesson.</p>"},{"location":"chapter-2/2.0-modeling-evolution/#inference-and-truth","title":"Inference and Truth","text":"<ul> <li>A true genealogical history exists, but cannot be perfectly inferred.</li> <li>...</li> </ul>"},{"location":"chapter-2/2.0-modeling-evolution/#summary","title":"Summary","text":"<ul> <li>This was an introduction to what is to come in this chapter.</li> <li>...</li> </ul>"},{"location":"chapter-2/2.1-idealized-population/","title":"Modeling evolution: idealized populations","text":""},{"location":"chapter-2/2.1-idealized-population/#under-construction","title":"Under Construction","text":""},{"location":"chapter-2/2.1-idealized-population/#learning-objectives","title":"Learning objectives","text":"<p>By the end of this lesson you will:</p> <ul> <li>Know the assumptions that underlie an 'idealized population'.</li> <li>Understand the concept of Hardy-Weinberg equilibrium. </li> </ul>"},{"location":"chapter-2/2.1-idealized-population/#genetic-variation","title":"Genetic variation","text":"<p>Consider a population that has variation at a single gene (A) in the form of two alleles (A1 and A2) which differ by a single mutation. We may be  interested in the frequency of the two alleles in this population; how  much more frequent does one occur relative to the other? If we assume our diploid population is of size N, then there are 2N gene copies, every one  of which exists as either an A1 or A2 allele. How can we best measure  the genetic diversity of this population? How many samples do we need? And  what can we learn about a population by measuring its genetic diversity at  a single gene? These types of questions are typically considered to be  within the discipline of population genetics, a field that has traditionally been treated as distinct from phylogenetics. However, as we will see,  developments in recent decades have significantly bridged a gap between these fields. Major questions in both disciplines, such as predicting changes in allele frequencies, or estimating divergence times between  species, can both be modeled as an outcome of genealogical (tree-based) processes.</p> <p>The term allele above refers to the state of information in a gene  copy, i.e., its haplotype, which arose as a consequence of mutations  throughout its genealogical history. So far, we have considered only two alleles in this population. If a new mutation were to arise at a single  copy of this gene, then we could also consider a third allele, such as A3;  but for simplicity, we will assume for now that only two alleles exist  in the population. In fact, these types of simplifying assumptions are  the topic of this lesson.</p>"},{"location":"chapter-2/2.1-idealized-population/#genetic-variation-and-genealogies","title":"Genetic variation and genealogies","text":"<p>Throughout this chapter we will reinforce a clear distinction between  relatedness of gene copies, which is a reflection of their  usually unobservable genealogical relationships, versus the  identity of gene copies, such as their allelic state, which is an  observable/measurable character that arose as a consequence of  mutations occurring throughout their genealogical history.</p> <p>Our example above is a clear case of this distinction. All 2N gene copies share a genealogy in which some are more closely related to others, however, because there is only a single mutation in the population, there is at most  enough information to group these gene copies into two groups, and certainly not enough information to infer their full genealogy. </p> Simulate and plot a genealogy and SNP <pre><code>import ipcoal\n\n# simulate a coalescent genealogy with a single SNP\nmod = ipcoal.Model(Ne=1000, nsamples=10)\nmod.sim_snps(1)\nmod.draw_genealogy();  # toytree.utils.tree_sequence().draw_tree(idx=0);\n</code></pre> <p>Drawing of a genealogy with a single mutation.</p>"},{"location":"chapter-2/2.1-idealized-population/#population-genetics","title":"Population genetics","text":"<p>Let's return to our example of genetic variation in a population. A primary goal of population genetics is to develop models of evolution within populations that can be used to predict changes in allele frequencies  over time. Such models can be discrete or continuous in time, and can  include parameters to describe how individuals live, die, reproduce, and  interact with each other and their environment. However, as we will see, there is a benefit to constructing simple mathematical models to describe evolution in populations, models that include as few of processes and  parameters as possible, while still being informative. </p> <p>In many cases, these simple models can be incredibly powerful for  describing evolution. Here we will focus on two genealogical models of evolution within populations, the Wright-Fisher (WF) process, and  the Coalescent. The latter is a mathematical approximation of the former, and so we will first focus on the WF process. </p>"},{"location":"chapter-2/2.1-idealized-population/#idealized-populations","title":"Idealized populations","text":"<p>Amazingly, much of the foundational work in population genetics was developed  before we even knew about DNA, and involved primarily developing  statistical models that could convert verbal descriptions of evolution  occurring in populations into probability statements. An important  basis for this was the application of Mendel's theory of particulate  (non-blending) inheritance to describe gene copies as discrete units that are passed from generation to generation, where the probability that particular gene copies occur more or less in the next generation is a manifestation of allele frequencies changing over time.</p> <p>To formalize this process into a probabilistic model we need to make  some assumptions about populations.  An idealized population refers to a theoretical population that meets  a particular set of unrealistic but useful assumptions. Most notably,  that it is infinite in size, that it has discrete non-overlapping  generations, and that the individuals within it are randomly mating.  As we will see, these and other assumptions can be relaxed to allow  for further insights into their effect on the model. Overall, the  purpose of these population genetic models is to understand  how and why allele frequencies (i.e., the relative abundance of A1 versus  A2) change over time.</p>"},{"location":"chapter-2/2.1-idealized-population/#hardy-weinberg-expectation","title":"Hardy-Weinberg Expectation","text":"<p>The Hardy-Weinberg equilibrium is a statement that the frequencies of  alleles (variants at a gene) and genotypes (combinations of alleles within diploid individuals at a gene) will remain constant through time in  an idealized population in the absence of  selection, mutation, migration, and genetic drift. </p> <p>This is not actually a super surprising statement in terms of statistics,  but more so in terms of evolution. It is identifying that these processes are fundamental to explaining why allele frequencies change over time, and also,  that the process of segregation of alleles during Meiosis (i.e., Mendelian Inheritance) is not expected to change allele frequencies on its own.  The concept of Hardy Weinberg equilibrium is demonstrated in the figure below: (1) given some starting genotype frequencies; (2) we can predict the frequency of their gametes by assuming equal fitness among genotypes; (3) we can then also predict the probability of formation of new diploids by assuming random mating of gametes; (4) which leads to a new population of diploids  at new genotype frequencies.</p> <p> </p>"},{"location":"chapter-2/2.1-idealized-population/#computing-hw","title":"Computing HW","text":"<p>In the first cell of the figure above the population is initially not in  Hardy-Weinberg equilibrium. We can tell this by looking at the genotype  frequencies; there appears to be a deficit of heterozygotes compared to  what you would expect if the population were randomly mating. But what is  the null expectation for the number of heterozygotes that should exist?  Well, this is something that Hardy-Weinberg can tell us. A population is  expected to reach HW equilibrium after just a single generation, no matter  what its starting allele frequencies are, if it meets the assumptions of  an idealized population (i.e., infinite in size and randomly mating). </p> <p>More specifically, after a single generation the genotype frequencies  (e.g., A1A1, A1A2, and A2A2) will reach HW equilibrium, despite the fact  that allele frequencies (e.g., A1 and A2) do not change. In other words,  the only thing that is changing is the way in which gene copies are  grouped together into diploids.</p> <p>This expectation can be computed exactly using probability statements implemented in Python. Below we will compute the frequencies for each step in the figure above. (We will use the same genotype frequencies  but change the allele names to A and B, rather than A1 and A2 to make  it easier to read).</p> <pre><code>import numpy as np\nimport toyplot\n</code></pre> initial diploid genotype frequencies<pre><code>AA = 0.3\nAB = 0.0\nBB = 0.7\n</code></pre> <p>The genotype frequencies of the three possible genotypes are initially  0.3, 0.0, and 0.7. Each AA parent has two A alleles, each AB parent has  one A and one B allele, and each BB parent has two B alleles. We describe the genotypes in terms of frequencies, as opposed to total numbers, since  the population is infinite in size.</p> <p>Based on these frequencies we can calculate the relative frequency of A  and B haploid gametes that will be produced by these diploids. We can label these frequencies \\(p\\) and \\(q\\), where \\(p\\) is computed as the sum of the frequency of AA homozygotes plus \u00bd the frequency of AB heterozygotes;  \\(q\\) is computed as the sum of the frequency of BB homozygotes plus \u00bd  the frequency of AB heterozygoes.</p> <p>haploid gametes generated by diploids (given model assumptions)<pre><code>p = AA + (AB / 2)\nq = BB + (AB / 2)\nprint(p, q)\n</code></pre> <pre><code># 0.3 0.7\n</code></pre></p> <p>You might ask, but what if some of the diploids produced more alleles than others? Well, for that to happen would be a manifestation of either drift  or selection, both of which we are assuming to be absent from this model.  This is key to remember.</p> <p>Now that we know the frequency of alleles in the gametes we can calculate  the frequency of genotypes formed in the next generation by assuming that  populations are randomly mating. AA genotypes are formed by the joining of two A gametes, heterozygotes by an A and B gamete, and BB genotypes by the joining of two B gametes. So the probability of AA individuals is the  probability of sampling \\(p\\) twice (\\(p\\) * \\(p\\)), heterozygotes are the  probability of sampling \\(p\\) and \\(q\\) (or \\(q\\) and \\(p\\)), and BB homozygotes are the probability of sampling \\(q\\) twice (\\(q\\) * \\(q\\)). Once again, note the  importance of the assumptions underlying our idealized population for  this model prediction.</p> <p>Genotype frequencies of *next* generation of diploids.<pre><code>newAA = p * p\nnewAB = 2 * p * q\nnewBB = q * q\nprint(newAA, newAB, newBB)\n</code></pre> <pre><code># 0.09 0.42 0.48999999999999994\n</code></pre></p> <p>Finally, we can put this code together and recreate the plot from above,  here using <code>toyplot</code>.</p> Code to produce HW plot. <pre><code>import toyplot\nfrom typing import Dict\n\nclass HardyWeinbergPlot:\n    def __init__(self, aa: float, bb: float, ab: float, **kwargs):\n\n        # get frequencies\n        self.aa = aa\n        self.bb = bb\n        self.ab = ab\n        self.p = aa + (ab / 2)\n        self.q = bb + (ab / 2)\n        self.new_aa = self.p * self.p\n        self.new_bb = self.q * self.q\n        self.new_ab = self.p * self.q * 2\n\n        # create canvas and dict to store axes\n        self.canvas: toyplot.Canvas = toyplot.Canvas(\n            width=kwargs.get(\"width\", 1000), \n            height=kwargs.get(\"height\", 250),\n            style={\"background-color\": \"white\"},\n        )\n        self.axes: Dict[\"Cartesian\"] = {}\n\n        # generate the plot\n        self._subplot1()\n        self._subplot2()\n        self._subplot3()\n        self._subplot4()\n\n    def _subplot1(self):\n        self.axes[0] = self.canvas.cartesian(grid=(1, 4, 0))\n        self.axes[0].bars([0, 1, 2], [1, 2, 3], [self.aa, self.ab, self.bb])\n        self.axes[0].text([0.5, 1.5, 2.5], [0.05, 0.05, 0.05], [self.aa, self.ab, self.bb], color='white', style={\"font-size\": 16})\n        self.axes[0].label.text = \"(1) Initial geno frequencies\"\n        self.axes[0].label.offset = 20\n        self.axes[0].label.style['font-size'] = 16\n        self.axes[0].x.ticks.locator = toyplot.locator.Explicit([0.5, 1.5, 2.5], labels=[\"AA\", \"AB\", \"BB\"])\n        self.axes[0].x.ticks.labels.style['font-size'] = 14\n        self.axes[0].x.ticks.show = True\n        self.axes[0].y.label.text = \"Frequency\"\n        self.axes[0].y.ticks.show = True\n        self.axes[0].y.label.style['font-size'] = 14\n\n    def _subplot2(self):\n        self.axes[1] = self.canvas.cartesian(grid=(1, 4, 1))\n        self.axes[1].bars([0, 3], [2, 5], [self.p, self.q])\n        self.axes[1].text([1, 4], [0.05, 0.05], [self.p, self.q], color='white', style={\"font-size\": 16})\n        self.axes[1].label.text = \"(2) Gamete frequencies\"\n        self.axes[1].label.offset = 20\n        self.axes[1].label.style['font-size'] = 16\n        self.axes[1].x.ticks.locator = toyplot.locator.Explicit([1, 4], labels=[\"A\", \"B\"])\n        self.axes[1].x.ticks.labels.style['font-size'] = 14\n        self.axes[1].x.ticks.show = True\n        self.axes[1].y.ticks.locator = toyplot.locator.Extended(only_inside=True)\n        self.axes[1].y.ticks.show = True\n        self.axes[1].y.label.text = \"Frequency\"\n        self.axes[1].y.label.style['font-size'] = 14\n\n    def _subplot3(self):\n        self.axes[2] = self.canvas.table(rows=2, columns=2, grid=(1, 4, 2))\n        self.axes[2].cells.cell[0, 0].data = round(self.new_aa, 2)\n        self.axes[2].cells.cell[0, 1].data = round(self.new_ab, 2)\n        self.axes[2].cells.cell[1, 0].data = round(self.new_ab, 2)\n        self.axes[2].cells.cell[1, 1].data = round(self.new_bb, 2)\n        self.axes[2].cells.grid.hlines[...] = \"single\"\n        self.axes[2].cells.grid.vlines[...] = \"single\"\n        self.axes[2].body.gaps.columns[...] = 10\n        self.axes[2].body.gaps.rows[...] = 10\n\n        # style the axes labels for subplot 3\n        axes_a = self.canvas.cartesian(grid=(1, 4, 2))\n        axes_a.x.label.text = \"A                    B\"\n        axes_a.y.label.text = \"A                    B\"\n        axes_a.y.label.offset = 0\n        axes_a.x.label.offset = 0\n\n        axes_b = self.canvas.cartesian(grid=(1, 4, 2))\n        axes_b.x.label.text = \"Paternal gametes (sperm)\"\n        axes_b.y.label.text = \"Maternal gametes (eggs)\"\n        axes_b.label.text = \"(3) Reproduction\"\n        axes_b.label.style['font-size'] = 16\n\n        axes_b.x.label.style['font-weight'] = 'normal'\n        axes_b.x.label.style['font-size'] = '16px'\n        axes_b.y.label.style['font-weight'] = 'normal'\n        axes_b.y.label.style['font-size'] = '16px'\n        axes_b.label.offset = 20\n        axes_b.y.label.offset = 20\n        axes_b.x.label.offset = 20\n\n        for ax in (axes_a, axes_b):\n            ax.x.ticks.labels.show = False\n            ax.x.spine.show = False\n            ax.y.ticks.labels.show = False\n            ax.y.spine.show = False\n\n    def _subplot4(self):\n        self.axes[3] = self.canvas.cartesian(grid=(1, 4, 3))\n        self.axes[3].bars([0, 1, 2], [1, 2, 3], [self.new_aa, self.new_ab, self.new_bb])\n        self.axes[3].text([0.5, 1.5, 2.5], [0.05, 0.05, 0.05], np.round([self.new_aa, self.new_ab, self.new_bb], 2), color='white', style={\"font-size\": 16})\n        self.axes[3].label.text = \"(4) HW geno frequencies\"\n        self.axes[3].label.offset = 20\n        self.axes[3].label.style['font-size'] = 16\n        self.axes[3].x.ticks.locator = toyplot.locator.Explicit([0.5, 1.5, 2.5], labels=[\"AA\", \"AB\", \"BB\"])\n        self.axes[3].x.ticks.labels.style['font-size'] = 14\n        self.axes[3].x.ticks.show = True\n        self.axes[3].y.label.text = \"Frequency\"\n        self.axes[3].y.label.style['font-size'] = 14\n        self.axes[3].y.ticks.show = True\n\n# example\nHardyWeinbergPlot(0.3, 0.7, 0.0).canvas\n</code></pre> <p> </p>"},{"location":"chapter-2/2.1-idealized-population/#binomial-sampling","title":"Binomial sampling","text":"<p>One reason I stated in the beginning that the Hardy-Weinberg concept is not surprising from a statistical viewpoint is that it can be described by a  very simple and common model in statistics, as a binomial sampling problem. A Binomial distribution is used in statistics to model the probability of  binary outcomes (e.g., True vs. False). For a diploid organism, we can  describe the three possible genotypes (A1A1, A1A2, and A2A2)  at a locus with two alleles as the probability of sampling the A1 allele or not sampling the A1 allele in two independent trials (we do two  trials because a diploid organism has two allele copies). Below this  is demonstrated. </p> <p><pre><code># Example of random sample from a binomial distribution for 1 random \n# outcome (0 or 1) repeated 20 times, where prob of sampling a 1 is p=0.3.\nnp.random.binomial(n=1, p=0.3, size=20)\n</code></pre> <pre><code># array([1, 0, 1, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 1, 0, 0, 1, 0, 1])\n</code></pre></p> <p><pre><code># Similarly, we can draw two random samples for each trial and get \n# the sum (0, 1, or 2), repeated 20 times.\nnp.random.binomial(n=2, p=0.3, size=20)\n</code></pre> <pre><code># array([2, 0, 0, 2, 0, 1, 1, 0, 2, 1, 0, 0, 1, 1, 0, 1, 0, 0, 0, 2])\n</code></pre></p> <p>By sampling a very large number of trials, in which each results in 0, 1, or 2 A's being sampled, we can calculate the expected frequency of each genotype by dividing by the total number of trials. As you can see, the result is the same frequencies that are predicted by Hardy Weinberg. The HW expectation is essentially a way of describing a set of assumptions about a population such that the expected genotype frequencies can be described the same as  sampling gametes from a Binomial distribution.</p> <p><pre><code># OK, now let's use this to sample a large number of diploid samples,\n# these look just like above, a collection of 0s, 1s and 2s.\nnew_genotypes = np.random.binomial(n=2, p=0.3, size=100000)\n\n# and calculate genotype frequencies \nBB = sum(new_genotypes == 0) / len(new_genotypes)\nAB = sum(new_genotypes == 1) / len(new_genotypes)\nAA = sum(new_genotypes == 2) / len(new_genotypes)\nprint(AA, AB, BB)\n</code></pre> <pre><code># 0.08898 0.42062 0.4904\n</code></pre></p>"},{"location":"chapter-2/2.1-idealized-population/#deviating-from-hardy-weinberg","title":"Deviating from Hardy Weinberg.","text":"<p>You'll notice that the results above are close to the expectation we  calculated earlier, but not exactly the same. This is because even though we sampled a very large number of random samples, there is still a small  amount of sampling error that can cause slight deviations from the  expectation. This is an example of genetic drift! And it brings us to  our next subject.</p>"},{"location":"chapter-2/2.1-idealized-population/#sampling-error-is-genetic-drift","title":"Sampling error is genetic drift","text":"<p>The binomial sampling method allows us to approximate the change in allele  frequencies over multiple generations that is expected to occur by genetic  drift in a finite sized population. It is important to note that by using  finite populations sizes (i.e., allowing for drift) we have violated the  assumptions of the Hardy-Weinberg model, and thus both genotype and allele frequencies are expected to change each generation. Our model now has an  additional parameter, N, which we can modify and see its effect on the  results. </p> <p>Below is the change in genotype frequencies after one generation when the  population size is finite. We can see that they are still very close to the  HW expectation. When N is larger it is closer to the expectation, when it  is smaller the genotype frequencies deviate further from expectations.</p> <p><pre><code># model the allele frequencies after one generation of sampling in a finite population\nN = 1000\np = 0.3\n\n# and calculate genotype frequencies \nnew_genotypes = np.random.binomial(n=2, p=0.3, size=2*N)\nBB = sum(new_genotypes == 0) / len(new_genotypes)\nAB = sum(new_genotypes == 1) / len(new_genotypes)\nAA = sum(new_genotypes == 2) / len(new_genotypes)\nprint(AA, AB, BB)\n</code></pre> <pre><code># 0.0965 0.4065 0.497\n</code></pre></p>"},{"location":"chapter-2/2.1-idealized-population/#allele-frequencies","title":"Allele frequencies","text":"<p>When we simulate this process over many generations even small fluctuations each generation can lead to large changes over time. Genetic drift is a  random process (just random sampling!) so in each generation an allele may  increase or decrease. </p> <p>Here we can see the change in allele frequency of the p allele in 8 replicate simulations from the same starting frequency (0.3). Sometimes it increases by drift, sometimes in decreases. This simulation uses the binomial sampling method described above.</p> Code to simulate and plot a random walk <pre><code># model allele frequency change over 500 generations in population of size 1000 diploids\nN = 1000\np = 0.3\nngens = 500\nseed = 123\nnp.random.seed(seed)\n\n# calculate allele frequencies through time\nafreq = np.zeros((8, ngens))\nafreq[:, 0] = p\nfor rep in range(8):\n    for gen in range(ngens - 1):\n        genotypes = np.random.binomial(n=2, p=afreq[rep, gen], size=2*N)\n        freqB = genotypes.sum() / (len(genotypes) * 2)\n        afreq[rep, gen + 1] = freqB\n\n# plot the replicates\nimport toyplot\ncanvas = toyplot.Canvas(width=500, height=325)\naxes = canvas.cartesian(xlabel=\"Time (generations)\", ylabel=\"Allele frequency (p)\")\naxes.plot(afreq.T);\naxes.x.ticks.show = True\naxes.y.ticks.show = True\naxes.label.text = \"Genetic drift\"\n</code></pre> <p> </p>"},{"location":"chapter-2/2.1-idealized-population/#rate-of-genetic-drift","title":"Rate of genetic drift","text":"<p>By changing the population size parameter N in the code above and running multiple iterations we can gain an intuitive sense for the relationship  between population size and rate of fixation of alleles in this model --  the rate of genetic drift. If there are more total gene copies in a population, then there is a greater chance that a gene copy of an allele in the previous generation will be inherited in the next generation. In fact, the probability of this is <code>1 / 2N</code>, and thus the probability that a specific gene copy will not be replicated to the next generation is <code>1 - 1 / 2N</code>.  In the coming lessons we will return to this probability statement to  show its many applications and extensions.</p>"},{"location":"chapter-2/2.1-idealized-population/#why-hw-is-relevant-to-phylogenetics","title":"Why HW is relevant to phylogenetics","text":"<p>An idealized population is expected to evolve to Hardy-Weinberg equilibrium after a single generation of random mating, given a number of assumptions  about the population. This provides a null model from which those assumptions can be relaxed, one at a time, to examine their effects on the evolution of populations. The first assumption that tends to be relaxed is that of an  infinite population size. In the next lesson, you will see how a model of evolution in finite populations leads to the creation of a genealogical  pattern connecting ancestors and descendants from one generation to the next. As we move into this genealogical realm, keep in mind the assumptions that  still underlie our model of evolution within populations. These assumptions are inherent throughout most phylogenetic models as well,  where one or few samples are expected to sufficiently represent a population or species in a tree, based on an implicit model of how populations evolve.</p>"},{"location":"chapter-2/2.2-wright-fisher/","title":"Wright-Fisher","text":""},{"location":"chapter-2/2.2-wright-fisher/#under-construction","title":"Under Construction","text":""},{"location":"chapter-2/2.2-wright-fisher/#learning-objectives","title":"Learning objectives","text":"<p>By the end of this lesson you will be familiar with:</p> <ol> <li>The Wright-Fisher (WF) process model.</li> <li>Assumptions underlying this model.</li> <li>calculating the probability two gene copies share a parent.</li> <li>extensions of this probabilistic thinking to studying genealogies.</li> </ol>"},{"location":"chapter-2/2.2-wright-fisher/#wright-fisher-process","title":"Wright-Fisher Process","text":"<p>The Wright-Fisher process is considered one of the simplest models in  population genetics. Compared to an idealized population, in which  allele frequencies are always in HW equilibrium, and do not change,  the WF process by default relaxes at least one assumption: population  sizes are not infinite.</p> <p>The introduction of finite population sizes allows for allele frequencies to change over time, as genetic drift will cause an allele to randomly  become either entirely fixed, or lost with the rate of fixation being a  function of the population size. In this lesson we will write code to  simulate and visualize a population evolving under a WF process, and to understand how population size affects not only the rate of genetic drift, but also the genealogical relationships among samples, and ultimately, the concept that these two results are linked. Before we proceed, however, it is important to discuss some terminology.</p>"},{"location":"chapter-2/2.2-wright-fisher/#visualizing-the-wf-process","title":"Visualizing the WF process","text":"<p>To help understand WF models and their connection to genealogies it is helpful to visualize stochastic outcomes of a WF process. The following visualizations are created using <code>toyplot</code>, and you can learn more about the visualization code in the next [code lesson]. Here we will simply use the <code>WrightFisherPlot</code> class from the dropdown below to generate and draw WF process outcomes. This takes a <code>seed</code> parameter for a random number generator to produce different outcomes. </p> WF process visualization code using toyplot <pre><code>from typing import Optional, Dict, List, Union\nimport numpy as np\nimport toyplot\n\nclass WrightFisherPlot:\n    def __init__(self, time=20, popsize=20, width: int=500, height: int=500, seed: Optional[int]=None):\n        self.rng: np.random.Generator = np.random.default_rng(seed)\n        self.grid: np.ndarray = np.arange(popsize * 2 * time).reshape((time, popsize * 2))\n        self.edges: np.ndarray = None\n        self.canvas: toyplot.Canvas = toyplot.Canvas(width=width, height=height)\n        self.axes: toyplot.coordinates.Cartesian = None\n        self._setup_axes()\n        self.marks: Dict[str, 'toyplot.Mark'] = {}\n\n        # get node coordinates\n        ys, xs = np.where(self.grid &gt; -1)\n        self.coords = np.column_stack([xs, ys])\n\n    def _setup_axes(self):\n        # setup the canvas and axes\n        self.axes = self.canvas.cartesian(xshow=False, ylabel=\"Time (generations)\", margin=70, padding=25)\n        self.axes.y.ticks.labels.style[\"font-size\"] = 14\n        self.axes.y.label.style[\"font-size\"] = 16\n        self.axes.y.label.offset = 30\n        self.axes.y.ticks.locator = toyplot.locator.Extended()\n        self.axes.y.ticks.show = True\n\n    def add_haploids(self, **kwargs):\n\"\"\"Add circle marks for gene copies.\"\"\"\n        style = {\n            \"marker\": \"o\", \n            \"color\": \"white\", #toyplot.color.Palette()[1]\n            \"size\": self.canvas.width / self.grid.shape[1] / 7.5,\n            \"mstyle\": {\"stroke\": \"black\", \"stroke-opacity\": 0.75, \"stroke-width\": 1.5},\n        }\n        style.update(kwargs)\n        self.marks['haploids'] = self.axes.scatterplot(\n            self.coords[:, 0], self.coords[:, 1], \n            **style,\n        );\n\n    def add_diploids(self):\n\"\"\"Adds a rectangle around pairs of gene copies to represent a diploid individual.\"\"\"\n        self.marks['diploids'] = self.axes.rectangle(\n            self.coords[:, 0][::2] - 0.25,\n            self.coords[:, 0][::2] + 1.25, \n            self.coords[:, 1][::2] - 0.25,\n            self.coords[:, 1][::2] + 0.25,\n            style={\"fill\": \"lightgrey\", \"stroke\": \"grey\", \"stroke-opacity\": 0.75, \"stroke-width\": 1.5},\n        );\n\n    def add_lines(self, sort: bool=True, **kwargs):\n\"\"\"Adds lines from gene copies to randomly sampled parent gene copies each generation.\n        \"\"\"\n        # iterate over each generation adding pairs of node indices\n        for gen in range(0, self.grid.shape[0] - 1):\n            # children idxs span from left to right\n            lower_idxs = self.grid[gen]\n\n            # randomly sample parent idxs (some have many children, some none)\n            upper_idxs = self.rng.choice(self.grid[gen + 1], size=self.grid[gen + 1].size, replace=True)\n\n            # get sorting index for the upper idxs\n            if sort:\n                order = np.argsort(upper_idxs)\n            else:\n                order = np.arange(upper_idxs.size)\n\n            # update array of edges\n            iedges = np.column_stack([lower_idxs, upper_idxs[order]])\n            if self.edges is not None:\n                self.edges = np.concatenate([self.edges, iedges])\n            else:\n                self.edges = iedges\n\n        # style the graph\n        style = {\"vlshow\": False, \"ecolor\": \"black\", \"ewidth\": 1.5, 'vsize': 0, 'estyle': {}}\n        style.update(kwargs)\n\n        # add graph lines from lower_idxs to upper_idxs, using coordinates for all\n        self.marks['genealogy'] = self.axes.graph(\n            self.edges,\n            vcoordinates=self.coords[sorted(np.unique(self.edges))],\n            **style,\n        );\n\n    def add_sampled_lines(self, samples: Union[int, List[int]], **kwargs):\n\"\"\"Add sampled genealogy lines from N random samples, or a list of sampled indices.\"\"\"   \n        if isinstance(samples, int):\n            nsample = min(samples, self.grid.shape[0])\n            samples = list(self.rng.choice(self.grid[0], size=samples, replace=False))          \n\n        # base styles for the graph\n        style = {\"vlshow\": False, \"ecolor\": toyplot.color.Palette()[0], \"ewidth\": 2, 'vsize': 0, 'estyle': {}}\n        style.update(kwargs)\n\n        # get selected edges to show\n        tracked = samples.copy()\n        for e in self.edges:\n            if e[0] in tracked:\n                tracked.append(e[1])\n\n        # subset the edges to graph\n        mask = np.isin(self.edges[:, 0], tracked)\n        edges = self.edges[mask]\n\n        # apply unique color to coalescent events\n        if 'vcolor' not in style:\n            vcolors = []\n            vmarkers = []\n            for v in sorted(np.unique(edges)):\n                if sum(edges[:, 1] == v) &gt; 1:\n                    vcolors.append('yellow')\n                    vmarkers.append(\"s\")\n                else:\n                    vcolors.append('black')\n                    vmarkers.append(\"o\")\n            style.update({\n                'vcolor': vcolors,\n                'vstyle': {'stroke': 'black', 'stroke-width': 2},\n                'vmarker': vmarkers,\n            })\n\n        # add graph lines from lower_idxs to upper_idxs, using coordinates for all\n        self.marks['genealogy'] = self.axes.graph(\n            edges,\n            vcoordinates=self.coords[sorted(np.unique(edges))],\n            **style,\n        );\n</code></pre>"},{"location":"chapter-2/2.2-wright-fisher/#simulating-wf-process","title":"Simulating WF process","text":"<p>A WF process can be simulated quite easily. It is a discrete-time process where each generation 2N haploid gene copies exist in a population of  census size N. Because the population is assumed to be randomly mating we can randomly assign haploid gene copies to be grouped into diploid  individuals. This grouping has no effect on how the model operates  unless some other model assumptions were to be relaxed, and is thus only for visualization purposes. To simulate one generation of the WF process  one needs only to create a new generation of 2N haploid copies and to  randomly 2N copies, with replacement, from the previous generation to serve as their parents. </p> <p>The result of this random mating process, played out over multiple  generations, looks like the plot below. The process gives rise to a  genealogy of gene copies. Lines are drawn to connect gene copies in each generation from parent to offspring. Grey rectangles represent diploid  individuals, which contain two gene copies, represented by red circles.</p> <pre><code># example WF plot\nwf = WrightFisherPlot(seed=123, time=11, popsize=10, width=700, height=500)\nwf.add_diploids()\nwf.add_lines(sort=False)\nwf.add_haploids(color=\"red\", size=8)\n</code></pre> <p> </p> Fig. 2.2.0. Wright-Fisher process."},{"location":"chapter-2/2.2-wright-fisher/#interpreting-wf-genealogies","title":"Interpreting WF genealogies","text":"<p>This process is much easier to comprehend when the edges are sorted so that they are easier to read. Remember, however, that regardless of this sorting for visualization purposes, that the parent copy of each gene copy is still  being randomly sampled each generation. This visualization thus retains the same probability of a gene copy leaving descendants to the next generation,  but is biased in the appearance of greater selfing (one or both copies in an individual ending up together in an individual in the next  generation). Thus the outlines of the diploid individuals could be hidden at this point, after sorting the edges, to be more accurate.</p> <p>Time in this model flows from top to bottom, such that the gene copies at  time=0 represent the present, and the ancestors of these gene copies,  as well as other gene copies that did not leave descendants, exist in past generations (gens 1 - 11 in this visualization).</p> <pre><code># example WF plot with sorted edges for visualization\nwf = WrightFisherPlot(seed=123, time=11, popsize=10, width=700, height=500)\nwf.add_diploids()\nwf.add_lines(sort=True)\nwf.add_haploids(color=\"red\", size=8)\n</code></pre> <p> </p> Fig. 2.2.1. WF process with edges sorted for visualization. <p>Understanding the flow of time in these diagrams is very important, and  can sometimes be challenging, since different authors may present the same type of figure flowing top to bottom, or bottom to top. Fortunately, there is a simple trick to easily identify the flow of time, which is to identify the direction in which every node has an edge flowing. That direction will be backwards in time. This is because every gene copy has an ancestor,  but not every gene copy will leave descendants. The latter outcome is  a consequence of genetic drift, where a random sampling process will cause some gene copies to leave multiple descendants, while others will leave none.</p> <p>The plot below zooms in on just the final three generations of a WF process simulation. You can see that every gene copy has an edge pointing up (backwards in time), but many gene copies do not have an edge pointing down.</p> <p>As we said earlier, mating occurs randomly in this model, without regard to the way in which gene copies are grouped inside of diploid individuals.  Consequently, it is possible for odd mating strategies to occur, such as  selfing.  </p> <p>In the figure below, generated with the random seed 123, look at the  first two individuals from the left in generation 0. The first  inherits the same two gene copies that were present in an  individual in the previous generation. The second inherits two copies of  a single gene copy that was present in an individual in the previous  generation. The first is a representation of diploid selfing, and the  second a form of haploid selfing. This visualization in fact has a greater representation of selfing that would be expected under random mating, since the edges are sorted for visualization purposes. </p> <p>Although this represents a form of inbreeding, it would be an expected  level of inbreeding in a population of this effective population size,  if it was generated by random mating. A non-random mating strategy, by  contrast, may lead to more or less inbreeding than this expectation,  by perhaps preventing selfing, or incorporating behavior or geography  into mating. The simple WF process thus provides a null expectation  against which to compare.</p> <pre><code># example WF plot with sorted edges for visualization\nwf = WrightFisherPlot(seed=123, time=3, popsize=10, width=700, height=300)\nwf.add_diploids()\nwf.add_lines(sort=True)\nwf.add_haploids(color=\"red\", size=8)\n</code></pre> <p> </p>"},{"location":"chapter-2/2.2-wright-fisher/#genealogy-of-samples","title":"Genealogy of samples","text":"<p>A consequence of this simple discrete random sampling process, repeated  over multiple generations, is that any gene copy that exists at the  present can trace back a tree-like genealogical history with any other  gene copy at the present. As an example, we can randomly sample 5 gene  copies at the present and focus on their individual ancestries. As we  can see, they each trace back some number of generations before they  eventually share a common ancestor; an ancestral gene copy from which  they are all descended. </p> <p>This is demonstrated below. Here we sample 6 gene copies in total, coming from 3 diploid individuals (which we'll refer to as individuals 1, 2, and 3,  from left to right), which are shown in bold compared to unsampled gene  copies and their ancestors. The common ancestors of sampled gene copies are highlighted as yellow squares. All of the 6 gene copies that we sampled in this scenario coalesce into a single common ancestor gene copy at  time=16 (16 generation back from the present). The two gene copies in  individuals 1 and 3 each share a MRCA just one generation back from the present. However, the two gene copies in individual 2 do not share a  common ancestor until generation 12. In fact, one of the gene copies from this individual coalesces with the common ancestor of the gene copies of individual 1 long before it coalesces with the other gene copy present in the same individual.</p> <pre><code># example WF plot with sampled tips genealogy\nwf = WrightFisherPlot(seed=444, time=21, popsize=10, width=700, height=600)\nwf.add_diploids()\nwf.add_lines(sort=True, eopacity=0.25)\nwf.add_sampled_lines(samples=[0, 1, 10, 11, 18, 19], ecolor=\"black\", ewidth=2.5, vsize=10)\nwf.add_haploids(color=\"black\", size=5, opacity=0.25)\n</code></pre> <p> </p> Fig. 2.2.3 Coalescence in a WF process."},{"location":"chapter-2/2.2-wright-fisher/#coalescence","title":"Coalescence","text":"<p>Sewall Wright noted that in a finite population evolving under a WF process the probability that two random gene copies will share a common ancestor  in the previous generation is <code>1/2N</code>, since there are 2N gene copies in  the population. This type of event, where two descendant gene copies merge into a common ancestor, when viewed backwards in time, is termed a  coalescence. It turns that this view of population histories, in the form of probabilistic statements about common ancestry, can be a very powerful way to describe evolution in populations. In fact, an entire statistical framework has been developed to study populations based on probabilistic expectations for the time and its variance until  some number of samples coalesce, called Coalescent Theory. This is the  subject of the next lesson.</p>"},{"location":"chapter-2/2.2-wright-fisher/#summary","title":"Summary","text":"<ol> <li>A Wright-Fisher process, or model, is a discrete-time process of  reproduction in an idealized population of finite size over multiple generations.</li> <li>Interpreting a WF-process plot requires understanding the direction  of time, and which gene copies are ancestors or descendants of others.</li> <li>The WF process gives rise to genealogical relationships among gene copies. </li> <li>All gene copies in a population will eventually coalescent to a common ancestor. </li> <li>The probability that two gene copies share a common ancestor 1 generation ago is <code>1 / 2Ne</code>.</li> </ol>"},{"location":"chapter-2/2.3-coalescent/","title":"Coalescent trees","text":""},{"location":"chapter-2/2.3-coalescent/#under-construction","title":"Under Construction","text":""},{"location":"chapter-2/2.3-coalescent/#learning-objectives","title":"Learning objectives","text":"<p>By the end of this lesson you will be familiar with:</p> <ol> <li>Coalescent theory.</li> <li>Modeling waiting times between coalescent events as a probability distribution.</li> <li>Generating coalescent trees.</li> <li>Coalescent trees as random variables (model assumptions).</li> </ol> <p>This lesson will introduce Coalescent theory and the process by which  coalescent trees can be randomly generated, and treated as stochastic random variables. For this, we will use the <code>numpy</code> library to access statistic distributions, and <code>toytree</code> to construct and visualize trees. By the end of the lesson you will write your own simple coalescent  simulator to understand the basic concepts and steps underlying this  process.</p> <pre><code>import numpy as np\nimport toytree\n</code></pre>"},{"location":"chapter-2/2.3-coalescent/#wright-fisher-models-and-coalescence","title":"Wright-Fisher models and coalescence","text":"<p>In session 2.2 we introduced Wright-Fisher (WF) models to simulate evolution in a discrete random mating population of size N diploid gene copies. Over multiple generations of random mating, genetic drift arises from random  variation in which gene copies are replicated from one generation to the next. This has the consequence that genetic variation in the population is slowly  reduced over time, as different alleles become lost or fixed.  A second important outcome of this process is that it creates a  network of ancestor-descendant relationships among gene copies (a genealogy).  The loss of genetic variation over time, and the genealogical relationship among gene copies, are inherently linked. If we run a simulation long enough for one allele to fix, and then construct a genealogy of gene copies in  the current population, we will find that they all trace back to an  ancestral gene copy that had the same allelic state.  The allelic state of that ancestor was inherited by all of the present  gene copies (for now we are ignoring the possibility of new mutations generating new alleles). </p> <p>A genealogy is informative about the amount of genetic variation in the population.</p> <p>If we run a WF simulation long enough for one allele to fix (e.g., green),  and then construct a genealogy of gene copies in the current population,  we will find that they all trace back to one or more ancestral gene  copies that had the same allelic state. This allele was inherited by  all of the present gene copies from their ancestors. The random genealogy connecting these gene copies shows the history of these copies of that  allele. (For now we are ignoring the possibility of new mutations generating new alleles). </p> <pre><code>wf = toytree.learn.wright_fisher_simulation(...)\n</code></pre>"},{"location":"chapter-2/2.3-coalescent/#coalescence-of-two-samples","title":"Coalescence of two samples","text":"<p>Sewall Wright (1931) was the first to describe the process of coalescence that arises within a WF process. Every pair of gene copies eventually traces back to a common ancestor, a process referred to as coalescence.  The expected time until this happens can be described using probability theory, and turns out to rely entirely on a single population parameter: the effective populations size, Ne. </p> <p>The probability that two gene copies share the same ancestor one generation in the past is 1 / 2Ne. This may look familiar: In a previous lesson we  described that the strength of genetic drift is 1 / 2Ne. The fact that  both of these processes occur at the same rate suggests the connection  between them.  You can compute this by thinking of each of the two gene copies in turn.  The first gene copy must have an ancestor in the previous generation, so the probability of this event is 1. The next gene copy may or may not have the same ancestor in the previous generation. The probability that it does is \u00bdN, because there are 2N possible gene copies to choose from. </p> <p>We can describe this process as the outcome of a [Bernoulli trial],  a random variable that returns True with probability p, and  False with probability 1 - p. This type of probability distribution is  common in statistics. Often, we are interested in the question of how many trials will need to occur, on average, until we observe a success? This question can also be described by a probability distribution, called the [geometric distribution]. The mean expectation of the geometric  distribution for the time until a successful event is observed, given its probability \\(p\\), is \\(E[t] = 1 / p\\).  To translate this back into our realm of interest: the probability that  two samples coalesce one generation ago is \\(p = 1 / 2Ne\\). Thus, the expected number of generations until two samples coalesce is \\(E[t] = 2Ne\\). </p>"},{"location":"chapter-2/2.3-coalescent/#todo","title":"TODO","text":"<ul> <li>a function to add mutations to the tree at rate u.</li> <li>the genetic diversity in a population theta = 4Ne * u</li> <li>estimate Ne based on genetic diversity</li> </ul>"},{"location":"chapter-2/2.3-coalescent/#kingman-coalescent","title":"Kingman coalescent","text":"<p>J. F. C. Kingman was a mathematician (1982) that used advances in probability theory to develop a generalization of the expectations we can derive for two sampled gene copies, and instead make claims about any arbitrarily  large number of sampled gene copies, which we will call \\(k\\). </p>"},{"location":"chapter-2/2.3-coalescent/#derivation","title":"Derivation","text":"<p>Let's start by asking, what is the probability that two samples do not  coalesce in the previous generation -- that they don't share a common  ancestor one generation back. Viewed backwards in time, the first gene copy  samples an ancestor, and the second gene copy has a 1 - \u00bdN probability of  sampling a different ancestor. We can then extend this to ask what is the probability that a third sample does not coalesce with either of those two one generation back, which 1 - 2 / 2N. We can repeat this process for  all \\(k\\) sampled gene copies of interest to get a series that represents the probability that \\(k\\) samples do not coalesce one generation ago:</p> \\[ P(\\text{no coal}| k, N) = (1 - \\frac{1}{2N}) \\times (1 - \\frac{2}{2N}) \\times (1 - \\frac{3}{2N}) \\times ... (1 - \\frac{k}{2N}) \\] <p>The right side of this equation can be multiplied out to simplify its representation as:</p> \\[ P(\\text{no coal} | k, N) = 1 - [1 + 2 + 3 + ... (k - 1)] \\times \\frac{1}{2N} + (\\text{terms in} \\frac{1}{N^2}) \\] <p>We will now use two tricks to simplify this. First, the sum of integers  from 1 to k - 1 can be written as k(k-1)/2. Second, we will simply  discard the term on the right, which corresponds to relatively rare  instances where more than two sampled gene copies would coalesce  in the same generation (more on this below). And so we get:</p> \\[ P(\\text{no coal} | k, N) = 1 - \\frac{k(k-1)}{2} \\times \\frac{1}{2N} \\] <p>which finally simplifies to the more commonly represented form:</p> \\[ P(\\text{no coal} | k, N) = 1 - \\frac{k(k-1)}{4N} \\] <p>Finally, if we describe P(coal | k, N) as 1 - P(\\text{no coal}| k, N) we get a solution for the probability that one coalescent event occurs in the previous generation given \\(k\\) sampled gene copies in a population with effective size N. </p> \\[ P(\\text{coal} | k, N) = \\frac{k(k-1)}{4N} \\] <p>Kingman's coalescent is actually an approximation of the coalescent,  because we next simply ignore the second bit of the equation above. Kingman (1982)  demonstrated that this was a pretty good approximation as long as k(k-1) is much smaller than the population size N. By throwing away the second part of this equation we are discarding the probability that two or more coalescent events among our sampled gene copies occur during the  same generation. This is thus an assumption of the n-coalescent:  generations are discrete and non-overlapping, and only one coalescent event occurs per generation among a set of observed samples.</p>"},{"location":"chapter-2/2.3-coalescent/#statistical-distribution","title":"Statistical Distribution","text":"<p>This probability can be thought of like a biased coin flip, where a heads indicates a coalescent event, and a tails means no coalescent event. It is generally much more common that there will be no  coalescent event than there being a coalescence. We can repeat this many times to ask how many trials will be required, on average, until we observe a heads. This type of question belongs to the realm of the  geometric distribution: The probability distribution of the number X of Bernoulli trials needed  to get one success, e.g., { 1, 2, 3, ...}. </p> <p>Given the probability of an event, p, the mean number of trials before a  success is observed under the geometric probability distribution is 1/p.  We can translate this into our scenario. We have a statement for the  probability of a coalescent event \\(P(\\text{coal} | k, N)\\), where each  generation represents a trial where coalescence could occur. And so the mean  (Expectation) for the time until the first observed coalescence event  (which we will call \\(t_k\\)) is 1 over this probability:</p> \\[ E[t_k] = \\frac{4N}{k(k-1)} \\] <p>This expectation of the coalescent model seems relatively simple, but  it turns that it can be used in a lot of powerful ways.</p>"},{"location":"chapter-2/2.3-coalescent/#genealogies-as-random-variables","title":"Genealogies as random variables","text":"<p>Waiting time until coalescent, but who will coalesce? Hopefully you guessed it: a random pair out of the k gene copies. This is because we are still working within the assumptions of the Wright-Fisher process and the model of an idealized population with discrete non-overlapping generations and  random mating. </p> <p>We can simulate this process by randomly sampling gene copies to  serve as parents of gene copies in successive generations. This process can be repeated many times, from different starting seeds,  and we would likely get a different outcome nearly every time, representing a random sample over the possible ways in which some number of gene  copies could be related. This turns out </p> <p>If we think of these genealogies as trees, rather than just a collection of waiting times. </p> <p>... It can often be difficult at first to understand how a collection of waiting times can represent a genealogy (tree). How does this process  group samples together to form a tree from the waiting times? Randomly.  Remember, random mating is fundamental to our model assumptions. But how could a random tree possibly be useful compared to real data,  where some samples will surely be more closely related than others most of the time? ...</p>"},{"location":"chapter-2/2.3-coalescent/#practical-applications","title":"Practical applications","text":"<p>Rather than keep track of every single gene  copy in a large population, we can instead formulate expectations for  how a small number of samples are expected to be related. It thus  serves a practical purpose for both simulations and empirical studies of populations.</p>"},{"location":"chapter-2/2.3-coalescent/#assumptions-of-the-coalescent","title":"Assumptions of the coalescent","text":"<p>Kingman's n-coalescent is by far the most widely used model of its kind, but several variants also exist which make slightly different assumptions that may be more appropriate for some study systems. </p> <ul> <li>k is much much smaller than Ne.</li> <li>non-overlapping generations.</li> <li>...</li> </ul>"},{"location":"chapter-2/2.4-coalescent-simulation/","title":"Coalescent Simulations","text":""},{"location":"chapter-2/2.4-coalescent-simulation/#under-construction","title":"Under Construction","text":""},{"location":"chapter-2/2.4-coalescent-simulation/#learning-objectives","title":"Learning objectives","text":"<ul> <li>Overview of coalescent simulation</li> <li>Using msprime to perform coalescent simulations</li> <li>Using ipcoal to perform coalescent simulations</li> </ul>"},{"location":"chapter-2/2.4-coalescent-simulation/#review","title":"Review","text":""},{"location":"chapter-2/2.4-coalescent-simulation/#recombination-and-inheritance","title":"Recombination and inheritance","text":""},{"location":"chapter-2/2.4-coalescent-simulation/#_1","title":"Coalescent Simulation","text":"<p>The coalescent process describes the ancestry of a sample of genes as we  trace them back through time: each pair of lineages coalesces in a common  ancestor at a rate \u00bdNe, where Ne is the effective size of the ancestral  population through which the lineages were passing. This remarkably simple model for the ancestry of neutral genes, traced backwards in time,  corresponds to the diffusion approximation, which describes how allele  frequencies spread out as populations evolve forward in time.</p>"},{"location":"chapter-2/2.4-coalescent-simulation/#introduction","title":"Introduction","text":"<p>In the last lesson we developed a simple function to generate a random coalescent genealogy for k samples under the n-coalescent process. The waiting times between successive coalescent events on the tree, which  reduces the remaining number of samples from k to k-1 until all samples  have coalesced, is determined by just a single population parameter,  \\(N_e\\). </p> <p>Coalescent simulation software, beginning with <code>ms</code>, etc., adding  recombination and other extensions. </p>"},{"location":"chapter-2/2.4-coalescent-simulation/#simulating-evolution","title":"Simulating Evolution","text":"<ul> <li>forward-in-time (WF) is slow and memory consuming.</li> <li>coalescent is very fast and small memory.</li> <li>BUT, coalescent simulations require making a number of assumptions.<ul> <li>a few of these can be relaxed in various ways.</li> </ul> </li> </ul>"},{"location":"chapter-2/2.4-coalescent-simulation/#coalescent-software","title":"Coalescent software","text":"<ul> <li>msprime</li> <li>tskit</li> <li>ipcoal</li> </ul>"},{"location":"chapter-2/2.4-coalescent-simulation/#population-structure","title":"Population structure","text":"<p>...brief introduction, more on this in chapter X.</p>"},{"location":"chapter-2/2.4-coalescent-simulation/#recombination","title":"Recombination","text":"<p>...brief introduction, more on this in chapter X.</p>"},{"location":"chapter-2/2.4-coalescent-simulation/#population-container","title":"Population Container","text":"<p><pre><code># simulate 10 random genealogies\nmod = ipcoal.Model(Ne=1000, nsamples=10)\nmod.sim_trees(10)\nprint(mod.df)\n</code></pre> ...</p> <pre><code>mod.draw_genealogies()\n</code></pre> <pre><code># draw the first genealogy embedded in the population model\nmod.draw_genealogy(idx=0)\n</code></pre>"},{"location":"chapter-2/2.5-genetic-diversity/","title":"Genetic Diversity","text":""},{"location":"chapter-2/2.5-genetic-diversity/#learning-objectives","title":"Learning objectives","text":"<ul> <li>connect genealogical variation to genetic diversity </li> </ul>"},{"location":"chapter-2/2.5-genetic-diversity/#notebook","title":"notebook","text":"<ul> <li>http://localhost:8888/notebooks/phylogenetic-data-science/docs/chapter-1/notebooks/chapter-11-simulations.ipynb</li> <li>http://localhost:8888/notebooks/phylogenetic-data-science/docs/chapter-1/notebooks/chapter-11-2.ipynb#</li> </ul>"},{"location":"chapter-2/2.x-exercises/","title":"2.x - Exercises","text":""},{"location":"chapter-2/2.x-exercises/#lesson-20","title":"Lesson 2.0","text":"<ol> <li> <p>What is the difference between a genealogy of individuals and  gene copies? Try drawing the history of two gene copies at a locus  through &gt;3 generations of ancestral individuals, and describe it?  Do this without looking at figures from the lessons.</p> </li> <li> <p>In an idealized population, and assuming no genetic linkage,  what is the law of segregation and independent assortment, and how  does it relate to the expected similarity of genealogies for gene  copies at two different genes in a diploid individual? Why?</p> </li> </ol>"},{"location":"chapter-2/2.x-exercises/#lesson-21","title":"Lesson 2.1","text":"<ol> <li> <p>What is an idealized population?</p> </li> <li> <p>How many generations does it take, in an idealized population,  for genotype frequencies to evolve to Hardy-Weinberg equilibrium?</p> </li> <li> <p>How do you compute \\(p\\) and \\(q\\) from the genotype frequencies in  a population? What assumptions are important for this to be correct?</p> </li> <li> <p>How do you compute genotype frequencies from the \\(p\\) and \\(q\\)  in a popuation? What assumptions are important for this to be correct?</p> </li> <li> <p>If a population is in HW equilibrium, what will happen to the  genotype frequencies in the next generation?</p> </li> <li> <p>Why does sampling from a Binomial distribution only approximate the expectations of Hardy-Weinberg, rather than match it perfectly? </p> </li> </ol>"},{"location":"chapter-2/2.x-exercises/#lesson-22","title":"Lesson 2.2","text":"<ol> <li> <p>What is a Wright-Fisher process? Try to describe it as concisely as you can.</p> </li> <li> <p>What is an effective population size? Try to describe it as concisely  as you can. How can \\(N_e\\) be interpreted in a simple WF-process compared  to in more complex models, or in real populations?</p> </li> <li> <p>Draw a Wright-Fisher process for a population of 2N=10 gene copies,  for &gt;10 generations, including outlines around pairs of gene copies to  represent diploid individuals.</p> </li> <li> <p>Compare your drawings with others' drawings. Did you draw time  in the same direction? Does every gene copy have one or more ancestors,  or none? Does every gene copy have one or more descendants, or none? Did all of the gene copies at the present coalesce within 10 generations?  If you drawings are different in some of these respects, did one of you make a mistake?</p> </li> </ol>"},{"location":"chapter-2/2.x-exercises/#lesson-23","title":"Lesson 2.3","text":"<ol> <li> <p>Why is the probability that two gene copies share a MRCA in the previous generation 1 / 2N? Why isn't it (1 / 2N) * (1 / 2N)? Or the  number of ways of sampling two gene copies (k * (k-2)) times 1 / 2N? It may be  helpful to draw a WF process for a population of size N=2 and to think about the probability of each gene copy coming from a copy in the previous generation.</p> </li> <li> <p>What is the Kingman coalescent equation? How does it relate to the 1 / 2N equation above? Why is Kingman's equation an approximation?</p> </li> </ol>"},{"location":"chapter-2/2.x-exercises/#assignment","title":"Assignment","text":"<ol> <li> <p>Write a function to generate a random genealogy for k gene copies given an effective population size parameters. Your function should do the following:</p> <ul> <li>Take <code>k</code>, <code>N</code>, and <code>random_seed</code> as integer input arguments. You can change the names of these if you want.</li> <li>Return a <code>ToyTree</code> object that is ultrametric (tips aligned).</li> <li>Implement the algorithm from page 456. </li> </ul> </li> <li> <p>Once your genealogy function is working, write another function  to simulate 1000 genealogies from different random seeds given a k and N  input parameters and to return the mean and variance of the time until  all k samples coalesce.</p> </li> </ol>"},{"location":"chapter-3/3.0-modeling-mutations/","title":"Mutation models","text":""},{"location":"chapter-3/3.0-modeling-mutations/#terminology","title":"Terminology","text":""},{"location":"chapter-3/3.0-modeling-mutations/#homology","title":"Homology","text":"<p>The term homology is used in evolutionary biology to refer to units that are descended from a common ancestor. For example, ...</p>"},{"location":"chapter-3/3.0-modeling-mutations/#orthology","title":"Orthology","text":"<p>Even among homologous features of organisms, it can be useful to further distinguish homology in relative terms, particularly when a homologous feature exists in multiple copied forms. For  example, ...</p>"},{"location":"chapter-3/3.0-modeling-mutations/#paralogy","title":"Paralogy","text":"<p>...</p>"},{"location":"chapter-3/3.0-modeling-mutations/#homoplasy","title":"Homoplasy","text":"<p>...</p>"},{"location":"chapter-3/3.0-modeling-mutations/#sequence-alignment","title":"Sequence Alignment","text":"<p>Homology can be estimated by comparing the features of organisms, and  identifying sources of similarity and differences. To identify orthology  among DNA or protein data can be ...</p>"},{"location":"chapter-3/3.0-modeling-mutations/#_1","title":"Mutation models","text":""},{"location":"chapter-3/3.2-markov-models/","title":"3.2 - Markov models","text":""},{"location":"chapter-3/3.2-markov-models/#discrete-states-of-dna","title":"Discrete states of DNA","text":"<p>Nucleic acids (deoxyribonucleic acid [DNA] and its ribonucleic version [RNA])  are composed of units called nucleotides. In DNA, each nucleotide is conformed by one deoxyribose sugar, one phosphate group, and one of four nitrogen nucleobases (adenine [A], cytosine [C], guanine [G], or thymine [T]). In the case of RNA, the sugar is ribose and the thymine base is replaced by uracil (U). These nucleotides are classified into two main chemical groups, purines and pyrimidines. In DNA, two chains are bound together by a series of hydrogen bonds between a specific purine and its complementary pyrimidine. Adenine pairs with thymine and guanine with cytosine. </p> <p>Variability in this configuration is broad but rare, and we can find some non-canonical bases, bounds, or even rearrangement in the whole structure. Regardless, as we see, DNA offers a wide variety of discrete characters to incorporate in models to study it or predict patterns. For inferring phylogenies, the nitrogen nucleobase (A, C, G, T) has been one of the primary sources of information when comparing sequences and calculating distances; nevertheless, we have some hypothetical models that incorporate other information to predict the distribution in a given sequence.</p> <p>DNA is constely exposed to different phenomena that may change or mutate their sequence, with puntual mutations (mutations that change one base for another) or much larger mutations. Mutation can be caused by multiple situations (UV exposition, errors during replication or celular division, insertion or delation or segments), and  even being rare, they play an importal role in organisms evolution. They are accumulable in time and from it we can infer ancestry-decendent relationships. </p> <p>Considering puntual mutations, we can illustrate these possible discrete states (nucleotides) and their possible changes using the following simple graph.</p> Code <pre><code>import toyplot\nimport itertools\nimport random\n\nedges = [i for i in itertools.permutations('ACGT', r=2)]\ntransitions = {(\"A\",\"G\"),(\"C\",\"T\")}\ncolors = []\nfor e in edges:\n    sorted_e = tuple(sorted(list(e)))\n    if sorted_e in transitions:\n        colors.append(\"blue\")\n    else:\n        colors.append(\"red\")\n\n\ncanvas, axes, graph = toyplot.graph(\n        [i[0] for i in edges],\n        [i[1] for i in edges],\n        ecolor=colors,\n        ewidth=5,\n        eopacity=0.35,\n        width=350,\n        height=350,\n        margin=0,\n        tmarker=\"&gt;\", \n        vsize=50,\n        vcoordinates=[(-1,1),(-1,-1),(1,1), (1,-1)],\n        vstyle={\"stroke\": \"black\", \"stroke-width\": 2, \"fill\": \"none\"},\n        vlstyle={\"font-size\": \"20px\"},\n        layout=toyplot.layout.FruchtermanReingold(edges=toyplot.layout.CurvedEdges())\n)\n\nf_style = {\"font-size\": \"14px\"} \ncanvas.text(175,40, \"Transitions\", style=f_style)\ncanvas.text(175,310, \"Transitions\", style=f_style)\ncanvas.text(40,175, \"Transversions\", angle=90, style=f_style)\ncanvas.text(175,175, \"Transversions\", style=f_style)\ncanvas.text(310,175, \"Transversions\", angle=270, style=f_style);\ncanvas.style['background-color'] = 'white'\n</code></pre> ACGTTransitionsTransitionsTransversionsTransversionsTransversions <p>These discrete states and possible changes can be modeled using Markov chains to predict some expected patterns in the sequences.</p>"},{"location":"chapter-3/3.2-markov-models/#markov-chains","title":"Markov chains","text":"<p>A Markov chain is a a system that describe the transition (do not confuse with nucleotide transitions) from one state to another considering only some simple probabilistic rules. In this stochastic model every change is only conditioned of the previous state, this is known as the Markov property. In terms of nucleotides, the probability of having a given nucleotide depends only of the previous nucleotide.</p> <p>In this way we can consider that Markov chains are \"memoryless\" process, in which only the previous state can affect the new state, while the previous states are forgotten. This principle is true and only true in 1st-order Markov chains. As expected, there are high-level order Markov chains that extend the \"memory\" to a given number of previous states; however, in terms of substitutions models, 1st-order is the type of chain that is commonly used.</p> <p>In the following animated graph, we can see how is a random walk in a Markov chain of 4 states.</p> <p>One crucial part of these models is the transitions probabilities between states. These can be stored and represented as a matrix (symmetrical or asymmetrical). In this matrix every row would sum 1.</p> <p>We can declare this matrix in Python using a Numpy array as follows:</p> <pre><code>import numpy as np\n#                                A     C     G     T\ntransition_matrix = np.array([[0.50, 0.20, 0.10, 0.20],  # A\n                              [0.10, 0.50, 0.30, 0.10],  # C\n                              [0.05, 0.20, 0.70, 0.05],  # G\n                              [0.00, 0.05, 0.05, 0.90]   # T\n                             ])\n</code></pre> <p>Using the transition probabilities in this matrix we can do a random walk changing from one state to another a given number of steps. In the next function we implemented a simple way to do this and store each state visited in this Markov chain.</p> <pre><code>def print_random_walk(steps: int, \n                      initial_state: str, \n                      transition_matrix: np.ndarray,\n                      states: str = \"ACGT\") -&gt; str:\n\"\"\"Do a random walk and return the sequence of all states visited\n\n    Parameters\n    ----------\n    states\n        States to consider in the Markov chain\n    steps\n        Number of steps in the random walk\n    initial_state\n        Where to start the random walk\n    transition_matrix: np.array\n        Transition matrix with transition probabilities for all states\n\n    Returns\n    -------\n    Sequence of all states visited\n\n    \"\"\"\n    current_state = initial_state\n    result_sequence = [current_state]\n\n    step = 1\n    while step &lt; steps:\n        previous_state = current_state\n        previous_idx = states.index(previous_state)\n\n        # Choice one random base on the probabilities on the matrix picking the previous row \n        current_state = np.random.choice(list(states), p=transition_matrix[previous_idx])\n        result_sequence.append(current_state)\n        step += 1\n\n    return \"\".join(result_sequence)\n</code></pre> <p>With this random walk function, we can generate a random sequence that follows the transition probabilities we stated in our matrix transition:</p> <pre><code>sequence = print_random_walk(states=\"ACGT\", \n                  steps=200, \n                  initial_state=\"G\", \n                  transition_matrix=transition_matrix)\n\nsequence\n</code></pre> <pre><code>'GGGGCGCCCTTTCGGGGAATTTTTTTTTTTTCCGGCAAAGGGGCCTTTTTTCTTTTTTTTTTTCCTTTTTTTTTTCCGGCCAAATTTTTTCCCCCGTTTTTCAATTTTTTTTTTTTTTTTTTTTCCCGGGCCAACCGGGAAACCCATTTTCGGGGCCCCCCCCCGTTTTTGGCCCCCGGGGGGGGCGTTTTTTTTTTTTT'\n</code></pre> <p>We can notice that this random sequence shows some patterns, for example more T's than A's, a similar number of C's and G's, and islands of certain bases. The transition probabilities we set influence these patterns notoriusly, and at some point the distribution of the states (in this case nucleotides) are predictable. If the sequence of changes is long enough we can predict how many T's, for example, we can have in a random sequence that follows a particular model. </p> <p>That predictability is represented by the stationary distribution or equilibrium in a Markov model. </p>"},{"location":"chapter-3/3.2-markov-models/#stationary-distributions","title":"Stationary distributions","text":"<p>Stationary distributions, also known as the equilibrium, are probability distributions that remain unchanged as time progresses. In other words, the distribution of every state in a sequence of changes tends to converge with time, and it will be the same after some point.</p> <p>These stationary distributions are vectors with the distribution of all states in the model and are commonly denoted with \u03c0. They constitute an essential part of implementing models for calculating expected distributions in DNA sequences.</p> <p>We can see this when we do several random walks and start noticing that the number of T's, for example, is very similar from one sequence to another.  Let us generate 10 sequences with 1000 bases by doing different random walks and counting the number of T's we have in each of them.</p> <pre><code>for i in range(10):\n    sequence = print_random_walk(states=\"ACGT\", \n                      steps=1000, \n                      initial_state=\"G\", \n                      transition_matrix=transition_matrix)\n    n_ts = sequence.count(\"T\")\n    print(f\"Seq. {i}: {sequence[0:10]}...{sequence[-10:-1]} - T's = {n_ts}\")\n</code></pre> <pre><code>Seq. 0: GGCGGGGGGG...GTTTTTTTT - T's = 430\nSeq. 1: GTTTGGGGGG...TTTTTTTTT - T's = 461\nSeq. 2: GGGCCGGGGG...GGCGGAAAA - T's = 423\nSeq. 3: GAGGGGGGGG...TTTTTGGCC - T's = 389\nSeq. 4: GGCCCCGTTT...CGCTTTTTT - T's = 535\nSeq. 5: GCAAAAAACG...TTTTTTTTT - T's = 453\nSeq. 6: GGGGGGGCCG...CCAAGGGAA - T's = 484\nSeq. 7: GGGCCCCGGG...AAAACCCCC - T's = 437\nSeq. 8: GGGGCCAAAA...TTTTTGGGG - T's = 411\nSeq. 9: GGTTTTTTTT...CGCCCGGGG - T's = 549\n</code></pre> <p>We can see that most of them have round 450 T's (about 45%) of the entire sequence. If the sequence is long enough, we will end with the stationary distribution, and the number of T's would be predicted.</p> <p>Let me illustrate this convergency with a plot where we ran for 10000 steps a random walk and tracked the frequency of each nucleotide.</p> <pre><code>import toyplot\n\ndef plot_convergency(states, steps, initial_state, transition_matrix):\n\n    current_state = initial_state\n    sequence = [current_state]\n    empiric_frequencies = np.zeros((int(steps), len(states))) \n\n    step = 1\n    while step &lt; steps:\n        previous_state = current_state\n        previous_idx = states.index(previous_state)\n\n        current_state = np.random.choice(list(states), p=transition_matrix[previous_idx])\n        sequence.append(current_state)\n\n        step_freq = []\n        for base in states:\n            step_freq.append(sequence.count(base) / len(sequence))\n\n        empiric_frequencies[step] = step_freq\n        step += 1\n\n\n    label_style = {\"text-anchor\":\"start\", \"-toyplot-anchor-shift\":\"5px\"}\n    canvas, axes, mark = toyplot.plot(empiric_frequencies, ylabel=\"Frequency\", xlabel=\"Steps\")\n    canvas.style['background-color'] = 'white'\n\n    for i in states:\n        axes.text(steps, empiric_frequencies[-1,states.index(i)], i, style=label_style)\n\n    return canvas, axes, mark\n</code></pre> <pre><code>plot_convergency(states=\"ACGT\", initial_state=\"A\", steps= 10000, transition_matrix=transition_matrix);\n</code></pre> ACGT0500010000Steps0.00.20.50.8Frequency(function() { var modules={}; modules[\"toyplot/tables\"] = (function()     {         var tables = [];          var module = {};          module.set = function(owner, key, names, columns)         {             tables.push({owner: owner, key: key, names: names, columns: columns});         }          module.get = function(owner, key)         {             for(var i = 0; i != tables.length; ++i)             {                 var table = tables[i];                 if(table.owner != owner)                     continue;                 if(table.key != key)                     continue;                 return {names: table.names, columns: table.columns};             }         }          module.get_csv = function(owner, key)         {             var table = module.get(owner, key);             if(table != undefined)             {                 var csv = \"\";                 csv += table.names.join(\",\") + \"\\n\";                 for(var i = 0; i != table.columns[0].length; ++i)                 {                   for(var j = 0; j != table.columns.length; ++j)                   {                     if(j)                       csv += \",\";                     csv += table.columns[j][i];                   }                   csv += \"\\n\";                 }                 return csv;             }         }          return module;     })(); modules[\"toyplot/root/id\"] = \"te73cacde606a4d72a6de8d02c934887c\"; modules[\"toyplot/root\"] = (function(root_id)     {         return document.querySelector(\"#\" + root_id);     })(modules[\"toyplot/root/id\"]); modules[\"toyplot/canvas/id\"] = \"t818e2a456414467b924aa96bed70c588\"; modules[\"toyplot/canvas\"] = (function(canvas_id)     {         return document.querySelector(\"#\" + canvas_id);     })(modules[\"toyplot/canvas/id\"]); modules[\"toyplot/menus/context\"] = (function(root, canvas)     {         var wrapper = document.createElement(\"div\");         wrapper.innerHTML = \"&lt;ul class='toyplot-context-menu' style='background:#eee; border:1px solid #b8b8b8; border-radius:5px; box-shadow: 0px 0px 8px rgba(0%,0%,0%,0.25); margin:0; padding:3px 0; position:fixed; visibility:hidden;'&gt;&lt;/ul&gt;\"         var menu = wrapper.firstChild;          root.appendChild(menu);          var items = [];          var ignore_mouseup = null;         function open_menu(e)         {             var show_menu = false;             for(var index=0; index != items.length; ++index)             {                 var item = items[index];                 if(item.show(e))                 {                     item.item.style.display = \"block\";                     show_menu = true;                 }                 else                 {                     item.item.style.display = \"none\";                 }             }              if(show_menu)             {                 ignore_mouseup = true;                 menu.style.left = (e.clientX + 1) + \"px\";                 menu.style.top = (e.clientY - 5) + \"px\";                 menu.style.visibility = \"visible\";                 e.stopPropagation();                 e.preventDefault();             }         }          function close_menu()         {             menu.style.visibility = \"hidden\";         }          function contextmenu(e)         {             open_menu(e);         }          function mousemove(e)         {             ignore_mouseup = false;         }          function mouseup(e)         {             if(ignore_mouseup)             {                 ignore_mouseup = false;                 return;             }             close_menu();         }          function keydown(e)         {             if(e.key == \"Escape\" || e.key == \"Esc\" || e.keyCode == 27)             {                 close_menu();             }         }          canvas.addEventListener(\"contextmenu\", contextmenu);         canvas.addEventListener(\"mousemove\", mousemove);         document.addEventListener(\"mouseup\", mouseup);         document.addEventListener(\"keydown\", keydown);          var module = {};         module.add_item = function(label, show, activate)         {             var wrapper = document.createElement(\"div\");             wrapper.innerHTML = \"&lt;li class='toyplot-context-menu-item' style='background:#eee; color:#333; padding:2px 20px; list-style:none; margin:0; text-align:left;'&gt;\" + label + \"&lt;/li&gt;\"             var item = wrapper.firstChild;              items.push({item: item, show: show});              function mouseover()             {                 this.style.background = \"steelblue\";                 this.style.color = \"white\";             }              function mouseout()             {                 this.style.background = \"#eee\";                 this.style.color = \"#333\";             }              function choose_item(e)             {                 close_menu();                 activate();                  e.stopPropagation();                 e.preventDefault();             }              item.addEventListener(\"mouseover\", mouseover);             item.addEventListener(\"mouseout\", mouseout);             item.addEventListener(\"mouseup\", choose_item);             item.addEventListener(\"contextmenu\", choose_item);              menu.appendChild(item);         };         return module;     })(modules[\"toyplot/root\"],modules[\"toyplot/canvas\"]); modules[\"toyplot/io\"] = (function()     {         var module = {};         module.save_file = function(mime_type, charset, data, filename)         {             var uri = \"data:\" + mime_type + \";charset=\" + charset + \",\" + data;             uri = encodeURI(uri);              var link = document.createElement(\"a\");             if(typeof link.download != \"undefined\")             {               link.href = uri;               link.style = \"visibility:hidden\";               link.download = filename;                document.body.appendChild(link);               link.click();               document.body.removeChild(link);             }             else             {               window.open(uri);             }         };         return module;     })(); modules[\"toyplot.coordinates.Axis\"] = (         function(canvas)         {             function sign(x)             {                 return x &lt; 0 ? -1 : x &gt; 0 ? 1 : 0;             }              function mix(a, b, amount)             {                 return ((1.0 - amount) * a) + (amount * b);             }              function log(x, base)             {                 return Math.log(Math.abs(x)) / Math.log(base);             }              function in_range(a, x, b)             {                 var left = Math.min(a, b);                 var right = Math.max(a, b);                 return left &lt;= x &amp;&amp; x &lt;= right;             }              function inside(range, projection)             {                 for(var i = 0; i != projection.length; ++i)                 {                     var segment = projection[i];                     if(in_range(segment.range.min, range, segment.range.max))                         return true;                 }                 return false;             }              function to_domain(range, projection)             {                 for(var i = 0; i != projection.length; ++i)                 {                     var segment = projection[i];                     if(in_range(segment.range.bounds.min, range, segment.range.bounds.max))                     {                         if(segment.scale == \"linear\")                         {                             var amount = (range - segment.range.min) / (segment.range.max - segment.range.min);                             return mix(segment.domain.min, segment.domain.max, amount)                         }                         else if(segment.scale[0] == \"log\")                         {                             var amount = (range - segment.range.min) / (segment.range.max - segment.range.min);                             var base = segment.scale[1];                             return sign(segment.domain.min) * Math.pow(base, mix(log(segment.domain.min, base), log(segment.domain.max, base), amount));                         }                     }                 }             }              var axes = {};              function display_coordinates(e)             {                 var current = canvas.createSVGPoint();                 current.x = e.clientX;                 current.y = e.clientY;                  for(var axis_id in axes)                 {                     var axis = document.querySelector(\"#\" + axis_id);                     var coordinates = axis.querySelector(\".toyplot-coordinates-Axis-coordinates\");                     if(coordinates)                     {                         var projection = axes[axis_id];                         var local = current.matrixTransform(axis.getScreenCTM().inverse());                         if(inside(local.x, projection))                         {                             var domain = to_domain(local.x, projection);                             coordinates.style.visibility = \"visible\";                             coordinates.setAttribute(\"transform\", \"translate(\" + local.x + \")\");                             var text = coordinates.querySelector(\"text\");                             text.textContent = domain.toFixed(2);                         }                         else                         {                             coordinates.style.visibility= \"hidden\";                         }                     }                 }             }              canvas.addEventListener(\"click\", display_coordinates);              var module = {};             module.show_coordinates = function(axis_id, projection)             {                 axes[axis_id] = projection;             }              return module;         })(modules[\"toyplot/canvas\"]); (function(tables, context_menu, io, owner_id, key, label, names, columns, filename)         {             tables.set(owner_id, key, names, columns);              var owner = document.querySelector(\"#\" + owner_id);             function show_item(e)             {                 return owner.contains(e.target);             }              function choose_item()             {                 io.save_file(\"text/csv\", \"utf-8\", tables.get_csv(owner_id, key), filename + \".csv\");             }              context_menu.add_item(\"Save \" + label + \" as CSV\", show_item, choose_item);         })(modules[\"toyplot/tables\"],modules[\"toyplot/menus/context\"],modules[\"toyplot/io\"],\"t2c65d8c1c8514a7c86b4259dd52ee0ff\",\"data\",\"plot data\",[\"x\", \"y0\", \"y1\", \"y2\", \"y3\"],[[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136, 2137, 2138, 2139, 2140, 2141, 2142, 2143, 2144, 2145, 2146, 2147, 2148, 2149, 2150, 2151, 2152, 2153, 2154, 2155, 2156, 2157, 2158, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2177, 2178, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198, 2199, 2200, 2201, 2202, 2203, 2204, 2205, 2206, 2207, 2208, 2209, 2210, 2211, 2212, 2213, 2214, 2215, 2216, 2217, 2218, 2219, 2220, 2221, 2222, 2223, 2224, 2225, 2226, 2227, 2228, 2229, 2230, 2231, 2232, 2233, 2234, 2235, 2236, 2237, 2238, 2239, 2240, 2241, 2242, 2243, 2244, 2245, 2246, 2247, 2248, 2249, 2250, 2251, 2252, 2253, 2254, 2255, 2256, 2257, 2258, 2259, 2260, 2261, 2262, 2263, 2264, 2265, 2266, 2267, 2268, 2269, 2270, 2271, 2272, 2273, 2274, 2275, 2276, 2277, 2278, 2279, 2280, 2281, 2282, 2283, 2284, 2285, 2286, 2287, 2288, 2289, 2290, 2291, 2292, 2293, 2294, 2295, 2296, 2297, 2298, 2299, 2300, 2301, 2302, 2303, 2304, 2305, 2306, 2307, 2308, 2309, 2310, 2311, 2312, 2313, 2314, 2315, 2316, 2317, 2318, 2319, 2320, 2321, 2322, 2323, 2324, 2325, 2326, 2327, 2328, 2329, 2330, 2331, 2332, 2333, 2334, 2335, 2336, 2337, 2338, 2339, 2340, 2341, 2342, 2343, 2344, 2345, 2346, 2347, 2348, 2349, 2350, 2351, 2352, 2353, 2354, 2355, 2356, 2357, 2358, 2359, 2360, 2361, 2362, 2363, 2364, 2365, 2366, 2367, 2368, 2369, 2370, 2371, 2372, 2373, 2374, 2375, 2376, 2377, 2378, 2379, 2380, 2381, 2382, 2383, 2384, 2385, 2386, 2387, 2388, 2389, 2390, 2391, 2392, 2393, 2394, 2395, 2396, 2397, 2398, 2399, 2400, 2401, 2402, 2403, 2404, 2405, 2406, 2407, 2408, 2409, 2410, 2411, 2412, 2413, 2414, 2415, 2416, 2417, 2418, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2426, 2427, 2428, 2429, 2430, 2431, 2432, 2433, 2434, 2435, 2436, 2437, 2438, 2439, 2440, 2441, 2442, 2443, 2444, 2445, 2446, 2447, 2448, 2449, 2450, 2451, 2452, 2453, 2454, 2455, 2456, 2457, 2458, 2459, 2460, 2461, 2462, 2463, 2464, 2465, 2466, 2467, 2468, 2469, 2470, 2471, 2472, 2473, 2474, 2475, 2476, 2477, 2478, 2479, 2480, 2481, 2482, 2483, 2484, 2485, 2486, 2487, 2488, 2489, 2490, 2491, 2492, 2493, 2494, 2495, 2496, 2497, 2498, 2499, 2500, 2501, 2502, 2503, 2504, 2505, 2506, 2507, 2508, 2509, 2510, 2511, 2512, 2513, 2514, 2515, 2516, 2517, 2518, 2519, 2520, 2521, 2522, 2523, 2524, 2525, 2526, 2527, 2528, 2529, 2530, 2531, 2532, 2533, 2534, 2535, 2536, 2537, 2538, 2539, 2540, 2541, 2542, 2543, 2544, 2545, 2546, 2547, 2548, 2549, 2550, 2551, 2552, 2553, 2554, 2555, 2556, 2557, 2558, 2559, 2560, 2561, 2562, 2563, 2564, 2565, 2566, 2567, 2568, 2569, 2570, 2571, 2572, 2573, 2574, 2575, 2576, 2577, 2578, 2579, 2580, 2581, 2582, 2583, 2584, 2585, 2586, 2587, 2588, 2589, 2590, 2591, 2592, 2593, 2594, 2595, 2596, 2597, 2598, 2599, 2600, 2601, 2602, 2603, 2604, 2605, 2606, 2607, 2608, 2609, 2610, 2611, 2612, 2613, 2614, 2615, 2616, 2617, 2618, 2619, 2620, 2621, 2622, 2623, 2624, 2625, 2626, 2627, 2628, 2629, 2630, 2631, 2632, 2633, 2634, 2635, 2636, 2637, 2638, 2639, 2640, 2641, 2642, 2643, 2644, 2645, 2646, 2647, 2648, 2649, 2650, 2651, 2652, 2653, 2654, 2655, 2656, 2657, 2658, 2659, 2660, 2661, 2662, 2663, 2664, 2665, 2666, 2667, 2668, 2669, 2670, 2671, 2672, 2673, 2674, 2675, 2676, 2677, 2678, 2679, 2680, 2681, 2682, 2683, 2684, 2685, 2686, 2687, 2688, 2689, 2690, 2691, 2692, 2693, 2694, 2695, 2696, 2697, 2698, 2699, 2700, 2701, 2702, 2703, 2704, 2705, 2706, 2707, 2708, 2709, 2710, 2711, 2712, 2713, 2714, 2715, 2716, 2717, 2718, 2719, 2720, 2721, 2722, 2723, 2724, 2725, 2726, 2727, 2728, 2729, 2730, 2731, 2732, 2733, 2734, 2735, 2736, 2737, 2738, 2739, 2740, 2741, 2742, 2743, 2744, 2745, 2746, 2747, 2748, 2749, 2750, 2751, 2752, 2753, 2754, 2755, 2756, 2757, 2758, 2759, 2760, 2761, 2762, 2763, 2764, 2765, 2766, 2767, 2768, 2769, 2770, 2771, 2772, 2773, 2774, 2775, 2776, 2777, 2778, 2779, 2780, 2781, 2782, 2783, 2784, 2785, 2786, 2787, 2788, 2789, 2790, 2791, 2792, 2793, 2794, 2795, 2796, 2797, 2798, 2799, 2800, 2801, 2802, 2803, 2804, 2805, 2806, 2807, 2808, 2809, 2810, 2811, 2812, 2813, 2814, 2815, 2816, 2817, 2818, 2819, 2820, 2821, 2822, 2823, 2824, 2825, 2826, 2827, 2828, 2829, 2830, 2831, 2832, 2833, 2834, 2835, 2836, 2837, 2838, 2839, 2840, 2841, 2842, 2843, 2844, 2845, 2846, 2847, 2848, 2849, 2850, 2851, 2852, 2853, 2854, 2855, 2856, 2857, 2858, 2859, 2860, 2861, 2862, 2863, 2864, 2865, 2866, 2867, 2868, 2869, 2870, 2871, 2872, 2873, 2874, 2875, 2876, 2877, 2878, 2879, 2880, 2881, 2882, 2883, 2884, 2885, 2886, 2887, 2888, 2889, 2890, 2891, 2892, 2893, 2894, 2895, 2896, 2897, 2898, 2899, 2900, 2901, 2902, 2903, 2904, 2905, 2906, 2907, 2908, 2909, 2910, 2911, 2912, 2913, 2914, 2915, 2916, 2917, 2918, 2919, 2920, 2921, 2922, 2923, 2924, 2925, 2926, 2927, 2928, 2929, 2930, 2931, 2932, 2933, 2934, 2935, 2936, 2937, 2938, 2939, 2940, 2941, 2942, 2943, 2944, 2945, 2946, 2947, 2948, 2949, 2950, 2951, 2952, 2953, 2954, 2955, 2956, 2957, 2958, 2959, 2960, 2961, 2962, 2963, 2964, 2965, 2966, 2967, 2968, 2969, 2970, 2971, 2972, 2973, 2974, 2975, 2976, 2977, 2978, 2979, 2980, 2981, 2982, 2983, 2984, 2985, 2986, 2987, 2988, 2989, 2990, 2991, 2992, 2993, 2994, 2995, 2996, 2997, 2998, 2999, 3000, 3001, 3002, 3003, 3004, 3005, 3006, 3007, 3008, 3009, 3010, 3011, 3012, 3013, 3014, 3015, 3016, 3017, 3018, 3019, 3020, 3021, 3022, 3023, 3024, 3025, 3026, 3027, 3028, 3029, 3030, 3031, 3032, 3033, 3034, 3035, 3036, 3037, 3038, 3039, 3040, 3041, 3042, 3043, 3044, 3045, 3046, 3047, 3048, 3049, 3050, 3051, 3052, 3053, 3054, 3055, 3056, 3057, 3058, 3059, 3060, 3061, 3062, 3063, 3064, 3065, 3066, 3067, 3068, 3069, 3070, 3071, 3072, 3073, 3074, 3075, 3076, 3077, 3078, 3079, 3080, 3081, 3082, 3083, 3084, 3085, 3086, 3087, 3088, 3089, 3090, 3091, 3092, 3093, 3094, 3095, 3096, 3097, 3098, 3099, 3100, 3101, 3102, 3103, 3104, 3105, 3106, 3107, 3108, 3109, 3110, 3111, 3112, 3113, 3114, 3115, 3116, 3117, 3118, 3119, 3120, 3121, 3122, 3123, 3124, 3125, 3126, 3127, 3128, 3129, 3130, 3131, 3132, 3133, 3134, 3135, 3136, 3137, 3138, 3139, 3140, 3141, 3142, 3143, 3144, 3145, 3146, 3147, 3148, 3149, 3150, 3151, 3152, 3153, 3154, 3155, 3156, 3157, 3158, 3159, 3160, 3161, 3162, 3163, 3164, 3165, 3166, 3167, 3168, 3169, 3170, 3171, 3172, 3173, 3174, 3175, 3176, 3177, 3178, 3179, 3180, 3181, 3182, 3183, 3184, 3185, 3186, 3187, 3188, 3189, 3190, 3191, 3192, 3193, 3194, 3195, 3196, 3197, 3198, 3199, 3200, 3201, 3202, 3203, 3204, 3205, 3206, 3207, 3208, 3209, 3210, 3211, 3212, 3213, 3214, 3215, 3216, 3217, 3218, 3219, 3220, 3221, 3222, 3223, 3224, 3225, 3226, 3227, 3228, 3229, 3230, 3231, 3232, 3233, 3234, 3235, 3236, 3237, 3238, 3239, 3240, 3241, 3242, 3243, 3244, 3245, 3246, 3247, 3248, 3249, 3250, 3251, 3252, 3253, 3254, 3255, 3256, 3257, 3258, 3259, 3260, 3261, 3262, 3263, 3264, 3265, 3266, 3267, 3268, 3269, 3270, 3271, 3272, 3273, 3274, 3275, 3276, 3277, 3278, 3279, 3280, 3281, 3282, 3283, 3284, 3285, 3286, 3287, 3288, 3289, 3290, 3291, 3292, 3293, 3294, 3295, 3296, 3297, 3298, 3299, 3300, 3301, 3302, 3303, 3304, 3305, 3306, 3307, 3308, 3309, 3310, 3311, 3312, 3313, 3314, 3315, 3316, 3317, 3318, 3319, 3320, 3321, 3322, 3323, 3324, 3325, 3326, 3327, 3328, 3329, 3330, 3331, 3332, 3333, 3334, 3335, 3336, 3337, 3338, 3339, 3340, 3341, 3342, 3343, 3344, 3345, 3346, 3347, 3348, 3349, 3350, 3351, 3352, 3353, 3354, 3355, 3356, 3357, 3358, 3359, 3360, 3361, 3362, 3363, 3364, 3365, 3366, 3367, 3368, 3369, 3370, 3371, 3372, 3373, 3374, 3375, 3376, 3377, 3378, 3379, 3380, 3381, 3382, 3383, 3384, 3385, 3386, 3387, 3388, 3389, 3390, 3391, 3392, 3393, 3394, 3395, 3396, 3397, 3398, 3399, 3400, 3401, 3402, 3403, 3404, 3405, 3406, 3407, 3408, 3409, 3410, 3411, 3412, 3413, 3414, 3415, 3416, 3417, 3418, 3419, 3420, 3421, 3422, 3423, 3424, 3425, 3426, 3427, 3428, 3429, 3430, 3431, 3432, 3433, 3434, 3435, 3436, 3437, 3438, 3439, 3440, 3441, 3442, 3443, 3444, 3445, 3446, 3447, 3448, 3449, 3450, 3451, 3452, 3453, 3454, 3455, 3456, 3457, 3458, 3459, 3460, 3461, 3462, 3463, 3464, 3465, 3466, 3467, 3468, 3469, 3470, 3471, 3472, 3473, 3474, 3475, 3476, 3477, 3478, 3479, 3480, 3481, 3482, 3483, 3484, 3485, 3486, 3487, 3488, 3489, 3490, 3491, 3492, 3493, 3494, 3495, 3496, 3497, 3498, 3499, 3500, 3501, 3502, 3503, 3504, 3505, 3506, 3507, 3508, 3509, 3510, 3511, 3512, 3513, 3514, 3515, 3516, 3517, 3518, 3519, 3520, 3521, 3522, 3523, 3524, 3525, 3526, 3527, 3528, 3529, 3530, 3531, 3532, 3533, 3534, 3535, 3536, 3537, 3538, 3539, 3540, 3541, 3542, 3543, 3544, 3545, 3546, 3547, 3548, 3549, 3550, 3551, 3552, 3553, 3554, 3555, 3556, 3557, 3558, 3559, 3560, 3561, 3562, 3563, 3564, 3565, 3566, 3567, 3568, 3569, 3570, 3571, 3572, 3573, 3574, 3575, 3576, 3577, 3578, 3579, 3580, 3581, 3582, 3583, 3584, 3585, 3586, 3587, 3588, 3589, 3590, 3591, 3592, 3593, 3594, 3595, 3596, 3597, 3598, 3599, 3600, 3601, 3602, 3603, 3604, 3605, 3606, 3607, 3608, 3609, 3610, 3611, 3612, 3613, 3614, 3615, 3616, 3617, 3618, 3619, 3620, 3621, 3622, 3623, 3624, 3625, 3626, 3627, 3628, 3629, 3630, 3631, 3632, 3633, 3634, 3635, 3636, 3637, 3638, 3639, 3640, 3641, 3642, 3643, 3644, 3645, 3646, 3647, 3648, 3649, 3650, 3651, 3652, 3653, 3654, 3655, 3656, 3657, 3658, 3659, 3660, 3661, 3662, 3663, 3664, 3665, 3666, 3667, 3668, 3669, 3670, 3671, 3672, 3673, 3674, 3675, 3676, 3677, 3678, 3679, 3680, 3681, 3682, 3683, 3684, 3685, 3686, 3687, 3688, 3689, 3690, 3691, 3692, 3693, 3694, 3695, 3696, 3697, 3698, 3699, 3700, 3701, 3702, 3703, 3704, 3705, 3706, 3707, 3708, 3709, 3710, 3711, 3712, 3713, 3714, 3715, 3716, 3717, 3718, 3719, 3720, 3721, 3722, 3723, 3724, 3725, 3726, 3727, 3728, 3729, 3730, 3731, 3732, 3733, 3734, 3735, 3736, 3737, 3738, 3739, 3740, 3741, 3742, 3743, 3744, 3745, 3746, 3747, 3748, 3749, 3750, 3751, 3752, 3753, 3754, 3755, 3756, 3757, 3758, 3759, 3760, 3761, 3762, 3763, 3764, 3765, 3766, 3767, 3768, 3769, 3770, 3771, 3772, 3773, 3774, 3775, 3776, 3777, 3778, 3779, 3780, 3781, 3782, 3783, 3784, 3785, 3786, 3787, 3788, 3789, 3790, 3791, 3792, 3793, 3794, 3795, 3796, 3797, 3798, 3799, 3800, 3801, 3802, 3803, 3804, 3805, 3806, 3807, 3808, 3809, 3810, 3811, 3812, 3813, 3814, 3815, 3816, 3817, 3818, 3819, 3820, 3821, 3822, 3823, 3824, 3825, 3826, 3827, 3828, 3829, 3830, 3831, 3832, 3833, 3834, 3835, 3836, 3837, 3838, 3839, 3840, 3841, 3842, 3843, 3844, 3845, 3846, 3847, 3848, 3849, 3850, 3851, 3852, 3853, 3854, 3855, 3856, 3857, 3858, 3859, 3860, 3861, 3862, 3863, 3864, 3865, 3866, 3867, 3868, 3869, 3870, 3871, 3872, 3873, 3874, 3875, 3876, 3877, 3878, 3879, 3880, 3881, 3882, 3883, 3884, 3885, 3886, 3887, 3888, 3889, 3890, 3891, 3892, 3893, 3894, 3895, 3896, 3897, 3898, 3899, 3900, 3901, 3902, 3903, 3904, 3905, 3906, 3907, 3908, 3909, 3910, 3911, 3912, 3913, 3914, 3915, 3916, 3917, 3918, 3919, 3920, 3921, 3922, 3923, 3924, 3925, 3926, 3927, 3928, 3929, 3930, 3931, 3932, 3933, 3934, 3935, 3936, 3937, 3938, 3939, 3940, 3941, 3942, 3943, 3944, 3945, 3946, 3947, 3948, 3949, 3950, 3951, 3952, 3953, 3954, 3955, 3956, 3957, 3958, 3959, 3960, 3961, 3962, 3963, 3964, 3965, 3966, 3967, 3968, 3969, 3970, 3971, 3972, 3973, 3974, 3975, 3976, 3977, 3978, 3979, 3980, 3981, 3982, 3983, 3984, 3985, 3986, 3987, 3988, 3989, 3990, 3991, 3992, 3993, 3994, 3995, 3996, 3997, 3998, 3999, 4000, 4001, 4002, 4003, 4004, 4005, 4006, 4007, 4008, 4009, 4010, 4011, 4012, 4013, 4014, 4015, 4016, 4017, 4018, 4019, 4020, 4021, 4022, 4023, 4024, 4025, 4026, 4027, 4028, 4029, 4030, 4031, 4032, 4033, 4034, 4035, 4036, 4037, 4038, 4039, 4040, 4041, 4042, 4043, 4044, 4045, 4046, 4047, 4048, 4049, 4050, 4051, 4052, 4053, 4054, 4055, 4056, 4057, 4058, 4059, 4060, 4061, 4062, 4063, 4064, 4065, 4066, 4067, 4068, 4069, 4070, 4071, 4072, 4073, 4074, 4075, 4076, 4077, 4078, 4079, 4080, 4081, 4082, 4083, 4084, 4085, 4086, 4087, 4088, 4089, 4090, 4091, 4092, 4093, 4094, 4095, 4096, 4097, 4098, 4099, 4100, 4101, 4102, 4103, 4104, 4105, 4106, 4107, 4108, 4109, 4110, 4111, 4112, 4113, 4114, 4115, 4116, 4117, 4118, 4119, 4120, 4121, 4122, 4123, 4124, 4125, 4126, 4127, 4128, 4129, 4130, 4131, 4132, 4133, 4134, 4135, 4136, 4137, 4138, 4139, 4140, 4141, 4142, 4143, 4144, 4145, 4146, 4147, 4148, 4149, 4150, 4151, 4152, 4153, 4154, 4155, 4156, 4157, 4158, 4159, 4160, 4161, 4162, 4163, 4164, 4165, 4166, 4167, 4168, 4169, 4170, 4171, 4172, 4173, 4174, 4175, 4176, 4177, 4178, 4179, 4180, 4181, 4182, 4183, 4184, 4185, 4186, 4187, 4188, 4189, 4190, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4202, 4203, 4204, 4205, 4206, 4207, 4208, 4209, 4210, 4211, 4212, 4213, 4214, 4215, 4216, 4217, 4218, 4219, 4220, 4221, 4222, 4223, 4224, 4225, 4226, 4227, 4228, 4229, 4230, 4231, 4232, 4233, 4234, 4235, 4236, 4237, 4238, 4239, 4240, 4241, 4242, 4243, 4244, 4245, 4246, 4247, 4248, 4249, 4250, 4251, 4252, 4253, 4254, 4255, 4256, 4257, 4258, 4259, 4260, 4261, 4262, 4263, 4264, 4265, 4266, 4267, 4268, 4269, 4270, 4271, 4272, 4273, 4274, 4275, 4276, 4277, 4278, 4279, 4280, 4281, 4282, 4283, 4284, 4285, 4286, 4287, 4288, 4289, 4290, 4291, 4292, 4293, 4294, 4295, 4296, 4297, 4298, 4299, 4300, 4301, 4302, 4303, 4304, 4305, 4306, 4307, 4308, 4309, 4310, 4311, 4312, 4313, 4314, 4315, 4316, 4317, 4318, 4319, 4320, 4321, 4322, 4323, 4324, 4325, 4326, 4327, 4328, 4329, 4330, 4331, 4332, 4333, 4334, 4335, 4336, 4337, 4338, 4339, 4340, 4341, 4342, 4343, 4344, 4345, 4346, 4347, 4348, 4349, 4350, 4351, 4352, 4353, 4354, 4355, 4356, 4357, 4358, 4359, 4360, 4361, 4362, 4363, 4364, 4365, 4366, 4367, 4368, 4369, 4370, 4371, 4372, 4373, 4374, 4375, 4376, 4377, 4378, 4379, 4380, 4381, 4382, 4383, 4384, 4385, 4386, 4387, 4388, 4389, 4390, 4391, 4392, 4393, 4394, 4395, 4396, 4397, 4398, 4399, 4400, 4401, 4402, 4403, 4404, 4405, 4406, 4407, 4408, 4409, 4410, 4411, 4412, 4413, 4414, 4415, 4416, 4417, 4418, 4419, 4420, 4421, 4422, 4423, 4424, 4425, 4426, 4427, 4428, 4429, 4430, 4431, 4432, 4433, 4434, 4435, 4436, 4437, 4438, 4439, 4440, 4441, 4442, 4443, 4444, 4445, 4446, 4447, 4448, 4449, 4450, 4451, 4452, 4453, 4454, 4455, 4456, 4457, 4458, 4459, 4460, 4461, 4462, 4463, 4464, 4465, 4466, 4467, 4468, 4469, 4470, 4471, 4472, 4473, 4474, 4475, 4476, 4477, 4478, 4479, 4480, 4481, 4482, 4483, 4484, 4485, 4486, 4487, 4488, 4489, 4490, 4491, 4492, 4493, 4494, 4495, 4496, 4497, 4498, 4499, 4500, 4501, 4502, 4503, 4504, 4505, 4506, 4507, 4508, 4509, 4510, 4511, 4512, 4513, 4514, 4515, 4516, 4517, 4518, 4519, 4520, 4521, 4522, 4523, 4524, 4525, 4526, 4527, 4528, 4529, 4530, 4531, 4532, 4533, 4534, 4535, 4536, 4537, 4538, 4539, 4540, 4541, 4542, 4543, 4544, 4545, 4546, 4547, 4548, 4549, 4550, 4551, 4552, 4553, 4554, 4555, 4556, 4557, 4558, 4559, 4560, 4561, 4562, 4563, 4564, 4565, 4566, 4567, 4568, 4569, 4570, 4571, 4572, 4573, 4574, 4575, 4576, 4577, 4578, 4579, 4580, 4581, 4582, 4583, 4584, 4585, 4586, 4587, 4588, 4589, 4590, 4591, 4592, 4593, 4594, 4595, 4596, 4597, 4598, 4599, 4600, 4601, 4602, 4603, 4604, 4605, 4606, 4607, 4608, 4609, 4610, 4611, 4612, 4613, 4614, 4615, 4616, 4617, 4618, 4619, 4620, 4621, 4622, 4623, 4624, 4625, 4626, 4627, 4628, 4629, 4630, 4631, 4632, 4633, 4634, 4635, 4636, 4637, 4638, 4639, 4640, 4641, 4642, 4643, 4644, 4645, 4646, 4647, 4648, 4649, 4650, 4651, 4652, 4653, 4654, 4655, 4656, 4657, 4658, 4659, 4660, 4661, 4662, 4663, 4664, 4665, 4666, 4667, 4668, 4669, 4670, 4671, 4672, 4673, 4674, 4675, 4676, 4677, 4678, 4679, 4680, 4681, 4682, 4683, 4684, 4685, 4686, 4687, 4688, 4689, 4690, 4691, 4692, 4693, 4694, 4695, 4696, 4697, 4698, 4699, 4700, 4701, 4702, 4703, 4704, 4705, 4706, 4707, 4708, 4709, 4710, 4711, 4712, 4713, 4714, 4715, 4716, 4717, 4718, 4719, 4720, 4721, 4722, 4723, 4724, 4725, 4726, 4727, 4728, 4729, 4730, 4731, 4732, 4733, 4734, 4735, 4736, 4737, 4738, 4739, 4740, 4741, 4742, 4743, 4744, 4745, 4746, 4747, 4748, 4749, 4750, 4751, 4752, 4753, 4754, 4755, 4756, 4757, 4758, 4759, 4760, 4761, 4762, 4763, 4764, 4765, 4766, 4767, 4768, 4769, 4770, 4771, 4772, 4773, 4774, 4775, 4776, 4777, 4778, 4779, 4780, 4781, 4782, 4783, 4784, 4785, 4786, 4787, 4788, 4789, 4790, 4791, 4792, 4793, 4794, 4795, 4796, 4797, 4798, 4799, 4800, 4801, 4802, 4803, 4804, 4805, 4806, 4807, 4808, 4809, 4810, 4811, 4812, 4813, 4814, 4815, 4816, 4817, 4818, 4819, 4820, 4821, 4822, 4823, 4824, 4825, 4826, 4827, 4828, 4829, 4830, 4831, 4832, 4833, 4834, 4835, 4836, 4837, 4838, 4839, 4840, 4841, 4842, 4843, 4844, 4845, 4846, 4847, 4848, 4849, 4850, 4851, 4852, 4853, 4854, 4855, 4856, 4857, 4858, 4859, 4860, 4861, 4862, 4863, 4864, 4865, 4866, 4867, 4868, 4869, 4870, 4871, 4872, 4873, 4874, 4875, 4876, 4877, 4878, 4879, 4880, 4881, 4882, 4883, 4884, 4885, 4886, 4887, 4888, 4889, 4890, 4891, 4892, 4893, 4894, 4895, 4896, 4897, 4898, 4899, 4900, 4901, 4902, 4903, 4904, 4905, 4906, 4907, 4908, 4909, 4910, 4911, 4912, 4913, 4914, 4915, 4916, 4917, 4918, 4919, 4920, 4921, 4922, 4923, 4924, 4925, 4926, 4927, 4928, 4929, 4930, 4931, 4932, 4933, 4934, 4935, 4936, 4937, 4938, 4939, 4940, 4941, 4942, 4943, 4944, 4945, 4946, 4947, 4948, 4949, 4950, 4951, 4952, 4953, 4954, 4955, 4956, 4957, 4958, 4959, 4960, 4961, 4962, 4963, 4964, 4965, 4966, 4967, 4968, 4969, 4970, 4971, 4972, 4973, 4974, 4975, 4976, 4977, 4978, 4979, 4980, 4981, 4982, 4983, 4984, 4985, 4986, 4987, 4988, 4989, 4990, 4991, 4992, 4993, 4994, 4995, 4996, 4997, 4998, 4999, 5000, 5001, 5002, 5003, 5004, 5005, 5006, 5007, 5008, 5009, 5010, 5011, 5012, 5013, 5014, 5015, 5016, 5017, 5018, 5019, 5020, 5021, 5022, 5023, 5024, 5025, 5026, 5027, 5028, 5029, 5030, 5031, 5032, 5033, 5034, 5035, 5036, 5037, 5038, 5039, 5040, 5041, 5042, 5043, 5044, 5045, 5046, 5047, 5048, 5049, 5050, 5051, 5052, 5053, 5054, 5055, 5056, 5057, 5058, 5059, 5060, 5061, 5062, 5063, 5064, 5065, 5066, 5067, 5068, 5069, 5070, 5071, 5072, 5073, 5074, 5075, 5076, 5077, 5078, 5079, 5080, 5081, 5082, 5083, 5084, 5085, 5086, 5087, 5088, 5089, 5090, 5091, 5092, 5093, 5094, 5095, 5096, 5097, 5098, 5099, 5100, 5101, 5102, 5103, 5104, 5105, 5106, 5107, 5108, 5109, 5110, 5111, 5112, 5113, 5114, 5115, 5116, 5117, 5118, 5119, 5120, 5121, 5122, 5123, 5124, 5125, 5126, 5127, 5128, 5129, 5130, 5131, 5132, 5133, 5134, 5135, 5136, 5137, 5138, 5139, 5140, 5141, 5142, 5143, 5144, 5145, 5146, 5147, 5148, 5149, 5150, 5151, 5152, 5153, 5154, 5155, 5156, 5157, 5158, 5159, 5160, 5161, 5162, 5163, 5164, 5165, 5166, 5167, 5168, 5169, 5170, 5171, 5172, 5173, 5174, 5175, 5176, 5177, 5178, 5179, 5180, 5181, 5182, 5183, 5184, 5185, 5186, 5187, 5188, 5189, 5190, 5191, 5192, 5193, 5194, 5195, 5196, 5197, 5198, 5199, 5200, 5201, 5202, 5203, 5204, 5205, 5206, 5207, 5208, 5209, 5210, 5211, 5212, 5213, 5214, 5215, 5216, 5217, 5218, 5219, 5220, 5221, 5222, 5223, 5224, 5225, 5226, 5227, 5228, 5229, 5230, 5231, 5232, 5233, 5234, 5235, 5236, 5237, 5238, 5239, 5240, 5241, 5242, 5243, 5244, 5245, 5246, 5247, 5248, 5249, 5250, 5251, 5252, 5253, 5254, 5255, 5256, 5257, 5258, 5259, 5260, 5261, 5262, 5263, 5264, 5265, 5266, 5267, 5268, 5269, 5270, 5271, 5272, 5273, 5274, 5275, 5276, 5277, 5278, 5279, 5280, 5281, 5282, 5283, 5284, 5285, 5286, 5287, 5288, 5289, 5290, 5291, 5292, 5293, 5294, 5295, 5296, 5297, 5298, 5299, 5300, 5301, 5302, 5303, 5304, 5305, 5306, 5307, 5308, 5309, 5310, 5311, 5312, 5313, 5314, 5315, 5316, 5317, 5318, 5319, 5320, 5321, 5322, 5323, 5324, 5325, 5326, 5327, 5328, 5329, 5330, 5331, 5332, 5333, 5334, 5335, 5336, 5337, 5338, 5339, 5340, 5341, 5342, 5343, 5344, 5345, 5346, 5347, 5348, 5349, 5350, 5351, 5352, 5353, 5354, 5355, 5356, 5357, 5358, 5359, 5360, 5361, 5362, 5363, 5364, 5365, 5366, 5367, 5368, 5369, 5370, 5371, 5372, 5373, 5374, 5375, 5376, 5377, 5378, 5379, 5380, 5381, 5382, 5383, 5384, 5385, 5386, 5387, 5388, 5389, 5390, 5391, 5392, 5393, 5394, 5395, 5396, 5397, 5398, 5399, 5400, 5401, 5402, 5403, 5404, 5405, 5406, 5407, 5408, 5409, 5410, 5411, 5412, 5413, 5414, 5415, 5416, 5417, 5418, 5419, 5420, 5421, 5422, 5423, 5424, 5425, 5426, 5427, 5428, 5429, 5430, 5431, 5432, 5433, 5434, 5435, 5436, 5437, 5438, 5439, 5440, 5441, 5442, 5443, 5444, 5445, 5446, 5447, 5448, 5449, 5450, 5451, 5452, 5453, 5454, 5455, 5456, 5457, 5458, 5459, 5460, 5461, 5462, 5463, 5464, 5465, 5466, 5467, 5468, 5469, 5470, 5471, 5472, 5473, 5474, 5475, 5476, 5477, 5478, 5479, 5480, 5481, 5482, 5483, 5484, 5485, 5486, 5487, 5488, 5489, 5490, 5491, 5492, 5493, 5494, 5495, 5496, 5497, 5498, 5499, 5500, 5501, 5502, 5503, 5504, 5505, 5506, 5507, 5508, 5509, 5510, 5511, 5512, 5513, 5514, 5515, 5516, 5517, 5518, 5519, 5520, 5521, 5522, 5523, 5524, 5525, 5526, 5527, 5528, 5529, 5530, 5531, 5532, 5533, 5534, 5535, 5536, 5537, 5538, 5539, 5540, 5541, 5542, 5543, 5544, 5545, 5546, 5547, 5548, 5549, 5550, 5551, 5552, 5553, 5554, 5555, 5556, 5557, 5558, 5559, 5560, 5561, 5562, 5563, 5564, 5565, 5566, 5567, 5568, 5569, 5570, 5571, 5572, 5573, 5574, 5575, 5576, 5577, 5578, 5579, 5580, 5581, 5582, 5583, 5584, 5585, 5586, 5587, 5588, 5589, 5590, 5591, 5592, 5593, 5594, 5595, 5596, 5597, 5598, 5599, 5600, 5601, 5602, 5603, 5604, 5605, 5606, 5607, 5608, 5609, 5610, 5611, 5612, 5613, 5614, 5615, 5616, 5617, 5618, 5619, 5620, 5621, 5622, 5623, 5624, 5625, 5626, 5627, 5628, 5629, 5630, 5631, 5632, 5633, 5634, 5635, 5636, 5637, 5638, 5639, 5640, 5641, 5642, 5643, 5644, 5645, 5646, 5647, 5648, 5649, 5650, 5651, 5652, 5653, 5654, 5655, 5656, 5657, 5658, 5659, 5660, 5661, 5662, 5663, 5664, 5665, 5666, 5667, 5668, 5669, 5670, 5671, 5672, 5673, 5674, 5675, 5676, 5677, 5678, 5679, 5680, 5681, 5682, 5683, 5684, 5685, 5686, 5687, 5688, 5689, 5690, 5691, 5692, 5693, 5694, 5695, 5696, 5697, 5698, 5699, 5700, 5701, 5702, 5703, 5704, 5705, 5706, 5707, 5708, 5709, 5710, 5711, 5712, 5713, 5714, 5715, 5716, 5717, 5718, 5719, 5720, 5721, 5722, 5723, 5724, 5725, 5726, 5727, 5728, 5729, 5730, 5731, 5732, 5733, 5734, 5735, 5736, 5737, 5738, 5739, 5740, 5741, 5742, 5743, 5744, 5745, 5746, 5747, 5748, 5749, 5750, 5751, 5752, 5753, 5754, 5755, 5756, 5757, 5758, 5759, 5760, 5761, 5762, 5763, 5764, 5765, 5766, 5767, 5768, 5769, 5770, 5771, 5772, 5773, 5774, 5775, 5776, 5777, 5778, 5779, 5780, 5781, 5782, 5783, 5784, 5785, 5786, 5787, 5788, 5789, 5790, 5791, 5792, 5793, 5794, 5795, 5796, 5797, 5798, 5799, 5800, 5801, 5802, 5803, 5804, 5805, 5806, 5807, 5808, 5809, 5810, 5811, 5812, 5813, 5814, 5815, 5816, 5817, 5818, 5819, 5820, 5821, 5822, 5823, 5824, 5825, 5826, 5827, 5828, 5829, 5830, 5831, 5832, 5833, 5834, 5835, 5836, 5837, 5838, 5839, 5840, 5841, 5842, 5843, 5844, 5845, 5846, 5847, 5848, 5849, 5850, 5851, 5852, 5853, 5854, 5855, 5856, 5857, 5858, 5859, 5860, 5861, 5862, 5863, 5864, 5865, 5866, 5867, 5868, 5869, 5870, 5871, 5872, 5873, 5874, 5875, 5876, 5877, 5878, 5879, 5880, 5881, 5882, 5883, 5884, 5885, 5886, 5887, 5888, 5889, 5890, 5891, 5892, 5893, 5894, 5895, 5896, 5897, 5898, 5899, 5900, 5901, 5902, 5903, 5904, 5905, 5906, 5907, 5908, 5909, 5910, 5911, 5912, 5913, 5914, 5915, 5916, 5917, 5918, 5919, 5920, 5921, 5922, 5923, 5924, 5925, 5926, 5927, 5928, 5929, 5930, 5931, 5932, 5933, 5934, 5935, 5936, 5937, 5938, 5939, 5940, 5941, 5942, 5943, 5944, 5945, 5946, 5947, 5948, 5949, 5950, 5951, 5952, 5953, 5954, 5955, 5956, 5957, 5958, 5959, 5960, 5961, 5962, 5963, 5964, 5965, 5966, 5967, 5968, 5969, 5970, 5971, 5972, 5973, 5974, 5975, 5976, 5977, 5978, 5979, 5980, 5981, 5982, 5983, 5984, 5985, 5986, 5987, 5988, 5989, 5990, 5991, 5992, 5993, 5994, 5995, 5996, 5997, 5998, 5999, 6000, 6001, 6002, 6003, 6004, 6005, 6006, 6007, 6008, 6009, 6010, 6011, 6012, 6013, 6014, 6015, 6016, 6017, 6018, 6019, 6020, 6021, 6022, 6023, 6024, 6025, 6026, 6027, 6028, 6029, 6030, 6031, 6032, 6033, 6034, 6035, 6036, 6037, 6038, 6039, 6040, 6041, 6042, 6043, 6044, 6045, 6046, 6047, 6048, 6049, 6050, 6051, 6052, 6053, 6054, 6055, 6056, 6057, 6058, 6059, 6060, 6061, 6062, 6063, 6064, 6065, 6066, 6067, 6068, 6069, 6070, 6071, 6072, 6073, 6074, 6075, 6076, 6077, 6078, 6079, 6080, 6081, 6082, 6083, 6084, 6085, 6086, 6087, 6088, 6089, 6090, 6091, 6092, 6093, 6094, 6095, 6096, 6097, 6098, 6099, 6100, 6101, 6102, 6103, 6104, 6105, 6106, 6107, 6108, 6109, 6110, 6111, 6112, 6113, 6114, 6115, 6116, 6117, 6118, 6119, 6120, 6121, 6122, 6123, 6124, 6125, 6126, 6127, 6128, 6129, 6130, 6131, 6132, 6133, 6134, 6135, 6136, 6137, 6138, 6139, 6140, 6141, 6142, 6143, 6144, 6145, 6146, 6147, 6148, 6149, 6150, 6151, 6152, 6153, 6154, 6155, 6156, 6157, 6158, 6159, 6160, 6161, 6162, 6163, 6164, 6165, 6166, 6167, 6168, 6169, 6170, 6171, 6172, 6173, 6174, 6175, 6176, 6177, 6178, 6179, 6180, 6181, 6182, 6183, 6184, 6185, 6186, 6187, 6188, 6189, 6190, 6191, 6192, 6193, 6194, 6195, 6196, 6197, 6198, 6199, 6200, 6201, 6202, 6203, 6204, 6205, 6206, 6207, 6208, 6209, 6210, 6211, 6212, 6213, 6214, 6215, 6216, 6217, 6218, 6219, 6220, 6221, 6222, 6223, 6224, 6225, 6226, 6227, 6228, 6229, 6230, 6231, 6232, 6233, 6234, 6235, 6236, 6237, 6238, 6239, 6240, 6241, 6242, 6243, 6244, 6245, 6246, 6247, 6248, 6249, 6250, 6251, 6252, 6253, 6254, 6255, 6256, 6257, 6258, 6259, 6260, 6261, 6262, 6263, 6264, 6265, 6266, 6267, 6268, 6269, 6270, 6271, 6272, 6273, 6274, 6275, 6276, 6277, 6278, 6279, 6280, 6281, 6282, 6283, 6284, 6285, 6286, 6287, 6288, 6289, 6290, 6291, 6292, 6293, 6294, 6295, 6296, 6297, 6298, 6299, 6300, 6301, 6302, 6303, 6304, 6305, 6306, 6307, 6308, 6309, 6310, 6311, 6312, 6313, 6314, 6315, 6316, 6317, 6318, 6319, 6320, 6321, 6322, 6323, 6324, 6325, 6326, 6327, 6328, 6329, 6330, 6331, 6332, 6333, 6334, 6335, 6336, 6337, 6338, 6339, 6340, 6341, 6342, 6343, 6344, 6345, 6346, 6347, 6348, 6349, 6350, 6351, 6352, 6353, 6354, 6355, 6356, 6357, 6358, 6359, 6360, 6361, 6362, 6363, 6364, 6365, 6366, 6367, 6368, 6369, 6370, 6371, 6372, 6373, 6374, 6375, 6376, 6377, 6378, 6379, 6380, 6381, 6382, 6383, 6384, 6385, 6386, 6387, 6388, 6389, 6390, 6391, 6392, 6393, 6394, 6395, 6396, 6397, 6398, 6399, 6400, 6401, 6402, 6403, 6404, 6405, 6406, 6407, 6408, 6409, 6410, 6411, 6412, 6413, 6414, 6415, 6416, 6417, 6418, 6419, 6420, 6421, 6422, 6423, 6424, 6425, 6426, 6427, 6428, 6429, 6430, 6431, 6432, 6433, 6434, 6435, 6436, 6437, 6438, 6439, 6440, 6441, 6442, 6443, 6444, 6445, 6446, 6447, 6448, 6449, 6450, 6451, 6452, 6453, 6454, 6455, 6456, 6457, 6458, 6459, 6460, 6461, 6462, 6463, 6464, 6465, 6466, 6467, 6468, 6469, 6470, 6471, 6472, 6473, 6474, 6475, 6476, 6477, 6478, 6479, 6480, 6481, 6482, 6483, 6484, 6485, 6486, 6487, 6488, 6489, 6490, 6491, 6492, 6493, 6494, 6495, 6496, 6497, 6498, 6499, 6500, 6501, 6502, 6503, 6504, 6505, 6506, 6507, 6508, 6509, 6510, 6511, 6512, 6513, 6514, 6515, 6516, 6517, 6518, 6519, 6520, 6521, 6522, 6523, 6524, 6525, 6526, 6527, 6528, 6529, 6530, 6531, 6532, 6533, 6534, 6535, 6536, 6537, 6538, 6539, 6540, 6541, 6542, 6543, 6544, 6545, 6546, 6547, 6548, 6549, 6550, 6551, 6552, 6553, 6554, 6555, 6556, 6557, 6558, 6559, 6560, 6561, 6562, 6563, 6564, 6565, 6566, 6567, 6568, 6569, 6570, 6571, 6572, 6573, 6574, 6575, 6576, 6577, 6578, 6579, 6580, 6581, 6582, 6583, 6584, 6585, 6586, 6587, 6588, 6589, 6590, 6591, 6592, 6593, 6594, 6595, 6596, 6597, 6598, 6599, 6600, 6601, 6602, 6603, 6604, 6605, 6606, 6607, 6608, 6609, 6610, 6611, 6612, 6613, 6614, 6615, 6616, 6617, 6618, 6619, 6620, 6621, 6622, 6623, 6624, 6625, 6626, 6627, 6628, 6629, 6630, 6631, 6632, 6633, 6634, 6635, 6636, 6637, 6638, 6639, 6640, 6641, 6642, 6643, 6644, 6645, 6646, 6647, 6648, 6649, 6650, 6651, 6652, 6653, 6654, 6655, 6656, 6657, 6658, 6659, 6660, 6661, 6662, 6663, 6664, 6665, 6666, 6667, 6668, 6669, 6670, 6671, 6672, 6673, 6674, 6675, 6676, 6677, 6678, 6679, 6680, 6681, 6682, 6683, 6684, 6685, 6686, 6687, 6688, 6689, 6690, 6691, 6692, 6693, 6694, 6695, 6696, 6697, 6698, 6699, 6700, 6701, 6702, 6703, 6704, 6705, 6706, 6707, 6708, 6709, 6710, 6711, 6712, 6713, 6714, 6715, 6716, 6717, 6718, 6719, 6720, 6721, 6722, 6723, 6724, 6725, 6726, 6727, 6728, 6729, 6730, 6731, 6732, 6733, 6734, 6735, 6736, 6737, 6738, 6739, 6740, 6741, 6742, 6743, 6744, 6745, 6746, 6747, 6748, 6749, 6750, 6751, 6752, 6753, 6754, 6755, 6756, 6757, 6758, 6759, 6760, 6761, 6762, 6763, 6764, 6765, 6766, 6767, 6768, 6769, 6770, 6771, 6772, 6773, 6774, 6775, 6776, 6777, 6778, 6779, 6780, 6781, 6782, 6783, 6784, 6785, 6786, 6787, 6788, 6789, 6790, 6791, 6792, 6793, 6794, 6795, 6796, 6797, 6798, 6799, 6800, 6801, 6802, 6803, 6804, 6805, 6806, 6807, 6808, 6809, 6810, 6811, 6812, 6813, 6814, 6815, 6816, 6817, 6818, 6819, 6820, 6821, 6822, 6823, 6824, 6825, 6826, 6827, 6828, 6829, 6830, 6831, 6832, 6833, 6834, 6835, 6836, 6837, 6838, 6839, 6840, 6841, 6842, 6843, 6844, 6845, 6846, 6847, 6848, 6849, 6850, 6851, 6852, 6853, 6854, 6855, 6856, 6857, 6858, 6859, 6860, 6861, 6862, 6863, 6864, 6865, 6866, 6867, 6868, 6869, 6870, 6871, 6872, 6873, 6874, 6875, 6876, 6877, 6878, 6879, 6880, 6881, 6882, 6883, 6884, 6885, 6886, 6887, 6888, 6889, 6890, 6891, 6892, 6893, 6894, 6895, 6896, 6897, 6898, 6899, 6900, 6901, 6902, 6903, 6904, 6905, 6906, 6907, 6908, 6909, 6910, 6911, 6912, 6913, 6914, 6915, 6916, 6917, 6918, 6919, 6920, 6921, 6922, 6923, 6924, 6925, 6926, 6927, 6928, 6929, 6930, 6931, 6932, 6933, 6934, 6935, 6936, 6937, 6938, 6939, 6940, 6941, 6942, 6943, 6944, 6945, 6946, 6947, 6948, 6949, 6950, 6951, 6952, 6953, 6954, 6955, 6956, 6957, 6958, 6959, 6960, 6961, 6962, 6963, 6964, 6965, 6966, 6967, 6968, 6969, 6970, 6971, 6972, 6973, 6974, 6975, 6976, 6977, 6978, 6979, 6980, 6981, 6982, 6983, 6984, 6985, 6986, 6987, 6988, 6989, 6990, 6991, 6992, 6993, 6994, 6995, 6996, 6997, 6998, 6999, 7000, 7001, 7002, 7003, 7004, 7005, 7006, 7007, 7008, 7009, 7010, 7011, 7012, 7013, 7014, 7015, 7016, 7017, 7018, 7019, 7020, 7021, 7022, 7023, 7024, 7025, 7026, 7027, 7028, 7029, 7030, 7031, 7032, 7033, 7034, 7035, 7036, 7037, 7038, 7039, 7040, 7041, 7042, 7043, 7044, 7045, 7046, 7047, 7048, 7049, 7050, 7051, 7052, 7053, 7054, 7055, 7056, 7057, 7058, 7059, 7060, 7061, 7062, 7063, 7064, 7065, 7066, 7067, 7068, 7069, 7070, 7071, 7072, 7073, 7074, 7075, 7076, 7077, 7078, 7079, 7080, 7081, 7082, 7083, 7084, 7085, 7086, 7087, 7088, 7089, 7090, 7091, 7092, 7093, 7094, 7095, 7096, 7097, 7098, 7099, 7100, 7101, 7102, 7103, 7104, 7105, 7106, 7107, 7108, 7109, 7110, 7111, 7112, 7113, 7114, 7115, 7116, 7117, 7118, 7119, 7120, 7121, 7122, 7123, 7124, 7125, 7126, 7127, 7128, 7129, 7130, 7131, 7132, 7133, 7134, 7135, 7136, 7137, 7138, 7139, 7140, 7141, 7142, 7143, 7144, 7145, 7146, 7147, 7148, 7149, 7150, 7151, 7152, 7153, 7154, 7155, 7156, 7157, 7158, 7159, 7160, 7161, 7162, 7163, 7164, 7165, 7166, 7167, 7168, 7169, 7170, 7171, 7172, 7173, 7174, 7175, 7176, 7177, 7178, 7179, 7180, 7181, 7182, 7183, 7184, 7185, 7186, 7187, 7188, 7189, 7190, 7191, 7192, 7193, 7194, 7195, 7196, 7197, 7198, 7199, 7200, 7201, 7202, 7203, 7204, 7205, 7206, 7207, 7208, 7209, 7210, 7211, 7212, 7213, 7214, 7215, 7216, 7217, 7218, 7219, 7220, 7221, 7222, 7223, 7224, 7225, 7226, 7227, 7228, 7229, 7230, 7231, 7232, 7233, 7234, 7235, 7236, 7237, 7238, 7239, 7240, 7241, 7242, 7243, 7244, 7245, 7246, 7247, 7248, 7249, 7250, 7251, 7252, 7253, 7254, 7255, 7256, 7257, 7258, 7259, 7260, 7261, 7262, 7263, 7264, 7265, 7266, 7267, 7268, 7269, 7270, 7271, 7272, 7273, 7274, 7275, 7276, 7277, 7278, 7279, 7280, 7281, 7282, 7283, 7284, 7285, 7286, 7287, 7288, 7289, 7290, 7291, 7292, 7293, 7294, 7295, 7296, 7297, 7298, 7299, 7300, 7301, 7302, 7303, 7304, 7305, 7306, 7307, 7308, 7309, 7310, 7311, 7312, 7313, 7314, 7315, 7316, 7317, 7318, 7319, 7320, 7321, 7322, 7323, 7324, 7325, 7326, 7327, 7328, 7329, 7330, 7331, 7332, 7333, 7334, 7335, 7336, 7337, 7338, 7339, 7340, 7341, 7342, 7343, 7344, 7345, 7346, 7347, 7348, 7349, 7350, 7351, 7352, 7353, 7354, 7355, 7356, 7357, 7358, 7359, 7360, 7361, 7362, 7363, 7364, 7365, 7366, 7367, 7368, 7369, 7370, 7371, 7372, 7373, 7374, 7375, 7376, 7377, 7378, 7379, 7380, 7381, 7382, 7383, 7384, 7385, 7386, 7387, 7388, 7389, 7390, 7391, 7392, 7393, 7394, 7395, 7396, 7397, 7398, 7399, 7400, 7401, 7402, 7403, 7404, 7405, 7406, 7407, 7408, 7409, 7410, 7411, 7412, 7413, 7414, 7415, 7416, 7417, 7418, 7419, 7420, 7421, 7422, 7423, 7424, 7425, 7426, 7427, 7428, 7429, 7430, 7431, 7432, 7433, 7434, 7435, 7436, 7437, 7438, 7439, 7440, 7441, 7442, 7443, 7444, 7445, 7446, 7447, 7448, 7449, 7450, 7451, 7452, 7453, 7454, 7455, 7456, 7457, 7458, 7459, 7460, 7461, 7462, 7463, 7464, 7465, 7466, 7467, 7468, 7469, 7470, 7471, 7472, 7473, 7474, 7475, 7476, 7477, 7478, 7479, 7480, 7481, 7482, 7483, 7484, 7485, 7486, 7487, 7488, 7489, 7490, 7491, 7492, 7493, 7494, 7495, 7496, 7497, 7498, 7499, 7500, 7501, 7502, 7503, 7504, 7505, 7506, 7507, 7508, 7509, 7510, 7511, 7512, 7513, 7514, 7515, 7516, 7517, 7518, 7519, 7520, 7521, 7522, 7523, 7524, 7525, 7526, 7527, 7528, 7529, 7530, 7531, 7532, 7533, 7534, 7535, 7536, 7537, 7538, 7539, 7540, 7541, 7542, 7543, 7544, 7545, 7546, 7547, 7548, 7549, 7550, 7551, 7552, 7553, 7554, 7555, 7556, 7557, 7558, 7559, 7560, 7561, 7562, 7563, 7564, 7565, 7566, 7567, 7568, 7569, 7570, 7571, 7572, 7573, 7574, 7575, 7576, 7577, 7578, 7579, 7580, 7581, 7582, 7583, 7584, 7585, 7586, 7587, 7588, 7589, 7590, 7591, 7592, 7593, 7594, 7595, 7596, 7597, 7598, 7599, 7600, 7601, 7602, 7603, 7604, 7605, 7606, 7607, 7608, 7609, 7610, 7611, 7612, 7613, 7614, 7615, 7616, 7617, 7618, 7619, 7620, 7621, 7622, 7623, 7624, 7625, 7626, 7627, 7628, 7629, 7630, 7631, 7632, 7633, 7634, 7635, 7636, 7637, 7638, 7639, 7640, 7641, 7642, 7643, 7644, 7645, 7646, 7647, 7648, 7649, 7650, 7651, 7652, 7653, 7654, 7655, 7656, 7657, 7658, 7659, 7660, 7661, 7662, 7663, 7664, 7665, 7666, 7667, 7668, 7669, 7670, 7671, 7672, 7673, 7674, 7675, 7676, 7677, 7678, 7679, 7680, 7681, 7682, 7683, 7684, 7685, 7686, 7687, 7688, 7689, 7690, 7691, 7692, 7693, 7694, 7695, 7696, 7697, 7698, 7699, 7700, 7701, 7702, 7703, 7704, 7705, 7706, 7707, 7708, 7709, 7710, 7711, 7712, 7713, 7714, 7715, 7716, 7717, 7718, 7719, 7720, 7721, 7722, 7723, 7724, 7725, 7726, 7727, 7728, 7729, 7730, 7731, 7732, 7733, 7734, 7735, 7736, 7737, 7738, 7739, 7740, 7741, 7742, 7743, 7744, 7745, 7746, 7747, 7748, 7749, 7750, 7751, 7752, 7753, 7754, 7755, 7756, 7757, 7758, 7759, 7760, 7761, 7762, 7763, 7764, 7765, 7766, 7767, 7768, 7769, 7770, 7771, 7772, 7773, 7774, 7775, 7776, 7777, 7778, 7779, 7780, 7781, 7782, 7783, 7784, 7785, 7786, 7787, 7788, 7789, 7790, 7791, 7792, 7793, 7794, 7795, 7796, 7797, 7798, 7799, 7800, 7801, 7802, 7803, 7804, 7805, 7806, 7807, 7808, 7809, 7810, 7811, 7812, 7813, 7814, 7815, 7816, 7817, 7818, 7819, 7820, 7821, 7822, 7823, 7824, 7825, 7826, 7827, 7828, 7829, 7830, 7831, 7832, 7833, 7834, 7835, 7836, 7837, 7838, 7839, 7840, 7841, 7842, 7843, 7844, 7845, 7846, 7847, 7848, 7849, 7850, 7851, 7852, 7853, 7854, 7855, 7856, 7857, 7858, 7859, 7860, 7861, 7862, 7863, 7864, 7865, 7866, 7867, 7868, 7869, 7870, 7871, 7872, 7873, 7874, 7875, 7876, 7877, 7878, 7879, 7880, 7881, 7882, 7883, 7884, 7885, 7886, 7887, 7888, 7889, 7890, 7891, 7892, 7893, 7894, 7895, 7896, 7897, 7898, 7899, 7900, 7901, 7902, 7903, 7904, 7905, 7906, 7907, 7908, 7909, 7910, 7911, 7912, 7913, 7914, 7915, 7916, 7917, 7918, 7919, 7920, 7921, 7922, 7923, 7924, 7925, 7926, 7927, 7928, 7929, 7930, 7931, 7932, 7933, 7934, 7935, 7936, 7937, 7938, 7939, 7940, 7941, 7942, 7943, 7944, 7945, 7946, 7947, 7948, 7949, 7950, 7951, 7952, 7953, 7954, 7955, 7956, 7957, 7958, 7959, 7960, 7961, 7962, 7963, 7964, 7965, 7966, 7967, 7968, 7969, 7970, 7971, 7972, 7973, 7974, 7975, 7976, 7977, 7978, 7979, 7980, 7981, 7982, 7983, 7984, 7985, 7986, 7987, 7988, 7989, 7990, 7991, 7992, 7993, 7994, 7995, 7996, 7997, 7998, 7999, 8000, 8001, 8002, 8003, 8004, 8005, 8006, 8007, 8008, 8009, 8010, 8011, 8012, 8013, 8014, 8015, 8016, 8017, 8018, 8019, 8020, 8021, 8022, 8023, 8024, 8025, 8026, 8027, 8028, 8029, 8030, 8031, 8032, 8033, 8034, 8035, 8036, 8037, 8038, 8039, 8040, 8041, 8042, 8043, 8044, 8045, 8046, 8047, 8048, 8049, 8050, 8051, 8052, 8053, 8054, 8055, 8056, 8057, 8058, 8059, 8060, 8061, 8062, 8063, 8064, 8065, 8066, 8067, 8068, 8069, 8070, 8071, 8072, 8073, 8074, 8075, 8076, 8077, 8078, 8079, 8080, 8081, 8082, 8083, 8084, 8085, 8086, 8087, 8088, 8089, 8090, 8091, 8092, 8093, 8094, 8095, 8096, 8097, 8098, 8099, 8100, 8101, 8102, 8103, 8104, 8105, 8106, 8107, 8108, 8109, 8110, 8111, 8112, 8113, 8114, 8115, 8116, 8117, 8118, 8119, 8120, 8121, 8122, 8123, 8124, 8125, 8126, 8127, 8128, 8129, 8130, 8131, 8132, 8133, 8134, 8135, 8136, 8137, 8138, 8139, 8140, 8141, 8142, 8143, 8144, 8145, 8146, 8147, 8148, 8149, 8150, 8151, 8152, 8153, 8154, 8155, 8156, 8157, 8158, 8159, 8160, 8161, 8162, 8163, 8164, 8165, 8166, 8167, 8168, 8169, 8170, 8171, 8172, 8173, 8174, 8175, 8176, 8177, 8178, 8179, 8180, 8181, 8182, 8183, 8184, 8185, 8186, 8187, 8188, 8189, 8190, 8191, 8192, 8193, 8194, 8195, 8196, 8197, 8198, 8199, 8200, 8201, 8202, 8203, 8204, 8205, 8206, 8207, 8208, 8209, 8210, 8211, 8212, 8213, 8214, 8215, 8216, 8217, 8218, 8219, 8220, 8221, 8222, 8223, 8224, 8225, 8226, 8227, 8228, 8229, 8230, 8231, 8232, 8233, 8234, 8235, 8236, 8237, 8238, 8239, 8240, 8241, 8242, 8243, 8244, 8245, 8246, 8247, 8248, 8249, 8250, 8251, 8252, 8253, 8254, 8255, 8256, 8257, 8258, 8259, 8260, 8261, 8262, 8263, 8264, 8265, 8266, 8267, 8268, 8269, 8270, 8271, 8272, 8273, 8274, 8275, 8276, 8277, 8278, 8279, 8280, 8281, 8282, 8283, 8284, 8285, 8286, 8287, 8288, 8289, 8290, 8291, 8292, 8293, 8294, 8295, 8296, 8297, 8298, 8299, 8300, 8301, 8302, 8303, 8304, 8305, 8306, 8307, 8308, 8309, 8310, 8311, 8312, 8313, 8314, 8315, 8316, 8317, 8318, 8319, 8320, 8321, 8322, 8323, 8324, 8325, 8326, 8327, 8328, 8329, 8330, 8331, 8332, 8333, 8334, 8335, 8336, 8337, 8338, 8339, 8340, 8341, 8342, 8343, 8344, 8345, 8346, 8347, 8348, 8349, 8350, 8351, 8352, 8353, 8354, 8355, 8356, 8357, 8358, 8359, 8360, 8361, 8362, 8363, 8364, 8365, 8366, 8367, 8368, 8369, 8370, 8371, 8372, 8373, 8374, 8375, 8376, 8377, 8378, 8379, 8380, 8381, 8382, 8383, 8384, 8385, 8386, 8387, 8388, 8389, 8390, 8391, 8392, 8393, 8394, 8395, 8396, 8397, 8398, 8399, 8400, 8401, 8402, 8403, 8404, 8405, 8406, 8407, 8408, 8409, 8410, 8411, 8412, 8413, 8414, 8415, 8416, 8417, 8418, 8419, 8420, 8421, 8422, 8423, 8424, 8425, 8426, 8427, 8428, 8429, 8430, 8431, 8432, 8433, 8434, 8435, 8436, 8437, 8438, 8439, 8440, 8441, 8442, 8443, 8444, 8445, 8446, 8447, 8448, 8449, 8450, 8451, 8452, 8453, 8454, 8455, 8456, 8457, 8458, 8459, 8460, 8461, 8462, 8463, 8464, 8465, 8466, 8467, 8468, 8469, 8470, 8471, 8472, 8473, 8474, 8475, 8476, 8477, 8478, 8479, 8480, 8481, 8482, 8483, 8484, 8485, 8486, 8487, 8488, 8489, 8490, 8491, 8492, 8493, 8494, 8495, 8496, 8497, 8498, 8499, 8500, 8501, 8502, 8503, 8504, 8505, 8506, 8507, 8508, 8509, 8510, 8511, 8512, 8513, 8514, 8515, 8516, 8517, 8518, 8519, 8520, 8521, 8522, 8523, 8524, 8525, 8526, 8527, 8528, 8529, 8530, 8531, 8532, 8533, 8534, 8535, 8536, 8537, 8538, 8539, 8540, 8541, 8542, 8543, 8544, 8545, 8546, 8547, 8548, 8549, 8550, 8551, 8552, 8553, 8554, 8555, 8556, 8557, 8558, 8559, 8560, 8561, 8562, 8563, 8564, 8565, 8566, 8567, 8568, 8569, 8570, 8571, 8572, 8573, 8574, 8575, 8576, 8577, 8578, 8579, 8580, 8581, 8582, 8583, 8584, 8585, 8586, 8587, 8588, 8589, 8590, 8591, 8592, 8593, 8594, 8595, 8596, 8597, 8598, 8599, 8600, 8601, 8602, 8603, 8604, 8605, 8606, 8607, 8608, 8609, 8610, 8611, 8612, 8613, 8614, 8615, 8616, 8617, 8618, 8619, 8620, 8621, 8622, 8623, 8624, 8625, 8626, 8627, 8628, 8629, 8630, 8631, 8632, 8633, 8634, 8635, 8636, 8637, 8638, 8639, 8640, 8641, 8642, 8643, 8644, 8645, 8646, 8647, 8648, 8649, 8650, 8651, 8652, 8653, 8654, 8655, 8656, 8657, 8658, 8659, 8660, 8661, 8662, 8663, 8664, 8665, 8666, 8667, 8668, 8669, 8670, 8671, 8672, 8673, 8674, 8675, 8676, 8677, 8678, 8679, 8680, 8681, 8682, 8683, 8684, 8685, 8686, 8687, 8688, 8689, 8690, 8691, 8692, 8693, 8694, 8695, 8696, 8697, 8698, 8699, 8700, 8701, 8702, 8703, 8704, 8705, 8706, 8707, 8708, 8709, 8710, 8711, 8712, 8713, 8714, 8715, 8716, 8717, 8718, 8719, 8720, 8721, 8722, 8723, 8724, 8725, 8726, 8727, 8728, 8729, 8730, 8731, 8732, 8733, 8734, 8735, 8736, 8737, 8738, 8739, 8740, 8741, 8742, 8743, 8744, 8745, 8746, 8747, 8748, 8749, 8750, 8751, 8752, 8753, 8754, 8755, 8756, 8757, 8758, 8759, 8760, 8761, 8762, 8763, 8764, 8765, 8766, 8767, 8768, 8769, 8770, 8771, 8772, 8773, 8774, 8775, 8776, 8777, 8778, 8779, 8780, 8781, 8782, 8783, 8784, 8785, 8786, 8787, 8788, 8789, 8790, 8791, 8792, 8793, 8794, 8795, 8796, 8797, 8798, 8799, 8800, 8801, 8802, 8803, 8804, 8805, 8806, 8807, 8808, 8809, 8810, 8811, 8812, 8813, 8814, 8815, 8816, 8817, 8818, 8819, 8820, 8821, 8822, 8823, 8824, 8825, 8826, 8827, 8828, 8829, 8830, 8831, 8832, 8833, 8834, 8835, 8836, 8837, 8838, 8839, 8840, 8841, 8842, 8843, 8844, 8845, 8846, 8847, 8848, 8849, 8850, 8851, 8852, 8853, 8854, 8855, 8856, 8857, 8858, 8859, 8860, 8861, 8862, 8863, 8864, 8865, 8866, 8867, 8868, 8869, 8870, 8871, 8872, 8873, 8874, 8875, 8876, 8877, 8878, 8879, 8880, 8881, 8882, 8883, 8884, 8885, 8886, 8887, 8888, 8889, 8890, 8891, 8892, 8893, 8894, 8895, 8896, 8897, 8898, 8899, 8900, 8901, 8902, 8903, 8904, 8905, 8906, 8907, 8908, 8909, 8910, 8911, 8912, 8913, 8914, 8915, 8916, 8917, 8918, 8919, 8920, 8921, 8922, 8923, 8924, 8925, 8926, 8927, 8928, 8929, 8930, 8931, 8932, 8933, 8934, 8935, 8936, 8937, 8938, 8939, 8940, 8941, 8942, 8943, 8944, 8945, 8946, 8947, 8948, 8949, 8950, 8951, 8952, 8953, 8954, 8955, 8956, 8957, 8958, 8959, 8960, 8961, 8962, 8963, 8964, 8965, 8966, 8967, 8968, 8969, 8970, 8971, 8972, 8973, 8974, 8975, 8976, 8977, 8978, 8979, 8980, 8981, 8982, 8983, 8984, 8985, 8986, 8987, 8988, 8989, 8990, 8991, 8992, 8993, 8994, 8995, 8996, 8997, 8998, 8999, 9000, 9001, 9002, 9003, 9004, 9005, 9006, 9007, 9008, 9009, 9010, 9011, 9012, 9013, 9014, 9015, 9016, 9017, 9018, 9019, 9020, 9021, 9022, 9023, 9024, 9025, 9026, 9027, 9028, 9029, 9030, 9031, 9032, 9033, 9034, 9035, 9036, 9037, 9038, 9039, 9040, 9041, 9042, 9043, 9044, 9045, 9046, 9047, 9048, 9049, 9050, 9051, 9052, 9053, 9054, 9055, 9056, 9057, 9058, 9059, 9060, 9061, 9062, 9063, 9064, 9065, 9066, 9067, 9068, 9069, 9070, 9071, 9072, 9073, 9074, 9075, 9076, 9077, 9078, 9079, 9080, 9081, 9082, 9083, 9084, 9085, 9086, 9087, 9088, 9089, 9090, 9091, 9092, 9093, 9094, 9095, 9096, 9097, 9098, 9099, 9100, 9101, 9102, 9103, 9104, 9105, 9106, 9107, 9108, 9109, 9110, 9111, 9112, 9113, 9114, 9115, 9116, 9117, 9118, 9119, 9120, 9121, 9122, 9123, 9124, 9125, 9126, 9127, 9128, 9129, 9130, 9131, 9132, 9133, 9134, 9135, 9136, 9137, 9138, 9139, 9140, 9141, 9142, 9143, 9144, 9145, 9146, 9147, 9148, 9149, 9150, 9151, 9152, 9153, 9154, 9155, 9156, 9157, 9158, 9159, 9160, 9161, 9162, 9163, 9164, 9165, 9166, 9167, 9168, 9169, 9170, 9171, 9172, 9173, 9174, 9175, 9176, 9177, 9178, 9179, 9180, 9181, 9182, 9183, 9184, 9185, 9186, 9187, 9188, 9189, 9190, 9191, 9192, 9193, 9194, 9195, 9196, 9197, 9198, 9199, 9200, 9201, 9202, 9203, 9204, 9205, 9206, 9207, 9208, 9209, 9210, 9211, 9212, 9213, 9214, 9215, 9216, 9217, 9218, 9219, 9220, 9221, 9222, 9223, 9224, 9225, 9226, 9227, 9228, 9229, 9230, 9231, 9232, 9233, 9234, 9235, 9236, 9237, 9238, 9239, 9240, 9241, 9242, 9243, 9244, 9245, 9246, 9247, 9248, 9249, 9250, 9251, 9252, 9253, 9254, 9255, 9256, 9257, 9258, 9259, 9260, 9261, 9262, 9263, 9264, 9265, 9266, 9267, 9268, 9269, 9270, 9271, 9272, 9273, 9274, 9275, 9276, 9277, 9278, 9279, 9280, 9281, 9282, 9283, 9284, 9285, 9286, 9287, 9288, 9289, 9290, 9291, 9292, 9293, 9294, 9295, 9296, 9297, 9298, 9299, 9300, 9301, 9302, 9303, 9304, 9305, 9306, 9307, 9308, 9309, 9310, 9311, 9312, 9313, 9314, 9315, 9316, 9317, 9318, 9319, 9320, 9321, 9322, 9323, 9324, 9325, 9326, 9327, 9328, 9329, 9330, 9331, 9332, 9333, 9334, 9335, 9336, 9337, 9338, 9339, 9340, 9341, 9342, 9343, 9344, 9345, 9346, 9347, 9348, 9349, 9350, 9351, 9352, 9353, 9354, 9355, 9356, 9357, 9358, 9359, 9360, 9361, 9362, 9363, 9364, 9365, 9366, 9367, 9368, 9369, 9370, 9371, 9372, 9373, 9374, 9375, 9376, 9377, 9378, 9379, 9380, 9381, 9382, 9383, 9384, 9385, 9386, 9387, 9388, 9389, 9390, 9391, 9392, 9393, 9394, 9395, 9396, 9397, 9398, 9399, 9400, 9401, 9402, 9403, 9404, 9405, 9406, 9407, 9408, 9409, 9410, 9411, 9412, 9413, 9414, 9415, 9416, 9417, 9418, 9419, 9420, 9421, 9422, 9423, 9424, 9425, 9426, 9427, 9428, 9429, 9430, 9431, 9432, 9433, 9434, 9435, 9436, 9437, 9438, 9439, 9440, 9441, 9442, 9443, 9444, 9445, 9446, 9447, 9448, 9449, 9450, 9451, 9452, 9453, 9454, 9455, 9456, 9457, 9458, 9459, 9460, 9461, 9462, 9463, 9464, 9465, 9466, 9467, 9468, 9469, 9470, 9471, 9472, 9473, 9474, 9475, 9476, 9477, 9478, 9479, 9480, 9481, 9482, 9483, 9484, 9485, 9486, 9487, 9488, 9489, 9490, 9491, 9492, 9493, 9494, 9495, 9496, 9497, 9498, 9499, 9500, 9501, 9502, 9503, 9504, 9505, 9506, 9507, 9508, 9509, 9510, 9511, 9512, 9513, 9514, 9515, 9516, 9517, 9518, 9519, 9520, 9521, 9522, 9523, 9524, 9525, 9526, 9527, 9528, 9529, 9530, 9531, 9532, 9533, 9534, 9535, 9536, 9537, 9538, 9539, 9540, 9541, 9542, 9543, 9544, 9545, 9546, 9547, 9548, 9549, 9550, 9551, 9552, 9553, 9554, 9555, 9556, 9557, 9558, 9559, 9560, 9561, 9562, 9563, 9564, 9565, 9566, 9567, 9568, 9569, 9570, 9571, 9572, 9573, 9574, 9575, 9576, 9577, 9578, 9579, 9580, 9581, 9582, 9583, 9584, 9585, 9586, 9587, 9588, 9589, 9590, 9591, 9592, 9593, 9594, 9595, 9596, 9597, 9598, 9599, 9600, 9601, 9602, 9603, 9604, 9605, 9606, 9607, 9608, 9609, 9610, 9611, 9612, 9613, 9614, 9615, 9616, 9617, 9618, 9619, 9620, 9621, 9622, 9623, 9624, 9625, 9626, 9627, 9628, 9629, 9630, 9631, 9632, 9633, 9634, 9635, 9636, 9637, 9638, 9639, 9640, 9641, 9642, 9643, 9644, 9645, 9646, 9647, 9648, 9649, 9650, 9651, 9652, 9653, 9654, 9655, 9656, 9657, 9658, 9659, 9660, 9661, 9662, 9663, 9664, 9665, 9666, 9667, 9668, 9669, 9670, 9671, 9672, 9673, 9674, 9675, 9676, 9677, 9678, 9679, 9680, 9681, 9682, 9683, 9684, 9685, 9686, 9687, 9688, 9689, 9690, 9691, 9692, 9693, 9694, 9695, 9696, 9697, 9698, 9699, 9700, 9701, 9702, 9703, 9704, 9705, 9706, 9707, 9708, 9709, 9710, 9711, 9712, 9713, 9714, 9715, 9716, 9717, 9718, 9719, 9720, 9721, 9722, 9723, 9724, 9725, 9726, 9727, 9728, 9729, 9730, 9731, 9732, 9733, 9734, 9735, 9736, 9737, 9738, 9739, 9740, 9741, 9742, 9743, 9744, 9745, 9746, 9747, 9748, 9749, 9750, 9751, 9752, 9753, 9754, 9755, 9756, 9757, 9758, 9759, 9760, 9761, 9762, 9763, 9764, 9765, 9766, 9767, 9768, 9769, 9770, 9771, 9772, 9773, 9774, 9775, 9776, 9777, 9778, 9779, 9780, 9781, 9782, 9783, 9784, 9785, 9786, 9787, 9788, 9789, 9790, 9791, 9792, 9793, 9794, 9795, 9796, 9797, 9798, 9799, 9800, 9801, 9802, 9803, 9804, 9805, 9806, 9807, 9808, 9809, 9810, 9811, 9812, 9813, 9814, 9815, 9816, 9817, 9818, 9819, 9820, 9821, 9822, 9823, 9824, 9825, 9826, 9827, 9828, 9829, 9830, 9831, 9832, 9833, 9834, 9835, 9836, 9837, 9838, 9839, 9840, 9841, 9842, 9843, 9844, 9845, 9846, 9847, 9848, 9849, 9850, 9851, 9852, 9853, 9854, 9855, 9856, 9857, 9858, 9859, 9860, 9861, 9862, 9863, 9864, 9865, 9866, 9867, 9868, 9869, 9870, 9871, 9872, 9873, 9874, 9875, 9876, 9877, 9878, 9879, 9880, 9881, 9882, 9883, 9884, 9885, 9886, 9887, 9888, 9889, 9890, 9891, 9892, 9893, 9894, 9895, 9896, 9897, 9898, 9899, 9900, 9901, 9902, 9903, 9904, 9905, 9906, 9907, 9908, 9909, 9910, 9911, 9912, 9913, 9914, 9915, 9916, 9917, 9918, 9919, 9920, 9921, 9922, 9923, 9924, 9925, 9926, 9927, 9928, 9929, 9930, 9931, 9932, 9933, 9934, 9935, 9936, 9937, 9938, 9939, 9940, 9941, 9942, 9943, 9944, 9945, 9946, 9947, 9948, 9949, 9950, 9951, 9952, 9953, 9954, 9955, 9956, 9957, 9958, 9959, 9960, 9961, 9962, 9963, 9964, 9965, 9966, 9967, 9968, 9969, 9970, 9971, 9972, 9973, 9974, 9975, 9976, 9977, 9978, 9979, 9980, 9981, 9982, 9983, 9984, 9985, 9986, 9987, 9988, 9989, 9990, 9991, 9992, 9993, 9994, 9995, 9996, 9997, 9998, 9999], [0.0, 0.5, 0.3333333333333333, 0.25, 0.2, 0.16666666666666666, 0.14285714285714285, 0.125, 0.1111111111111111, 0.1, 0.09090909090909091, 0.08333333333333333, 0.07692307692307693, 0.07142857142857142, 0.06666666666666667, 0.0625, 0.058823529411764705, 0.05555555555555555, 0.05263157894736842, 0.05, 0.047619047619047616, 0.09090909090909091, 0.08695652173913043, 0.08333333333333333, 0.08, 0.07692307692307693, 0.07407407407407407, 0.07142857142857142, 0.06896551724137931, 0.06666666666666667, 0.06451612903225806, 0.0625, 0.06060606060606061, 0.058823529411764705, 0.05714285714285714, 0.05555555555555555, 0.05405405405405406, 0.05263157894736842, 0.05128205128205128, 0.05, 0.04878048780487805, 0.047619047619047616, 0.046511627906976744, 0.045454545454545456, 0.044444444444444446, 0.043478260869565216, 0.0425531914893617, 0.041666666666666664, 0.04081632653061224, 0.04, 0.0392156862745098, 0.038461538461538464, 0.03773584905660377, 0.037037037037037035, 0.03636363636363636, 0.03571428571428571, 0.03508771929824561, 0.034482758620689655, 0.03389830508474576, 0.03333333333333333, 0.03278688524590164, 0.03225806451612903, 0.031746031746031744, 0.03125, 0.03076923076923077, 0.030303030303030304, 0.029850746268656716, 0.029411764705882353, 0.028985507246376812, 0.02857142857142857, 0.028169014084507043, 0.027777777777777776, 0.0273972602739726, 0.02702702702702703, 0.02666666666666667, 0.02631578947368421, 0.025974025974025976, 0.02564102564102564, 0.02531645569620253, 0.025, 0.037037037037037035, 0.036585365853658534, 0.03614457831325301, 0.03571428571428571, 0.03529411764705882, 0.03488372093023256, 0.034482758620689655, 0.045454545454545456, 0.056179775280898875, 0.06666666666666667, 0.07692307692307693, 0.07608695652173914, 0.07526881720430108, 0.07446808510638298, 0.07368421052631578, 0.07291666666666667, 0.07216494845360824, 0.07142857142857142, 0.0707070707070707, 0.07, 0.06930693069306931, 0.06862745098039216, 0.06796116504854369, 0.0673076923076923, 0.06666666666666667, 0.0660377358490566, 0.06542056074766354, 0.06481481481481481, 0.06422018348623854, 0.06363636363636363, 0.06306306306306306, 0.0625, 0.061946902654867256, 0.06140350877192982, 0.06086956521739131, 0.0603448275862069, 0.05982905982905983, 0.059322033898305086, 0.058823529411764705, 0.058333333333333334, 0.05785123966942149, 0.05737704918032787, 0.056910569105691054, 0.056451612903225805, 0.056, 0.05555555555555555, 0.05511811023622047, 0.0546875, 0.05426356589147287, 0.05384615384615385, 0.05343511450381679, 0.05303030303030303, 0.05263157894736842, 0.05223880597014925, 0.05185185185185185, 0.058823529411764705, 0.058394160583941604, 0.06521739130434782, 0.07194244604316546, 0.07857142857142857, 0.0851063829787234, 0.09154929577464789, 0.0979020979020979, 0.09722222222222222, 0.09655172413793103, 0.0958904109589041, 0.09523809523809523, 0.0945945945945946, 0.09395973154362416, 0.09333333333333334, 0.09271523178807947, 0.09210526315789473, 0.0915032679738562, 0.09090909090909091, 0.09032258064516129, 0.08974358974358974, 0.08917197452229299, 0.08860759493670886, 0.0880503144654088, 0.0875, 0.08695652173913043, 0.09259259259259259, 0.09815950920245399, 0.0975609756097561, 0.09696969696969697, 0.0963855421686747, 0.09580838323353294, 0.09523809523809523, 0.09467455621301775, 0.09411764705882353, 0.0935672514619883, 0.09883720930232558, 0.09826589595375723, 0.10344827586206896, 0.10857142857142857, 0.10795454545454546, 0.10734463276836158, 0.10674157303370786, 0.10614525139664804, 0.10555555555555556, 0.10497237569060773, 0.1043956043956044, 0.10382513661202186, 0.10326086956521739, 0.10270270270270271, 0.10215053763440861, 0.10160427807486631, 0.10106382978723404, 0.10052910052910052, 0.10526315789473684, 0.1099476439790576, 0.109375, 0.10880829015544041, 0.10824742268041238, 0.1076923076923077, 0.10714285714285714, 0.1065989847715736, 0.10606060606060606, 0.10552763819095477, 0.105, 0.1044776119402985, 0.10396039603960396, 0.10344827586206896, 0.10294117647058823, 0.1024390243902439, 0.10194174757281553, 0.10144927536231885, 0.10096153846153846, 0.10047846889952153, 0.1, 0.0995260663507109, 0.10377358490566038, 0.107981220657277, 0.11214953271028037, 0.11162790697674418, 0.1111111111111111, 0.1152073732718894, 0.11467889908256881, 0.1141552511415525, 0.11363636363636363, 0.11312217194570136, 0.11261261261261261, 0.11210762331838565, 0.11160714285714286, 0.1111111111111111, 0.11061946902654868, 0.11013215859030837, 0.10964912280701754, 0.1091703056768559, 0.10869565217391304, 0.10822510822510822, 0.10775862068965517, 0.1072961373390558, 0.10683760683760683, 0.10638297872340426, 0.1059322033898305, 0.10548523206751055, 0.10504201680672269, 0.10460251046025104, 0.10416666666666667, 0.1037344398340249, 0.10330578512396695, 0.102880658436214, 0.10245901639344263, 0.10204081632653061, 0.1016260162601626, 0.10121457489878542, 0.10080645161290322, 0.10040160642570281, 0.1, 0.099601593625498, 0.0992063492063492, 0.09881422924901186, 0.0984251968503937, 0.09803921568627451, 0.09765625, 0.10116731517509728, 0.10077519379844961, 0.10038610038610038, 0.1, 0.09961685823754789, 0.09923664122137404, 0.09885931558935361, 0.09848484848484848, 0.09811320754716982, 0.10150375939849623, 0.10112359550561797, 0.1044776119402985, 0.10408921933085502, 0.1037037037037037, 0.1033210332103321, 0.10294117647058823, 0.10256410256410256, 0.10218978102189781, 0.10181818181818182, 0.10144927536231885, 0.10108303249097472, 0.10071942446043165, 0.1003584229390681, 0.1, 0.099644128113879, 0.09929078014184398, 0.0989399293286219, 0.09859154929577464, 0.09824561403508772, 0.0979020979020979, 0.0975609756097561, 0.09722222222222222, 0.09688581314878893, 0.09655172413793103, 0.09621993127147767, 0.0958904109589041, 0.09556313993174062, 0.09523809523809523, 0.09491525423728814, 0.0945945945945946, 0.09427609427609428, 0.09395973154362416, 0.09364548494983277, 0.09333333333333334, 0.09302325581395349, 0.09271523178807947, 0.0924092409240924, 0.09210526315789473, 0.09180327868852459, 0.0915032679738562, 0.09120521172638436, 0.09090909090909091, 0.09061488673139159, 0.09032258064516129, 0.09003215434083602, 0.08974358974358974, 0.08945686900958466, 0.08917197452229299, 0.08888888888888889, 0.08860759493670886, 0.08832807570977919, 0.0880503144654088, 0.0877742946708464, 0.0875, 0.08722741433021806, 0.08695652173913043, 0.08668730650154799, 0.08641975308641975, 0.08615384615384615, 0.08588957055214724, 0.0856269113149847, 0.08536585365853659, 0.0851063829787234, 0.08484848484848485, 0.08459214501510574, 0.08433734939759036, 0.08408408408408409, 0.08383233532934131, 0.08358208955223881, 0.08333333333333333, 0.08605341246290801, 0.08579881656804733, 0.0855457227138643, 0.08529411764705883, 0.08797653958944282, 0.08771929824561403, 0.09037900874635568, 0.09011627906976744, 0.0927536231884058, 0.0953757225433526, 0.09798270893371758, 0.10057471264367816, 0.10315186246418338, 0.10285714285714286, 0.10256410256410256, 0.10227272727272728, 0.10198300283286119, 0.1016949152542373, 0.10140845070422536, 0.10112359550561797, 0.10084033613445378, 0.1005586592178771, 0.10027855153203342, 0.1, 0.0997229916897507, 0.09944751381215469, 0.09917355371900827, 0.0989010989010989, 0.09863013698630137, 0.09836065573770492, 0.09809264305177112, 0.09782608695652174, 0.0975609756097561, 0.0972972972972973, 0.09703504043126684, 0.0967741935483871, 0.09651474530831099, 0.0962566844919786, 0.096, 0.09574468085106383, 0.09549071618037135, 0.09523809523809523, 0.09498680738786279, 0.09473684210526316, 0.09448818897637795, 0.09424083769633508, 0.09399477806788512, 0.09375, 0.09350649350649351, 0.09326424870466321, 0.09302325581395349, 0.09278350515463918, 0.09254498714652956, 0.09230769230769231, 0.09207161125319693, 0.09183673469387756, 0.0916030534351145, 0.09137055837563451, 0.09113924050632911, 0.09090909090909091, 0.0906801007556675, 0.09045226130653267, 0.09022556390977443, 0.09, 0.08977556109725686, 0.08955223880597014, 0.08933002481389578, 0.0891089108910891, 0.08888888888888889, 0.09113300492610837, 0.09336609336609336, 0.09313725490196079, 0.09290953545232274, 0.09268292682926829, 0.09245742092457421, 0.09223300970873786, 0.09443099273607748, 0.09420289855072464, 0.09397590361445783, 0.09375, 0.09352517985611511, 0.09330143540669857, 0.09307875894988067, 0.09285714285714286, 0.09263657957244656, 0.0924170616113744, 0.09219858156028368, 0.09198113207547169, 0.09176470588235294, 0.09154929577464789, 0.09133489461358314, 0.0911214953271028, 0.09090909090909091, 0.09069767441860466, 0.09048723897911833, 0.09027777777777778, 0.09006928406466513, 0.08986175115207373, 0.0896551724137931, 0.08944954128440367, 0.08924485125858124, 0.08904109589041095, 0.0888382687927107, 0.08863636363636364, 0.08843537414965986, 0.08823529411764706, 0.08803611738148984, 0.08783783783783784, 0.08764044943820225, 0.08744394618834081, 0.087248322147651, 0.08705357142857142, 0.08685968819599109, 0.08666666666666667, 0.08647450110864745, 0.08628318584070796, 0.08609271523178808, 0.08590308370044053, 0.08571428571428572, 0.08552631578947369, 0.08533916849015317, 0.0851528384279476, 0.08496732026143791, 0.08478260869565217, 0.08459869848156182, 0.08441558441558442, 0.08423326133909287, 0.08405172413793104, 0.08387096774193549, 0.08369098712446352, 0.0835117773019272, 0.08333333333333333, 0.08315565031982942, 0.08297872340425531, 0.08280254777070063, 0.0826271186440678, 0.0824524312896406, 0.08227848101265822, 0.08210526315789474, 0.0819327731092437, 0.08176100628930817, 0.08158995815899582, 0.081419624217119, 0.08125, 0.08108108108108109, 0.08091286307053942, 0.08074534161490683, 0.08057851239669421, 0.08041237113402062, 0.08024691358024691, 0.08008213552361396, 0.07991803278688525, 0.07975460122699386, 0.07959183673469387, 0.07942973523421588, 0.07926829268292683, 0.07910750507099391, 0.07894736842105263, 0.07878787878787878, 0.07862903225806452, 0.07847082494969819, 0.08032128514056225, 0.08216432865731463, 0.084, 0.08582834331337326, 0.08764940239043825, 0.08946322067594434, 0.09126984126984126, 0.09306930693069307, 0.09486166007905138, 0.09664694280078895, 0.0984251968503937, 0.09823182711198428, 0.09803921568627451, 0.09784735812133072, 0.09765625, 0.09746588693957114, 0.09727626459143969, 0.0970873786407767, 0.09689922480620156, 0.09864603481624758, 0.10038610038610038, 0.10211946050096339, 0.10192307692307692, 0.1017274472168906, 0.10153256704980843, 0.10133843212237094, 0.10114503816793893, 0.10095238095238095, 0.10076045627376426, 0.10056925996204934, 0.10037878787878787, 0.1001890359168242, 0.1, 0.09981167608286252, 0.09962406015037593, 0.09943714821763602, 0.09925093632958802, 0.09906542056074766, 0.09888059701492537, 0.09869646182495345, 0.09851301115241635, 0.09833024118738404, 0.09814814814814815, 0.09796672828096119, 0.09778597785977859, 0.09760589318600368, 0.0974264705882353, 0.09724770642201835, 0.09706959706959707, 0.09689213893967093, 0.09671532846715329, 0.0965391621129326, 0.09636363636363636, 0.09618874773139746, 0.09601449275362318, 0.09584086799276673, 0.09566787003610108, 0.09549549549549549, 0.09532374100719425, 0.09515260323159784, 0.09498207885304659, 0.09481216457960644, 0.09464285714285714, 0.0944741532976827, 0.09430604982206406, 0.0941385435168739, 0.09397163120567376, 0.09380530973451327, 0.09363957597173145, 0.09347442680776014, 0.09330985915492958, 0.09314586994727592, 0.09298245614035087, 0.09281961471103327, 0.09265734265734266, 0.0924956369982548, 0.09407665505226481, 0.09565217391304348, 0.09722222222222222, 0.09705372616984402, 0.09688581314878893, 0.09671848013816926, 0.09655172413793103, 0.0963855421686747, 0.09621993127147767, 0.09605488850771869, 0.0958904109589041, 0.09572649572649573, 0.09556313993174062, 0.09540034071550256, 0.09523809523809523, 0.09507640067911714, 0.09491525423728814, 0.09475465313028765, 0.0945945945945946, 0.09443507588532883, 0.09427609427609428, 0.09411764705882353, 0.09395973154362416, 0.09380234505862646, 0.09364548494983277, 0.09348914858096828, 0.09333333333333334, 0.09317803660565724, 0.09302325581395349, 0.09286898839137644, 0.09437086092715231, 0.09421487603305785, 0.09405940594059406, 0.09390444810543658, 0.09375, 0.09359605911330049, 0.09344262295081968, 0.09492635024549918, 0.09640522875816994, 0.09787928221859707, 0.0993485342019544, 0.0991869918699187, 0.09902597402597403, 0.09886547811993517, 0.09870550161812297, 0.09854604200323101, 0.09838709677419355, 0.09822866344605476, 0.09807073954983923, 0.09791332263242375, 0.09775641025641026, 0.0976, 0.09744408945686901, 0.09728867623604466, 0.09713375796178345, 0.09697933227344992, 0.09682539682539683, 0.09667194928684628, 0.09651898734177215, 0.09636650868878358, 0.09779179810725552, 0.09763779527559055, 0.09748427672955975, 0.09733124018838304, 0.09717868338557993, 0.09702660406885759, 0.096875, 0.0967238689547582, 0.09657320872274143, 0.09642301710730948, 0.09627329192546584, 0.09612403100775194, 0.09597523219814241, 0.09582689335394126, 0.09567901234567901, 0.09553158705701079, 0.09538461538461539, 0.09523809523809523, 0.0950920245398773, 0.09494640122511486, 0.09480122324159021, 0.09465648854961832, 0.09451219512195122, 0.0943683409436834, 0.09422492401215805, 0.09408194233687406, 0.09393939393939393, 0.09379727685325265, 0.09365558912386707, 0.09351432880844646, 0.09337349397590361, 0.09323308270676692, 0.09309309309309309, 0.0944527736131934, 0.09431137724550898, 0.09417040358744394, 0.09402985074626866, 0.09388971684053651, 0.09375, 0.09361069836552749, 0.09347181008902077, 0.09333333333333334, 0.09319526627218935, 0.0930576070901034, 0.09292035398230089, 0.09278350515463918, 0.09264705882352942, 0.09251101321585903, 0.09237536656891496, 0.09224011713030747, 0.09210526315789473, 0.09197080291970802, 0.09183673469387756, 0.09170305676855896, 0.09156976744186046, 0.09143686502177069, 0.09130434782608696, 0.09117221418234443, 0.09104046242774566, 0.09090909090909091, 0.09077809798270893, 0.09064748201438849, 0.09051724137931035, 0.09038737446197992, 0.09025787965616046, 0.09012875536480687, 0.09, 0.0898716119828816, 0.08974358974358974, 0.08961593172119488, 0.08948863636363637, 0.08936170212765958, 0.08923512747875353, 0.0891089108910891, 0.08898305084745763, 0.08885754583921016, 0.09014084507042254, 0.090014064697609, 0.0898876404494382, 0.08976157082748948, 0.0896358543417367, 0.08951048951048951, 0.0893854748603352, 0.08926080892608089, 0.08913649025069638, 0.0890125173852573, 0.08888888888888889, 0.08876560332871013, 0.0886426592797784, 0.08852005532503458, 0.08839779005524862, 0.08827586206896551, 0.0881542699724518, 0.08803301237964237, 0.08791208791208792, 0.0877914951989026, 0.08767123287671233, 0.08755129958960328, 0.08743169398907104, 0.08731241473396999, 0.08719346049046321, 0.08843537414965986, 0.08831521739130435, 0.08819538670284939, 0.08807588075880758, 0.08795669824086604, 0.08783783783783784, 0.08771929824561403, 0.0876010781671159, 0.08748317631224764, 0.08736559139784947, 0.087248322147651, 0.0871313672922252, 0.08701472556894244, 0.08689839572192513, 0.08678237650200267, 0.088, 0.08921438082556592, 0.09042553191489362, 0.09163346613545817, 0.09283819628647215, 0.09271523178807947, 0.09259259259259259, 0.09247027741083223, 0.09234828496042216, 0.0922266139657444, 0.09210526315789473, 0.09198423127463863, 0.09186351706036745, 0.09174311926605505, 0.09162303664921466, 0.0915032679738562, 0.09138381201044386, 0.09126466753585398, 0.09114583333333333, 0.09102730819245773, 0.09090909090909091, 0.0907911802853437, 0.09067357512953368, 0.09055627425614489, 0.09043927648578812, 0.09032258064516129, 0.09020618556701031, 0.09009009009009009, 0.08997429305912596, 0.08985879332477535, 0.08974358974358974, 0.08962868117797695, 0.08951406649616368, 0.08939974457215837, 0.08928571428571429, 0.08917197452229299, 0.089058524173028, 0.08894536213468869, 0.08883248730964467, 0.08871989860583017, 0.08860759493670886, 0.08849557522123894, 0.08838383838383838, 0.08827238335435057, 0.08816120906801007, 0.0880503144654088, 0.08793969849246232, 0.08782936010037641, 0.08771929824561403, 0.08760951188986232, 0.0875, 0.08739076154806492, 0.08728179551122195, 0.08717310087173101, 0.08706467661691543, 0.08695652173913043, 0.08684863523573201, 0.08674101610904585, 0.08663366336633663, 0.0865265760197775, 0.08641975308641975, 0.08631319358816276, 0.08620689655172414, 0.08610086100861009, 0.085995085995086, 0.08588957055214724, 0.0857843137254902, 0.08567931456548347, 0.08557457212713937, 0.08547008547008547, 0.08658536585365853, 0.08647990255785627, 0.08637469586374696, 0.08626974483596597, 0.08616504854368932, 0.08606060606060606, 0.08595641646489104, 0.08585247883917775, 0.08574879227053141, 0.0856453558504222, 0.0855421686746988, 0.08543922984356198, 0.08533653846153846, 0.08523409363745499, 0.08633093525179857, 0.08622754491017964, 0.0861244019138756, 0.08602150537634409, 0.08591885441527446, 0.08581644815256258, 0.08571428571428572, 0.08561236623067776, 0.0855106888361045, 0.08540925266903915, 0.08530805687203792, 0.08520710059171598, 0.0851063829787234, 0.08500590318772137, 0.08490566037735849, 0.08480565371024736, 0.08470588235294117, 0.0846063454759107, 0.08568075117370892, 0.08558030480656506, 0.08548009367681499, 0.08654970760233918, 0.08644859813084112, 0.08634772462077013, 0.08624708624708624, 0.08614668218859138, 0.08604651162790698, 0.0859465737514518, 0.08584686774941995, 0.08574739281575898, 0.08564814814814815, 0.08554913294797688, 0.08545034642032333, 0.0853517877739331, 0.08525345622119816, 0.08515535097813579, 0.08505747126436781, 0.08495981630309989, 0.0860091743119266, 0.08705612829324169, 0.08810068649885583, 0.088, 0.08789954337899543, 0.08779931584948689, 0.08769931662870159, 0.0875995449374289, 0.0875, 0.08740068104426787, 0.0873015873015873, 0.08720271800679502, 0.08710407239819004, 0.08700564971751412, 0.08690744920993228, 0.08680947012401354, 0.08671171171171171, 0.08661417322834646, 0.08651685393258426, 0.08641975308641975, 0.08632286995515695, 0.08622620380739082, 0.08612975391498881, 0.08603351955307263, 0.0859375, 0.0858416945373467, 0.08574610244988864, 0.08565072302558398, 0.08555555555555555, 0.08546059933407325, 0.08536585365853659, 0.08527131782945736, 0.08517699115044247, 0.08508287292817679, 0.08498896247240618, 0.08489525909592062, 0.08480176211453745, 0.0847084708470847, 0.08461538461538462, 0.0845225027442371, 0.08442982456140351, 0.08433734939759036, 0.08424507658643327, 0.08415300546448087, 0.08406113537117904, 0.08396946564885496, 0.08387799564270153, 0.08378672470076169, 0.08369565217391305, 0.08360477741585233, 0.08351409978308026, 0.08342361863488625, 0.08333333333333333, 0.08324324324324324, 0.08315334773218143, 0.08306364617044229, 0.08297413793103449, 0.08288482238966631, 0.08279569892473118, 0.08270676691729323, 0.08261802575107297, 0.08252947481243302, 0.08244111349036402, 0.08235294117647059, 0.08226495726495726, 0.08217716115261472, 0.08208955223880597, 0.08306709265175719, 0.08297872340425531, 0.08289054197662062, 0.08280254777070063, 0.08271474019088017, 0.0826271186440678, 0.08253968253968254, 0.0824524312896406, 0.08236536430834214, 0.08227848101265822, 0.0821917808219178, 0.08210526315789474, 0.08201892744479496, 0.08298319327731092, 0.08289611752360965, 0.08280922431865828, 0.08272251308900523, 0.08263598326359832, 0.08359456635318704, 0.08350730688935282, 0.08342022940563086, 0.08333333333333333, 0.08324661810613944, 0.08316008316008316, 0.08307372793354102, 0.08298755186721991, 0.08290155440414508, 0.08281573498964803, 0.0827300930713547, 0.08264462809917356, 0.0825593395252838, 0.08247422680412371, 0.082389289392379, 0.0823045267489712, 0.08221993833504625, 0.08213552361396304, 0.08205128205128205, 0.08196721311475409, 0.08188331627430911, 0.081799591002045, 0.08171603677221655, 0.08163265306122448, 0.08154943934760449, 0.0814663951120163, 0.08138351983723296, 0.08130081300813008, 0.08121827411167512, 0.08113590263691683, 0.08105369807497467, 0.08097165991902834, 0.08088978766430738, 0.08080808080808081, 0.08072653884964683, 0.08064516129032258, 0.08056394763343404, 0.08048289738430583, 0.08040201005025126, 0.08032128514056225, 0.0802407221664995, 0.08016032064128256, 0.08008008008008008, 0.08, 0.07992007992007992, 0.07984031936127745, 0.07976071784646062, 0.0796812749003984, 0.07960199004975124, 0.07952286282306163, 0.07944389275074479, 0.07936507936507936, 0.07928642220019821, 0.07920792079207921, 0.0791295746785361, 0.0800395256916996, 0.08094768015794669, 0.08086785009861933, 0.08078817733990148, 0.08070866141732283, 0.08062930186823992, 0.08055009823182711, 0.08047105004906771, 0.0803921568627451, 0.08031341821743389, 0.0812133072407045, 0.08211143695014662, 0.08203125, 0.08195121951219513, 0.08187134502923976, 0.08179162609542356, 0.08171206225680934, 0.08163265306122448, 0.08155339805825243, 0.08147429679922405, 0.08139534883720931, 0.08131655372700872, 0.08123791102514506, 0.08115942028985507, 0.08108108108108109, 0.08100289296046287, 0.08092485549132948, 0.08084696823869104, 0.08173076923076923, 0.08165225744476465, 0.08157389635316699, 0.08149568552253116, 0.08141762452107279, 0.08133971291866028, 0.08126195028680688, 0.08118433619866285, 0.08110687022900763, 0.08102955195424213, 0.08095238095238096, 0.08087535680304472, 0.08079847908745247, 0.08072174738841406, 0.08064516129032258, 0.08056872037914692, 0.08049242424242424, 0.0804162724692526, 0.08034026465028356, 0.08026440037771483, 0.08018867924528301, 0.08011310084825636, 0.0800376647834275, 0.0799623706491063, 0.07988721804511278, 0.07981220657276995, 0.07973733583489681, 0.07966260543580131, 0.08052434456928839, 0.08044901777362021, 0.08037383177570094, 0.08029878618113913, 0.08022388059701492, 0.08014911463187326, 0.08007448789571694, 0.08, 0.07992565055762081, 0.07985143918291551, 0.07977736549165121, 0.07970342910101946, 0.07962962962962963, 0.07955596669750231, 0.07948243992606285, 0.07940904893813482, 0.07933579335793357, 0.0792626728110599, 0.07918968692449356, 0.07911683532658693, 0.07904411764705882, 0.07897153351698806, 0.07889908256880734, 0.07882676443629698, 0.07875457875457875, 0.07868252516010979, 0.07861060329067641, 0.07945205479452055, 0.08029197080291971, 0.08113035551504102, 0.08196721311475409, 0.0818926296633303, 0.08181818181818182, 0.08174386920980926, 0.08166969147005444, 0.0815956482320943, 0.08152173913043478, 0.08144796380090498, 0.081374321880651, 0.08130081300813008, 0.0812274368231047, 0.0811541929666366, 0.08108108108108109, 0.081008100810081, 0.08093525179856115, 0.08086253369272237, 0.0807899461400359, 0.08071748878923767, 0.08154121863799284, 0.08146821844225605, 0.08139534883720931, 0.08132260947274352, 0.08125, 0.08117752007136485, 0.08110516934046345, 0.08103294746215495, 0.0809608540925267, 0.08088888888888889, 0.08081705150976909, 0.08074534161490683, 0.08067375886524823, 0.08060230292294066, 0.08053097345132744, 0.08045977011494253, 0.0803886925795053, 0.08031774051191527, 0.08024691358024691, 0.0801762114537445, 0.0801056338028169, 0.08003518029903255, 0.07996485061511424, 0.07989464442493416, 0.07982456140350877, 0.07975460122699386, 0.0796847635726795, 0.07961504811898512, 0.07954545454545454, 0.0794759825327511, 0.07940663176265271, 0.07933740191804708, 0.07926829268292683, 0.07919930374238468, 0.0791304347826087, 0.0790616854908775, 0.07899305555555555, 0.07892454466608846, 0.07885615251299827, 0.07878787878787878, 0.078719723183391, 0.07865168539325842, 0.07858376511226252, 0.07851596203623813, 0.07844827586206897, 0.07838070628768304, 0.0783132530120482, 0.07824591573516768, 0.0781786941580756, 0.07811158798283262, 0.07804459691252144, 0.0779777206512425, 0.0779109589041096, 0.07784431137724551, 0.07777777777777778, 0.07771135781383433, 0.07764505119453925, 0.07757885763000852, 0.07751277683134583, 0.0774468085106383, 0.07738095238095238, 0.07731520815632965, 0.07724957555178268, 0.07718405428329092, 0.07711864406779662, 0.07705334462320068, 0.07698815566835872, 0.07692307692307693, 0.07685810810810811, 0.07763713080168777, 0.0775716694772344, 0.07750631844987363, 0.07744107744107744, 0.07737594617325484, 0.0773109243697479, 0.07724601175482787, 0.07718120805369127, 0.07711651299245599, 0.07705192629815745, 0.07698744769874477, 0.07692307692307693, 0.07685881370091896, 0.07679465776293823, 0.07673060884070058, 0.0775, 0.07826810990840966, 0.07903494176372712, 0.0798004987531172, 0.08056478405315615, 0.08049792531120332, 0.08043117744610281, 0.08036454018227009, 0.0802980132450331, 0.08023159636062861, 0.08099173553719008, 0.08175061932287365, 0.08250825082508251, 0.0832646331409728, 0.08319604612850082, 0.0831275720164609, 0.08305921052631579, 0.0838126540673788, 0.08456486042692939, 0.0844954881050041, 0.08442622950819673, 0.08435708435708436, 0.08428805237315876, 0.08421913327882256, 0.08415032679738563, 0.08408163265306122, 0.08401305057096248, 0.08475957620211899, 0.08550488599348534, 0.08624898291293735, 0.08617886178861789, 0.08610885458976442, 0.08603896103896104, 0.08596918085969181, 0.08589951377633712, 0.08582995951417004, 0.08576051779935275, 0.0856911883589329, 0.08562197092084006, 0.08555286521388217, 0.08548387096774193, 0.0854149879129734, 0.0861513687600644, 0.08608205953338696, 0.0860128617363344, 0.0859437751004016, 0.08667736757624397, 0.08740978348035285, 0.08814102564102565, 0.08807045636509207, 0.088, 0.08792965627498002, 0.0878594249201278, 0.08778930566640064, 0.08771929824561403, 0.08764940239043825, 0.0875796178343949, 0.08750994431185362, 0.08744038155802862, 0.08737092930897537, 0.0873015873015873, 0.08723235527359238, 0.08716323296354993, 0.08709422011084719, 0.08702531645569621, 0.08695652173913043, 0.08688783570300158, 0.08681925808997633, 0.08675078864353312, 0.08668242710795902, 0.08661417322834646, 0.08654602675059009, 0.08647798742138364, 0.08719560094265515, 0.08791208791208792, 0.08862745098039215, 0.08934169278996865, 0.09005481597494126, 0.08998435054773082, 0.08991399530883502, 0.08984375, 0.0897736143637783, 0.08970358814352575, 0.08963367108339829, 0.0895638629283489, 0.08949416342412451, 0.08942457231726283, 0.08935508935508936, 0.08928571428571429, 0.08921644685802949, 0.08914728682170543, 0.08907823392718822, 0.0890092879256966, 0.08894044856921887, 0.08964451313755796, 0.09034749034749034, 0.09027777777777778, 0.09020817270624518, 0.0901386748844376, 0.09006928406466513, 0.09, 0.08993082244427364, 0.08986175115207373, 0.08979278587874137, 0.0897239263803681, 0.0896551724137931, 0.08958652373660031, 0.08951798010711554, 0.08944954128440367, 0.08938120702826585, 0.08931297709923663, 0.08924485125858124, 0.08917682926829268, 0.0891089108910891, 0.08904109589041095, 0.08897338403041825, 0.08890577507598785, 0.0888382687927107, 0.08877086494688922, 0.0887035633055345, 0.08863636363636364, 0.08856926570779712, 0.08850226928895613, 0.08843537414965986, 0.08836858006042296, 0.08830188679245284, 0.08823529411764706, 0.08816880180859081, 0.08810240963855422, 0.08803611738148984, 0.08796992481203007, 0.0879038317054846, 0.08783783783783784, 0.08777194298574643, 0.08770614692653673, 0.08764044943820225, 0.0875748502994012, 0.087509349289454, 0.08744394618834081, 0.08737864077669903, 0.0873134328358209, 0.087248322147651, 0.08718330849478391, 0.08711839166046165, 0.08705357142857142, 0.08698884758364313, 0.08692421991084695, 0.08685968819599109, 0.08679525222551929, 0.08673091178650852, 0.08666666666666667, 0.08660251665433012, 0.08653846153846154, 0.08647450110864745, 0.086410635155096, 0.08634686346863468, 0.08628318584070796, 0.08621960206337509, 0.0861561119293078, 0.08609271523178808, 0.08602941176470588, 0.08596620132255695, 0.08590308370044053, 0.08584005869405723, 0.08651026392961877, 0.08644688644688645, 0.08638360175695461, 0.08632040965618142, 0.08625730994152046, 0.08619430241051863, 0.08613138686131387, 0.08606856309263311, 0.08600583090379009, 0.08594319009468318, 0.0858806404657933, 0.08581818181818182, 0.08575581395348837, 0.08569353667392883, 0.08563134978229318, 0.08556925308194344, 0.08550724637681159, 0.08544532947139753, 0.085383502170767, 0.08532176428054954, 0.08526011560693642, 0.0851985559566787, 0.08513708513708514, 0.08507570295602018, 0.08501440922190202, 0.08495320374370051, 0.08489208633093526, 0.08483105679367361, 0.08477011494252873, 0.08470926058865758, 0.08464849354375897, 0.08458781362007169, 0.08452722063037249, 0.08446671438797423, 0.08512160228898426, 0.08506075768406005, 0.085, 0.08493932905067808, 0.08487874465049929, 0.08481824661439771, 0.08475783475783476, 0.08469750889679716, 0.08463726884779517, 0.0845771144278607, 0.08451704545454546, 0.08445706174591909, 0.08439716312056737, 0.08504606661941885, 0.08498583569405099, 0.08492569002123142, 0.08486562942008487, 0.08480565371024736, 0.0847457627118644, 0.08468595624558928, 0.0846262341325811, 0.08456659619450317, 0.08450704225352113, 0.0844475721323012, 0.08438818565400844, 0.084328882642305, 0.08426966292134831, 0.08421052631578947, 0.08415147265077139, 0.08409250175192712, 0.08403361344537816, 0.08397480755773268, 0.08391608391608392, 0.08385744234800839, 0.08449720670391062, 0.08443824145150035, 0.08437935843793584, 0.0843205574912892, 0.08426183844011143, 0.08420320111343076, 0.08414464534075104, 0.08408617095205004, 0.08472222222222223, 0.08535739070090215, 0.08529819694868239, 0.08523908523908524, 0.08518005540166206, 0.08512110726643599, 0.08506224066390042, 0.08500345542501728, 0.08494475138121547, 0.08488612836438923, 0.08482758620689655, 0.08476912474155755, 0.08471074380165289, 0.08465244322092223, 0.08459422283356259, 0.08453608247422681, 0.08447802197802198, 0.08442004118050789, 0.08436213991769548, 0.08430431802604524, 0.08424657534246575, 0.08418891170431211, 0.08413132694938441, 0.08407382091592618, 0.08401639344262295, 0.08395904436860069, 0.08458390177353342, 0.0845262440354465, 0.08446866485013624, 0.08441116405718176, 0.08435374149659863, 0.0849762066621346, 0.08559782608695653, 0.08621860149355058, 0.08683853459972862, 0.08745762711864406, 0.08807588075880758, 0.08801624915368991, 0.08795669824086604, 0.0878972278566599, 0.08783783783783784, 0.08777852802160702, 0.08771929824561403, 0.08766014834794336, 0.0876010781671159, 0.08754208754208755, 0.08748317631224764, 0.08742434431741762, 0.08736559139784947, 0.08730691739422432, 0.08791946308724832, 0.08853118712273642, 0.08914209115281502, 0.08975217682518419, 0.09036144578313253, 0.09096989966555184, 0.09157754010695188, 0.09151636606546426, 0.09145527369826435, 0.0913942628418946, 0.09133333333333334, 0.09127248500999334, 0.09121171770972038, 0.09115103127079174, 0.09109042553191489, 0.09102990033222591, 0.09096945551128818, 0.09090909090909091, 0.09084880636604775, 0.09078860172299535, 0.09072847682119205, 0.09066843150231635, 0.09060846560846561, 0.09054857898215465, 0.0904887714663144, 0.09042904290429044, 0.09036939313984169, 0.0903098220171391, 0.09025032938076416, 0.0901909150757077, 0.09013157894736842, 0.09007232084155162, 0.0900131406044678, 0.08995403808273145, 0.08989501312335958, 0.0898360655737705, 0.08977719528178243, 0.08971840209561231, 0.08965968586387435, 0.08960104643557881, 0.08954248366013072, 0.08948399738732854, 0.08942558746736293, 0.08936725375081539, 0.08930899608865711, 0.08925081433224756, 0.08919270833333333, 0.08913467794404685, 0.08907672301690507, 0.08901884340480831, 0.08896103896103896, 0.08890330953926022, 0.08884565499351492, 0.08878807517822424, 0.08873056994818652, 0.08867313915857605, 0.08861578266494179, 0.08855850032320621, 0.08850129198966408, 0.08844415752098128, 0.08838709677419355, 0.08833010960670536, 0.08827319587628867, 0.08821635544108178, 0.08815958815958816, 0.08810289389067524, 0.08804627249357326, 0.08798972382787412, 0.08793324775353016, 0.08787684413085312, 0.08782051282051281, 0.0877642536835362, 0.08770806658130602, 0.08765195137555983, 0.08759590792838874, 0.08753993610223643, 0.08748403575989783, 0.0874282067645182, 0.08737244897959184, 0.08731676226896112, 0.08789808917197452, 0.08784213876511776, 0.08778625954198473, 0.08773045136681501, 0.08767471410419314, 0.08761904761904762, 0.08819796954314721, 0.08877615726062144, 0.08871989860583017, 0.08866371120962635, 0.08860759493670886, 0.08855154965211891, 0.08849557522123894, 0.08843967150979154, 0.08838383838383838, 0.08832807570977919, 0.08827238335435057, 0.08821676118462508, 0.08816120906801007, 0.08873505349276274, 0.08867924528301886, 0.08862350722815839, 0.0885678391959799, 0.08851224105461393, 0.08845671267252196, 0.08840125391849529, 0.08834586466165413, 0.08829054477144646, 0.08823529411764706, 0.08818011257035648, 0.088125, 0.08806995627732667, 0.08801498127340825, 0.08796007485963818, 0.08790523690773068, 0.08785046728971962, 0.08779576587795766, 0.08774113254511512, 0.08768656716417911, 0.08763206960845245, 0.08757763975155279, 0.08752327746741155, 0.08746898263027296, 0.08741475511469311, 0.08736059479553904, 0.08730650154798762, 0.08725247524752475, 0.08719851576994433, 0.08714462299134734, 0.08709079678814083, 0.08703703703703704, 0.08698334361505243, 0.08692971639950678, 0.08687615526802218, 0.08682266009852217, 0.08676923076923077, 0.08671586715867159, 0.08666256914566688, 0.0866093366093366, 0.0865561694290976, 0.08650306748466258, 0.08645003065603923, 0.08639705882352941, 0.0863441518677281, 0.08629130966952264, 0.08623853211009175, 0.08618581907090464, 0.08613317043372022, 0.08608058608058608, 0.0860280658938377, 0.08597560975609755, 0.08592321755027423, 0.08587088915956151, 0.08581862446743761, 0.08576642335766424, 0.08571428571428572, 0.08566221142162819, 0.08561020036429873, 0.08555825242718447, 0.08550636749545179, 0.08545454545454545, 0.08540278619018776, 0.08535108958837773, 0.0852994555353902, 0.08524788391777509, 0.08519637462235649, 0.08514492753623189, 0.08509354254677128, 0.0850422195416164, 0.08499095840867993, 0.08493975903614458, 0.08488862131246237, 0.08483754512635379, 0.08538785327720987, 0.0859375, 0.08588588588588589, 0.0858343337334934, 0.08578284343131373, 0.08573141486810551, 0.08568004793289395, 0.08562874251497006, 0.08557749850388989, 0.08552631578947369, 0.08547519426180514, 0.08542413381123058, 0.0853731343283582, 0.08532219570405727, 0.08527131782945736, 0.08522050059594756, 0.0851697438951757, 0.08511904761904762, 0.08506841165972635, 0.0850178359096314, 0.08496732026143791, 0.08491686460807601, 0.08486646884272997, 0.08481613285883749, 0.08476585655008892, 0.08471563981042654, 0.08466548253404381, 0.08461538461538462, 0.08456534594914251, 0.08451536643026004, 0.08446544595392794, 0.08441558441558442, 0.08436578171091445, 0.08431603773584906, 0.08426635238656452, 0.08480565371024736, 0.08534432018834609, 0.08529411764705883, 0.08524397413286303, 0.08519388954171563, 0.08514386376981797, 0.08509389671361503, 0.08504398826979472, 0.08499413833528723, 0.0849443468072642, 0.08489461358313817, 0.08543007606787595, 0.08538011695906433, 0.08591466978375219, 0.08586448598130841, 0.08581436077057793, 0.08576429404900816, 0.08571428571428572, 0.08566433566433566, 0.0856144437973209, 0.08556461001164144, 0.08551483420593368, 0.08546511627906976, 0.08541545613015689, 0.08536585365853659, 0.0853163087637841, 0.08526682134570766, 0.08521739130434783, 0.08516801853997683, 0.08511870295309786, 0.08506944444444445, 0.08502024291497975, 0.08497109826589595, 0.08492201039861352, 0.0848729792147806, 0.08482400461627236, 0.0847750865051903, 0.08472622478386167, 0.0846774193548387, 0.0846286701208981, 0.08457997698504027, 0.08453133985048879, 0.08505747126436781, 0.08500861573808156, 0.08495981630309989, 0.08491107286288009, 0.08486238532110092, 0.08481375358166189, 0.08476517754868271, 0.08471665712650257, 0.08466819221967964, 0.08461978273299028, 0.08457142857142858, 0.0845231296402056, 0.08447488584474885, 0.08442669709070165, 0.08437856328392246, 0.08433048433048433, 0.08428246013667426, 0.0842344906089926, 0.08475540386803185, 0.0847072200113701, 0.0846590909090909, 0.08461101646791595, 0.08456299659477866, 0.08451503119682359, 0.0844671201814059, 0.08441926345609065, 0.08437146092865232, 0.08432371250707414, 0.08427601809954752, 0.08422837761447145, 0.08418079096045197, 0.08413325804630152, 0.08408577878103837, 0.08403835307388607, 0.08399098083427282, 0.08394366197183098, 0.0838963963963964, 0.08384918401800788, 0.08380202474690664, 0.0837549184935357, 0.08370786516853933, 0.08366086468276249, 0.08361391694725027, 0.08356702187324734, 0.08352017937219731, 0.08347338935574229, 0.08342665173572228, 0.0833799664241746, 0.08333333333333333, 0.08328675237562884, 0.08324022346368715, 0.08319374651032943, 0.08314732142857142, 0.08365867261572783, 0.08361204013377926, 0.08356545961002786, 0.08351893095768374, 0.08347245409015025, 0.08342602892102335, 0.08337965536409116, 0.08333333333333333, 0.0832870627429206, 0.08324084350721421, 0.08319467554076539, 0.08314855875831485, 0.08310249307479224, 0.08305647840531562, 0.08301051466519092, 0.08296460176991151, 0.08291873963515754, 0.08287292817679558, 0.08282716731087797, 0.08278145695364239, 0.0827357970215113, 0.08269018743109151, 0.08264462809917356, 0.08259911894273128, 0.0825536598789213, 0.08250825082508251, 0.08246289169873557, 0.08241758241758242, 0.08237232289950576, 0.08232711306256861, 0.08228195282501372, 0.08223684210526316, 0.0821917808219178, 0.08214676889375684, 0.08210180623973727, 0.08205689277899343, 0.0825587752870421, 0.0825136612021858, 0.08246859639541235, 0.0824235807860262, 0.08237861429350792, 0.08233369683751363, 0.08228882833787465, 0.08224400871459694, 0.08219923788786064, 0.08215451577801959, 0.08210984230560087, 0.08206521739130435, 0.08202064095600217, 0.08197611292073832, 0.08193163320672817, 0.08188720173535792, 0.08184281842818428, 0.0817984832069339, 0.08175419599350298, 0.0817099567099567, 0.0822065981611682, 0.08216216216216216, 0.08211777417612101, 0.0826133909287257, 0.08310847274689692, 0.08306364617044229, 0.0830188679245283, 0.08297413793103449, 0.08292945611200861, 0.08288482238966631, 0.08284023668639054, 0.08279569892473118, 0.08328855454056959, 0.08324382384532761, 0.08319914117015566, 0.08315450643776824, 0.08310991957104558, 0.08306538049303322, 0.08302088912694162, 0.08297644539614561, 0.08293204922418405, 0.08288770053475936, 0.08284339925173703, 0.0827991452991453, 0.08275493860117458, 0.08271077908217717, 0.08266666666666667, 0.0826226012793177, 0.08257858284496537, 0.08306709265175719, 0.08355508249068654, 0.08351063829787234, 0.0834662413609782, 0.08342189160467588, 0.08337758895379713, 0.08333333333333333, 0.08328912466843501, 0.08324496288441145, 0.08320084790673025, 0.08315677966101695, 0.08311275807305453, 0.08306878306878307, 0.08302485457429931, 0.08298097251585623, 0.08293713681986266, 0.08289334741288279, 0.08284960422163588, 0.08280590717299578, 0.08276225619399051, 0.0827186512118019, 0.08267509215376515, 0.08263157894736842, 0.0825881115202525, 0.0825446898002103, 0.08250131371518654, 0.08245798319327731, 0.08241469816272966, 0.08237145855194124, 0.08232826428945988, 0.08228511530398323, 0.0822420115243583, 0.08219895287958115, 0.08215593929879644, 0.08211297071129707, 0.08207004704652378, 0.08202716823406478, 0.08198433420365535, 0.08194154488517745, 0.08189880020865936, 0.08185610010427528, 0.08181344450234497, 0.08177083333333333, 0.08172826652785008, 0.08168574401664933, 0.08164326573062923, 0.0816008316008316, 0.08155844155844155, 0.08151609553478713, 0.08147379346133887, 0.08195020746887967, 0.08242612752721618, 0.08238341968911918, 0.08234075608493009, 0.08229813664596274, 0.08225556130367305, 0.08221302998965874, 0.08217054263565891, 0.08212809917355372, 0.08208569953536396, 0.08204334365325078, 0.08200103145951522, 0.08195876288659794, 0.08191653786707882, 0.08187435633367662, 0.08183221821924859, 0.08179012345679013, 0.08174807197943444, 0.08170606372045221, 0.08166409861325115, 0.08162217659137577, 0.08158029758850692, 0.08153846153846153, 0.0814966683751922, 0.08145491803278689, 0.08141321044546851, 0.08137154554759468, 0.08132992327365729, 0.08128834355828221, 0.08124680633622892, 0.08120531154239019, 0.08116385911179173, 0.08112244897959184, 0.08108108108108109, 0.08103975535168195, 0.08099847172694855, 0.08095723014256619, 0.08091603053435115, 0.08087487283825025, 0.08083375699034062, 0.08079268292682927, 0.08075165058405281, 0.08071065989847716, 0.0806697108066971, 0.0806288032454361, 0.08058793715154587, 0.08054711246200608, 0.08050632911392405, 0.08046558704453441, 0.08042488619119878, 0.08038422649140546, 0.08034360788276908, 0.0803030303030303, 0.08026249369005553, 0.08022199798183653, 0.08018154311649017, 0.08014112903225806, 0.0801007556675063, 0.08006042296072508, 0.08002013085052843, 0.07997987927565392, 0.07993966817496229, 0.07989949748743719, 0.07985936715218483, 0.07981927710843373, 0.07977922729553437, 0.07973921765295888, 0.07969924812030076, 0.07965931863727455, 0.07961942914371557, 0.07957957957957958, 0.07953976988494248, 0.0795, 0.07946026986506746, 0.07942057942057942, 0.07938092860708937, 0.07934131736526946, 0.0798004987531172, 0.08025922233300099, 0.0802192326856004, 0.0801792828685259, 0.08013937282229965, 0.08009950248756219, 0.0800596718050721, 0.08001988071570576, 0.07998012916045703, 0.07994041708043693, 0.07990074441687345, 0.0798611111111111, 0.07982151710461081, 0.07978196233894945, 0.07974244675581971, 0.0797029702970297, 0.07966353290450272, 0.07962413452027696, 0.07958477508650519, 0.07954545454545454, 0.07950617283950617, 0.07946692991115499, 0.07942772570300938, 0.07938856015779093, 0.07934943321833415, 0.07931034482758621, 0.0792712949286066, 0.07923228346456693, 0.07919331037875062, 0.0791543756145526, 0.07911547911547911, 0.07907662082514735, 0.07903780068728522, 0.07899901864573111, 0.07896027464443355, 0.07892156862745098, 0.0788829005389515, 0.07884427032321253, 0.07880567792462066, 0.07876712328767123, 0.07872860635696821, 0.07917888563049853, 0.07914020517830972, 0.0791015625, 0.07906295754026355, 0.07902439024390244, 0.07898586055582643, 0.07894736842105263, 0.07890891378470531, 0.07887049659201557, 0.07883211678832117, 0.07879377431906615, 0.07875546912980068, 0.07920310981535471, 0.0796503156872268, 0.07961165048543689, 0.07957302280446385, 0.07953443258971872, 0.07949587978671838, 0.07945736434108527, 0.07941888619854721, 0.07938044530493708, 0.07934204160619256, 0.07930367504835589, 0.07926534557757371, 0.07922705314009662, 0.07918879768227909, 0.07915057915057915, 0.07911239749155813, 0.07907425265188042, 0.07903614457831325, 0.0789980732177264, 0.07944150216658642, 0.07940327237728585, 0.07936507936507936, 0.07932692307692307, 0.07928880345987506, 0.0792507204610951, 0.07921267402784446, 0.07917466410748561, 0.07913669064748201, 0.07909875359539789, 0.07906085289889794, 0.07902298850574713, 0.07898516036381044, 0.07894736842105263, 0.07890961262553801, 0.0788718929254302, 0.07883420926899187, 0.07879656160458452, 0.07875894988066826, 0.07872137404580153, 0.07868383404864092, 0.0786463298379409, 0.0786088613625536, 0.07857142857142857, 0.07853403141361257, 0.07849666983824928, 0.07845934379457917, 0.07842205323193917, 0.07838479809976247, 0.07834757834757834, 0.07831039392501186, 0.07874762808349146, 0.07918444760550024, 0.07962085308056872, 0.07958313595452392, 0.07954545454545454, 0.07950780880265026, 0.07947019867549669, 0.07943262411347518, 0.07939508506616257, 0.079357581483231, 0.07932011331444759, 0.07928268050967438, 0.07924528301886792, 0.07920792079207921, 0.07917059377945335, 0.07913330193122939, 0.07909604519774012, 0.07905882352941176, 0.07902163687676388, 0.07898448519040903, 0.07894736842105263, 0.07891028651949272, 0.07887323943661972, 0.07883622712341623, 0.07879924953095685, 0.07876230661040788, 0.07872539831302718, 0.07868852459016394, 0.07865168539325842, 0.07861488067384183, 0.07857811038353602, 0.0785413744740533, 0.07850467289719626, 0.07846800560485755, 0.0784313725490196, 0.07839477368175456, 0.07835820895522388, 0.07832167832167833, 0.0782851817334576, 0.07824871914299023, 0.0782122905027933, 0.0781758957654723, 0.07813953488372093, 0.07810320781032078, 0.07806691449814127, 0.07803065490013934, 0.07799442896935933, 0.07795823665893271, 0.07792207792207792, 0.07788595271210014, 0.0778498609823911, 0.0778138026864289, 0.07777777777777778, 0.07774178621008793, 0.07770582793709528, 0.07766990291262135, 0.07763401109057301, 0.07759815242494227, 0.07756232686980609, 0.07752653437932626, 0.07749077490774908, 0.07745504840940526, 0.07788018433179723, 0.0783049286043298, 0.07826887661141804, 0.07823285780027611, 0.078196872125115, 0.07816091954022988, 0.078125, 0.07808911345888837, 0.0780532598714417, 0.07801743919229004, 0.0779816513761468, 0.07794589637780834, 0.07791017415215398, 0.07787448465414568, 0.07783882783882784, 0.07780320366132723, 0.0777676120768527, 0.07773205304069501, 0.07815356489945155, 0.07857469164001828, 0.07899543378995434, 0.07941579187585578, 0.07983576642335767, 0.07979936160510716, 0.07976298997265269, 0.07972665148063782, 0.07969034608378871, 0.07965407373691398, 0.07961783439490445, 0.07958162801273307, 0.07954545454545454, 0.07950931394820536, 0.07947320617620345, 0.07943713118474807, 0.0794010889292196, 0.07936507936507936, 0.07932910244786945, 0.0792931581332125, 0.0792572463768116, 0.07922136713444998, 0.07918552036199095, 0.07914970601537766, 0.07911392405063292, 0.07907817442385902, 0.07904245709123758, 0.07900677200902935, 0.078971119133574, 0.07893549842129004, 0.0793507664562669, 0.07976566020730058, 0.08018018018018018, 0.08059432687978388, 0.081008100810081, 0.08142150247413406, 0.08138489208633093, 0.08134831460674158, 0.08131176999101528, 0.081275258194881, 0.08123877917414722, 0.08120233288470166, 0.08116591928251121, 0.0811295383236217, 0.08109318996415771, 0.08105687416032244, 0.0810205908683975, 0.0814317673378076, 0.08139534883720931, 0.0813589628967367, 0.08132260947274352, 0.08128628852166146, 0.08125, 0.08121374386434628, 0.08117752007136485, 0.08158716005349978, 0.08155080213903744, 0.08151447661469934, 0.08147818343722173, 0.0814419225634179, 0.08140569395017794, 0.08136949755446865, 0.08133333333333333, 0.0812972012438916, 0.08126110124333925, 0.08166888592987129, 0.08207630878438332, 0.082039911308204, 0.08200354609929078, 0.08196721311475409, 0.08193091231178033, 0.0818946436476317, 0.08185840707964602, 0.08182220256523662, 0.08178603006189213, 0.08174988952717631, 0.08171378091872791, 0.08167770419426049, 0.08164165931156223, 0.08160564622849581, 0.08156966490299823, 0.08153371529308065, 0.08149779735682819, 0.08146191105239982, 0.08142605633802817, 0.08139023317201936, 0.08135444151275285, 0.08131868131868132, 0.0812829525483304, 0.08124725516029864, 0.08121158911325724, 0.08117595436594997, 0.08114035087719298, 0.08110477860587462, 0.08106923751095531, 0.08147174770039421, 0.08143607705779335, 0.08140043763676148, 0.08136482939632546, 0.08132925229558373, 0.08129370629370629, 0.08125819134993446, 0.08122270742358079, 0.0811872544740288, 0.08115183246073299, 0.08111644134321849, 0.08151700087183958, 0.08191721132897603, 0.08231707317073171, 0.0827165868524162, 0.08311575282854657, 0.0830795998260113, 0.08304347826086957, 0.08300738809213386, 0.08297132927888792, 0.08293530178028659, 0.08289930555555555, 0.08286334056399132, 0.08282740676496098, 0.08279150411790204, 0.08275563258232235, 0.08271979211779991, 0.08268398268398268, 0.0826482042405885, 0.08261245674740485, 0.0825767401642888, 0.08254105445116681, 0.08293736501079914, 0.08290155440414508, 0.08286577470867501, 0.08283002588438308, 0.08279430789133248, 0.08275862068965517, 0.08272296423955192, 0.082687338501292, 0.08265174343521309, 0.08261617900172118, 0.08258064516129032, 0.0825451418744626, 0.08250966910184787, 0.08247422680412371, 0.08243881494203521, 0.08240343347639485, 0.08236808236808237, 0.0823327615780446, 0.08229747106729533, 0.08226221079691516, 0.08265524625267666, 0.08304794520547945, 0.08301240907145914, 0.08297690333618478, 0.08294142796066695, 0.0829059829059829, 0.08287056813327638, 0.08283518360375747, 0.08279982927870252, 0.08276450511945392, 0.08272921108742004, 0.08269394714407502, 0.08265871325095867, 0.08262350936967632, 0.08258833546189868, 0.0825531914893617, 0.08251807741386644, 0.0824829931972789, 0.08244793880152997, 0.08241291418861513, 0.08237791932059448, 0.08234295415959253, 0.08230801866779805, 0.08227311280746395, 0.08223823654090716, 0.08220338983050847, 0.08259212198221093, 0.0829805249788315, 0.082945408379179, 0.0829103214890017, 0.0828752642706131, 0.08284023668639054, 0.08280523869877482, 0.08277027027027027, 0.08273533136344449, 0.08270042194092828, 0.08266554196541544, 0.08263069139966273, 0.08259587020648967, 0.08256107834877843, 0.08252631578947368, 0.08249158249158249, 0.08245687841817417, 0.08242220353238015, 0.08238755779739386, 0.08235294117647059, 0.08273834523309534, 0.08312342569269521, 0.08350818296265212, 0.0834731543624161, 0.08343815513626834, 0.08340318524727577, 0.08336824465856724, 0.08333333333333333, 0.08329845123482629, 0.08326359832635984, 0.08322877457130907, 0.08319397993311037, 0.08315921437526118, 0.08312447786131996, 0.08308977035490606, 0.0830550918196995, 0.08302044221944097, 0.08298582151793162, 0.08295122967903293, 0.08291666666666667, 0.08288213244481465, 0.08326394671107411, 0.08322929671244278, 0.08319467554076539, 0.08357588357588358, 0.08395677472984206, 0.08433734939759036, 0.08471760797342193, 0.08468244084682441, 0.08464730290456432, 0.08461219411032767, 0.0845771144278607, 0.08454206382096975, 0.08450704225352113, 0.084472049689441, 0.08443708609271523, 0.08440215142738933, 0.08436724565756824, 0.08433236874741629, 0.08429752066115702, 0.08426270136307311, 0.08422791081750619, 0.08419314898885678, 0.08415841584158416, 0.08412371134020619, 0.08408903544929926, 0.08405438813349815, 0.08401976935749589, 0.08398517908604364, 0.08395061728395062, 0.08391608391608392, 0.08388157894736842, 0.08384710234278668, 0.0838126540673788, 0.0837782340862423, 0.08374384236453201, 0.08370947886746, 0.08367514356029532, 0.08364083640836409, 0.08360655737704918, 0.08357230643179026, 0.08353808353808354, 0.08350388866148178, 0.08346972176759411, 0.0834355828220859, 0.08340147179067865, 0.08336738863914998, 0.08333333333333333, 0.083299305839118, 0.08326530612244898, 0.0832313341493268, 0.08319738988580751, 0.08316347329800244, 0.08312958435207823, 0.08309572301425662, 0.08306188925081433, 0.08302808302808302, 0.08340113913751017, 0.08336722244814966, 0.08333333333333333, 0.08329947175944738, 0.08326563769293258, 0.0832318311002842, 0.08319805194805195, 0.08316430020283976, 0.08313057583130576, 0.08309687880016214, 0.08306320907617504, 0.08302956662616444, 0.08299595141700405, 0.0829623634156212, 0.08292880258899676, 0.08289526890416499, 0.08286176232821342, 0.08282828282828283, 0.08279483037156704, 0.08276140492531288, 0.08272800645682002, 0.0826946349334409, 0.08266129032258064, 0.0826279725916969, 0.08259468170829976, 0.08256141763995167, 0.08252818035426732, 0.08249496981891348, 0.08246178600160901, 0.08283071974266185, 0.08319935691318328, 0.08356769787063077, 0.08393574297188755, 0.08430349257326375, 0.08426966292134831, 0.0842358604091456, 0.08420208500400962, 0.0841683366733467, 0.08413461538461539, 0.0841009211053264, 0.08406725380304243, 0.08443377350940376, 0.0848, 0.08516593362654938, 0.08553157474020784, 0.08589692369157012, 0.08626198083067092, 0.08662674650698603, 0.08699122106943336, 0.08735540486637415, 0.08732057416267942, 0.08728577122359506, 0.08725099601593625, 0.08721624850657109, 0.08718152866242038, 0.08714683645045762, 0.08711217183770883, 0.08707753479125248, 0.0870429252782194, 0.08700834326579261, 0.08697378872120731, 0.0869392616117507, 0.0869047619047619, 0.08687028956763189, 0.08683584456780333, 0.08680142687277051, 0.08676703645007924, 0.08673267326732673, 0.08669833729216152, 0.08666402849228334, 0.08662974683544304, 0.08659549228944247, 0.08656126482213439, 0.08652706440142237, 0.08649289099526067, 0.08645874457165416, 0.08642462509865825, 0.0863905325443787, 0.08635646687697161, 0.08632242806464328, 0.08628841607565012, 0.08625443087829854, 0.08622047244094488, 0.08618654073199528, 0.08615263571990558, 0.08611875737318128, 0.08608490566037735, 0.08605108055009823, 0.08601728201099765, 0.08598351001177856, 0.08594976452119309, 0.08591604550804237, 0.08588235294117647, 0.08584868678949431, 0.08581504702194358, 0.08578143360752057, 0.08574784651527016, 0.08571428571428572, 0.08568075117370892, 0.08603832616347282, 0.08639562157935887, 0.08675263774912075, 0.087109375, 0.08746583365872707, 0.08782201405152225, 0.08817791650409676, 0.08814352574102964, 0.08810916179337232, 0.08807482462977397, 0.08804051421893261, 0.08800623052959501, 0.08797197353055664, 0.08793774319066149, 0.08790353947880203, 0.08786936236391912, 0.08783521181500194, 0.08780108780108781, 0.08776699029126214, 0.08773291925465838, 0.08769887466045789, 0.08766485647788984, 0.0876308646762311, 0.08759689922480621, 0.08756296009298721, 0.08752904725019364, 0.08749516066589237, 0.08746130030959752, 0.08742746615087041, 0.08739365815931942, 0.08735987630459992, 0.08732612055641421, 0.08729239088451139, 0.08725868725868725, 0.08722500964878425, 0.08719135802469136, 0.087157732356344, 0.08712413261372398, 0.08709055876685934, 0.08705701078582434, 0.08702348864073932, 0.0869899923017706, 0.08695652173913043, 0.08692307692307692, 0.08727412533640908, 0.08724058416602613, 0.08720706876680753, 0.08717357910906298, 0.08714011516314779, 0.08710667689946278, 0.08707326428845416, 0.0870398773006135, 0.08700651590647758, 0.08697318007662835, 0.08693986978169284, 0.08690658499234304, 0.08687332567929583, 0.08684009181331293, 0.08680688336520076, 0.0867737003058104, 0.08712265953381734, 0.08747135217723453, 0.08743795341733486, 0.08740458015267176, 0.08737123235406334, 0.08733790999237223, 0.08730461303850552, 0.08727134146341463, 0.08723809523809524, 0.0872048743335872, 0.08717167872097449, 0.08713850837138508, 0.08710536325599087, 0.0870722433460076, 0.0870391486126948, 0.08700607902735562, 0.08697303456133688, 0.08694001518602885, 0.08690702087286528, 0.08687405159332322, 0.08684110731892301, 0.08718726307808947, 0.08715422508525957, 0.08712121212121213, 0.08708822415751609, 0.08705526116578349, 0.08702232311766932, 0.08698940998487141, 0.08695652173913043, 0.08692365835222977, 0.08689081979599547, 0.08685800604229607, 0.08682521706304266, 0.08679245283018867, 0.08675971331572992, 0.08672699849170437, 0.08669430833019223, 0.08666164280331574, 0.08662900188323917, 0.08659638554216867, 0.08656379375235228, 0.08653122648607976, 0.08649868371568259, 0.08646616541353383, 0.0864336715520481, 0.08640120210368145, 0.08636875704093128, 0.08633633633633633, 0.08630393996247655, 0.08627156789197299, 0.08623922009748781, 0.08620689655172414, 0.086174597227426, 0.08614232209737828, 0.0861100711344066, 0.08607784431137724, 0.08604564160119715, 0.08601346297681377, 0.08598130841121496, 0.08594917787742899, 0.08591707134852447, 0.08588498879761015, 0.085852930197835, 0.08582089552238806, 0.08578888474449832, 0.08575689783743475, 0.08572493477450616, 0.08569299552906111, 0.0856610800744879, 0.08562918838421445, 0.08559732043170823, 0.08556547619047619, 0.0855336556340647, 0.08550185873605948, 0.08547008547008547, 0.08543833580980684, 0.08540660972892684, 0.08537490720118783, 0.08534322820037106, 0.08531157270029674, 0.08527994067482388, 0.08524833209785027, 0.08521674694331234, 0.08518518518518518, 0.08515364679748241, 0.0851221317542561, 0.08509064002959675, 0.08505917159763314, 0.08502772643253234, 0.08499630450849963, 0.08496490579977835, 0.08493353028064993, 0.08490217792543374, 0.08487084870848709, 0.08483954260420509, 0.08480825958702065, 0.08477699963140435, 0.0847457627118644, 0.0847145488029466, 0.08468335787923417, 0.08465218991534781, 0.08462104488594555, 0.08458992276572269, 0.08455882352941177, 0.08452774715178243, 0.08449669360764143, 0.08446566287183253, 0.08443465491923642, 0.08440366972477065, 0.08437270726338958, 0.08434176751008435, 0.08431085043988269, 0.08427995602784903, 0.08424908424908426, 0.08421823507872574, 0.0841874084919473, 0.08415660446395902, 0.08412582297000731, 0.08409506398537477, 0.08406432748538012, 0.08403361344537816, 0.08400292184075968, 0.08397225264695145, 0.08394160583941605, 0.08391098139365195, 0.08388037928519329, 0.08384979948960991, 0.08381924198250729, 0.08378870673952642, 0.08375819373634377, 0.08372770294867128, 0.08369723435225619, 0.08366678792288104, 0.08363636363636363, 0.0836059614685569, 0.08393895348837209, 0.08427170359607701, 0.08460421205519245, 0.08457350272232304, 0.08454281567489115, 0.08451215088864708, 0.08448150833937636, 0.0844508880028996, 0.08442028985507247, 0.08438971387178558, 0.08435916002896451, 0.08432862830256967, 0.08429811866859624, 0.08426763110307414, 0.08423716558206797, 0.08420672208167691, 0.08417630057803469, 0.0841459010473095, 0.08411552346570397, 0.08408516780945507, 0.08405483405483405, 0.08402452217814642, 0.08399423215573179, 0.08396396396396397, 0.08393371757925072, 0.08426359380626576, 0.08459323254139668, 0.08456279237135661, 0.08453237410071943, 0.0845019777058612, 0.08447160316319195, 0.08444125044915558, 0.08441091954022989, 0.0843806104129264, 0.08435032304379038, 0.0843200574094008, 0.08428981348637016, 0.08425959125134456, 0.08422939068100359, 0.08419921175206019, 0.08416905444126074, 0.08413891872538488, 0.08410880458124552, 0.08407871198568873, 0.0844062947067239, 0.08473364318913121, 0.08470335954253037, 0.08467309753483387, 0.08464285714285714, 0.08461263834344877, 0.08458244111349036, 0.08455226542989654, 0.08452211126961484, 0.08449197860962566, 0.08446186742694227, 0.08443177769861061, 0.08440170940170941, 0.08437166251334995, 0.08434163701067615, 0.08431163287086446, 0.08428165007112376, 0.08425168858869535, 0.08422174840085288, 0.08419182948490231, 0.08416193181818182, 0.08413205537806177, 0.08410220014194464, 0.08407236608726498, 0.08404255319148936, 0.08401276143211626, 0.08398299078667612, 0.08395324123273114, 0.08392351274787535, 0.08389380530973452, 0.08386411889596602, 0.08383445348425893, 0.0838048090523338, 0.08377518557794274, 0.08409893992932863, 0.08406923348640057, 0.08403954802259887, 0.08400988351570773, 0.0839802399435427, 0.08395061728395062, 0.08392101551480959, 0.0838914346140289, 0.08386187455954898, 0.08383233532934131, 0.08380281690140845, 0.08377331925378388, 0.08374384236453201, 0.08371438621174815, 0.08368495077355836, 0.08365553602811951, 0.08362614195361912, 0.08359676852827538, 0.08356741573033707, 0.08353808353808354, 0.08350877192982456, 0.08347948088390039, 0.08345021037868162, 0.08377146862951279, 0.08374211632796076, 0.08371278458844134, 0.08368347338935574, 0.08365418270913545, 0.08362491252624213, 0.08359566281916754, 0.08356643356643356, 0.0835372247465921, 0.08350803633822501, 0.08347886831994411, 0.08344972067039107, 0.08376963350785341, 0.0837404047452896, 0.08371119637251483, 0.08368200836820083, 0.08365284071104914, 0.08362369337979095, 0.08359456635318704, 0.08356545961002786, 0.08353637312913331, 0.08350730688935282, 0.08347826086956522, 0.08344923504867872, 0.08342022940563086, 0.08339124391938846, 0.08336227856894755, 0.08333333333333333, 0.08330440819160013, 0.08327550312283137, 0.08324661810613944, 0.08321775312066575, 0.0831889081455806, 0.08316008316008316, 0.08313127814340146, 0.08310249307479224, 0.08307372793354102, 0.08304498269896193, 0.08301625735039779, 0.08298755186721991, 0.08295886622882821, 0.082930200414651, 0.08290155440414508, 0.08287292817679558, 0.08284432171211598, 0.08281573498964803, 0.08278716798896171, 0.08275862068965517, 0.0827300930713547, 0.08270158511371468, 0.0826730967964175, 0.08264462809917356, 0.08261617900172118, 0.08258774948382656, 0.0825593395252838, 0.08253094910591471, 0.08250257820556893, 0.08247422680412371, 0.08244589488148403, 0.08241758241758242, 0.082389289392379, 0.08236101578586136, 0.0823327615780446, 0.0823045267489712, 0.082276311278711, 0.0822481151473612, 0.08221993833504625, 0.0821917808219178, 0.08216364258815474, 0.08213552361396304, 0.08210742387957577, 0.08207934336525308, 0.08205128205128205, 0.08202323991797676, 0.08199521694567817, 0.08196721311475409, 0.08193922840559918, 0.08191126279863481, 0.08188331627430911, 0.08185538881309687, 0.08216842823048073, 0.08248125426039536, 0.082793867120954, 0.08276566757493188, 0.08273748723186926, 0.08304969366916269, 0.08302143586253828, 0.08299319727891157, 0.08296497789867392, 0.08293677770224338, 0.08290859667006456, 0.08288043478260869, 0.08285229202037352, 0.08282416836388323, 0.08279606379368849, 0.08276797829036635, 0.08273991183452017, 0.08271186440677966, 0.08268383598780074, 0.08265582655826559, 0.0826278360988825, 0.08259986459038592, 0.08257191201353638, 0.08254397834912043, 0.08251606357795063, 0.08248816768086545, 0.0824602906387293, 0.08243243243243244, 0.08240459304289091, 0.08271438217420661, 0.08268646641916975, 0.08265856950067477, 0.08263069139966273, 0.08260283209710047, 0.08257499157398045, 0.08254716981132075, 0.08251936679016504, 0.08249158249158249, 0.08246381689666779, 0.08243606998654104, 0.08240834174234779, 0.08238063214525891, 0.08235294117647059, 0.0823252688172043, 0.08229761504870675, 0.08226997985224983, 0.08224236320913059, 0.08221476510067115, 0.08218718550821871, 0.08215962441314555, 0.0821320817968488, 0.0824396782841823, 0.08241206030150754, 0.08238446081714669, 0.08235687981252092, 0.0823293172690763, 0.0823017731682837, 0.0822742474916388, 0.08224674022066199, 0.08221925133689839, 0.0825258937520882, 0.08249832999331998, 0.08247078464106845, 0.08244325767690254, 0.08241574908241575, 0.08238825883922615, 0.08236078692897633, 0.08233333333333333, 0.08230589803398868, 0.08227848101265822, 0.08225108225108226, 0.0822237017310253, 0.0821963394342762, 0.08216899534264804, 0.08214166943797806, 0.08211436170212766, 0.08208707211698239, 0.08205980066445183, 0.08203254732646961, 0.08200531208499336, 0.08197809492200464, 0.08195089581950896, 0.08192371475953565, 0.08189655172413793, 0.08186940669539278, 0.08184227965540093, 0.08181517058628685, 0.08178807947019867, 0.08176100628930817, 0.08173395102581073, 0.08170691366192524, 0.08167989417989419, 0.08165289256198346, 0.08162590879048248, 0.081598942847704, 0.08157199471598414, 0.0815450643776824, 0.08151815181518152, 0.0814912570108875, 0.08146437994722955, 0.08143752060666007, 0.08141067897165458, 0.0813838550247117, 0.0813570487483531, 0.08133026012512348, 0.08130348913759051, 0.08127673576834485, 0.08125, 0.08122328181519237, 0.0811965811965812, 0.08116989812684851, 0.08114323258869909, 0.08111658456486043, 0.08108995403808274, 0.08106334099113882, 0.08103674540682415, 0.0810101672679567, 0.08098360655737705, 0.08095706325794821, 0.0809305373525557, 0.08090402882410744, 0.08087753765553372, 0.08085106382978724, 0.08082460732984294, 0.08079816813869807, 0.08077174623937214, 0.08074534161490683, 0.08071895424836602, 0.08069258412283567, 0.08066623122142391, 0.08096637283708782, 0.08093994778067885, 0.08091353996737358, 0.08088714938030006, 0.08086077600260841, 0.08083441981747067, 0.08080808080808081, 0.08078175895765473, 0.08075545424943015, 0.0810546875, 0.08135372600065083, 0.08132726089785296, 0.08130081300813008, 0.0812743823146944, 0.08124796880077997, 0.08122157244964262, 0.08119519324455993, 0.08149350649350649, 0.08146705615060046, 0.08144062297209605, 0.08141420694129095, 0.08138780804150454, 0.0813614262560778, 0.08133506156837329, 0.08130871396177519, 0.08128238341968912, 0.08125606992554224, 0.08122977346278318, 0.08120349401488192, 0.08117723156532988, 0.08115098609763984, 0.08144796380090498, 0.08174474959612278, 0.08204134366925064, 0.08233774620600581, 0.08231116849580375, 0.08228460793804453, 0.08225806451612903, 0.08223153821347952, 0.08220502901353965, 0.08217853689977442, 0.0821520618556701, 0.0821256038647343, 0.08209916291049582, 0.08207273897650466, 0.08204633204633205, 0.08201994210357028, 0.0819935691318328, 0.08196721311475409, 0.08194087403598972, 0.08191455187921619, 0.08188824662813102, 0.08186195826645265, 0.08183568677792041, 0.08180943214629452, 0.081783194355356, 0.0817569733889067, 0.08173076923076923, 0.08170458186478692, 0.08167841127482384, 0.08165225744476465, 0.08162612035851473, 0.0816, 0.08157389635316699, 0.08154780940198274, 0.08152173913043478, 0.08181527644614893, 0.0817891373801917, 0.08176301501117854, 0.08173690932311622, 0.08171082030003192, 0.0816847479259732, 0.08165869218500797, 0.08163265306122448, 0.08160663053873127, 0.0815806246016571, 0.081554635234151, 0.08152866242038216, 0.08150270614453996, 0.08147676639083386, 0.08145084314349348, 0.08142493638676845, 0.08139904610492846, 0.08137317228226319, 0.08134731490308231, 0.08132147395171538, 0.08129564941251191, 0.08126984126984127, 0.08124404950809266, 0.08121827411167512, 0.08119251506501744, 0.08116677235256817, 0.08114104595879557, 0.08111533586818757, 0.08108964206525182, 0.08106396453451552, 0.08135485913263692, 0.08132911392405064, 0.08161974058842139, 0.08191018342820999, 0.08220044261776795, 0.08217446270543616, 0.08214849921011058, 0.082122552116235, 0.08209662140827281, 0.08207070707070707, 0.08204480908804039, 0.08201892744479496, 0.08199306212551245, 0.08196721311475409, 0.08194138039710054, 0.08191556395715185, 0.08188976377952756, 0.0818639798488665, 0.08183821214982688, 0.08212712397734424, 0.08210128971374646, 0.08238993710691823, 0.0826784030179189, 0.08296668761785041, 0.08294062205466542, 0.0829145728643216, 0.08288854003139717, 0.08286252354048965, 0.08283652337621587, 0.08281053952321205, 0.08278457196613359, 0.08275862068965517, 0.0827326856784707, 0.08270676691729323, 0.082680864390855, 0.08265497808390733, 0.08262910798122065, 0.08260325406758448, 0.08257741632780732, 0.0825515947467167, 0.08283838699593624, 0.0828125, 0.08278662917838175, 0.08276077451592755, 0.08273493599750234, 0.08270911360799, 0.08268330733229329, 0.08296943231441048, 0.0832553788587465, 0.08354114713216958, 0.08382673730133998, 0.0838006230529595, 0.08377452507007163, 0.08374844333748444, 0.0837223778400249, 0.08369632856253889, 0.08398133748055987, 0.08395522388059702, 0.083929126515387, 0.0839030453697949, 0.08387698042870456, 0.08385093167701864, 0.0838248990996585, 0.08379888268156424, 0.08377288240769469, 0.0837468982630273, 0.08372093023255814, 0.08369497830130192, 0.08366904245429191, 0.08364312267657993, 0.0836172189532363, 0.08359133126934984, 0.08356545961002786, 0.08353960396039604, 0.08351376430559851, 0.08348794063079777, 0.08346213292117466, 0.0834363411619283, 0.08341056533827618, 0.08338480543545398, 0.08335906143871566, 0.08333333333333333, 0.08330762110459734, 0.08328192473781616, 0.08325624421831637, 0.08323057953144267, 0.08320493066255778, 0.08317929759704251, 0.08315368032029566, 0.08312807881773399, 0.08310249307479224, 0.08307692307692308, 0.08305136880959704, 0.08302583025830258, 0.08300030740854596, 0.08297480024585126, 0.08325652841781873, 0.08353808353808354, 0.08381946576604236, 0.08410067526089625, 0.08407486959189936, 0.08404907975460123, 0.0840233057344373, 0.08399754751686082, 0.08397180508734294, 0.08394607843137254, 0.08392036753445635, 0.0838946723821188, 0.08386899295990205, 0.08384332925336598, 0.0838176812480881, 0.0837920489296636, 0.08376643228370528, 0.08374083129584352, 0.08371524595172625, 0.08368967623701894, 0.08366412213740458, 0.08363858363858363, 0.08361306072627403, 0.0835875533862111, 0.0835620616041476, 0.08353658536585366, 0.08351112465711673, 0.08348567946374162, 0.08346024977155041, 0.08343483556638245, 0.08340943683409437, 0.08368837492391966, 0.0836629145117128, 0.08394160583941605, 0.08422012769838856, 0.08449848024316109, 0.08447280461865694, 0.08444714459295262, 0.08442150015183723, 0.08439587128111718, 0.08437025796661608, 0.08434466019417476, 0.0843190779496512, 0.08429351121892056, 0.08426795998787512, 0.08424242424242424, 0.08421690396849439, 0.08419139915202907, 0.0841659097789888, 0.0841404358353511, 0.08411497730711044, 0.08408953418027829, 0.08406410644088297, 0.08403869407496976, 0.08401329706860079, 0.08429003021148036, 0.08426457263666566, 0.08423913043478261, 0.08421370359191066, 0.08418829209414605, 0.08416289592760182, 0.08413751507840772, 0.08411214953271028, 0.08408679927667269, 0.08406146429647485, 0.08403614457831325, 0.08401084010840108, 0.08398555087296809, 0.0839602768582606, 0.08393501805054152, 0.08421052631578947, 0.0841852074564041, 0.08415990381725277, 0.08413461538461539, 0.08440973265244818, 0.08438438438438438, 0.08435905133593516, 0.08433373349339736, 0.08430843084308431, 0.08428314337132574, 0.08425787106446776, 0.0842326139088729, 0.08420737189092, 0.08418214499700419, 0.08415693321353698, 0.08413173652694611, 0.08410655492367555, 0.08408138839018552, 0.08405623691295244, 0.0840311004784689, 0.08400597907324364, 0.08398087268380156, 0.0839557812966836, 0.08393070489844684, 0.08390564347566437, 0.08388059701492537, 0.08385556550283498, 0.08383054892601433, 0.08380554727110051, 0.08378056052474657, 0.08375558867362146, 0.08373063170441002, 0.08370568960381293, 0.08368076235854675, 0.08365584995534385, 0.08363095238095238, 0.08360606962213626, 0.08358120166567519, 0.08355634849836456, 0.08353151010701546, 0.08350668647845468, 0.08348187759952466, 0.08345708345708346, 0.08343230403800475, 0.0834075393291778, 0.08338278931750742, 0.08335805398991397, 0.08333333333333333, 0.08330862733471688, 0.08328393598103141, 0.08325925925925926, 0.08323459715639811, 0.08320994965946106, 0.08318531675547661, 0.0831606984314886, 0.08313609467455621, 0.08311150547175392, 0.0830869308101715, 0.08306237067691398, 0.08303782505910165, 0.08301329394387001, 0.08328411104548139, 0.08355476823147329, 0.08353010625737899, 0.08350545883741517, 0.08377581120943953, 0.08404600412857564, 0.08402122641509434, 0.08399646330680813, 0.08397171479080731, 0.08394698085419734, 0.08392226148409894, 0.08389755666764792, 0.08387286639199529, 0.08384819064430715, 0.08411764705882353, 0.08438694501617171, 0.08465608465608465, 0.08492506611813105, 0.08490011750881316, 0.08487518355359765, 0.08485026423957721, 0.0848253595538597, 0.08480046948356808, 0.08477559401584042, 0.08475073313782991, 0.08472588683670478, 0.0847010550996483, 0.08467623791385878, 0.0846514352665495, 0.08462664714494876, 0.08460187353629976, 0.0845771144278607, 0.08455236980690463, 0.08452763966071951, 0.08450292397660819, 0.08447822274188833, 0.08445353594389246, 0.08442886356996787, 0.08440420560747663, 0.08437956204379563, 0.0843549328663164, 0.08433031806244529, 0.08430571761960327, 0.08428113152522601, 0.08425655976676384, 0.08423200233168172, 0.0842074592074592, 0.08447422079813574, 0.08474082702387886, 0.08471615720524017, 0.08469150174621654, 0.08466686063427407, 0.08464223385689354, 0.08461762140157023, 0.08459302325581396, 0.08456843940714909, 0.08454386984311447, 0.08451931455126344, 0.08449477351916376, 0.08447024673439768, 0.0844457341845618, 0.08442123585726719, 0.0843967517401392, 0.08466222093360394, 0.08492753623188405, 0.08519269776876268, 0.08516801853997683, 0.08514335360556038, 0.08540822235089751, 0.08567293777134588, 0.0859375, 0.0862019091698004, 0.08646616541353383, 0.0864411679676207, 0.08641618497109826, 0.08639121641144178, 0.08636626227614096, 0.08634132255269997, 0.08631639722863742, 0.0862914862914863, 0.086266589728794, 0.0862417075281223, 0.08621683967704728, 0.08619198616315941, 0.0861671469740634, 0.08614232209737828, 0.08611751152073732, 0.08609271523178808, 0.08606793321819228, 0.0860431654676259, 0.08601841196777905, 0.08599367270635605, 0.08596894767107532, 0.08594423684966944, 0.08591954022988506, 0.0858948577994829, 0.08587018954623779, 0.08584553545793856, 0.08582089552238806, 0.08579626972740316, 0.08577165806081469, 0.08574706051046745, 0.08572247706422019, 0.08569790770994554, 0.08567335243553009, 0.08564881122887424, 0.08562428407789233, 0.08559977097051245, 0.08557527189467659, 0.08555078683834048, 0.08552631578947369, 0.08550185873605948, 0.08547741566609492, 0.08545298656759075, 0.08542857142857142, 0.08540417023707512, 0.08537978298115363, 0.0853554096488724, 0.0853310502283105, 0.08530670470756063, 0.08528237307472904, 0.08525805531793555, 0.08523375142531357, 0.08520946138500997, 0.08518518518518518, 0.0851609228140131, 0.08513667425968109, 0.08511243951038998, 0.08508821855435401, 0.08506401137980085, 0.08503981797497157, 0.08501563832812056, 0.08499147242751563, 0.08496732026143791, 0.08494318181818182, 0.0849190570860551, 0.08489494605337876, 0.08487084870848709, 0.08484676503972759, 0.084822695035461, 0.08479863868406126, 0.08477459597391551, 0.08475056689342404, 0.08472655143100029, 0.08498583569405099, 0.08524497309544038, 0.0855039637599094, 0.08576280781205774, 0.08573853989813243, 0.08571428571428572, 0.08569004524886878, 0.08566581849024597, 0.0856416054267948, 0.0856174060469059, 0.08559322033898305, 0.0855690482914431, 0.08554488989271598, 0.0855207451312447, 0.08549661399548533, 0.08547249647390691, 0.08544839255499154, 0.08542430222723428, 0.08540022547914318, 0.08537616229923922, 0.08535211267605634, 0.08532807659814137, 0.08530405405405406, 0.08528004503236701, 0.08525604952166572, 0.08523206751054853, 0.08520809898762655, 0.08518414394152375, 0.0851602023608769, 0.0851362742343355, 0.0851123595505618, 0.08508845829823083, 0.08506457046603032, 0.08504069604266068, 0.08501683501683502, 0.0849929873772791, 0.08496915311273136, 0.08494533221194281, 0.08492152466367713, 0.08489773045671056, 0.08487394957983194, 0.08485018202184262, 0.08482642777155655, 0.08480268681780016, 0.08477895914941243, 0.08475524475524475, 0.08473154362416108, 0.08470785574503774, 0.08468418110676355, 0.08466051969823973, 0.08463687150837988, 0.08461323652611002, 0.08458961474036851, 0.08456600614010605, 0.08454241071428571, 0.08451882845188284, 0.0844952593418851, 0.08447170337329245, 0.08444816053511706, 0.08442463081638339, 0.08440111420612813, 0.08437761069340016, 0.08435412026726058, 0.08433064291678263, 0.08430717863105175, 0.08428372739916551, 0.0842602892102336, 0.08423686405337781, 0.08421345191773208, 0.08419005279244235, 0.08416666666666667, 0.08414329352957511, 0.0841199333703498, 0.08409658617818484, 0.08407325194228635, 0.0840499306518724, 0.08402662229617304, 0.08400332686443028, 0.08398004434589801, 0.08395677472984206, 0.08421052631578947, 0.08418720576017724, 0.08416389811738649, 0.08414060337669527, 0.08439402324294411, 0.08437067773167359, 0.08434734513274336, 0.08432402543544373, 0.08430071862907684, 0.08427742470295661, 0.08425414364640885, 0.08423087544877106, 0.0842076200993926, 0.08418437758763456, 0.08416114790286976, 0.08413793103448276, 0.08411472697186984, 0.08409153570443893, 0.0840683572216097, 0.08404519151281345, 0.08402203856749312, 0.08399889837510328, 0.08397577092511013, 0.08395265620699147, 0.08392955421023665, 0.08390646492434663, 0.08388338833883388, 0.08386032444322243, 0.08383727322704783, 0.0838142346798571, 0.08379120879120878, 0.08376819555067289, 0.08374519494783086, 0.0837222069722756, 0.08369923161361141, 0.08367626886145405, 0.08365331870543061, 0.0836303811351796, 0.08360745614035088, 0.08358454371060564, 0.08356164383561644, 0.0835387565050671, 0.08351588170865279, 0.08349301943607994, 0.08347016967706623, 0.08344733242134063, 0.08342450765864333, 0.08340169537872573, 0.08337889557135046, 0.08335610822629133, 0.08333333333333333, 0.0833105708822726, 0.08328782086291645, 0.08326508326508326, 0.08324235807860263, 0.08321964529331514, 0.08319694489907256, 0.08317425688573767, 0.0831515812431843, 0.08312891796129736, 0.08337874659400545, 0.08335603377826205, 0.08333333333333333, 0.08331064524911516, 0.08328796951551443, 0.08326530612244898, 0.08324265505984767, 0.08322001631765026, 0.08319738988580751, 0.08317477575428106, 0.08315217391304348, 0.08312958435207823, 0.08310700706137969, 0.08308444203095303, 0.08306188925081433, 0.0830393487109905, 0.08301682040151927, 0.08299430431244914, 0.08297180043383948, 0.08294930875576037, 0.08292682926829269, 0.08290436196152805, 0.0828819068255688, 0.08285946385052803, 0.0828370330265295, 0.08281461434370771, 0.08279220779220779, 0.08276981336218556, 0.08274743104380747, 0.0827250608272506, 0.0827027027027027, 0.08295055390435017, 0.0829281469475959, 0.08290575209289765, 0.08288336933045357, 0.08286099865047233, 0.08283864004317323, 0.08281629349878608, 0.08279395900755124, 0.0827716365597196, 0.08274932614555255, 0.08272702775532202, 0.08270474137931035, 0.0826824670078104, 0.08266020463112547, 0.08263795423956931, 0.0826157158234661, 0.08259348937315039, 0.08257127487896719, 0.08254907233127184, 0.0825268817204301, 0.08250470303681806, 0.08248253627082214, 0.08246038141283911, 0.08243823845327605, 0.08241610738255034, 0.08239398819108965, 0.0823718808693319, 0.08234978540772532, 0.08232770179672834, 0.08230563002680966, 0.08228357008844814, 0.0822615219721329, 0.08223948566836324, 0.08221746116764864, 0.0821954484605087, 0.08217344753747323, 0.08215145838908215, 0.0821294810058855, 0.08210751537844344, 0.08208556149732621, 0.08206361935311414, 0.08204168893639764, 0.08201977023777718, 0.08199786324786325, 0.08197596795727637, 0.08195408435664708, 0.08193221243661596, 0.0819103521878335, 0.08188850360096026, 0.08186666666666667, 0.08184484137563316, 0.0818230277185501, 0.08180122568611778, 0.08177943526904635, 0.08175765645805592, 0.08173588924387647, 0.0817141336172478, 0.08169238956891964, 0.0816706570896515, 0.08164893617021277, 0.08162722680138261, 0.08187134502923976, 0.08211533351049695, 0.08235919234856535, 0.08233731739707835, 0.08231545406266595, 0.08229360233607645, 0.08227176220806794, 0.08251525603608384, 0.08275862068965517, 0.08273667462211615, 0.08271474019088017, 0.08269281738669494, 0.08267090620031796, 0.08264900662251656, 0.0826271186440678, 0.08260524225575853, 0.08258337744838538, 0.0825615242127547, 0.08253968253968254, 0.08251785241999471, 0.08249603384452671, 0.08247422680412371, 0.0824524312896406, 0.08243064729194187, 0.08240887480190175, 0.08238711381040402, 0.08236536430834214, 0.08234362628661916, 0.08232189973614776, 0.08230018464785017, 0.08227848101265822, 0.08225678882151331, 0.08223510806536637, 0.08247694334650857, 0.08245521601685986, 0.08243350013168291, 0.08241179568193786, 0.08239010265859437, 0.08236842105263158, 0.08234675085503815, 0.08232509205681221, 0.08230344464896135, 0.08228180862250263, 0.08226018396846255, 0.08223857067787704, 0.08221696874179144, 0.0821953781512605, 0.08217379889734838, 0.08215223097112861, 0.08213067436368407, 0.08210912906610703, 0.08208759506949909, 0.08206607236497115, 0.08204456094364351, 0.0820230607966457, 0.08200157191511659, 0.0819800942902043, 0.08195862791306625, 0.08193717277486912, 0.0819157288667888, 0.08215593929879644, 0.08239602406487052, 0.0823744769874477, 0.08235294117647059, 0.08233141662310507, 0.08230990331852626, 0.0822884012539185, 0.08226691042047532, 0.08224543080939947, 0.0822239624119029, 0.08220250521920668, 0.0821810592225411, 0.08215962441314555, 0.08213820078226858, 0.08211678832116788, 0.08209538702111024, 0.08207399687337155, 0.08231310237040897, 0.08255208333333333, 0.0827909398594116, 0.08302967204580948, 0.08326827998959146, 0.08350676378772112, 0.0834850455136541, 0.08372334893395736, 0.08396152846373797, 0.08393970893970894, 0.08417770849571317, 0.08415584415584415, 0.08413399117112438, 0.08411214953271028, 0.08409031923176745, 0.08406850025947069, 0.0840466926070039, 0.08402489626556017, 0.08400311122634171, 0.08398133748055987, 0.08395957501943509, 0.08393782383419689, 0.08391608391608392, 0.08389435525634387, 0.0838726378462335, 0.08385093167701864, 0.08382923673997413, 0.08380755302638386, 0.08378588052754073, 0.08376421923474664, 0.08374256913931248, 0.08372093023255814, 0.08369930250581245, 0.08367768595041322, 0.08365608055770721, 0.08363448631905007, 0.08361290322580645, 0.08359133126934984, 0.08356977044106267, 0.08354822073233625, 0.08352668213457076, 0.08350515463917525, 0.08348363823756763, 0.08346213292117466, 0.08344063868143188, 0.08341915550978372, 0.0833976833976834, 0.08337622233659289, 0.08335477231798302, 0.08333333333333333, 0.08356904088454616, 0.08380462724935733, 0.08378308918015934, 0.08376156217882837, 0.08374004623683534, 0.08371854134566, 0.08369704749679076, 0.08367556468172485, 0.08365409289196818, 0.0836326321190354, 0.08361118235444986, 0.08384615384615385, 0.08408100487054601, 0.0840594566888775, 0.08403791954906482, 0.08401639344262295, 0.08399487836107554, 0.08397337429595494, 0.08395188123880215, 0.08393039918116683, 0.08390892811460732, 0.08388746803069054, 0.08386601892099207, 0.08384458077709611, 0.08382315359059545, 0.08380173735309146, 0.08378033205619413, 0.08375893769152196, 0.08373755425070206, 0.08371618172537008, 0.08369482010717019, 0.0836734693877551, 0.08365212955878602, 0.08363080061193269, 0.0836094825388733, 0.0835881753312946, 0.08356687898089173, 0.08354559347936831, 0.08352431881843647, 0.0835030549898167, 0.08348180198523797, 0.08346055979643766, 0.08343932841516154, 0.08341810783316378, 0.08339689804220697, 0.08337569903406203, 0.08335451080050826, 0.08333333333333333, 0.08331216662433324, 0.08329101066531235, 0.08326986544808326, 0.083248730964467, 0.08322760720629283, 0.08320649416539827, 0.08318539183362922, 0.08316430020283976, 0.08314321926489227, 0.08312214901165738, 0.08310108943501393, 0.08308004052684904, 0.08305900227905799, 0.0830379746835443, 0.08301695773221969, 0.08299595141700405, 0.08297495572982545, 0.08295397066262013, 0.0829329962073325, 0.08291203235591507, 0.08289107910032853, 0.0828701364325417, 0.08284920434453144, 0.08282828282828283, 0.08280737187578895, 0.08278647147905098, 0.08276558163007823, 0.08274470232088799, 0.08272383354350568, 0.0827029752899647, 0.08268212755230653, 0.08266129032258064, 0.08264046359284455, 0.08261964735516372, 0.08259884160161168, 0.08257804632426989, 0.08255726151522778, 0.0825364871665828, 0.08251572327044025, 0.08249496981891348, 0.08247422680412371, 0.0824534942182001, 0.08268409148027142, 0.0829145728643216, 0.08314493845767396, 0.0831240582621798, 0.0831031885513432, 0.08308232931726908, 0.08306148055207026, 0.08304064224786753, 0.08301981439678957, 0.08299899699097292, 0.0832288794184006, 0.08345864661654136, 0.08368829867201202, 0.08391783567134269, 0.08414725770097671, 0.08412618928392589, 0.08410513141426783, 0.08408408408408409, 0.0840630472854641, 0.08404202101050526, 0.08402100525131283, 0.084, 0.08397900524868783, 0.08395802098950525, 0.08393704721458906, 0.08391608391608392, 0.08389513108614233, 0.08387418871692462, 0.08385325680059895, 0.08383233532934131, 0.0838114242953355, 0.08379052369077307, 0.08376963350785341, 0.08374875373878365, 0.08372788437577872, 0.08370702541106129, 0.08368617683686176, 0.08366533864541832, 0.08364451082897685, 0.08362369337979095, 0.08360288629012193, 0.08358208955223881, 0.08356130315841831, 0.0835405271009448, 0.08351976137211037, 0.08349900596421471, 0.08347826086956522, 0.08345752608047691, 0.08343680158927241, 0.08341608738828203, 0.08339538346984364, 0.08337468982630274, 0.08335400645001241, 0.08333333333333333, 0.08331267046863378, 0.08329201784828955, 0.08351920693928129, 0.08374628344895936, 0.08397324746098588, 0.08395245170876671, 0.08393166625402328, 0.08391089108910892, 0.08389012620638456, 0.08386937159821871, 0.08384862725698738, 0.08382789317507418, 0.08380716934487022, 0.0837864557587741, 0.083765752409192, 0.08374505928853755, 0.08372437638923191, 0.0837037037037037, 0.08368304122438903, 0.08366238894373149, 0.08364174685418209, 0.08362111494819931, 0.08360049321824907, 0.08357988165680473, 0.08355928025634705, 0.08353868900936422, 0.0835181079083518, 0.08349753694581281, 0.08347697611425757, 0.08345642540620384, 0.08343588481417671, 0.08341535433070867, 0.08339483394833948, 0.08337432365961633, 0.08335382345709368, 0.08333333333333333, 0.0833128532809044, 0.0832923832923833, 0.08327192336035372, 0.08325147347740668, 0.08323103363614044, 0.08321060382916053, 0.08319018404907975, 0.08316977428851816, 0.08314937454010302, 0.08312898479646885, 0.08310860505025741, 0.08308823529411764, 0.08306787552070571, 0.08304752572268496, 0.08302718589272594, 0.08300685602350637, 0.08298653610771115, 0.08296622613803231, 0.08294592610716907, 0.08292563600782779, 0.08290535583272193, 0.08288508557457212, 0.08286482522610608, 0.08284457478005865, 0.08282433422917175, 0.08280410356619443, 0.08278388278388278, 0.082763671875, 0.08274347083231633, 0.08272327964860908, 0.0827030983166626, 0.0826829268292683, 0.08266276517922458, 0.08264261335933691, 0.08262247136241774, 0.08260233918128655, 0.08258221680876979, 0.08256210423770093, 0.08254200146092038, 0.0827653359298929, 0.08274519347773181, 0.0827250608272506, 0.08270493797129652, 0.08268482490272373, 0.08266472161439338, 0.08264462809917356, 0.08262454434993925, 0.0826044703595724, 0.08258440612096186, 0.0825643516270034, 0.08254430687059966, 0.0825242718446602, 0.08274690609075468, 0.08272683163512858, 0.08294930875576037, 0.08317167798254123, 0.0833939393939394, 0.08361609306834707, 0.08383813908408044, 0.08406007751937984, 0.08428190845240978, 0.08450363196125908, 0.08448317598644396, 0.08446272991287512, 0.08444229373336559, 0.08442186744073536, 0.08440145102781137, 0.08438104448742746, 0.08436064781242446, 0.08434026099565008, 0.08431988402995892, 0.08429951690821257, 0.08452064718666989, 0.08474167069048769, 0.08472121650977553, 0.0847007722007722, 0.08468033775633294, 0.08465991316931983, 0.08463949843260188, 0.08461909353905496, 0.08459869848156182, 0.08457831325301204, 0.0845579378463021, 0.08453757225433527, 0.08451721647002167, 0.08449687048627828, 0.08447653429602887, 0.08445620789220404, 0.08443589126774116, 0.08441558441558442, 0.08439528732868477, 0.084375, 0.08435472242249459, 0.08433445458913984, 0.08431419649291376, 0.08429394812680115, 0.08427370948379352, 0.0842534805568891, 0.08423326133909287, 0.08421305182341651, 0.08419285200287839, 0.0841726618705036, 0.0841524814193239, 0.08413231064237775, 0.08411214953271028, 0.08409199808337327, 0.08407185628742515, 0.08405172413793104, 0.08403160162796265, 0.08401148875059837, 0.08399138549892318, 0.08397129186602871, 0.08419038507534082, 0.08440937350549976, 0.08462825723165192, 0.08460803059273422, 0.08458781362007169, 0.08456760630673674, 0.08454740864580845, 0.08452722063037249, 0.08450704225352113, 0.08448687350835322, 0.08446671438797423, 0.08444656488549618, 0.08442642499403769, 0.0844062947067239, 0.08438617401668654, 0.08436606291706387, 0.08434596140100072, 0.0843258694616484, 0.0843057870921648, 0.08428571428571428, 0.08426565103546775, 0.08424559733460257, 0.08422555317630265, 0.08420551855375832, 0.08418549346016647, 0.08416547788873038, 0.08414547183265986, 0.0841254752851711, 0.08410548823948681, 0.0840855106888361, 0.08406554262645452, 0.08404558404558404, 0.08402563493947306, 0.08400569530137636, 0.08398576512455516, 0.08396584440227704, 0.08394593312781598, 0.08392603129445235, 0.08390613889547287, 0.08388625592417062, 0.08386638237384506, 0.083846518237802, 0.08382666350935354, 0.08380681818181818, 0.08378698224852071, 0.08376715570279224, 0.08398391294061983, 0.08396404919583728, 0.08394419484511705, 0.08392434988179669, 0.08390451429922004, 0.08388468809073724, 0.0838648712497047, 0.08384506376948513, 0.08382526564344746, 0.08380547686496695, 0.08378569742742506, 0.08376592732420954, 0.08374616654871432, 0.08372641509433962, 0.08370667295449187, 0.08368694012258368, 0.08366721659203394, 0.08364750235626767, 0.08362779740871613, 0.08360810174281677, 0.08358841535201318, 0.08356873822975518, 0.08354907036949871, 0.08352941176470588, 0.08350976240884497, 0.0834901222953904, 0.08347049141782271, 0.08345086976962858, 0.08343125734430082, 0.08341165413533834, 0.08339206013624618, 0.08337247534053546, 0.08335289974172341, 0.0835680751173709, 0.0837831494954236, 0.08399812294697326, 0.08397841895378841, 0.08395872420262664, 0.08417350527549824, 0.08438818565400844, 0.08460276540895242, 0.08481724461105905, 0.08503162333099086, 0.08524590163934426, 0.0854600796066495, 0.08567415730337079, 0.08565410718464779, 0.085634066448292, 0.0856140350877193, 0.08559401309635173, 0.08557400046761748, 0.08555399719495091, 0.08553400327179247, 0.08551401869158878, 0.08549404344779257, 0.08547407753386269, 0.08545412094326407, 0.08543417366946779, 0.085414235705951, 0.08539430704619692, 0.08537438768369489, 0.0853544776119403, 0.08556773140592212, 0.08554778554778555, 0.0855278489862503, 0.08550792171481826, 0.08548800372699744, 0.08546809501630181, 0.08544819557625145, 0.08542830540037244, 0.08540842448219688, 0.08538855281526292, 0.08536869039311468, 0.08534883720930232, 0.08532899325738201, 0.08530915853091585, 0.085289333023472, 0.08526951672862454, 0.08524970963995354, 0.08522991175104505, 0.08521012305549105, 0.08519034354688951, 0.08517057321884428, 0.08515081206496519, 0.08513106007886802, 0.0851113172541744, 0.08509158358451194, 0.08507185906351414, 0.08505214368482039, 0.085032437442076, 0.08501274032893213, 0.08499305233904586, 0.08497337346608011, 0.0849537037037037, 0.0849340430455913, 0.08491439148542342, 0.08489474901688643, 0.08487511563367253, 0.08485549132947977, 0.08483587609801202, 0.08481626993297897, 0.08479667282809612, 0.08477708477708477, 0.08475750577367205, 0.08473793581159085, 0.08494921514312095, 0.08516039695361181, 0.0853714813105676, 0.0853517877739331, 0.0853321033210332, 0.08531242794558451, 0.08529276164130936, 0.08527310440193593, 0.08525345622119816, 0.08523381709283576, 0.0852141870105942, 0.08519456596822474, 0.08517495395948435, 0.08515535097813579, 0.08513575701794754, 0.08511617207269381, 0.08509659613615456, 0.08507702920211543, 0.08505747126436781, 0.0850379223167088, 0.08501838235294118, 0.08499885136687342, 0.08497932935231971, 0.08495981630309989, 0.08494031221303948, 0.0849208170759697, 0.08490133088572739, 0.08488185363615508, 0.08486238532110092, 0.08484292593441871, 0.08482347546996791, 0.08480403392161356, 0.0847846012832264, 0.08476517754868271, 0.0847457627118644, 0.08472635676665903, 0.08470695970695971, 0.08468757152666515, 0.08466819221967964, 0.08487760237931824, 0.08485818847209516, 0.08483878344386005, 0.08481938728852309, 0.0848, 0.08478062157221207, 0.08476125199908613, 0.08474189127455459, 0.08472253939255538, 0.08470319634703197, 0.08468386213193335, 0.08466453674121406, 0.08464522016883413, 0.08462591240875912, 0.0846066134549601, 0.0845873233014136, 0.08456804194210166, 0.08454876937101186, 0.08452950558213716, 0.08451025056947609, 0.08449100432703256, 0.08447176684881604, 0.08445253812884133, 0.08443331816112881, 0.0844141069397042, 0.08462238398544131, 0.08460313850352513, 0.08458390177353342, 0.08456467378949761, 0.08454545454545455, 0.0845262440354465, 0.08450704225352113, 0.08448784919373155, 0.08446866485013624, 0.0844494892167991, 0.08443032228778938, 0.08441116405718176, 0.08439201451905626, 0.0843728736674983, 0.08435374149659863, 0.08456132396282022, 0.08454215775158658, 0.08452300022660322, 0.08450385138196648, 0.08448471121177803, 0.08446557971014493, 0.08444645687117953, 0.08442734268899954, 0.084408237157728, 0.08438914027149322, 0.08437005202442886, 0.08435097241067391, 0.0843319014243726, 0.0843128390596745, 0.08429378531073446, 0.0842747401717126, 0.08425570363677434, 0.08423667570009033, 0.08421765635583653, 0.08419864559819414, 0.08417964342134958, 0.08416064981949459, 0.08414166478682608, 0.08412268831754624, 0.08410372040586246, 0.08408476104598737, 0.08406581023213883, 0.08404686795853988, 0.08402793421941879, 0.08400900900900901, 0.0839900923215492, 0.08397118415128321, 0.08395228449246005, 0.08393339333933393, 0.08391451068616423, 0.08389563652721548, 0.08387677085675736, 0.08385791366906475, 0.08383906495841763, 0.08382022471910112, 0.08380139294540552, 0.08378256963162624, 0.08376375477206378, 0.0837449483610238, 0.08372615039281706, 0.08370736086175942, 0.08368857976217187, 0.08366980708838044, 0.0836510428347163, 0.0836322869955157, 0.08361353956511992, 0.08381891528462573, 0.08380013443871835, 0.08378136200716846, 0.0837625979843225, 0.08374384236453201, 0.08372509514215357, 0.0837063563115488, 0.08368762586708436, 0.083668903803132, 0.08365019011406843, 0.0836314847942755, 0.08361278783813995, 0.08359409924005365, 0.08357541899441341, 0.0835567470956211, 0.08353808353808354, 0.08351942831621259, 0.08350078142442509, 0.08348214285714285, 0.0836866770810087, 0.08389112003569835, 0.08409547178228864, 0.08429973238180197, 0.08450390189520625, 0.08448506464556398, 0.08446623579228883, 0.08444741532976827, 0.08442860325239475, 0.0844097995545657, 0.08439100423068359, 0.08437221727515583, 0.08435343868239484, 0.08433466844681797, 0.08431590656284761, 0.08429715302491103, 0.08427840782744052, 0.08425967096487327, 0.08424094243165148, 0.08422222222222223, 0.08420351033103755, 0.08418480675255442, 0.08416611148123473, 0.08436944937833037, 0.08435072142064373, 0.08433200177541056, 0.08431329043709784, 0.08429458740017746, 0.08427589265912619, 0.08425720620842572, 0.08423852804256263, 0.08421985815602837, 0.0842011965433193, 0.08418254319893664, 0.08416389811738649, 0.0841452612931798, 0.08412663272083241, 0.08410801239486498, 0.08408940030980305, 0.084070796460177, 0.084052200840522, 0.08403361344537816, 0.0840150342692903, 0.08399646330680813, 0.08397790055248619, 0.08395934600088378, 0.08394079964656505, 0.08392226148409894, 0.08390373150805917, 0.08388520971302428, 0.08386669609357758, 0.08384819064430715, 0.08382969335980586, 0.08381120423467137, 0.08379272326350606, 0.083994708994709, 0.08397619572404673, 0.08395769061260468, 0.08393919365499009, 0.08392070484581497, 0.0839022241796961, 0.08388375165125496, 0.08386528725511776, 0.0838468309859155, 0.08382838283828382, 0.08380994280686317, 0.08379151088629866, 0.08377308707124011, 0.08375467135634206, 0.08373626373626374, 0.08371786420566908, 0.08369947275922672, 0.08368108939160993, 0.0836627140974967, 0.0836443468715697, 0.08362598770851624, 0.0836076366030283, 0.08358929354980255, 0.08357095854354026, 0.08355263157894736, 0.0835343126507345, 0.08351600175361683, 0.08349769888231427, 0.08347940403155127, 0.08346111719605695, 0.08344283837056504, 0.08342456754981388, 0.0834063047285464, 0.08338804990151018, 0.08336980306345733, 0.08335156420914461, 0.08333333333333333, 0.08331511043078942, 0.08329689549628334, 0.08327868852459017, 0.0832604895104895, 0.08324229844876557, 0.08322411533420708, 0.08320594016160734, 0.0831877729257642, 0.08316961362148002, 0.08315146224356176, 0.08313331878682086, 0.0831151832460733, 0.08309705561613959, 0.08307893589184474, 0.08306082406801832, 0.08304272013949433, 0.08302462410111135, 0.08300653594771241, 0.08298845567414506, 0.08297038327526132, 0.0829523187459177, 0.08293426208097518, 0.08291621327529924, 0.08289817232375979, 0.08288013922123123, 0.08286211396259244, 0.08284409654272668, 0.08282608695652174, 0.08280808519886981, 0.08279009126466753, 0.08277210514881599, 0.08297132927888792, 0.08295331161780674, 0.08293530178028659, 0.08291729976123291, 0.08289930555555555, 0.0828813191581688, 0.08286334056399132, 0.08284536976794621, 0.08282740676496098, 0.08302623021894645, 0.08322496749024708, 0.08320693391115927, 0.0831889081455806, 0.08317089018843404, 0.08315288003464703, 0.08313487767915133, 0.08311688311688312, 0.08309889634278295, 0.08308091735179576, 0.08306294613887086, 0.08304498269896193, 0.08302702702702702, 0.08300907911802853, 0.08299113896693322, 0.08297320656871218, 0.0829552819183409, 0.08293736501079914, 0.08291945584107105, 0.08290155440414508, 0.08288366069501403, 0.08286577470867501, 0.08284789644012945, 0.08283002588438308, 0.08281216303644598, 0.08279430789133248, 0.08277646044406121, 0.08275862068965517, 0.08274078862314156, 0.08272296423955192, 0.08270514753392204, 0.082687338501292, 0.08266953713670613, 0.08265174343521309, 0.08263395739186571, 0.08261617900172118, 0.08259840825984083, 0.08258064516129032, 0.08256288970113954, 0.0825451418744626, 0.08274231678486997, 0.0827245380318006, 0.08270676691729323, 0.08268900343642611, 0.08267124758428172, 0.08265349935594676, 0.08263575874651213, 0.08261802575107297, 0.0826003003647286, 0.08258258258258258, 0.08256487239974265, 0.08254716981132075, 0.08252947481243302, 0.08251178739819974, 0.08249410756374545, 0.0824764353041988, 0.08245877061469266, 0.08244111349036402, 0.08242346392635409, 0.08240582191780822, 0.08238818745987589, 0.08237056054771075, 0.08235294117647059, 0.08233532934131736, 0.08231772503741715, 0.08230012825994014, 0.0822825390040607, 0.08226495726495726, 0.08224738303781243, 0.0822298163178129, 0.08221225710014948, 0.08219470538001708, 0.08217716115261472, 0.08215962441314555, 0.08214209515681672, 0.08212457337883959, 0.08210705907442951, 0.08208955223880597, 0.08207205286719249, 0.08205456095481671, 0.08203707649691029, 0.08201959948870899, 0.08200212992545261, 0.081984667802385, 0.08196721311475409, 0.08194976585781183, 0.08193232602681422, 0.08191489361702127, 0.08189746862369708, 0.08188005104210974, 0.08186264086753137, 0.0818452380952381, 0.0818278427205101, 0.08181045473863154, 0.08179307414489059, 0.08177570093457943, 0.08175833510299427, 0.08174097664543524, 0.08172362555720654, 0.08170628183361629, 0.08168894546997665, 0.08167161646160373, 0.0816542948038176, 0.08163698049194232, 0.08161967352130592, 0.08160237388724036, 0.08158508158508158, 0.0815677966101695, 0.08155051895784791, 0.08153324862346463, 0.08151598560237137, 0.0814987298899238, 0.08148148148148149, 0.08146424037240796, 0.08144700655807066, 0.08142978003384095, 0.0814125607950941, 0.08139534883720931, 0.08137814415556965, 0.08136094674556213, 0.08134375660257764, 0.08132657372201098, 0.08130939809926083, 0.08129222972972973, 0.08127506860882415, 0.08125791473195441, 0.08145178307659844, 0.08143459915611814, 0.08141742248470787, 0.08140025305778152, 0.0813830908707569, 0.08136593591905565, 0.08134878819810326, 0.08133164770332912, 0.08131451443016642, 0.08129738837405223, 0.08128026953042745, 0.08126315789473684, 0.08124605346242897, 0.08122895622895623, 0.08121186618977488, 0.08119478334034497, 0.08117770767613039, 0.08137089991589572, 0.08135379440824049, 0.08133669609079446, 0.081319604959025, 0.08130252100840336, 0.08128544423440454, 0.08126837463250736, 0.08125131219819441, 0.08123425692695214, 0.08121720881427072, 0.08120016785564414, 0.08118313404657017, 0.08116610738255034, 0.08135877542461732, 0.08155136268343816, 0.08153426954516872, 0.08151718357082983, 0.0815001047559187, 0.08148303309593632, 0.08146596858638744, 0.08144891122278057, 0.081431861000628, 0.08141481791544579, 0.08139778196275371, 0.08138075313807532, 0.08136373143693788, 0.08134671685487244, 0.08132970938741375, 0.08131270903010034, 0.0812957157784744, 0.0812787296280819, 0.08126175057447253, 0.08124477861319966, 0.08122781373982042, 0.08121085594989562, 0.08119390523898977, 0.08117696160267111, 0.08116002503651158, 0.08114309553608677, 0.08112617309697602, 0.08131776480400334, 0.08150927663122785, 0.0814922884535223, 0.0814753073556991, 0.08145833333333333, 0.08144136638200375, 0.0814244064972928, 0.08140745367478659, 0.08139050791007493, 0.08158168574401665, 0.08156471077819392, 0.081547742874974, 0.08153078202995008, 0.08151382823871907, 0.0814968814968815, 0.08147994180004157, 0.08146300914380715, 0.08144608352378974, 0.08142916493560448, 0.0814122533748702, 0.08139534883720931, 0.08137845131824788, 0.0813615608136156, 0.08134467731894585, 0.08132780082987552, 0.08131093134204521, 0.08129406885109913, 0.08127721335268505, 0.0812603648424544, 0.08124352331606217, 0.08122668876916701, 0.08120986119743112, 0.0811930405965203, 0.08117622696210396, 0.08115942028985507, 0.08114262057545021, 0.08112582781456953, 0.08110904200289674, 0.08109226313611916, 0.08107549120992762, 0.08105872622001654, 0.08104196816208394, 0.08102521703183134, 0.08100847282496383, 0.08099173553719008, 0.08097500516422226, 0.08095828170177613, 0.08094156514557092, 0.08092485549132948, 0.08090815273477812, 0.08089145687164671, 0.08087476789766866, 0.08085808580858085, 0.08084141060012373, 0.08082474226804123, 0.08080808080808081, 0.0807914262159934, 0.08077477848753349, 0.080758137618459, 0.08074150360453142, 0.08072487644151564, 0.08070825612518015, 0.08069164265129683, 0.08067503601564108, 0.08065843621399177, 0.08064184324213125, 0.08062525709584534, 0.0806086777709233, 0.0805921052631579, 0.08057553956834532, 0.08055898068228524, 0.08054242860078077, 0.08052588331963846, 0.0805093448346683, 0.08049281314168377, 0.08047628823650174, 0.08045977011494253, 0.08044325877282987, 0.08042675420599098, 0.08041025641025641, 0.08039376538146022, 0.08037728111543982, 0.08036080360803607, 0.08034433285509325, 0.08032786885245902, 0.08031141159598443, 0.08029496108152397, 0.08027851730493549, 0.08026208026208026, 0.08024564994882293, 0.08022922636103152, 0.08021280949457744, 0.08040098199672668, 0.08058907752096543, 0.08057259713701431, 0.0805561234921284, 0.08053965658217498, 0.08052319640302473, 0.0805067429505517, 0.0804902962206333, 0.08047385620915033, 0.08045742291198693, 0.08044099632503063, 0.08042457644417228, 0.08040816326530613, 0.08039175678432973, 0.08037535699714403, 0.08035896389965327, 0.08034257748776509, 0.08032619775739042, 0.08030982470444353, 0.08029345832484207, 0.08027709861450692, 0.0802607455693624, 0.08024439918533605, 0.08022805945835879, 0.08041530944625407, 0.080602483207816, 0.08058608058608059, 0.08056968463886063, 0.080553295362083, 0.08053691275167785, 0.0805205368035787, 0.0805041675137223, 0.08048780487804878, 0.08047144889250152, 0.08045509955302722, 0.08043875685557587, 0.08042242079610074, 0.08040609137055837, 0.08038976857490865, 0.08057641566876396, 0.08056006493506493, 0.08054372083586935, 0.08052738336713997, 0.08051105252484284, 0.08049472830494728, 0.0804784107034259, 0.0806647750304013, 0.08064842958459979, 0.0806320907617504, 0.08061575855782864, 0.08059943296881328, 0.08058311399068638, 0.08056680161943319, 0.0805504958510423, 0.08053419668150547, 0.08051790410681772, 0.08050161812297735, 0.08048533872598584, 0.08046906591184796, 0.08045279967657167, 0.08043654001616815, 0.08042028692665185, 0.08040404040404041, 0.08058977984245606, 0.08077544426494346, 0.08096103371693923, 0.08094469115865967, 0.08092835519677094, 0.08091202582728006, 0.0808957030461973, 0.0808793868495361, 0.08086307723331317, 0.08084677419354838, 0.08083047772626487, 0.08081418782748892, 0.08079790449325006, 0.08078162771958099, 0.08076535750251762, 0.08074909383809907, 0.08073283672236763, 0.08071658615136876, 0.08070034212115114, 0.0806841046277666, 0.08066787366727017, 0.08065164923572003, 0.08063543132917755, 0.08061921994370727, 0.08060301507537689, 0.08058681672025723, 0.08057062487442235, 0.08055443953394938, 0.08053826069491866, 0.08072289156626505, 0.08090744830355351, 0.08089120835006022, 0.08087497491471002, 0.08085874799357945, 0.08084252758274825, 0.08082631367829923, 0.08081010627631843, 0.0809943865276664, 0.08117859290438965, 0.0811623246492986, 0.08114606291324383, 0.0811298076923077, 0.0811135589825756, 0.08109731678013617, 0.08108108108108109, 0.08126501200960769, 0.08124874924954972, 0.08123249299719888, 0.08121624324864973, 0.0812, 0.08118376324735053, 0.08116753298680528, 0.08115130921447132, 0.08113509192645883, 0.08111888111888112, 0.08110267678785457, 0.0810864789294987, 0.0810702875399361, 0.08105410261529247, 0.08103792415169661, 0.08122131311115546, 0.08140462889066241, 0.08158787153401156, 0.08177104108496211, 0.08195413758723828, 0.0819377990430622, 0.08192146701215866, 0.08190514149063371, 0.08188882247459653, 0.08187250996015936, 0.08185620394343757, 0.08183990442054959, 0.08182361138761696, 0.08180732484076433, 0.0817910447761194, 0.08177477118981297, 0.08175850407797891, 0.08194112967382657, 0.08192483595148141, 0.08190854870775348, 0.08189226793877957, 0.08187599364069953, 0.08185972580965627, 0.08184346444179579, 0.08182720953326714, 0.0818109610802224, 0.08179471907881676, 0.08177848352520842, 0.08176225441555865, 0.08174603174603175, 0.08172981551279508, 0.08171360571201904, 0.08169740233987706, 0.0816812053925456, 0.08166501486620416, 0.08164883075703527, 0.08163265306122448, 0.08161648177496038, 0.08160031689443455, 0.08158415841584159, 0.08156800633537914, 0.08155186064924783, 0.0815357213536513, 0.0815195884447962, 0.08150346191889218, 0.0814873417721519, 0.08147122800079099, 0.08145512060102808, 0.0814390195690848, 0.08142292490118577, 0.08140683659355859, 0.08139075464243382, 0.08137467904404504, 0.08135860979462875, 0.08134254689042449, 0.0813264903276747, 0.08131044010262482, 0.08129439621152329, 0.08127835865062143, 0.08126232741617356, 0.081246302504437, 0.08123028391167192, 0.08121427163414154, 0.08119826566811195, 0.08118226600985222, 0.08116627265563436, 0.0811502856017333, 0.08113430484442694, 0.08111833037999606, 0.08110236220472442, 0.08108640031489864, 0.08107044470680834, 0.08105449537674601, 0.08103855232100708, 0.08102261553588987, 0.08100668501769563, 0.08099076076272853, 0.0809748427672956, 0.08095893102770682, 0.08094302554027505, 0.08092712630131604, 0.08091123330714847, 0.08089534655409386, 0.08087946603847664, 0.08086359175662414, 0.08104395604395605, 0.08102805571905042, 0.08101216163201255, 0.08099627377917239, 0.08098039215686274, 0.08096451676141933, 0.08094864758918072, 0.08093278463648834, 0.08091692789968652, 0.08090107737512243, 0.0808852330591461, 0.08086939494811043, 0.08085356303837118, 0.08083773732628695, 0.08082191780821918, 0.08080610448053219, 0.08079029733959311, 0.08077449638177195, 0.08075870160344154, 0.08074291300097752, 0.0807271305707584, 0.08071135430916553, 0.08069558421258304, 0.08067982027739792, 0.0806640625, 0.08064831087678188, 0.080632565404139, 0.08061682607846965, 0.08060109289617487, 0.08058536585365854, 0.08056964494732735, 0.08055393017359079, 0.08053822152886116, 0.08052251900955353, 0.08050682261208578, 0.08049113233287858, 0.08047544816835542, 0.08045977011494253, 0.08044409816906896, 0.08042843232716651, 0.08041277258566978, 0.08039711894101616, 0.08038147138964577, 0.08036582992800155, 0.08035019455252919, 0.08052907994553589, 0.0807078957604045, 0.08069220299436126, 0.0806765163297045, 0.08066083576287658, 0.08064516129032258, 0.08062949290849038, 0.08061383061383061, 0.08059817440279667, 0.08058252427184466, 0.08056688021743351, 0.08055124223602485, 0.08053561032408306, 0.08051998447807528, 0.08069835111542192, 0.08068269976726145, 0.08066705448904402, 0.08065141527723924, 0.08063578212831944, 0.08062015503875969, 0.08060453400503778, 0.08058891902363426, 0.08057331009103234, 0.08055770720371805, 0.08054211035818006, 0.0805265195509098, 0.08051093477840139, 0.0804953560371517, 0.08047978332366028, 0.0804642166344294, 0.08044865596596402, 0.08043310131477185, 0.08041755267736324, 0.08040201005025126, 0.08038647342995169, 0.080370942812983, 0.08035541819586633, 0.08033989957512554, 0.08032438694728712, 0.08030888030888031, 0.08029337965643699, 0.0802778849864917, 0.08045533474821531, 0.08063271604938271, 0.08061716489874639, 0.08060161974546858, 0.08058608058608059, 0.08057054741711642, 0.08055502023511274, 0.08053949903660887, 0.0805239838181468, 0.08050847457627118, 0.08049297130752936, 0.08047747400847131, 0.08046198267564966, 0.0804464973056197, 0.0804310178949394, 0.0804155444401693, 0.08040007693787267, 0.08038461538461539, 0.08036915977696597, 0.08035371011149559, 0.080338266384778, 0.0803228285933897, 0.0803073967339097, 0.08029197080291971, 0.08027655079700403, 0.08026113671274962, 0.08024572854674601, 0.08023032629558541, 0.0802149299558626, 0.08019953952417498, 0.08018415499712257, 0.08016877637130802, 0.08015340364333653, 0.08013803680981595, 0.08012267586735672, 0.08010732081257187, 0.08009197164207703, 0.08007662835249042, 0.08006129094043286, 0.08004595940252776, 0.0800306337354011, 0.08001531393568147, 0.08, 0.07998469192499043, 0.07996938970728908, 0.07995409334353482, 0.0799388028303691, 0.07992351816443595, 0.07990823934238195, 0.07989296636085627, 0.07987769921651061, 0.07986243790599924, 0.07984718242597899, 0.07983193277310924, 0.07981668894405194, 0.07980145093547156, 0.07978621874403512, 0.07977099236641222, 0.07975577179927494, 0.07974055703929797, 0.0797253480831585, 0.07971014492753623, 0.07969494756911344, 0.07967975600457491, 0.07966457023060797, 0.07964939024390244, 0.0796342160411507, 0.07961904761904762, 0.0796038849742906, 0.07958872810357959, 0.07976394441271654, 0.07993909402360107, 0.07992388201712655, 0.07990867579908675, 0.07989347536617843, 0.0798782807151008, 0.08005324206122837, 0.08022813688212928, 0.08021288728378635, 0.08019764348156594, 0.08018240547216417, 0.08016717325227964, 0.08015194681861348, 0.08013672616786935, 0.08012151129675336, 0.08010630220197418, 0.08028088821408237, 0.08045540796963947, 0.08044014418516411, 0.08042488619119878, 0.08040963398444909, 0.08039438756162305, 0.08056872037914692, 0.08074298711144806, 0.08072768618533258, 0.08071239105721864, 0.08088653154006441, 0.08106060606060606, 0.0812346146563151, 0.0814085573646346, 0.08139314783267083, 0.0813777441332324, 0.08136234626300852, 0.08134695421869088, 0.0813315679969737, 0.08131618759455371, 0.08130081300813008, 0.08128544423440454, 0.08145908145908146, 0.08144368858654573, 0.08142830153032307, 0.0814129202871175, 0.08139754485363551, 0.0813821752265861, 0.08136681140268076, 0.08154020385050963, 0.08171353085487829, 0.08188679245283019, 0.08205998868138087, 0.08223311957751792, 0.08240618517820102, 0.08239064856711915, 0.0823751178133836, 0.08235959291368262, 0.08253250423968343, 0.08251695553880935, 0.08250141269542287, 0.08248587570621468, 0.082470344567878, 0.08245481927710843, 0.08243929983060418, 0.08242378622506587, 0.08240827845719662, 0.08239277652370203, 0.0823772804212902, 0.08236179014667168, 0.0823463056965595, 0.08233082706766917, 0.08231535425671867, 0.08229988726042842, 0.08228442607552132, 0.08226897069872277, 0.08225352112676056, 0.082238077356365, 0.08222263938426883, 0.08220720720720721, 0.0821917808219178, 0.08217636022514072, 0.08216094541361846, 0.08214553638409602, 0.08213013313332083, 0.08211473565804274, 0.08209934395501406, 0.0820839580209895, 0.08206857785272625, 0.08205320344698389, 0.08203783480052444, 0.08202247191011236, 0.08200711477251452, 0.08199176338450019, 0.0819764177428411, 0.08196107784431138, 0.08194574368568756, 0.0819304152637486, 0.08191509257527585, 0.0818997756170531, 0.08207141521779772, 0.08224299065420561, 0.08222762100541955, 0.08221225710014948, 0.08219689893517654, 0.08218154650728428, 0.08216619981325864, 0.08215085884988797, 0.08213552361396304, 0.08212019410227697, 0.0821048703116253, 0.08208955223880597, 0.08207423988061929, 0.08205893323386795, 0.08204363229535708, 0.08202833706189411, 0.08201304753028892, 0.0819977636973537, 0.08198248555990312, 0.08196721311475409, 0.08195194635872602, 0.08193668528864059, 0.08192142990132191, 0.08190618019359643, 0.08189093616229294, 0.08187569780424266, 0.08186046511627906, 0.0818452380952381, 0.08183001673795796, 0.08181480104127929, 0.081799591002045, 0.08178438661710037, 0.08176918788329307, 0.08175399479747306, 0.08173880735649267, 0.08172362555720654, 0.08170844939647168, 0.08169327887114743, 0.08167811397809542, 0.08166295471417966, 0.08164780107626647, 0.08163265306122448, 0.08180300500834725, 0.081973293768546, 0.08195809382532913, 0.08194289951798295, 0.0819277108433735, 0.08191252779836916, 0.08189735037984065, 0.08188217858466099, 0.0818670124097055, 0.08185185185185186, 0.08183669690798, 0.08182154757497223, 0.08180640384971312, 0.08179126572908957, 0.08177613320999075, 0.08176100628930817, 0.08174588496393564, 0.08173076923076923, 0.08171565908670735, 0.08170055452865065, 0.08168545555350212, 0.08167036215816703, 0.08165527433955293, 0.08164019209456963, 0.08162511542012928, 0.08161004431314624, 0.0815949787705372, 0.08157991878922112, 0.0815648643661192, 0.08154981549815499, 0.0815347721822542, 0.0815197344153449, 0.08150470219435736, 0.08148967551622419, 0.08147465437788018, 0.0816439366015481, 0.08181315644002211, 0.08198231392778187, 0.08196721311475409, 0.08195211786372007, 0.08193702817160745, 0.0819219440353461, 0.08190686545186822, 0.0818917924181082, 0.08187672493100276, 0.0818616629874908, 0.08184660658451352, 0.08183155571901435, 0.08181651038793895, 0.0818014705882353, 0.08178643631685352, 0.08177140757074605, 0.08175638434686754, 0.08174136664217486, 0.08172635445362718, 0.08171134777818582, 0.08187993390857352, 0.08204845814977973, 0.08221692053587815, 0.08238532110091742, 0.0825536598789213, 0.08253851797505503, 0.0825233816247937, 0.08250825082508251, 0.08249312557286893, 0.08247800586510264, 0.08246289169873557, 0.08244778307072187, 0.08243267997801795, 0.08241758241758242, 0.08240249038637612, 0.08238740388136213, 0.08237232289950576, 0.08235724743777452, 0.08234217749313816, 0.08232711306256861, 0.08231205414304006, 0.0822970007315289, 0.08228195282501372, 0.08226691042047532, 0.08225187351489673, 0.08223684210526316, 0.08240453133564772, 0.08257215929850201, 0.08255707762557078, 0.08254200146092038, 0.08270951250684681, 0.08269441401971522, 0.08267932104398613, 0.08266423357664233, 0.08264915161466886, 0.0826340751550529, 0.08261900419478388, 0.0826039387308534, 0.08258887876025524, 0.08257382427998541, 0.0825587752870421, 0.08254373177842565, 0.08252869375113864, 0.0825136612021858, 0.08249863412857403, 0.08248361252731246, 0.08246859639541235, 0.08245358572988715, 0.0824385805277525, 0.0824235807860262, 0.08240858650172822, 0.08239359767188069, 0.08237861429350792, 0.08236363636363636, 0.08234866387929467, 0.08233369683751363, 0.08231873523532618, 0.08248546511627906, 0.08265213442325159, 0.08263712313839448, 0.08262211730524786, 0.08260711692084241, 0.08259212198221093, 0.08257713248638839, 0.0825621484304119, 0.08254716981132075, 0.08253219662615635, 0.08251722887196228, 0.08250226654578423, 0.08248730964467005, 0.08247235816566975, 0.08245741210583545, 0.08244247146222142, 0.08242753623188406, 0.0824126064118819, 0.08239768199927562, 0.08256382400869093, 0.08254887762490949, 0.0825339366515837, 0.08251900108577633, 0.0825040709245522, 0.0824891461649783, 0.08247422680412371, 0.08245931283905968, 0.08244440426685952, 0.0824295010845987, 0.08241460328935478, 0.08239971087820744, 0.08238482384823849, 0.08236994219653179, 0.08235506592017337, 0.08234019501625135, 0.08232532948185593, 0.08231046931407943, 0.08229561451001624, 0.0822807650667629, 0.08226592098141801, 0.08225108225108226, 0.08223624887285844, 0.08222142084385142, 0.0822065981611682, 0.0821917808219178, 0.08217696882321139, 0.08216216216216216, 0.08214736083588543, 0.08213256484149856, 0.08211777417612101, 0.08210298883687432, 0.0820882088208821, 0.08207343412526998, 0.08205866474716574, 0.08204390068369917, 0.08202914193200216, 0.08201438848920864, 0.08199964035245459, 0.08198489751887811, 0.08197015998561927, 0.08195542774982027, 0.08194070080862534, 0.08192597915918073, 0.08191126279863481, 0.08189655172413793, 0.08188184593284252, 0.08186714542190306, 0.08185245018847603, 0.08183776022972003, 0.08182307554279562, 0.08180839612486544, 0.08179372197309417, 0.08177905308464849, 0.08176438945669715, 0.0817497310864109, 0.08173507797096254, 0.08172043010752689, 0.08170578749328078, 0.08169115012540308, 0.08167651800107469, 0.08166189111747851, 0.08164726947179947, 0.08163265306122448, 0.08161804188294254, 0.0816034359341446, 0.08176775809626051, 0.0817531305903399, 0.08173850831693794, 0.0817238912732475, 0.08170927945646343, 0.08169467286378262, 0.08168007149240393, 0.08166547533952824, 0.0816508844023584, 0.08163629867809932, 0.08162171816395784, 0.08160714285714285, 0.0815925727548652, 0.08157800785433773, 0.0815634481527753, 0.08154889364739472, 0.0815343443354148, 0.08151980021405637, 0.08150526128054218, 0.081490727532097, 0.08147619896594759, 0.08146167557932264, 0.08144715736945286, 0.08143264433357092, 0.08141813646891145, 0.08140363377271108, 0.08138913624220837, 0.08137464387464387, 0.08153818764465016, 0.08170167319330722, 0.08186510055169958, 0.08185053380782918, 0.08183597224693115, 0.08182141586623977, 0.08180686466299128, 0.08179231863442389, 0.08177777777777778, 0.08176324209029506, 0.08174871156921984, 0.08173418621179815, 0.08171966601527803, 0.08170515097690942, 0.08169064109394424, 0.08167613636363637, 0.0816616367832416, 0.08164714235001774, 0.08163265306122448, 0.08161816891412349, 0.08160368990597835, 0.08158921603405463, 0.0815747472956198, 0.08156028368794327, 0.0815458252082964, 0.0815313718539525, 0.08151692362218678, 0.0815024805102764, 0.08148804251550044, 0.08147360963513992, 0.08145918186647777, 0.08144475920679886, 0.08143034165338998, 0.08141592920353982, 0.08140152185453901, 0.08138711960368011, 0.08137272244825756, 0.08135833038556774, 0.08134394341290893, 0.08132956152758133, 0.08131518472688705, 0.08130081300813008, 0.0814631560346351, 0.08144876325088339, 0.08143437555202261, 0.08141999293535854, 0.08140561539819884, 0.0813912429378531, 0.08137687555163284, 0.0813625132368514, 0.08152461619904712, 0.08168666196189132, 0.08184865055565356, 0.082010582010582, 0.08199612061364839, 0.08198166431593794, 0.08196721311475409, 0.08195276700740219, 0.08193832599118943, 0.08192389006342495, 0.08190945922141976, 0.08189503346248679, 0.08188061278394083, 0.0818661971830986, 0.08202781200492872, 0.0820133755719817, 0.08199894421960233, 0.08198451794510908, 0.08197009674582234, 0.08195568061906437, 0.08194126956215932, 0.08192686357243319, 0.08191246264721393, 0.08189806678383128, 0.08188367597961693, 0.08186929023190442, 0.08185490953802915, 0.08184053389532842, 0.08182616330114136, 0.08181179775280899, 0.08179743724767422, 0.08178308178308179, 0.08176873135637831, 0.08175438596491227, 0.08174004560603403, 0.08172571027709576, 0.08171137997545151, 0.08169705469845723, 0.08168273444347064, 0.08166841920785138, 0.08165410898896093, 0.08163980378416258, 0.0816255035908215, 0.08161120840630473, 0.08159691822798108, 0.08158263305322129, 0.08156835287939787, 0.08155407770388519, 0.0815398075240595, 0.08170048985304408, 0.08168619905544866, 0.08167191325638336, 0.08165763245322609, 0.08164335664335665, 0.08162908582415662, 0.08161481999300944, 0.08160055914730037, 0.08158630328441649, 0.08157205240174673, 0.0815578064966818, 0.08154356556661428, 0.08152932960893855, 0.08151509862105079, 0.08150087260034904, 0.08148665154423312, 0.08147243545010467, 0.08145822431536717, 0.08144401813742588, 0.08142981691368788, 0.08141562064156206, 0.08140142931845913, 0.08138724294179156, 0.08137306150897369, 0.0813588850174216, 0.08134471346455321, 0.08133054684778823, 0.08131638516454814, 0.08130222841225626, 0.08128807658833768, 0.08127392969021928, 0.08125978771532974, 0.08124565066109951, 0.08123151852496087, 0.08121739130434782, 0.08120326899669622, 0.08118915159944368, 0.08117503911002955, 0.08116093152589503, 0.08114682884448306, 0.08113273106323836, 0.08111863817960743, 0.08110455019103856, 0.08109046709498177, 0.08107638888888889, 0.08106231557021351, 0.08104824713641097, 0.0810341835849384, 0.08102012491325468, 0.08100607111882047, 0.08099202219909817, 0.08097797815155193, 0.08096393897364772, 0.08094990466285318, 0.08093587521663778, 0.0809218506324727, 0.08090783090783091, 0.08089381604018708, 0.08087980602701766, 0.08086580086580086, 0.08085180055401663, 0.08101090531417691, 0.0811699550017307, 0.08115590932687317, 0.08114186851211072, 0.0811278325549213, 0.0811138014527845, 0.08109977520318173, 0.08108575380359613, 0.08107173725151254, 0.08105772554441756, 0.08121651978572662, 0.08120248790601244, 0.08118846087407151, 0.08117443868739206, 0.08116042134346399, 0.081146408839779, 0.08113240117383048, 0.08111839834311356, 0.0811044003451251, 0.0810904071773637, 0.08107641883732965, 0.08106243532252501, 0.08104845663045353, 0.08103448275862069, 0.0810205137045337, 0.08100654946570149, 0.08099259003963467, 0.08097863542384562, 0.08096468561584841, 0.0809507406131588, 0.0809368004132943, 0.0809228650137741, 0.08090893441211913, 0.08089500860585198, 0.08088108759249699, 0.08086717136958017, 0.08085325993462927, 0.08083935328517372, 0.08082545141874463, 0.08098349381017882, 0.08114148186350352, 0.08112753523547611, 0.081113593400928, 0.08109965635738832, 0.0810857241023879, 0.08107179663345929, 0.0810578739481367, 0.08104395604395605, 0.08103004291845493, 0.08101613456917267, 0.08100223099365025, 0.08098833218943034, 0.0809744381540573, 0.08096054888507719, 0.08094666438003773, 0.08093278463648834, 0.08091890965198012, 0.08090503942406582, 0.08089117395029992, 0.08087731322823852, 0.08086345725543943, 0.08084960602946215, 0.08083575954786779, 0.08082191780821918, 0.08080808080808081, 0.08079424854501883, 0.08078042101660106, 0.08076659822039699, 0.08075278015397776, 0.08073896681491619, 0.08072515820078673, 0.08071135430916553, 0.08069755513763037, 0.08068376068376068, 0.08066997094513759, 0.08082706766917293, 0.08081325815820946, 0.08079945336522036, 0.08078565328778821, 0.08077185792349727, 0.08075806726993341, 0.0807442813246842, 0.08073050008533879, 0.08071672354948806, 0.08070295171472446, 0.0806891845786421, 0.08084598328500768, 0.08100272851296043, 0.08098891730605286, 0.08097511080804637, 0.08096130901653315, 0.08094751192910703, 0.08093371954336344, 0.08091993185689948, 0.08090614886731391, 0.08089237057220708, 0.080878596969181, 0.08086482805583929, 0.08085106382978724, 0.08083730428863173, 0.08082354942998128, 0.08080979925144607, 0.08079605375063786, 0.08078231292517007, 0.08076857677265771, 0.08075484529071744, 0.08074111847696754, 0.08072739632902787, 0.08088360237892948, 0.08103975535168195, 0.08102598946832003, 0.08101222826086957, 0.08099847172694855, 0.08098471986417657, 0.08097097267017485, 0.08095723014256619, 0.08094349227897506, 0.08092975907702749, 0.08091603053435115, 0.08090230664857531, 0.08088858741733085, 0.08087487283825025, 0.08086116290896762, 0.08084745762711865, 0.08083375699034062, 0.08082006099627245, 0.08080636964255464, 0.08079268292682927, 0.08077900084674006, 0.08076532339993227, 0.08075165058405281, 0.08073798239675017, 0.0807243188356744, 0.08087986463620982, 0.08103535780747759, 0.08119079837618404, 0.08117706747843734, 0.08116334122421373, 0.08114961961115807, 0.08113590263691683, 0.08112219029913807, 0.08110848259547145, 0.08109477952356817, 0.08108108108108109, 0.08106738726566458, 0.08105369807497467, 0.08104001350666892, 0.08102633355840648, 0.0810126582278481, 0.08099898751265609, 0.08098532141049435, 0.08097165991902834, 0.08095800303592511, 0.08111298482293423, 0.08126791434833923, 0.08125421443020904, 0.08140906792516434, 0.08156386922817661, 0.08155012636899747, 0.08153638814016173, 0.08152265453932962, 0.08150892556416302, 0.08149520121232531, 0.08148148148148149, 0.0814677663692981, 0.08145405587344329, 0.08144034999158674, 0.08142664872139974, 0.08141295206055509, 0.08139926000672722, 0.08138557255759206, 0.08137188971082716, 0.08135821146411161, 0.08134453781512604, 0.08133086876155268, 0.08131720430107527, 0.08130354443137913, 0.08128988915015116, 0.08127623845507977, 0.08126259234385494, 0.0812489508141682, 0.08123531386371266, 0.08122168149018291, 0.08120805369127516, 0.08119443046468713, 0.08118081180811808, 0.08116719771926882, 0.08115358819584172, 0.08113998323554066, 0.08112638283607107, 0.08111278699513993, 0.08109919571045576, 0.0810856089797286, 0.0812395309882747, 0.08122592530564395, 0.08121232417950436, 0.08119872760756738, 0.08118513558754603, 0.08117154811715481, 0.08115796519410977, 0.0811443868161285, 0.08113081298093008, 0.08111724368623516, 0.08110367892976589, 0.08109011870924594, 0.08107656302240053, 0.08106301186695637, 0.08104946524064172, 0.0810359231411863, 0.08102238556632142, 0.08100885251377986, 0.08099532398129593, 0.08098179996660544, 0.08096828046744574, 0.08095476548155567, 0.08094125500667557, 0.08092774904054731, 0.08091424758091424, 0.08090075062552127, 0.08088725817211474, 0.08087377021844255, 0.08086028676225408, 0.08084680780130021, 0.08083333333333333, 0.08098650224962506, 0.080973008997001, 0.08095952023988005, 0.08094603597601599, 0.08093255620316403, 0.08091908091908091, 0.08090561012152489, 0.08105858854860186, 0.08121151605924447, 0.08119800332778702, 0.08118449509233072, 0.08117099135063206, 0.08115749210044902, 0.08114399733954107, 0.08113050706566916, 0.08111702127659574, 0.08110353997008476, 0.08125623130608176, 0.08124273135072271, 0.08122923588039867, 0.08121574489287493, 0.0812022583859183, 0.08118877635729703, 0.08117529880478087, 0.08116182572614108, 0.08114835711915035, 0.08113489298158287, 0.08112143331121434, 0.08110797810582186, 0.08109452736318408, 0.08108108108108109, 0.08106763925729443, 0.08121995690369634, 0.08120649651972157, 0.0811930405965203, 0.08117958913187541, 0.08116614212357132, 0.08115269956939383, 0.08113926146713032, 0.08112582781456953, 0.08111239860950174, 0.08109897384971863, 0.0810855535330134, 0.08107213765718067, 0.08105872622001654, 0.08104531921931855, 0.08103191665288573, 0.08101851851851852, 0.08100512481401885, 0.08099173553719008, 0.08097835068583706, 0.08096497025776603, 0.08095159425078473, 0.08093822266270234, 0.08092485549132948, 0.0809114927344782, 0.08089813438996203, 0.08088478045559591, 0.08087143092919624, 0.08085808580858085, 0.08084474509156905, 0.08083140877598152, 0.08081807685964044, 0.0808047493403694, 0.0807914262159934, 0.08077810748433893, 0.08076479314323388, 0.08075148319050758, 0.08073817762399077, 0.08072487644151564, 0.08071157964091583, 0.08069828722002635, 0.08068499917668367, 0.08067171550872572, 0.08065843621399177, 0.08064516129032258, 0.0806318907355603, 0.08061862454754853, 0.08060536272413225, 0.0805921052631579, 0.08057885216247328, 0.08056560341992766, 0.0805523590333717, 0.08053911900065747, 0.08052588331963846, 0.0806769635228393, 0.08082799408575653, 0.08081471747700394, 0.08080144522910165, 0.08078817733990148, 0.08077491380725661, 0.08076165462902167, 0.08074839980305268, 0.08073514932720709, 0.08072190319934372, 0.08070866141732283, 0.08069542397900607, 0.08068219088225648, 0.08066896212493851, 0.08065573770491803, 0.08064251762006229, 0.08062930186823992, 0.08061609044732099, 0.08060288335517693, 0.08058968058968059, 0.08057648214870619, 0.08056328803012935, 0.08055009823182711, 0.08053691275167785, 0.08052373158756138, 0.08051055473735887, 0.08049738219895287, 0.08048421397022738, 0.08047105004906771, 0.08045789043336059, 0.08044473512099411, 0.08043158410985778, 0.08041843739784243, 0.08040529498284034, 0.0803921568627451, 0.08037902303545172, 0.08036589349885659, 0.08035276825085742, 0.08050293925538864, 0.0806530612244898, 0.08063989552726085, 0.0806267341276318, 0.0806135770234987, 0.08060042421275901, 0.08058727569331159, 0.0805741314630566, 0.08056099151989563, 0.08054785586173162, 0.08053472448646887, 0.08052159739201303, 0.08050847457627118, 0.0804953560371517, 0.08048224177256436, 0.08046913178042027, 0.08045602605863192, 0.08044292460511317, 0.08042982741777922, 0.08041673449454664, 0.08040364583333333, 0.08039056143205858, 0.08037748128864303, 0.08036440540100863, 0.08035133376707873, 0.080338266384778, 0.08032520325203252, 0.08031214436676963, 0.08029908972691807, 0.08028603933040793, 0.08027299317517061, 0.08025995125913891, 0.08024691358024691, 0.08023388013643008, 0.0802208509256252, 0.08020782594577042, 0.0801948051948052, 0.08018178867067034, 0.08016877637130802, 0.08015576829466169, 0.08014276443867618, 0.08012976480129765, 0.08011676938047356, 0.08010377817415275, 0.08009079118028535, 0.08007780839682282, 0.08006482982171799, 0.08005185545292497, 0.08003888528839923, 0.08002591932609752, 0.08001295756397797, 0.08, 0.07998704663212436, 0.0799740974583131, 0.07996115247652961, 0.07994821168473863, 0.07993527508090614, 0.07992234266299951, 0.07990941442898739, 0.07989649037683973, 0.07988357050452781, 0.07987065481002426, 0.07985774329130295, 0.0798448359463391, 0.07983193277310924, 0.07981903376959121, 0.07980613893376413, 0.07979324826360847, 0.07978036175710594, 0.07976747941223962, 0.07975460122699386, 0.07974172719935432, 0.07972885732730794, 0.07971599160884299, 0.07970313004194901, 0.07969027262461688, 0.07967741935483871, 0.07966457023060797, 0.07965172524991938, 0.07963888441076898, 0.0796260477111541, 0.07961321514907332, 0.07960038672252659, 0.07958756242951506, 0.07957474226804123, 0.07956192623610887, 0.07954911433172303, 0.07953630655289004, 0.07952350289761752, 0.07951070336391437, 0.0794979079497908, 0.07948511665325825, 0.07947232947232948, 0.0794595464050185, 0.07944676744934062, 0.07943399260331242, 0.07942122186495176, 0.07940845523227777, 0.07939569270331083, 0.07938293427607264, 0.07937017994858611, 0.07935742971887551, 0.07934468358496627, 0.07933194154488518, 0.07931920359666024, 0.07930646973832076, 0.07929373996789728, 0.0792810142834216, 0.07926829268292683, 0.0792555751644473, 0.0792428617260186, 0.07923015236567763, 0.07921744708146247, 0.07920474587141253, 0.07919204873356846, 0.07917935566597212, 0.07916666666666666, 0.07915398173369652, 0.07914130086510733, 0.07912862405894602, 0.07911595131326073, 0.07910328262610088, 0.07909061799551713, 0.07907795741956139, 0.07906530089628681, 0.0790526484237478, 0.07904, 0.0790273556231003, 0.07901471529110685, 0.079002079002079, 0.07898944675407739, 0.07913669064748201, 0.07912404092071611, 0.07911139523733418, 0.07909875359539789, 0.07908611599297012, 0.07907348242811502, 0.07906085289889794, 0.0790482274033855, 0.07903560593964554, 0.07902298850574713, 0.07901037509976057, 0.07899776571975742, 0.07898516036381044, 0.07913209955328654, 0.07927899186473121, 0.07926634768740032, 0.07925370754265668, 0.07924107142857142, 0.07922843934321697, 0.07921581128466688, 0.07920318725099601, 0.07919056724028044, 0.07917795125059741, 0.07916533928002549, 0.07915273132664437, 0.07914012738853503, 0.07912752746377966, 0.07911493155046163, 0.0791023396466656, 0.0790897517504774, 0.07907716785998409, 0.07906458797327394, 0.07905201208843646, 0.07903944020356234, 0.07902687231674352, 0.07901430842607313, 0.07900174852964552, 0.07898919262555626, 0.07897664071190211, 0.07896409278678106, 0.0789515488482923, 0.07893900889453621, 0.07892647292361442, 0.07891394093362972, 0.07890141292268614, 0.07888888888888888, 0.07903507379780987, 0.07902253252935576, 0.07900999524036173, 0.078997461928934, 0.07898493259318001, 0.07897240723120837, 0.07895988584112891, 0.07910589727330374, 0.0790933586939293, 0.07908082408874802, 0.0790682934558707, 0.07905576679340938, 0.07904324409947727, 0.07903072537218879, 0.07901821060965954, 0.07900569981000634, 0.07899319297134716, 0.0789806900918012, 0.07896819116948885, 0.07895569620253165, 0.07894320518905236, 0.07893071812717495, 0.07891823501502451, 0.07890575585072739, 0.07889328063241106, 0.07888080935820424, 0.07886834202623676, 0.07885587863463969, 0.07884341918154526, 0.07883096366508689, 0.07881851208339914, 0.07880606443461781, 0.07879362071687984, 0.07878118092832334, 0.07876874506708761, 0.07875631313131314, 0.07874388511914154, 0.07873146102871569, 0.07871904085817952, 0.07870662460567823, 0.07869421226935815, 0.07883948281299274, 0.07882705344474224, 0.07881462799495587, 0.07880220646178093, 0.0787897888433659, 0.0787773751378604, 0.07876496534341525, 0.0787525594581824, 0.07874015748031496, 0.07888521492678319, 0.0790302267002519, 0.07917519282228869, 0.07932011331444759, 0.07946498819826908, 0.07945248584015104, 0.07943998741544754, 0.07942749292230261, 0.07941500235886145, 0.07940251572327044, 0.0793900330136771, 0.07937755422823012, 0.07936507936507936, 0.07935260842237586, 0.0793401413982718, 0.07932767829092051, 0.07931521909847652, 0.07930276381909548, 0.07929031245093421, 0.07927786499215071, 0.0792654214409041, 0.07925298179535467, 0.07924054605366389, 0.07922811421399435, 0.0792156862745098, 0.07920326223337516, 0.07919084208875647, 0.07917842583882095, 0.07916601348173695, 0.07915360501567398, 0.0791412004388027, 0.07912879974929489, 0.07911640294532352, 0.07910401002506266, 0.07909162098668755, 0.07907923582837457, 0.07906685454830124, 0.07905447714464621, 0.07904210361558929, 0.07902973395931143, 0.07901736817399468, 0.07900500625782228, 0.07899264820897857, 0.07898029402564904, 0.07896794370602032, 0.07895559724828018, 0.07894325465061748, 0.07893091591122225, 0.07891858102828567, 0.07890625, 0.07889392282455866, 0.0788815995001562, 0.07886928002498829, 0.07885696439725172, 0.07884465261514442, 0.07883234467686544, 0.07882004058061495, 0.07880774032459426, 0.07879544390700577, 0.07878315132605304, 0.07877086257994073, 0.07875857766687461, 0.07874629658506159, 0.0787340193327097, 0.07872174590802807, 0.07870947630922694, 0.07869721053451768, 0.07868494858211281, 0.07867269045022589, 0.07866043613707165, 0.07864818564086591, 0.0786359389598256, 0.07862369609216877, 0.07861145703611457, 0.07859922178988327, 0.07858699035169624, 0.07857476271977594, 0.07871810827629122, 0.07886140923938405, 0.07884914463452566, 0.0788368838438812, 0.07882462686567164, 0.07881237369811907, 0.07880012433944669, 0.07878787878787878, 0.07877563704164077, 0.07876339909895914, 0.0787511649580615, 0.07873893461717658, 0.07872670807453416, 0.07871448532836516, 0.07870226637690159, 0.07869005121837654, 0.07867783985102421, 0.0786656322730799, 0.07865342848278002, 0.07864122847836202, 0.07862903225806452, 0.07861683982012715, 0.0786046511627907, 0.078592466284297, 0.07858028518288902, 0.07856810785681079, 0.0785559343043074, 0.0785437645236251, 0.07853159851301116, 0.07851943627071395, 0.07850727779498297, 0.07849512308406874, 0.0784829721362229, 0.07847082494969819, 0.07845868152274837, 0.07844654185362834, 0.07843440594059406, 0.07842227378190256, 0.07841014537581194, 0.07839802072058141, 0.07838589981447125, 0.07837378265574277, 0.07836166924265843, 0.07834955957348169, 0.07833745364647714, 0.0783253514599104, 0.0783132530120482, 0.0783011583011583, 0.07828906732550957, 0.07827698008337193, 0.07826489657301636, 0.07825281679271492, 0.07824074074074074, 0.078228668415368, 0.07821659981487196, 0.07820453493752892, 0.07819247378161628, 0.07818041634541249, 0.07816836262719704, 0.0781563126252505, 0.0781442663378545, 0.07813222376329172, 0.07812018489984592, 0.07810814974580188, 0.07809611829944547, 0.07808409055906361, 0.07807206652294425, 0.07806004618937644, 0.07804802955665024, 0.0780360166230568, 0.07802400738688828, 0.07801200184643792, 0.07815384615384616, 0.0782956468235656, 0.07828360504460166, 0.07827156696909118, 0.07825953259532595, 0.07824750192159877, 0.0782354749462035, 0.07822345166743506, 0.07821143208358942, 0.07819941619296358, 0.07818740399385561, 0.07817539548456458, 0.07816339066339066, 0.07815138952863504, 0.07813939207859993, 0.07812739831158864, 0.07811540822590546, 0.07810342181985576, 0.07809143909174593, 0.07807946003988342, 0.07806748466257668, 0.07805551295813526, 0.07804354492486967, 0.07803158056109152, 0.07801961986511342, 0.07800766283524904, 0.07799570946981306, 0.07798375976712119, 0.0779718137254902, 0.07795987134323787, 0.077947932618683, 0.07793599755014546, 0.07792406613594612, 0.07791213837440686, 0.07790021426385063, 0.07788829380260137, 0.07787637698898409, 0.07786446382132477, 0.07785255429795045, 0.07784064841718917, 0.07782874617737003, 0.07781684757682311, 0.07780495261387954, 0.07779306128687147, 0.07778117359413203, 0.07776928953399542, 0.07775740910479682, 0.07774553230487247, 0.07773365913255956, 0.07772178958619637, 0.07770992366412213, 0.07769806136467715, 0.07768620268620269, 0.07767434762704105, 0.07766249618553556, 0.07765064836003051, 0.07763880414887127, 0.07777947231965839, 0.0777676120768527, 0.07790821771611527, 0.07789634146341463, 0.07788446883097089, 0.07787259981712892, 0.07786073442023465, 0.07784887263863498, 0.07783701447067784, 0.07782515991471216, 0.07781330896908786, 0.07780146163215591, 0.07778961790226822, 0.07777777777777778, 0.0777659412570385, 0.07775410833840536, 0.0777422790202343, 0.07773045330088227, 0.07771863117870723, 0.07770681265206812, 0.07769499771932492, 0.07768318637883856, 0.07767137862897097, 0.07765957446808511, 0.0776477738945449, 0.07763597690671528, 0.07762418350296217, 0.07761239368165249, 0.07760060744115414, 0.07758882477983602, 0.077577045696068, 0.07756527018822101, 0.07755349825466687, 0.07754172989377846, 0.07752996510392961, 0.07751820388349515, 0.0775064462308509, 0.07749469214437367, 0.07748294162244124, 0.07747119466343239, 0.07745945126572684, 0.07744771142770536, 0.07743597514774966, 0.07742424242424242, 0.07741251325556733, 0.07740078764010906, 0.07738906557625322, 0.07737734706238643, 0.07736563209689629, 0.07735392067817136, 0.07734221280460118, 0.07733050847457627, 0.07731880768648812, 0.0773071104387292, 0.07729541672969294, 0.07728372655777374, 0.07742325722062604, 0.07741155125491382, 0.07739984882842026, 0.0773881499395405, 0.0773764545866707, 0.07736476276820792, 0.07735307448255023, 0.07734138972809668, 0.07732970850324725, 0.0773180308064029, 0.07730635663596558, 0.07729468599033816, 0.07728301886792453, 0.07727135526712949, 0.07725969518635883, 0.07724803862401931, 0.07723638557851863, 0.07722473604826546, 0.07721309003166943, 0.07720144752714113, 0.07718980853309211, 0.07717817304793488, 0.07716654107008289, 0.07715491259795057, 0.07714328762995329, 0.07713166616450738, 0.07712004820003013, 0.07710843373493977, 0.07709682276765548, 0.07708521529659741, 0.07707361132018667, 0.07706201083684527, 0.07705041384499624, 0.0770388203430635, 0.07702723032947194, 0.07701564380264742, 0.0770040607610167, 0.07699248120300752, 0.07698090512704857, 0.07696933253156946, 0.07695776341500075, 0.07694619777577397, 0.07693463561232157, 0.07692307692307693, 0.07691152170647439, 0.07705016521477921, 0.07703859438354108, 0.07702702702702703, 0.07701546314367212, 0.07700390273191234, 0.0769923457901846, 0.07698079231692677, 0.07711927981995499, 0.0771077107710771, 0.07724613769311535, 0.07738452309538092, 0.07752286699655121, 0.0775112443778111, 0.07749962524359166, 0.07748800959232614, 0.07747639742244868, 0.07746478873239436, 0.07745318352059925, 0.0774415817855003, 0.07742998352553541, 0.07741838873914346, 0.07740679742476418, 0.07739520958083833, 0.07738362520580751, 0.07737204429811434, 0.0773604668562023, 0.0774985038898863, 0.07763649962602842, 0.0776248878253066, 0.07761327949753252, 0.07760167464114832, 0.0775900732545971, 0.07757847533632287, 0.07756688088477058, 0.07755528989838613, 0.07754370237561632, 0.07753211831490887, 0.07752053771471247, 0.0775089605734767, 0.07749738688965209, 0.07748581666169006, 0.077474249888043, 0.07746268656716418, 0.07745112669750784, 0.0774395702775291, 0.07742801730568402, 0.0774164677804296, 0.07755406413124534, 0.07769161944527289, 0.07782913374086775, 0.07796660703637448, 0.07810403935012669, 0.07824143070044709, 0.07837878110564744, 0.07836710369487485, 0.07835542976314613, 0.07834375930890676, 0.07833209233060313, 0.07832042882668255, 0.07830876879559327, 0.07829711223578446, 0.07828545914570621, 0.07827380952380952, 0.07826216336854634, 0.07825052067836953, 0.07823888145173286, 0.07822724568709102, 0.07821561338289963, 0.07820398453761522, 0.07819235914969526, 0.07818073721759809, 0.07816911873978302, 0.07815750371471025, 0.07814589214084089, 0.07813428401663695, 0.07812267934056141, 0.0781110781110781, 0.07809948032665182, 0.07808788598574821, 0.0780762950868339, 0.07806470762837638, 0.07805312360884405, 0.07804154302670623, 0.07802996588043316, 0.078018392168496, 0.07800682188936675, 0.07799525504151839, 0.07798369162342476, 0.07797213163356063, 0.07796057507040166, 0.07794902193242442, 0.07793747221810639, 0.07792592592592593, 0.07791438305436231, 0.07790284360189574, 0.07789130756700725, 0.07787977494817885, 0.07786824574389341, 0.0778567199526347, 0.07799319224507918, 0.0779816513761468, 0.07797011392217784, 0.0779585798816568, 0.07794704925306907, 0.07793552203490092, 0.07792399822563952, 0.07791247782377292, 0.07790096082779009, 0.07788944723618091, 0.07787793704743609, 0.07786643026004728, 0.07785492687250702, 0.07784342688330871, 0.07783193029094669, 0.07782043709391613, 0.07780894729071312, 0.07794508414526129, 0.07793357933579335, 0.07792207792207792, 0.07791057990261177, 0.0778990852758926, 0.07788759404041894, 0.07787610619469026, 0.0778646217372069, 0.07785314066647006, 0.07784166298098187, 0.07783018867924528, 0.07781871775976419, 0.07780725022104333, 0.07779578606158834, 0.07778432527990571, 0.07777286787450287, 0.07790868924889544, 0.07804447062288322, 0.07803297997644287, 0.078021492713087, 0.07801000883132175, 0.07799852832965416, 0.0779870512065921, 0.0779755774606444, 0.07796410709032069, 0.07795264009413148, 0.07794117647058824, 0.0779297162182032, 0.07791825933548956, 0.07790680582096134, 0.07789535567313345, 0.07788390889052167, 0.07787246547164267, 0.07786102541501395, 0.07784958871915394, 0.07783815538258188, 0.07782672540381791, 0.07781529878138306, 0.07780387551379918, 0.07779245559958903, 0.07778103903727619, 0.07776962582538519, 0.07775821596244131, 0.07774680944697081, 0.07773540627750074, 0.07772400645255903, 0.07771260997067449, 0.07770121683037677, 0.07768982703019642, 0.07767844056866481, 0.07766705744431418, 0.07765567765567766, 0.07764430120128919, 0.07763292807968361, 0.0776215582893966, 0.07761019182896471, 0.07759882869692533, 0.07758746889181672, 0.07757611241217799, 0.0775647592565491, 0.07755340942347089, 0.07754206291148501, 0.077530719719134, 0.07751937984496124, 0.07750804328751097, 0.07749671004532827, 0.07748538011695906, 0.07747405350095016, 0.07746273019584916, 0.07745141020020459, 0.07744009351256576, 0.07742878013148284, 0.07741747005550687, 0.07740616328318972, 0.07739485981308411, 0.07738355964374362, 0.07737226277372262, 0.07736096920157641, 0.07734967892586106, 0.07733839194513352, 0.07732710825795155, 0.07731582786287382, 0.07730455075845974, 0.07729327694326965, 0.07728200641586469, 0.07727073917480683, 0.07725947521865889, 0.07739396589418453, 0.07752841737102885, 0.07751712079265627, 0.0775058275058275, 0.07749453750910415, 0.07748325080104865, 0.07747196738022426, 0.07746068724519511, 0.07744941039452613, 0.07743813682678312, 0.07742686654053267, 0.07741559953434225, 0.07740433580678015, 0.07739307535641547, 0.07752727272727272, 0.07766143106457242, 0.07765013814163152, 0.07763884850247164, 0.0776275621456607, 0.07761627906976744, 0.07775032698735648, 0.07773902935193258, 0.07772773499927357, 0.07771644392794887, 0.07770515613652869, 0.07769387162358408, 0.07768259038768695, 0.07767131242740999, 0.07766003774132675, 0.07764876632801161, 0.07763749818603977, 0.07762623331398723, 0.07761497171043087, 0.07760371337394836, 0.0775924583031182, 0.07758120649651973, 0.07756995795273307, 0.07755871267033923, 0.07754747064791999, 0.07753623188405798, 0.07752499637733662, 0.07751376412634019, 0.07750253512965377, 0.07749130938586327, 0.0774800868935554, 0.07746886765131769, 0.07745765165773853, 0.07744643891140707, 0.0774352294109133, 0.07742402315484805, 0.07741282014180292, 0.07740162037037036, 0.07739042383914364, 0.0773792305467168, 0.07736804049168475, 0.07735685367264315, 0.07734567008818852, 0.07733448973691819, 0.07732331261743026, 0.0773121387283237, 0.07730096806819824, 0.07743426755273042, 0.07756752852809476, 0.07755632582322357, 0.07754512635379061, 0.07753393011839446, 0.07752273711563447, 0.07751154734411085, 0.07750036080242459, 0.07748917748917748, 0.07747799740297215, 0.077466820542412, 0.07745564690610125, 0.07744447649264494, 0.07743330930064889, 0.07756632064590542, 0.07769929364278506, 0.0778322283078697, 0.07796512465773166, 0.07809798270893371, 0.07808673101858522, 0.07807548256986459, 0.07806423736137116, 0.07805299539170507, 0.07804175665946725, 0.07817448891448316, 0.07816323592917807, 0.07815198618307427, 0.07814073967477335, 0.0781294964028777, 0.0781182563659905, 0.07810701956271576, 0.07809578599165827, 0.07808455565142364, 0.07807332854061826, 0.07806210465784934, 0.07805088400172489, 0.07803966657085369, 0.07802845236384538, 0.07801724137931035, 0.0780060336158598, 0.07799482907210571, 0.07798362774666093, 0.077972429638139, 0.07796123474515435, 0.07795004306632214, 0.07793885460025836, 0.07792766934557979, 0.077916487300904, 0.07790530846484936, 0.077894132836035, 0.07788296041308089, 0.07787179119460777, 0.07786062517923717, 0.0778494623655914, 0.07783830275229357, 0.07782714633796761, 0.07781599312123817, 0.07780484310073077, 0.07779369627507163, 0.07778255264288784, 0.07777141220280721, 0.0777602749534584, 0.07774914089347079, 0.07773801002147458, 0.07772688233610077, 0.07771575783598111, 0.07770463651974814, 0.07769351838603519, 0.07768240343347639, 0.07767129166070662, 0.07766018306636156, 0.07764907764907765, 0.07763797540749214, 0.07762687634024303, 0.07761578044596913, 0.07760468772330999, 0.07773649614175479, 0.07786826689527075, 0.07785714285714286, 0.0778460219968576, 0.07783490431305341, 0.07782378980436956, 0.07781267846944603, 0.07780157030692363, 0.07779046531544391, 0.07777936349364921, 0.07776826484018265, 0.07775716935368812, 0.07774607703281027, 0.07773498787619455, 0.07772390188248716, 0.07785541137886781, 0.07798688337610493, 0.07797576621525303, 0.07796465222348917, 0.07795354139945845, 0.07794243374180679, 0.0779313292491808, 0.07792022792022792, 0.07790912975359636, 0.07789803474793507, 0.07788694290189378, 0.077875854214123, 0.07786476868327402, 0.07785368630799887, 0.07784260708695033, 0.07783153101878201, 0.07782045810214824, 0.07780938833570412, 0.07779832171810554, 0.0777872582480091, 0.07777619792407223, 0.07776514074495308, 0.0777540867093106, 0.07774303581580444, 0.07773198806309507, 0.0777209434498437, 0.07770990197471232, 0.07769886363636364, 0.07768782843346116, 0.07767679636466913, 0.07766576742865257, 0.07765474162407723, 0.07764371894960966, 0.07763269940391712, 0.07762168298566766, 0.07761066969353007, 0.07759965952617393, 0.07758865248226951, 0.07757764856048788, 0.07756664775950085, 0.077555650077981, 0.07754465551460164, 0.07753366406803686, 0.07752267573696145, 0.07765339379339663, 0.07764239161235477, 0.07763139254851963, 0.07762039660056658, 0.07760940376717179, 0.07759841404701218, 0.0775874274387654, 0.07757644394110985, 0.0775654635527247, 0.07755448627228984, 0.07754351209848592, 0.07753254102999434, 0.07752157306549724, 0.07751060820367751, 0.07749964644321879, 0.07748868778280543, 0.07747773222112257, 0.07746677975685609, 0.07745583038869258, 0.07744488411531938, 0.07743394093542462, 0.07742300084769708, 0.07741206385082638, 0.07740112994350283, 0.07739019912441746, 0.07737927139226207, 0.0773683467457292, 0.07735742518351214, 0.07734650670430487, 0.07733559130680215, 0.07732467898969946, 0.077313769751693, 0.07730286359147975, 0.0772919605077574, 0.07728106049922437, 0.0772701635645798, 0.07725926970252361, 0.07738934310685086, 0.07751937984496124, 0.07764937993235625, 0.07763843877694801, 0.07762750070442379, 0.07761656571348077, 0.07774647887323943, 0.07787635544289537, 0.07800619543790481, 0.07813599887371533, 0.07826576576576577, 0.07825475017593245, 0.07824373768646214, 0.07823272829604615, 0.07822172200337647, 0.07821071880714588, 0.07819971870604782, 0.0783293488960765, 0.07845894263217097, 0.07858849992970617, 0.07857745290975542, 0.07856640899508081, 0.07855536818437324, 0.0785443304763243, 0.0785332958696263, 0.07852226436297233, 0.07851123595505619, 0.0785002106445724, 0.07848918843021623, 0.0784781693106837, 0.07846715328467153, 0.0784561403508772, 0.07844513050799888, 0.07843412375473552, 0.07842312008978676, 0.07841211951185299, 0.07840112201963534, 0.07839012761183564, 0.07837913628715648, 0.07836814804430113, 0.07835716288197364, 0.07834618079887877, 0.07833520179372197, 0.07832422586520947, 0.0783132530120482, 0.07830228323294579, 0.07829131652661064, 0.07828035289175185, 0.07826939232707925, 0.07825843483130338, 0.07824748040313549, 0.07823652904128761, 0.07822558074447243, 0.07821463551140338, 0.07820369334079463, 0.07819275423136103, 0.07818181818181819, 0.07817088519088239, 0.07829977628635347, 0.07842863134349225, 0.07855745037741124, 0.07854647099930119, 0.07853549468977082, 0.07852452144753388, 0.07851355127130484, 0.07850258415979885, 0.07849162011173184, 0.07848065912582042, 0.07846970120078191, 0.07845874633533435, 0.07844779452819654, 0.07843684577808793, 0.07842590008372873, 0.07841495744383982, 0.07840401785714286, 0.07839308132236016, 0.07838214783821479, 0.07837121740343049, 0.07836029001673174, 0.07834936567684372, 0.07833844438249234, 0.07832752613240418, 0.07831661092530658, 0.07830569875992754, 0.07829478963499582, 0.07828388354924085, 0.07827298050139275, 0.07826208049018242, 0.0782511835143414, 0.07824028957260197, 0.0782293986636971, 0.07821851078636047, 0.07820762593932647, 0.07819674412133018, 0.0781858653311074, 0.07831409097231883, 0.07830319888734354, 0.07829230983173412, 0.07828142380422692, 0.07827054080355901, 0.07825966082846816, 0.07824878387769284, 0.0782379099499722, 0.07822703904404613, 0.07821617115865519, 0.07820530629254063, 0.07819444444444444, 0.07818358561310929, 0.07817272979727853, 0.07816187699569624, 0.07815102720710716, 0.07814018043025676, 0.0781293366638912, 0.07811849590675732, 0.07810765815760266, 0.07823553890969621, 0.0782246879334258, 0.07821383996671752, 0.07820299500831947, 0.07819215305698045, 0.07818131411144996, 0.07817047817047817, 0.07815964523281596, 0.07814881529721492, 0.07813798836242726, 0.07812716442720598, 0.0781163434903047, 0.07810552555047777, 0.0780947106064802, 0.0780838986570677, 0.07807308970099668, 0.07806228373702422, 0.07805148076390811, 0.07804068078040681, 0.07802988378527947, 0.07801908977728593, 0.07800829875518672, 0.07799751071774305, 0.07798672566371681, 0.07797594359187059, 0.07796516450096765, 0.07795438838977194, 0.0779436152570481, 0.07793284510156143, 0.07792207792207792, 0.07791131371736428, 0.07790055248618785, 0.07788979422731666, 0.07787903893951947, 0.07786828662156565, 0.07785753727222529, 0.07784679089026915, 0.07783604747446868, 0.07782530702359597, 0.07781456953642384, 0.07780383501172576, 0.07779310344827586, 0.07778237484484898, 0.07777164920022063, 0.07776092651316696, 0.07775020678246485, 0.0777394900068918, 0.07772877618522601, 0.07771806531624638, 0.07770735739873243, 0.07769665243146438, 0.07768595041322314, 0.07767525134279026, 0.07766455521894795, 0.07765386204047914, 0.07764317180616741, 0.07763248451479697, 0.07762180016515277, 0.07761111875602036, 0.07760044028618603, 0.07758976475443664, 0.07757909215955984, 0.07756842250034383, 0.07755775577557755, 0.0775470919840506, 0.0775364311245532, 0.0775257731958763, 0.07751511819681144, 0.07750446612615089, 0.07749381698268755, 0.077483170765215, 0.07760989010989011, 0.07773657464633979, 0.07772589947816534, 0.07771522724152136, 0.07770455793520044, 0.07769389155799589, 0.07768322810870162, 0.07767256758611225, 0.07779912184412734, 0.07792564137741803, 0.07791495198902607, 0.07790426553284872, 0.07789358200767965, 0.07788290141231317, 0.07787222374554428, 0.07786154900616861, 0.07785087719298246, 0.07784020830478279, 0.07782954234036722, 0.07781887929853405, 0.07780821917808219, 0.07779756197781126, 0.0777869076965215, 0.07777625633301383, 0.07776560788608981, 0.07775496235455168, 0.0777443197372023, 0.07773368003284521, 0.07772304324028462, 0.07771240935832535, 0.07770177838577291, 0.07769115032143345, 0.07768052516411379, 0.07766990291262135, 0.07765928356576429, 0.07764866712235133, 0.07763805358119191, 0.07762744294109608, 0.07761683520087456, 0.07760623035933871, 0.07759562841530054, 0.07758502936757274, 0.07757443321496858, 0.07756383995630206, 0.07755324959038777, 0.07754266211604095, 0.07753207753207753, 0.07765797734406987, 0.07778384279475982, 0.07790967389821259, 0.07803547066848568, 0.07802482608102577, 0.07801418439716312, 0.07800354561570981, 0.0779929097354786, 0.0779822767552829, 0.07797164667393675, 0.07796101949025487, 0.07795039520305261, 0.07793977381114593, 0.0779291553133515, 0.07791853970848658, 0.07790792699536911, 0.07789731717281764, 0.07788671023965142, 0.07787610619469026, 0.0778655050367547, 0.07785490676466585, 0.07784431137724551, 0.0778337188733161, 0.07782312925170068, 0.07781254251122297, 0.07780195865070728, 0.07779137766897865, 0.07778079956486265, 0.07777022433718558, 0.07775965198477433, 0.07774908250645643, 0.07773851590106007, 0.07772795216741404, 0.07771739130434782, 0.07770683331069148, 0.07769627818527575, 0.07768572592693196, 0.07767517653449213, 0.07766463000678886, 0.07765408634265544, 0.07764354554092576, 0.07763300760043432, 0.07762247252001628, 0.07761194029850746, 0.07760141093474426, 0.07759088442756376, 0.0775803607758036, 0.07756983997830215, 0.0775593220338983, 0.07754880694143167, 0.07753829469974244, 0.07766332339387368, 0.07778831820029815, 0.07791327913279132, 0.07790272320823736, 0.07789217014359252, 0.0778816199376947, 0.07787107258938245, 0.07786052809749493, 0.07784998646087192, 0.07783944767835387, 0.07782891174878181, 0.07781837867099743, 0.07780784844384303, 0.07779732106616155, 0.07778679653679654, 0.07777627485459218, 0.07776575601839329, 0.07789046653144016, 0.0780151433207139, 0.07813978639989184, 0.07826439578264396, 0.07838897148263278, 0.07837837837837838, 0.07836778813673828, 0.07835720075655228, 0.07834661623666081, 0.07833603457590492, 0.07832545577312626, 0.07831487982716716, 0.07830430673687053, 0.07829373650107992, 0.07828316911863949, 0.07827260458839407, 0.07826204290918905, 0.07825148407987048, 0.07824092809928504, 0.07823037496628, 0.0782198246797033, 0.07820927723840346, 0.0781987326412296, 0.07818819088703155, 0.07817765197465966, 0.07816711590296496, 0.07815658267079909, 0.07814605227701428, 0.07813552472046342, 0.078125, 0.07811447811447811, 0.07810395906275248, 0.07809344284367847, 0.078082929456112, 0.07807241889890967, 0.07806191117092867, 0.07805140627102677, 0.07804090419806244, 0.07803040495089465, 0.07815442561205273, 0.0781439139206456, 0.07813340505648197, 0.07812289901842141, 0.07811239580532402, 0.07810189541605055, 0.07809139784946237, 0.07808090310442145, 0.07807041117979038, 0.07805992207443235, 0.07804943578721117, 0.07803895231699128, 0.07802847166263766, 0.07801799382301598, 0.07800751879699248, 0.07799704658343402, 0.07798657718120805, 0.07797611058918266, 0.07796564680622652, 0.0779551858312089, 0.07794472766299973, 0.07793427230046948, 0.07792381974248927, 0.0779133699879308, 0.0779029230356664, 0.07789247888456897, 0.07788203753351207, 0.07787159898136979, 0.07786116322701689, 0.07785073026932869, 0.07784030010718114, 0.07782987273945077, 0.07781944816501474, 0.07794294897549217, 0.07793251205141939, 0.07792207792207792, 0.07791164658634538, 0.07790121804309999, 0.07789079229122056, 0.07788036932958652, 0.07786994915707787, 0.07785953177257525, 0.07784911717495988, 0.07783870536311355, 0.0778282963359187, 0.07781789009225833, 0.07780748663101604, 0.07779708595107605, 0.07778668805132317, 0.0777762929306428, 0.07776590058792089, 0.07775551102204409, 0.07774512423189954, 0.07773474021637505, 0.07772435897435898, 0.07771398050474028, 0.07770360480640855, 0.0776932318782539, 0.0776828617191671, 0.0776724943280395, 0.07766212970376302, 0.07765176784523016, 0.07764140875133405, 0.07763105242096839, 0.07762069885302747, 0.0776103480464062, 0.0776, 0.07758965471270497, 0.07757931218341775, 0.07756897241103558, 0.07755863539445629, 0.07754830113257828, 0.07753796962430055, 0.07752764086852271, 0.07751731486414491, 0.07750699161006792, 0.07749667110519308, 0.07748635334842231, 0.07747603833865814, 0.07746572607480368, 0.07745541655576257, 0.07744510978043913, 0.07743480574773816, 0.07742450445656512, 0.07741420590582601, 0.07740391009442744, 0.07739361702127659, 0.07738332668528121, 0.07737303908534963, 0.0773627542203908, 0.0773524720893142, 0.0773421926910299, 0.07733191602444858, 0.07732164208848147, 0.07731137088204039, 0.07730110240403772, 0.07729083665338646, 0.07728057362900013, 0.07727031332979288, 0.07726005575467941, 0.077249800902575, 0.07723954877239549, 0.07722929936305732, 0.0772190526734775, 0.07720880870257363, 0.07719856744926383, 0.07718832891246684, 0.07717809309110198, 0.07716785998408911, 0.07715762959034866, 0.07714740190880169, 0.07713717693836979, 0.07712695467797509, 0.07711673512654035, 0.07710651828298887, 0.07709630414624453, 0.07708609271523179, 0.07707588398887565, 0.0770656779661017, 0.07705547464583609, 0.07704527402700556, 0.0770350761085374, 0.07702488088935945, 0.07701468836840016, 0.07700449854458852, 0.07699431141685407, 0.07698412698412699, 0.07697394524533792, 0.07696376619941814, 0.07695358984529949, 0.07694341618191433, 0.07693324520819564, 0.07692307692307693, 0.07691291132549227, 0.07690274841437632, 0.07689258818866429, 0.07688243064729194, 0.07687227578919562, 0.0768621236133122, 0.07685197411857916, 0.07684182730393452, 0.07683168316831683, 0.07682154171066526, 0.07681140292991949, 0.0768012668250198, 0.07679113339490698, 0.07678100263852243, 0.07677087455480808, 0.0767607491427064, 0.0767506264011605, 0.07674050632911393, 0.07673038892551087, 0.07672027418929607, 0.07671016211941478, 0.07670005271481287, 0.07668994597443668, 0.0766798418972332, 0.07666974048214992, 0.07665964172813487, 0.0766495456341367, 0.07663945219910456, 0.07662936142198815, 0.07661927330173776, 0.07674081874424114, 0.07673071861016056, 0.07685221739702593, 0.07684210526315789, 0.07683199579002763, 0.07682188897658511, 0.07681178482178087, 0.07680168332456602, 0.07679158448389217, 0.07678148829871155, 0.07677139476797687, 0.07676130389064142, 0.07675121566565908, 0.07674113009198423, 0.0767310471685718, 0.0767209668943773, 0.07671088926835676, 0.07670081428946678, 0.07669074195666448, 0.07668067226890757, 0.07667060522515426, 0.07666054082436335, 0.07665047906549416, 0.07664041994750656, 0.07663036346936097, 0.07662030963001837, 0.07661025842844024, 0.07660020986358866, 0.07659016393442623, 0.07658012063991608, 0.07657007997902189, 0.07656004195070792, 0.07655000655393891, 0.07653997378768021, 0.07652994365089766, 0.07651991614255765, 0.07650989126162715, 0.07649986900707362, 0.0764898493778651, 0.07647983237297014, 0.07646981799135787, 0.0764598062319979, 0.07644979709386045, 0.07643979057591622, 0.0764297866771365, 0.07641978539649306, 0.07640978673295826, 0.07639979068550497, 0.0763897972531066, 0.07637980643473712, 0.076369818229371, 0.07635983263598327, 0.07634984965354949, 0.07633986928104575, 0.0763298915174487, 0.07631991636173549, 0.07630994381288383, 0.07629997386987196, 0.07629000653167864, 0.07628004179728318, 0.0762700796656654, 0.07626012013580569, 0.07625016320668494, 0.0762402088772846, 0.07623025714658661, 0.07622030801357348, 0.07621036147722823, 0.07620041753653445, 0.0761904761904762, 0.07618053743803808, 0.0761706012782053, 0.07616066770996348, 0.07615073673229887, 0.07614080834419817, 0.07613088254464867, 0.07612095933263817, 0.07611103870715497, 0.07610112066718791, 0.07609120521172638, 0.0760812923397603, 0.07607138205028005, 0.07606147434227663, 0.0760515692147415, 0.07604166666666666, 0.07603176669704466, 0.07602186930486853, 0.07601197448913186, 0.07600208224882873, 0.07599219258295381, 0.07598230549050221, 0.07597242097046962, 0.07596253902185224, 0.07595265964364677, 0.07607282184655396, 0.07606293069821869, 0.07605304212168487, 0.07604315611594957, 0.0760332726800104, 0.07602339181286549, 0.07601351351351351, 0.07600363778095362, 0.0759937646141855, 0.07598389401220938, 0.07597402597402597, 0.07596416049863654, 0.07595429758504285, 0.07594443723224718, 0.07593457943925233, 0.07592472420506165, 0.07591487152867896, 0.0759050214091086, 0.07589517384535548, 0.07588532883642496, 0.07587548638132295, 0.0758656464790559, 0.0758558091286307, 0.07584597432905485, 0.07583614207933627, 0.07582631237848347, 0.07581648522550544, 0.07580666061941169, 0.07579683855921224, 0.0757870190439176, 0.07577720207253887, 0.07576738764408755, 0.07575757575757576, 0.07574776641201605, 0.07573795960642155, 0.07572815533980583, 0.07571835361118302, 0.07570855441956775, 0.07569875776397515, 0.07568896364342088, 0.07580853816300129, 0.07579873237614798, 0.07578892912571134, 0.07577912841070736, 0.07576933023015257, 0.07575953458306399, 0.07574974146845916, 0.07573995088535608, 0.07573016283277333, 0.07572037730972994, 0.07571059431524547, 0.07570081384834, 0.0756910359080341, 0.07568126049334883, 0.07567148760330579, 0.07566171723692705, 0.07565194939323522, 0.0756421840712534, 0.07563242127000516, 0.07562266098851465, 0.07561290322580645, 0.07560314798090569, 0.07559339525283798, 0.07558364504062944, 0.07557389734330668, 0.07556415215989684, 0.07555440948942754, 0.0755446693309269, 0.07553493168342357, 0.07552519654594664, 0.07551546391752577, 0.07550573379719108, 0.0754960061839732, 0.07548628107690326, 0.07547655847501288, 0.07546683837733419, 0.07545712078289982, 0.07544740569074289, 0.07543769309989701, 0.07542798300939632, 0.07541827541827542, 0.07540857032556943, 0.07552753474009263, 0.07564646854496333, 0.0756367378440957, 0.07562700964630226, 0.07561728395061729, 0.07560756075607561, 0.07559784006171252, 0.07558812186656383, 0.07557840616966581, 0.07556869297005527, 0.07555898226676946, 0.07567775921881023, 0.07579650565262076, 0.07591522157996146, 0.07590547135884922, 0.07589572364196738, 0.0758859784283513, 0.07587623571703685, 0.07586649550706033, 0.07585675779745861, 0.075847022587269, 0.07583728987552932, 0.07582755966127791, 0.07581783194355356, 0.07580810672139558, 0.07579838399384378, 0.07578866375993845, 0.07577894601872034, 0.07576923076923077, 0.07575951801051148, 0.07574980774160471, 0.07574009996155324, 0.0757303946694003, 0.07572069186418962, 0.07571099154496541, 0.07570129371077239, 0.07569159836065574, 0.07568190549366116, 0.07567221510883483, 0.0756625272052234, 0.07565284178187404, 0.07564315883783437, 0.07563347837215255, 0.07562380038387716, 0.07561412487205732, 0.07560445183574262, 0.07559478127398311, 0.07558511318582939, 0.07557544757033248, 0.07556578442654392, 0.07555612375351572, 0.0755464655503004, 0.07553680981595091, 0.07552715654952076, 0.07551750575006388, 0.07550785741663472, 0.0754982115482882, 0.0754885681440797, 0.07547892720306514, 0.07546928872430085, 0.07545965270684372, 0.07545001914975105, 0.07544038805208067, 0.07543075941289087, 0.07542113323124043, 0.07541150950618859, 0.0754018882367951, 0.07539226942212017, 0.07538265306122449, 0.07537303915316924, 0.07536342769701607, 0.07535381869182711, 0.07534421213666496, 0.07533460803059273, 0.07532500637267397, 0.07531540716197273, 0.07530581039755352, 0.07529621607848133, 0.07528662420382165, 0.07527703477264043, 0.07526744778400407, 0.0752578632369795, 0.07524828113063407, 0.07523870146403565, 0.07522912423625254, 0.07521954944635358, 0.07520997709340799, 0.07520040717648556, 0.0751908396946565, 0.07518127464699148, 0.07517171203256169, 0.07516215185043876, 0.07515259409969481, 0.07514303877940241, 0.07513348588863462, 0.07512393542646498, 0.07511438739196746, 0.07510484178421654, 0.07522236340533672, 0.07533985516452801, 0.07533028455284553, 0.07532071637241204, 0.07531115062230125, 0.0753015873015873, 0.07529202640934485, 0.07528246794464898, 0.07527291190657527, 0.07526335829419978, 0.07525380710659899, 0.0752442583428499, 0.07523471200202994, 0.07522516808321705, 0.0752156265854896, 0.07520608750792644, 0.0751965508496069, 0.07518701660961075, 0.07517748478701826, 0.07516795538091013, 0.07515842839036756, 0.07514890381447219, 0.07513938165230613, 0.07512986190295198, 0.07512034456549278, 0.07511082963901203, 0.07510131712259371, 0.07509180701532227, 0.0750822993162826, 0.07507279402456007, 0.07506329113924051, 0.07518035691684596, 0.07529739306504682, 0.07528786536758193, 0.07527834008097166, 0.07526881720430108, 0.0752592967366557, 0.07524977867712154, 0.07524026302478502, 0.07523074977873309, 0.0752212389380531, 0.07521173050183289, 0.07520222446916076, 0.0751927208391255, 0.07518321961081627, 0.07517372078332281, 0.07516422435573522, 0.07515473032714412, 0.07514523869664057, 0.07513574946331608, 0.07512626262626262, 0.07511677818457266, 0.07510729613733906, 0.07509781648365518, 0.07508833922261485, 0.0750788643533123, 0.0750693918748423, 0.07505992178629999, 0.07505045408678103, 0.07504098877538151, 0.07503152585119799, 0.07502206531332745, 0.07501260716086737, 0.07500315139291566, 0.07499369800857071, 0.07498424700693132, 0.07497479838709678, 0.07496535214816681, 0.07495590828924162, 0.07494646680942184, 0.07493702770780857, 0.07492759098350334, 0.07491815663560816, 0.07490872466322548, 0.07489929506545821, 0.07488986784140969, 0.07488044299018375, 0.07487102051088461, 0.07486160040261701, 0.0748521826644861, 0.07484276729559748, 0.07483335429505722, 0.07482394366197183, 0.0749402741103986, 0.07505657530802112, 0.07504714016341923, 0.07503770739064856, 0.07502827698881488, 0.07501884895702438, 0.07500942329438372, 0.075, 0.07499057907298078, 0.07498116051243406, 0.0749717443174683, 0.07496233048719236, 0.07495291902071563, 0.07494350991714788, 0.07493410317559934, 0.07492469879518072, 0.07491529677500314, 0.07490589711417817, 0.07489649981181784, 0.07488710486703462, 0.07487771227894142, 0.07486832204665161, 0.074858934169279, 0.07484954864593782, 0.07484016547574276, 0.07483078465780897, 0.07482140619125204, 0.07481203007518797, 0.07480265630873324, 0.07479328489100476, 0.07478391582111987, 0.07477454909819639, 0.07476518472135253, 0.07475582268970699, 0.07474646300237886, 0.07473710565848773, 0.07472775065715359, 0.07471839799749687, 0.07470904767863847, 0.0746996996996997, 0.07469035405980233, 0.07468101075806854, 0.07467166979362101, 0.0746623311655828, 0.0746529948730774, 0.07464366091522881, 0.0746343292911614, 0.074625, 0.0746156730408699, 0.07460634841289678, 0.0745970261152068, 0.07458770614692653, 0.07457838850718301, 0.07456907319510367, 0.07455976020981642, 0.07455044955044955, 0.07454114121613185, 0.0745318352059925, 0.07452253151916115, 0.07451323015476785, 0.07450393111194309, 0.07449463438981782, 0.0744853399875234, 0.07447604790419161, 0.07446675813895472, 0.07445747069094537, 0.07444818555929666, 0.07443890274314215, 0.07442962224161576, 0.07442034405385191, 0.07441106817898542, 0.07440179461615154, 0.07439252336448599, 0.07438325442312485, 0.07437398779120469, 0.0744892874937718, 0.07460455847552622, 0.074719800747198, 0.0748350143195119, 0.07482569721115538, 0.07481638242250715, 0.07480706995270102, 0.0747977598008712, 0.07478845196615232, 0.07477914644767948, 0.0747698432445882, 0.07476054235601443, 0.07475124378109453, 0.0748663101604278, 0.07485700074608306, 0.07484769364664925, 0.07483838886126305, 0.07482908638906152, 0.0748197862291822, 0.07481048838076301, 0.07480119284294234, 0.07479189961485899, 0.07478260869565218, 0.07477332008446155, 0.07476403378042722, 0.07475474978268969, 0.07474546809038987, 0.07473618870266915, 0.07472691161866932, 0.07471763683753258, 0.07470836435840159, 0.07469909418041941, 0.07468982630272952, 0.07480461481205805, 0.07491937484495162, 0.07491008309562197, 0.07490079365079365, 0.07489150650960942, 0.0748822216712125, 0.07487293913474649, 0.07486365889935548, 0.07485438096418391, 0.07484510532837671, 0.07483583199107917, 0.07482656095143707, 0.07481729220859655, 0.07480802576170424, 0.07479876160990712, 0.07478949975235265, 0.07490404853287111, 0.07501856895271107, 0.07500928332714445, 0.075, 0.07499071897042445, 0.07498144023756496, 0.07497216380056909, 0.07496288965858486, 0.07495361781076067, 0.07494434825624537, 0.0749350809941882, 0.07492581602373888, 0.07491655334404747, 0.07490729295426453, 0.07489803485354098, 0.07488877904102817, 0.07487952551587793, 0.0748702742772424, 0.07486102532427424, 0.07485177865612648, 0.07484253427195257, 0.0748332921709064, 0.07482405235214223, 0.07481481481481482, 0.07480557955807925, 0.07479634658109109, 0.0747871158830063, 0.07490128331688055, 0.07489204194941394, 0.07488280286207748, 0.07487356605402738, 0.07486433152442032, 0.07485509927241336, 0.074845869297164, 0.07483664159783011, 0.07482741617357001, 0.07481819302354246, 0.07480897214690659, 0.07479975354282194, 0.0747905372104485, 0.07478132314894666, 0.07477211135747722, 0.07476290183520137, 0.07475369458128078, 0.07474448959487748, 0.0747352868751539, 0.07484919364766712, 0.07496307237813885, 0.07507692307692308, 0.0751907457543687, 0.0753045404208195, 0.07529527559055119, 0.07528601303973428, 0.07527675276752767, 0.07526749477309064, 0.07525823905558288, 0.07524898561416452, 0.07523973444799606, 0.07523048555623847, 0.0752212389380531, 0.0752119945926017, 0.07520275251904644, 0.07519351271654995, 0.07518427518427519, 0.07517503992138558, 0.07516580692704496, 0.07515657620041753, 0.07514734774066797, 0.07513812154696133, 0.07512889761846304, 0.07511967595433902, 0.07511045655375552, 0.07510123941587925, 0.0750920245398773, 0.07508281192491718, 0.07507360157016683, 0.07506439347479456, 0.07505518763796909, 0.0750459840588596, 0.07503678273663561, 0.0751501777614319, 0.07514096592302034, 0.07513175634268905, 0.07524509803921568, 0.07523587795613283, 0.07522666013232052, 0.07521744456694843, 0.07520823125918667, 0.07519902020820575, 0.07518981141317659, 0.07518060487327048, 0.07517140058765916, 0.07516219855551474, 0.07527539779681762, 0.07526618528943825, 0.07525697503671072, 0.07524776703780742, 0.07523856129190115, 0.07522935779816514, 0.075220156555773, 0.07521095756389874, 0.0752017608217168, 0.075192566328402, 0.07518337408312958, 0.07517418408507517, 0.07516499633341481, 0.07515581082732495, 0.07514662756598241, 0.07513744654856444, 0.07512826777424872, 0.07511909124221326, 0.07510991695163655, 0.0751007449016974, 0.07509157509157509, 0.07508240752044927, 0.0750732421875, 0.07506407909190772, 0.0750549182328533, 0.075045759609518, 0.07503660322108345, 0.07502744906673173, 0.07501829714564529, 0.07500914745700696, 0.075, 0.07499085477380807, 0.07498171177761521, 0.07497257101060588, 0.0749634324719649, 0.07495429616087751, 0.07494516207652936, 0.07493603021810649, 0.07492690058479533, 0.07491777317578267, 0.07490864799025579, 0.07502131287297528, 0.07513395031660984, 0.07512480214294412, 0.07511565619673728, 0.0751065124771759, 0.07509737098344693, 0.07520993063161738, 0.07532246288634704, 0.07543496775763475, 0.07554744525547445, 0.07553825568665612, 0.07552906835319874, 0.07551988325428675, 0.07551070038910505, 0.0755015197568389, 0.07549234135667396, 0.07548316518779628, 0.07547399124939232, 0.07546481954064893, 0.07545565006075335, 0.07544648280889321, 0.07543731778425657, 0.07542815498603182, 0.07541899441340782, 0.07540983606557378, 0.07540067994171928, 0.07539152604103436, 0.07538237436270939, 0.07537322490593519, 0.07536407766990291, 0.07535493265380415, 0.07534578985683087, 0.07533664927817542, 0.07532751091703056, 0.07531837477258944, 0.0753092408440456, 0.07530010913059294, 0.0752909796314258, 0.07528185234573888, 0.07527272727272727, 0.07526360441158647, 0.07525448376151236, 0.0752453653217012, 0.07523624909134966, 0.07522713506965475, 0.07521802325581395, 0.07520891364902507, 0.07519980624848632, 0.0751907010533963, 0.07518159806295399, 0.07517249727635879, 0.07516339869281045, 0.07515430231150913, 0.07514520813165537, 0.0751361161524501, 0.07512702637309461, 0.07511793879279062, 0.07510885341074021, 0.07509977022614585, 0.0750906892382104, 0.0750816104461371, 0.0750725338491296, 0.07506345944639188, 0.07505438723712836, 0.0750453172205438, 0.0750362493958434, 0.07502718376223269, 0.07501812031891761, 0.07500905906510448, 0.075, 0.07499094312281125, 0.07498188843274571, 0.07497283592901123, 0.07496378561081603, 0.07495473747736874, 0.07494569152787835, 0.07493664776155425, 0.07492760617760617, 0.0749185667752443, 0.07490952955367913, 0.07502110722470148, 0.07501205981669079, 0.07500301459061859, 0.07499397154569569, 0.07498493068113321, 0.07497589199614271, 0.07496685548993612, 0.07495782116172572, 0.07494878901072419, 0.07493975903614458, 0.07493073123720034, 0.07492170561310528, 0.07491268216307359, 0.07490366088631985, 0.074894641782059, 0.07500601974476283, 0.07511737089201878, 0.07510832932113626, 0.07509928992658563, 0.07509025270758123, 0.07508121766333775, 0.07507218479307026, 0.07506315409599422, 0.07505412557132547, 0.07504509921828022, 0.07503607503607504, 0.0750270530239269, 0.07501803318105314, 0.07500901550667148, 0.075, 0.07499098666025718, 0.07498197548666186, 0.07497296647843325, 0.07496395963479097, 0.07495495495495495, 0.07494595243814557, 0.07493695208358353, 0.07492795389048991, 0.07491895785808621, 0.07490996398559424, 0.07490097227223623, 0.07489198271723475, 0.0748829953198128, 0.07487401007919367, 0.07486502699460108, 0.07485604606525911, 0.07484706729039223, 0.07483809066922524, 0.07482911620098333, 0.07482014388489208, 0.07481117372017744, 0.07480220570606569, 0.07479323984178353, 0.07478427612655801, 0.07477531455961654, 0.07476635514018691, 0.0747573978674973, 0.07474844274077623, 0.07473948975925261, 0.07473053892215568, 0.07472159022871512, 0.07471264367816093, 0.07470369926972345, 0.07469475700263346, 0.07468581687612208, 0.07467687888942078, 0.0746679430417614, 0.07465900933237617, 0.07465007776049767, 0.07464114832535886, 0.07475182394450425, 0.07474288447739776, 0.07473394714815258, 0.07472501195600191, 0.07471607890017933, 0.07470714797991872, 0.07469821919445441, 0.07468929254302104, 0.07468036802485363, 0.07467144563918758, 0.07466252538525864, 0.07477305303392259, 0.0748835542816195, 0.0749940291378075, 0.07498507462686567, 0.07497612225405921, 0.07496717201862242, 0.07495822391978993, 0.07494927795679675, 0.07494033412887828, 0.07493139243527025, 0.07492245287520878, 0.07491351544793033, 0.07490458015267176, 0.07489564698867024, 0.07488671595516337, 0.07487778705138906, 0.0748688602765856, 0.07485993562999166, 0.07485101311084624, 0.07484209271838875, 0.07483317445185891, 0.07482425831049684, 0.074815344293543, 0.07480643240023824, 0.07479752262982373, 0.07478861498154103, 0.07477970945463205, 0.07477080604833909, 0.07488095238095238, 0.07499107249137008, 0.07498214710783146, 0.0749732238486255, 0.07496430271299381, 0.07495538370017847, 0.07494646680942184, 0.0749375520399667, 0.07492863939105614, 0.07503864906647639, 0.07502972651605232, 0.07502080608726668, 0.07501188777936281, 0.07500297159158445, 0.07499405752317566, 0.07498514557338087, 0.07497623574144487, 0.07496732802661281, 0.0749584224281302, 0.0749495189452429, 0.07494061757719715, 0.07493171832323953, 0.07492282118261695, 0.07491392615457676, 0.07490503323836657, 0.07489614243323442, 0.07488725373842867, 0.07487836715319805, 0.07486948267679165, 0.0748606003084589, 0.07485172004744958, 0.07484284189301388, 0.07483396584440227, 0.07482509190086564, 0.07481622006165521, 0.07480735032602252, 0.07491702228544334, 0.07490814270475288, 0.07489926522872718, 0.07489038985661808, 0.07488151658767772, 0.07487264542115864, 0.07486377635631367, 0.07485490939239607, 0.07484604452865941, 0.07483718176435761, 0.07482832109874497, 0.07481946253107612, 0.07481060606060606, 0.07480175168659013, 0.07479289940828403, 0.07478404922494379, 0.07477520113582584, 0.07476635514018691, 0.07475751123728412, 0.07474866942637493, 0.07473982970671712, 0.07473099207756888, 0.0747221565381887, 0.07471332308783545, 0.07470449172576832, 0.0746956624512469, 0.07468683526353108, 0.07467801016188114, 0.07466918714555766, 0.07466036621382162, 0.07465154736593432, 0.07464273060115743, 0.07463391591875296, 0.07462510331798324, 0.07461629279811098, 0.07460748435839924, 0.07459867799811143, 0.07458987371651127, 0.07458107151286288, 0.07457227138643067, 0.07456347333647947, 0.07455467736227439, 0.07454588346308091, 0.07453709163816488, 0.07452830188679245, 0.07451951420823016, 0.07451072860174487, 0.07450194506660379, 0.07449316360207449, 0.07448438420742487, 0.07447560688192317, 0.07446683162483798, 0.07445805843543826, 0.07444928731299329, 0.07444051825677267, 0.0744317512660464, 0.07442298634008479, 0.07441422347815849, 0.0744054626795385, 0.07439670394349618, 0.0743879472693032, 0.07437919265623161, 0.07437044010355377, 0.07436168961054242, 0.07447058823529412, 0.07457946123985414, 0.07457068924958833, 0.07456191932259203, 0.07455315145813735, 0.07454438565549677, 0.0745356219139431, 0.0745268602327495, 0.07451810061118946, 0.07450934304853685, 0.0745005875440658, 0.0746093291035131, 0.07460056390977443, 0.07459180077528486, 0.07458303969931877, 0.0745742806811509, 0.07456552372005637, 0.07455676881531055, 0.07454801596618925, 0.07453926517196854, 0.07453051643192488, 0.07452176974533506, 0.07451302511147619, 0.07450428252962572, 0.07449554199906147, 0.07448680351906159, 0.07447806708890453, 0.07446933270786912, 0.07446060037523453, 0.07445187009028022, 0.07444314185228605, 0.07443441566053217, 0.0744256915142991, 0.07441696941286768, 0.0744082493555191, 0.07439953134153486, 0.07439081537019682, 0.07438210144078716, 0.07437338955258843, 0.07436467970488347, 0.0743559718969555, 0.07434726612808805, 0.07433856239756498, 0.07432986070467049, 0.07432116104868913, 0.0743124634289058, 0.07430376784460567, 0.0742950742950743, 0.07428638277959757, 0.07427769329746169, 0.07426900584795322, 0.07426032043035902, 0.07425163704396633, 0.07424295568806266, 0.07423427636193594, 0.07422559906487435, 0.07421692379616643, 0.0742082505551011, 0.07419957934096752, 0.07419091015305526, 0.0741822429906542, 0.07417357785305455, 0.07416491473954684, 0.07415625364942194, 0.07414759458197104, 0.07413893753648569, 0.07413028251225777, 0.07412162950857944, 0.07411297852474323, 0.07410432956004201, 0.07409568261376896, 0.0740870376852176, 0.07407839477368175, 0.07406975387845562, 0.07406111499883368, 0.07405247813411078, 0.07404384328358209, 0.07403521044654308, 0.07402657962228958, 0.07401795081011774, 0.07400932400932402, 0.07400069921920523, 0.07399207643905849, 0.07398345566818129, 0.0739748369058714, 0.07396622015142691, 0.07395760540414628, 0.07394899266332829, 0.07394038192827201, 0.07393177319827686, 0.0739231664726426, 0.07391456175066931, 0.07390595903165735, 0.07389735831490749, 0.07388875959972073, 0.07388016288539849, 0.07387156817124244, 0.07386297545655461, 0.07385438474063735, 0.07384579602279334, 0.07383720930232558, 0.07382862457853738, 0.07382004185073239, 0.07381146111821457, 0.07380288238028823, 0.073794305636258, 0.07378573088542877, 0.07377715812710585, 0.0737685873605948, 0.07376001858520154, 0.07375145180023229, 0.07374288700499361, 0.07373432419879239, 0.0737257633809358, 0.07371720455073137, 0.07370864770748695, 0.07370009285051068, 0.07369153997911106, 0.07368298909259689, 0.07367444019027729, 0.07366589327146171, 0.07365734833545992, 0.073648805381582, 0.07364026440913835, 0.0736317254174397, 0.0736231884057971, 0.07361465337352191, 0.07360612031992582, 0.07359758924432082, 0.07358906014601924, 0.07358053302433372, 0.07357200787857722, 0.07356348470806302, 0.07355496351210472, 0.07354644429001622, 0.07365373480023162, 0.07376100046317739, 0.07386824128748408, 0.07397545728177819, 0.07408264845468225, 0.07407407407407407, 0.07406550167804653, 0.07405693126591067, 0.0740483628369779, 0.07403979639055992, 0.07403123192596876, 0.07402266944251677, 0.0740141089395166, 0.07400555041628122, 0.07399699387212394, 0.07398843930635839, 0.07397988671829846, 0.07397133610725844, 0.07396278747255287, 0.07395424081349665, 0.07394569612940496, 0.07393715341959335, 0.07392861268337761, 0.07392007392007392, 0.07391153712899873, 0.07390300230946882, 0.07389446946080129, 0.07388593858231356, 0.07387740967332333, 0.07386888273314866, 0.0738603577611079, 0.07385183475651973, 0.07384331371870313, 0.07383479464697738, 0.07382627754066214, 0.07381776239907728, 0.07380924922154307, 0.07380073800738007, 0.07379222875590914, 0.07389900853124279, 0.07389048991354467, 0.07388197325956662, 0.07387345856862972, 0.07386494584005532, 0.07385643507316511, 0.07384792626728111, 0.0738394194217256, 0.07383091453582125, 0.07382241160889094, 0.07381391064025794, 0.07380541162924582, 0.07379691457517845, 0.07378841947737999, 0.07377992633517495, 0.07377143514788813, 0.07376294591484465, 0.07375445863536992, 0.0737459733087897, 0.07373748993443, 0.0737290085116172, 0.07372052903967798, 0.07371205151793929, 0.0737035759457284, 0.07369510232237296, 0.07368663064720082, 0.07379310344827586, 0.07389955177565798, 0.07400597563778442, 0.07399747213604504, 0.0739889705882353, 0.0739804709936818, 0.07397197335171146, 0.07396347766165154, 0.07395498392282958, 0.07394649213457342, 0.07393800229621125, 0.07392951440707152, 0.07392102846648302, 0.07391254447377482, 0.07390406242827634, 0.07389558232931727, 0.07388710417622762, 0.07387862796833773, 0.07387015370497821, 0.07386168138547998, 0.07385321100917432, 0.07384474257539272, 0.0738362760834671, 0.07382781153272956, 0.07381934892251261, 0.07392550143266476, 0.07403162961265185, 0.07413773347083763, 0.07424381301558204, 0.07434986825524115, 0.07434135166093929, 0.07433283701752376, 0.07432432432432433, 0.07431581358067102, 0.0743073047858942, 0.07429879793932456, 0.07429029304029304, 0.07428179008813093, 0.07427328908216983, 0.07426479002174162, 0.0742562929061785, 0.07424779773481295, 0.07423930450697781, 0.07423081322200617, 0.07422232387923147, 0.07421383647798742, 0.07420535101760804, 0.0741968674974277, 0.07418838591678098, 0.07417990627500286, 0.07417142857142857, 0.07416295280539367, 0.074154478976234, 0.07414600708328573, 0.0741375371258853, 0.0741290691033695, 0.07412060301507538, 0.0741121388603403, 0.07410367663850194, 0.07409521634889828, 0.07408675799086759, 0.07407830156374844, 0.0740698470668797, 0.0740613944996006, 0.07405294386125057, 0.07404449515116943, 0.07415012548482774, 0.07414166761720087, 0.07413321167883212, 0.07412475766906147, 0.07423033067274801, 0.07433587960323794, 0.07432740538075695, 0.074318933090163, 0.07431046273079553, 0.0743019943019943, 0.07429352780309936, 0.07428506323345106, 0.07427660059239007, 0.07426813987925732, 0.07425968109339408, 0.07425122423414189, 0.07424276930084263, 0.07423431629283844, 0.07422586520947176, 0.07421741605008537, 0.07420896881402231, 0.07420052350062592, 0.07419208010923987, 0.0741836386392081, 0.07417519908987485, 0.0741667614605847, 0.07415832575068244, 0.07414989195951326, 0.07414146008642256, 0.07413303013075612, 0.07412460209185993, 0.07411617596908036, 0.07410775176176404, 0.07409932946925787, 0.0740909090909091, 0.07408249062606521, 0.07407407407407407, 0.07406565943428377, 0.0740572467060427, 0.07404883588869961, 0.07404042698160346, 0.07403201998410355, 0.0740236148955495, 0.07401521171529118, 0.07400681044267877, 0.07399841107706276, 0.07399001361779392, 0.0739816180642233, 0.0739732244157023, 0.07396483267158253, 0.07395644283121597, 0.07394805489395485, 0.07393966885915174, 0.07393128472615942, 0.07403628117913832, 0.07414125382609682, 0.07413284969394696, 0.07412444746684801, 0.0741160471441523, 0.07410764872521246, 0.07409925220938138, 0.07409085759601224, 0.07408246488445853, 0.07407407407407407, 0.07406568516421291, 0.07405729815422941, 0.07404891304347826, 0.07415374165062832, 0.07414534752094182, 0.07413695529145445, 0.07412856496152105, 0.07412017653049678, 0.07411178999773704, 0.07410340536259757, 0.07409502262443439, 0.07408664178260378, 0.07407826283646234, 0.07406988578536695, 0.0740615106286748, 0.07405313736574336, 0.07404476599593036, 0.07403639651859388, 0.07402802893309222, 0.07401966323878405, 0.07401129943502825, 0.07400293752118405, 0.07399457749661094, 0.0739862193606687, 0.07397786311271741, 0.07396950875211744, 0.07407407407407407, 0.07417861578412555, 0.07428313389026868, 0.07427474884298453, 0.07426636568848759, 0.074257984426137, 0.07424960505529225, 0.0742412275753131, 0.07423285198555957, 0.07422447828539198, 0.07421610647417098, 0.07420773655125747, 0.07419936851601262, 0.07419100236779795, 0.0741826381059752, 0.07417427572990644, 0.07416591523895401, 0.07415755663248055, 0.074149199909849, 0.07414084507042254, 0.07413249211356467, 0.07412414103863918, 0.07411579184501013, 0.07410744453204189, 0.0740990990990991, 0.07420335547798672, 0.07419500112587255, 0.07418664865473376, 0.07417829806393517, 0.07416994935284187, 0.07416160252081927, 0.07415325756723304, 0.07414491449144915, 0.07413657329283384, 0.07412823397075366, 0.07411989652457542, 0.07411156095366622, 0.07410322725739346, 0.0740948954351248, 0.07408656548622822, 0.07407823741007194, 0.0740699112060245, 0.07406158687345471, 0.07405326441173166, 0.07404494382022472, 0.07403662509830355, 0.07402830824533813, 0.07401999326069864, 0.07401168014375561, 0.07400336889387985, 0.0739950595104424, 0.07398675199281464, 0.07397844634036821, 0.07397014255247503, 0.07396184062850729, 0.0739535405678375, 0.07394524236983842, 0.0739369460338831, 0.07392865155934485, 0.07392035894559731, 0.07391206819201436, 0.07390377929797017, 0.0738954922628392, 0.07388720708599619, 0.07387892376681614, 0.07387064230467437, 0.07386236269894643, 0.07385408494900818, 0.07384580905423577, 0.0738375350140056, 0.07382926282769438, 0.07382099249467906, 0.07381272401433692, 0.07380445738604546, 0.07379619260918253, 0.0737879296831262, 0.07377966860725481, 0.07377140938094705, 0.07376315200358183, 0.07375489647453833, 0.07374664279319607, 0.07373839095893477, 0.07373014097113448, 0.07372189282917552, 0.07371364653243848, 0.07370540208030421, 0.07369715947215388, 0.07368891870736889, 0.07368067978533095, 0.07367244270542202, 0.07366420746702437, 0.07365597406952051, 0.07375949932945909, 0.07375125712370097, 0.07374301675977654, 0.07373477823706849, 0.07372654155495978, 0.07371830671283369, 0.07371007371007371, 0.07370184254606366, 0.07369361322018758, 0.07368538573182985, 0.07367716008037509, 0.07366893626520817, 0.07366071428571429, 0.07365249414127888, 0.07364427583128766, 0.07363605935512663, 0.07362784471218206, 0.0736196319018405, 0.07361142092348874, 0.07360321177651388, 0.0735950044603033, 0.07358679897424462, 0.07357859531772576, 0.07368186378330176, 0.073673651359786, 0.07366544076674468, 0.07365723200356586, 0.07364902506963789, 0.07364081996434937, 0.07363261668708923, 0.0736244152372466, 0.07361621561421093, 0.07360801781737193, 0.07359982184611959, 0.07359162769984413, 0.0735834353779361, 0.07357524487978628, 0.07356705620478575, 0.07355886935232583, 0.07355068432179815, 0.07354250111259457, 0.07353431972410725, 0.07352614015572859, 0.0735179624068513, 0.07350978647686833, 0.07350161236517291, 0.07349344007115854, 0.0735964424680378, 0.07369942196531792, 0.07369123041013671, 0.07368304067570572, 0.07367485276141794, 0.07366666666666667, 0.07365848239084546, 0.07365029993334815, 0.07364211929356881, 0.07363394047090183, 0.07362576346474181, 0.07361758827448368, 0.0736094148995226, 0.073601243339254, 0.0735930735930736, 0.07358490566037736, 0.07357673954056154, 0.07356857523302264, 0.07356041273715744, 0.07355225205236299, 0.0735440931780366, 0.07353593611357587, 0.07352778085837862, 0.07351962741184298, 0.0736223528107329, 0.07361419068736141, 0.07360603037357277, 0.07359787186876524, 0.07358971517233737, 0.07358156028368794, 0.07357340720221607, 0.07356525592732108, 0.07366788523318932, 0.07365972529906956, 0.07365156717244435, 0.07364341085271318, 0.07363525633927583, 0.07362710363153233, 0.07361895272888298, 0.07361080363072836, 0.07360265633646929, 0.07359451084550686, 0.07369702334845635, 0.07368886921885373, 0.07368071689346167, 0.07367256637168142, 0.0736644176529145, 0.07365627073656271, 0.07364812562202809, 0.07363998230871296, 0.0736318407960199, 0.07362370108335176, 0.07361556317011164, 0.07360742705570292, 0.07359929273952923, 0.07359116022099448, 0.07358302949950282, 0.07357490057445869, 0.07356677344526676, 0.073558648111332, 0.07366096079514081, 0.07365282685512367, 0.07364469471127305, 0.07363656436299404, 0.07362843580969201, 0.07362030905077263, 0.07361218408564175, 0.07360406091370558, 0.07359593953437052, 0.07358781994704325, 0.07357970215113072, 0.07357158614604015, 0.073563471931179, 0.073555359505955, 0.07354724886977616, 0.07353914002205071, 0.07353103296218719, 0.07352292768959436, 0.07351482420368126, 0.07350672250385717, 0.07349862258953169, 0.07349052446011459, 0.07348242811501597, 0.07347433355364617, 0.07346624077541579, 0.07345814977973568, 0.07345006056601695, 0.073441973133671, 0.07343388748210944, 0.07342580361074416, 0.07341772151898734, 0.07340964120625137, 0.07340156267194894, 0.07339348591549295, 0.07338541093629662, 0.07337733773377338, 0.07336926630733692, 0.07336119665640123, 0.07335312878038051, 0.07334506267868925, 0.07333699835074217, 0.07343887423043095, 0.07343080136308673, 0.07342273027038909, 0.07341466095175293, 0.0734065934065934, 0.07350840566970662, 0.07361019556141507, 0.07360210919477095, 0.07359402460456942, 0.07358594179022515, 0.07368767845376675, 0.07367958713077852, 0.07367149758454106, 0.0736634098144692, 0.07365532381997805, 0.07364723960048293, 0.07363915715539947, 0.07363107648414353, 0.07362299758613122, 0.07361492046077893, 0.07360684510750329, 0.07359877152572118, 0.07359069971484974, 0.0735826296743064, 0.07357456140350878, 0.0735664949018748, 0.07355843016882263, 0.07355036720377069, 0.07354230600613766, 0.07353424657534247, 0.0735261889108043, 0.07351813301194259, 0.07351007887817704, 0.07350202650892759, 0.07349397590361446, 0.07348592706165809, 0.07347787998247919, 0.07346983466549874, 0.07346179111013795, 0.07345374931581829, 0.07344570928196147, 0.0734376710079895, 0.07342963449332458, 0.07342159973738921, 0.07341356673960613, 0.07340553549939831, 0.07339750601618902, 0.07338947828940173, 0.07338145231846019, 0.07337342810278841, 0.07336540564181063, 0.07335738493495135, 0.07334936598163533, 0.07334134878128758, 0.07333333333333333, 0.07343459731176921, 0.07342657342657342, 0.07341855129465749, 0.0734105309154468, 0.07340251228836701, 0.07339449541284404, 0.07338648028830402, 0.07337846691417341, 0.0733704552898788, 0.07336244541484715, 0.07335443728850562, 0.0733464309102816, 0.07333842627960276, 0.07333042339589699, 0.07332242225859247, 0.0733144228671176, 0.07330642522090106, 0.07329842931937172, 0.07329043516195878, 0.0732824427480916, 0.07327445207719988, 0.07326646314871348, 0.07325847596206257, 0.07325049051667756, 0.0732425068119891, 0.07323452484742807, 0.07322654462242563, 0.07321856613641316, 0.07321058938882231, 0.07320261437908497, 0.07319464110663326, 0.07318666957089959, 0.07317869977131657, 0.07317073170731707, 0.07316276537833424, 0.07315480078380143, 0.07314683792315228, 0.07313887679582064, 0.07313091740124061, 0.07312295973884657, 0.07311500380807312, 0.0731070496083551, 0.0730990971391276, 0.07309114639982597, 0.0730831973898858, 0.07307525010874293, 0.07306730455583342, 0.0730593607305936, 0.07305141863246005, 0.07304347826086957, 0.07303553961525922, 0.0730276026950663, 0.07301966749972835, 0.07301173402868318, 0.07300380228136882, 0.07299587225722355, 0.07298794395568589, 0.07298001737619461, 0.07297209251818873, 0.07296416938110749, 0.0729562479643904, 0.0729483282674772, 0.07294041028980788, 0.07293249403082266, 0.07292457948996202, 0.07291666666666667, 0.07290875556037757, 0.07290084617053591, 0.07289293849658314, 0.07288503253796096, 0.07287712829411126, 0.07286922576447626, 0.07286132494849831, 0.07285342584562012, 0.07295392953929539, 0.07294602211142423, 0.072938116397529, 0.07293021239705245, 0.07292231010943764, 0.07291440953412784, 0.07290651067056657, 0.07289861351819757, 0.07289071807646486, 0.07288282434481265, 0.07287493232268544, 0.07286704200952794, 0.0728591534047851, 0.07285126650790215, 0.07284338131832449, 0.07283549783549784, 0.07282761605886809, 0.07281973598788141, 0.07281185762198421, 0.07280398096062311, 0.072796106003245, 0.072788232749297, 0.07278036119822645, 0.07288062283737025, 0.07298086279597794, 0.07308108108108108, 0.07318127769970814, 0.07328145265888457, 0.07327353290824598, 0.07326561486924574, 0.073257698541329, 0.07324978392394123, 0.07324187101652803, 0.07323395981853532, 0.07322605032940922, 0.07332613390928726, 0.07342619587517547, 0.07352623623407471, 0.07351829860736263, 0.07351036269430052, 0.07350242849433351, 0.07349449600690697, 0.07348656523146649, 0.07347863616745792, 0.07347070881432732, 0.07346278317152104, 0.0734548592384856, 0.07344693701466781, 0.07354685646500593, 0.07353892602976062, 0.07353099730458221, 0.07352307028891764, 0.07351514498221408, 0.07350722138391895, 0.0734992994934799, 0.07349137931034483, 0.07348346083396186, 0.07347554406377936, 0.07346762899924593, 0.07345971563981042, 0.07345180398492192, 0.07344389403402972, 0.07354366318509745, 0.07353574504737295, 0.07363548282915276, 0.073735199138859, 0.07372726294263265, 0.07371932845458459, 0.07371139567416335, 0.07370346460081773, 0.07369553523399677, 0.07368760757314974, 0.07367968161772614, 0.07367175736717574, 0.07366383482094849, 0.07376344086021505, 0.07375551016019782, 0.07385508492797248, 0.07384714608190907, 0.07383920894239036, 0.0738312735088662, 0.07382333978078659, 0.0738154077576018, 0.07380747743876236, 0.07379954882371899, 0.07379162191192266, 0.07378369670282461, 0.07388316151202749, 0.07387522817566843, 0.07386729654283873, 0.07385936661298981, 0.0738514383855732, 0.07384351186004079, 0.0738355870358446, 0.07382766391243696, 0.07381974248927038, 0.07381182276579766, 0.07380390474147179, 0.073795988415746, 0.07378807378807378, 0.07378016085790885, 0.07377224962470512, 0.0737643400879168, 0.07375643224699828, 0.07374852610140423, 0.07374062165058949, 0.07373271889400922, 0.07372481783111873, 0.07371691846137363, 0.0737090207842297, 0.07370112479914301, 0.07369323050556983, 0.07368533790296669, 0.07367744699079032, 0.07366955776849769, 0.07366167023554604, 0.07365378439139278, 0.07364590023549561, 0.07363801776731242, 0.07363013698630137, 0.07362225789192081, 0.07361438048362937, 0.07360650476088584, 0.07359863072314933, 0.07359075836987913, 0.07358288770053475, 0.07368195914875414, 0.07378100940975192, 0.07388003849032396, 0.0739790463972632, 0.07397113842864778, 0.07396323215049166, 0.07395532756225286, 0.07394742466338962, 0.0739395234533604, 0.07393162393162393, 0.07392372609763914, 0.0739158299508652, 0.07390793549076151, 0.0739000427167877, 0.07389215162840362, 0.0738842622250694, 0.07387637450624533, 0.07386848847139198, 0.07386060411997011, 0.07385272145144077, 0.07384484046526518, 0.07383696116090482, 0.07393577296489919, 0.07403456368679326, 0.07402666666666667, 0.07401877133105803, 0.07401087767942839, 0.07400298571123907, 0.07399509542595159, 0.07398720682302772, 0.07397931990192944, 0.07397143466211895, 0.07396355110305872, 0.07395566922421143, 0.0740543420351625, 0.07404645216279565, 0.07403856397144988, 0.07403067746058799, 0.07402279262967303, 0.07401490947816826, 0.07400702800553721, 0.0739991482112436, 0.07399127009475141, 0.07398339365552481, 0.07397551889302821, 0.07396764580672627, 0.07395977439608385, 0.07395190466056607, 0.07394403659963826, 0.07393617021276595, 0.07392830549941495, 0.07392044245905127, 0.07391258109114113, 0.073904721395151, 0.07389686337054759, 0.07388900701679779, 0.07388115233336877, 0.07397959183673469, 0.07397172919545117, 0.07396386822529225, 0.07395600892572521, 0.0739481512962176, 0.07394029533623712, 0.07393244104525175, 0.07392458842272968, 0.07391673746813934, 0.07390888818094934, 0.07390104056062859, 0.07389319460664615, 0.07388535031847134, 0.07387750769557372, 0.07386966673742305, 0.07396795075878171, 0.07406621392190153, 0.07405835543766578, 0.07405049862083599, 0.0740426434708815, 0.07403478998727196, 0.07402693816947714, 0.07412513255567338, 0.07422330611812109, 0.07421543681085666, 0.07420756917205555, 0.0743057027771889, 0.07429782723900372, 0.07428995337007206, 0.0742820811698633, 0.074274210637847, 0.07426634177349295, 0.07425847457627119, 0.07425060904565195, 0.0742427451811057, 0.07423488298210315, 0.0742270224481152, 0.07421916357861302, 0.07421130637306797, 0.07420345083095163, 0.07419559695173582, 0.07418774473489258, 0.07417989417989418, 0.0741720452862131, 0.07416419805332204, 0.07415635248069397, 0.07414850856780199, 0.07414066631411952, 0.07413282571912014, 0.07412498678227768, 0.0741171495030662, 0.07410931388095993, 0.07410147991543341, 0.07409364760596132, 0.0740858169520186, 0.07407798795308042, 0.07407016060862215, 0.0740623349181194, 0.07405451088104796, 0.07404668849688391, 0.0740388677651035, 0.07403104868518323, 0.07402323125659979, 0.07401541547883012, 0.07400760135135136, 0.07399978887364088, 0.07399197804517627, 0.07398416886543535, 0.07397636133389617, 0.07396855545003693, 0.07396075121333615, 0.0739529486232725, 0.07394514767932489, 0.07393734838097248, 0.07392955072769458, 0.07392175471897079, 0.0739139603542809, 0.0739061676331049, 0.07400379506641366, 0.07410140191841467, 0.07419898819561552, 0.07419116872167773, 0.07418335089567966, 0.07417553471710041, 0.0741677201854193, 0.07415990730011587, 0.0741520960606699, 0.07414428646656135, 0.07413647851727043, 0.07412867221227756, 0.07412086755106338, 0.07411306453310874, 0.07410526315789474, 0.07409746342490264, 0.07408966533361398, 0.07408186888351047, 0.07407407407407407, 0.07406628090478695, 0.0740584893751315, 0.0740506994845903, 0.0740429112326462, 0.0740351246187822, 0.0740273396424816, 0.07401955630322785, 0.07401177460050462, 0.07400399453379586, 0.07399621610258567, 0.07398843930635839, 0.07398066414459857, 0.073972890616791, 0.07396511872242068, 0.0739573484609728, 0.0740546218487395, 0.07415187480306691, 0.07414408737660155, 0.07413630158563478, 0.0741285174296514, 0.07412073490813648, 0.07411295402057527, 0.07410517476645324, 0.0740973971452561, 0.07408962115646972, 0.07418677859391395, 0.07428391564368901, 0.07427612253462022, 0.07426833106052659, 0.07426054122089365, 0.07425275301520713, 0.07424496644295302, 0.0742371815036175, 0.07422939819668693, 0.07422161652164797, 0.07421383647798742, 0.07420605806519233, 0.07419828128274995, 0.07419050613014776, 0.07418273260687343, 0.07417496071241488, 0.07416719044626022, 0.07415942180789777, 0.07415165479681608, 0.07414388941250392, 0.07413612565445026, 0.07412836352214427, 0.07412060301507538, 0.07411284413273317, 0.0741050868746075, 0.07409733124018839, 0.0740895772289661, 0.0740818248404311, 0.07407407407407407, 0.07406632492938592, 0.07405857740585774, 0.07405083150298086, 0.07404308722024681, 0.07403534455714735, 0.0740276035131744, 0.07401986408782017, 0.07401212628057705, 0.0740043900909376, 0.07399665551839466, 0.07398892256244122, 0.07398119122257053, 0.07397346149827604, 0.0739657333890514, 0.07395800689439047, 0.07395028201378734, 0.07394255874673629, 0.07393483709273183, 0.07392711705126867, 0.07391939862184171, 0.07391168180394614, 0.07390396659707725, 0.07389625300073062, 0.07388854101440201, 0.0738808306375874, 0.07387312186978297, 0.07386541471048513, 0.07385770915919049, 0.07385000521539585, 0.07384230287859825, 0.07383460214829492, 0.07382690302398331, 0.07381920550516109, 0.07381150959132611, 0.07380381528197644, 0.07379612257661038, 0.07378843147472643, 0.07378074197582327, 0.07377305407939981, 0.0737653677849552, 0.07375768309198875, 0.07375, 0.0737423185084887, 0.0737346386169548, 0.07372696032489846, 0.07371928363182008, 0.0737116085372202, 0.07370393504059962, 0.07369626314145936, 0.07368859283930058, 0.07368092413362473, 0.0736732570239334, 0.07366559150972844, 0.07365792759051186, 0.07365026526578591, 0.07364260453505304, 0.07363494539781591, 0.07362728785357738, 0.0736196319018405, 0.07361197754210855, 0.07360432477388502, 0.0735966735966736, 0.07358902400997817, 0.07358137601330285, 0.07357372960615192, 0.07356608478802992, 0.07355844155844156, 0.07355079991689176, 0.07354315986288563, 0.07353552139592855, 0.07352788451552601, 0.0735202492211838, 0.07351261551240786, 0.07350498338870431, 0.07349735284957958, 0.07348972389454017, 0.07348209652309289, 0.07347447073474471, 0.0734668465290028, 0.07345922390537456, 0.07345160286336756, 0.07344398340248963, 0.07343636552224873, 0.07342874922215308, 0.07342113450171109, 0.07341352136043136, 0.0734059097978227, 0.07339829981339416, 0.07339069140665491, 0.07338308457711443, 0.0733754793242823, 0.07336787564766839, 0.07336027354678272, 0.07335267302113552, 0.07334507407023723, 0.07333747669359851, 0.0733298808907302, 0.07332228666114333, 0.07331469400434917, 0.07330710291985919, 0.073299513407185, 0.07329192546583851, 0.07328433909533175, 0.07327675429517698, 0.07326917106488669, 0.07326158940397351, 0.07325400931195034, 0.07324643078833024, 0.07323885383262646, 0.07323127844435251, 0.07322370462302202, 0.07321613236814892, 0.07320856167924723, 0.07320099255583126, 0.07319342499741549, 0.07318585900351457, 0.07317829457364342, 0.07317073170731707, 0.07316317040405085, 0.0731556106633602, 0.07314805248476082, 0.07314049586776859, 0.0731329408118996, 0.07322867176203264, 0.07322110916038418, 0.07321354812061132, 0.07320598864223025, 0.07319843072475739, 0.0731908743677093, 0.07318331957060281, 0.0731757663329549, 0.07316821465428276, 0.0731606645341038, 0.07315311597193562, 0.07314556896729599, 0.0731380235197029, 0.07313047962867457, 0.07312293729372937, 0.0731153965143859, 0.07310785729016292, 0.07310031962057945, 0.07309278350515463, 0.0730852489434079, 0.07307771593485879, 0.0730701844790271, 0.07306265457543282, 0.07305512622359608, 0.07315062847723058, 0.07314309261357783, 0.07313555830243099, 0.07312802554331033, 0.07312049433573635, 0.07311296467922974, 0.07310543657331137, 0.07309791001750232, 0.07309038501132387, 0.07308286155429748, 0.07307533964594483, 0.07306781928578779, 0.07306030047334842, 0.07305278320814898, 0.07304526748971193, 0.07303775331755992, 0.0730302406912158, 0.07302272961020262, 0.07301522007404361, 0.07300771208226221, 0.07300020563438207, 0.072992700729927, 0.07298519736842106, 0.07297769554938843, 0.07297019527235354, 0.07296269653684102, 0.07295519934237567, 0.07294770368848248, 0.07294020957468667, 0.07293271700051361, 0.07292522596548891, 0.07291773646913834, 0.07291024851098789, 0.07290276209056372, 0.0728952772073922, 0.0728877938609999, 0.07288031205091357, 0.07287283177666017, 0.07286535303776683, 0.0728578758337609, 0.07285040016416991, 0.07284292602852159, 0.07283545342634387, 0.07282798235716484, 0.07282051282051281, 0.07281304481591631, 0.07280557834290402, 0.07279811340100482, 0.0727906499897478, 0.07278318810866223, 0.07277572775727757, 0.0727682689351235, 0.07276081164172986, 0.07275335587662671, 0.07274590163934426, 0.07273844892941297, 0.07273099774636345, 0.07272354808972652, 0.07271609995903318, 0.07270865335381464, 0.0727012082736023, 0.07279615030203747, 0.07278869778869779, 0.07278124680110554, 0.07277379733879222, 0.07276634940128952, 0.07275890298812934, 0.07275145809884376, 0.072744014732965, 0.07273657289002558, 0.0727291325695581, 0.07272169377109543, 0.07271425649417058, 0.0727068207383168, 0.07269938650306748, 0.07269195378795625, 0.07268452259251687, 0.07267709291628335, 0.07266966475878986, 0.07266223811957077, 0.07265481299816064, 0.07264738939409421, 0.07263996730690642, 0.0726325467361324, 0.07262512768130745, 0.0726177101419671, 0.07261029411764706, 0.07260287960788318, 0.07259546661221156, 0.07258805513016846, 0.07258064516129033, 0.07257323670511381, 0.07256582976117575, 0.07255842432901316, 0.07255102040816326, 0.07254361799816346, 0.07253621709855132, 0.07252881770886463, 0.07252141982864137, 0.07251402345741968, 0.07250662859473792, 0.0724992352401346, 0.07249184339314844, 0.07248445305331838, 0.07247706422018349, 0.07246967689328306, 0.07246229107215654, 0.07245490675634363, 0.07244752394538415, 0.07244014263881814, 0.07243276283618581, 0.0724253845370276, 0.0724180077408841, 0.07241063244729606, 0.07240325865580448, 0.07239588636595051, 0.0723885155772755, 0.07238114628932098, 0.07237377850162867, 0.07236641221374046, 0.07235904742519846, 0.07235168413554492, 0.07234432234432235, 0.07233696205107336, 0.0723296032553408, 0.07242396500864612, 0.07241659886086249, 0.0724092342113292, 0.07240187105958917, 0.07239450940518556, 0.07238714924766165, 0.07237979058656094, 0.07237243342142712, 0.07236507775180405, 0.07235772357723577, 0.07235037089726654, 0.07234301971144076, 0.07233567001930306, 0.07232832182039821, 0.0723209751142712, 0.07231362990046719, 0.07230628617853153, 0.07229894394800974, 0.07229160320844756, 0.07228426395939086, 0.07227692620038574, 0.07226958993097848, 0.07226225515071552, 0.07225492185914349, 0.07224759005580923, 0.07224025974025974, 0.0722329309120422, 0.072225603570704, 0.07221827771579267, 0.07221095334685598, 0.07220363046344185, 0.07229770837558305, 0.0723917672107878, 0.07248580697485807, 0.07247845919918905, 0.07247111291303467, 0.07246376811594203, 0.07245642480745845, 0.07244908298713142, 0.07244174265450862, 0.07243440380913788, 0.07242706645056726, 0.07241973057834498, 0.07241239619201945, 0.07240506329113924, 0.07239773187525314, 0.0723904019439101, 0.07238307349665925, 0.0723757465330499, 0.07236842105263158, 0.07236109705495396, 0.07235377453956689, 0.07234645350602044, 0.07233913395386483, 0.07233181588265047, 0.07232449929192798, 0.0723171841812481, 0.07230987055016182, 0.07230255839822025, 0.07229524772497473, 0.07228793852997675, 0.072280630812778, 0.07227332457293036, 0.07226601980998586, 0.07225871652349672, 0.07225141471301536, 0.07224411437809437, 0.07223681551828652, 0.07222951813314477, 0.07222222222222222, 0.07221492778507221, 0.07220763482124823, 0.07220034333030395, 0.07219305331179321, 0.07218576476527007, 0.07217847769028872, 0.07217119208640355, 0.07216390795316915, 0.07215662529014027, 0.07214934409687185, 0.07214206437291898, 0.07213478611783697, 0.07212750933118128, 0.07212023401250757, 0.07211296016137166, 0.07210568777732956, 0.07209841685993748, 0.07209114740875176, 0.07208387942332896, 0.07207661290322581, 0.07206934784799919, 0.07206208425720621, 0.07205482213040411, 0.07204756146715034, 0.07204030226700252, 0.07203304452951843, 0.07202578825425607, 0.07201853344077357, 0.07201128008862927, 0.07200402819738168, 0.07199677776658947, 0.07198952879581152, 0.07198228128460686, 0.07197503523253473, 0.07196779063915451, 0.07196054750402577, 0.07195330582670827, 0.07194606560676192, 0.07193882684374686, 0.07193158953722334, 0.07192435368675183, 0.07191711929189298, 0.07190988635220759, 0.07190265486725664, 0.0718954248366013, 0.07188819625980293, 0.07188096913642304, 0.07187374346602332, 0.07186651924816564, 0.07185929648241206, 0.07185207516832479, 0.07184485530546623, 0.07183763689339898, 0.07183041993168575, 0.0718232044198895, 0.07191643230212937, 0.07190920960128552, 0.07190198835107452, 0.07189476855105935, 0.07188755020080322, 0.0718803332998695, 0.07187311784782172, 0.07186590384422363, 0.0718586912886391, 0.07185148018063221, 0.0718442705197672, 0.0718370623056085, 0.07182985553772071, 0.07182265021566857, 0.07181544633901706, 0.07180824390733126, 0.0718010429201765, 0.07189411410809185, 0.07198716663324645, 0.07208020050125313, 0.07207297514033681, 0.072065751227824, 0.07205852876327921, 0.07205130774626715, 0.0720440881763527, 0.07203687005310089, 0.07202965337607693, 0.07202243814484624, 0.07201522435897435, 0.07200801201802703, 0.0720008011215702, 0.07199359166916992, 0.07198638366039248, 0.07197917709480428, 0.07207207207207207, 0.07206485837253528, 0.07205764611689351, 0.0720504353047133, 0.07204322593556134, 0.0720360180090045, 0.07202881152460984, 0.07202160648194458, 0.07211442288457691, 0.07210721072107211, 0.0721], [0.0, 0.5, 0.6666666666666666, 0.75, 0.6, 0.5, 0.42857142857142855, 0.5, 0.5555555555555556, 0.5, 0.45454545454545453, 0.4166666666666667, 0.38461538461538464, 0.35714285714285715, 0.3333333333333333, 0.375, 0.4117647058823529, 0.3888888888888889, 0.42105263157894735, 0.4, 0.38095238095238093, 0.36363636363636365, 0.34782608695652173, 0.3333333333333333, 0.32, 0.3076923076923077, 0.3333333333333333, 0.35714285714285715, 0.3448275862068966, 0.36666666666666664, 0.3870967741935484, 0.40625, 0.42424242424242425, 0.4411764705882353, 0.42857142857142855, 0.4444444444444444, 0.4594594594594595, 0.47368421052631576, 0.48717948717948717, 0.5, 0.5121951219512195, 0.5238095238095238, 0.5348837209302325, 0.5227272727272727, 0.5111111111111111, 0.5, 0.48936170212765956, 0.5, 0.4897959183673469, 0.48, 0.47058823529411764, 0.4807692307692308, 0.49056603773584906, 0.48148148148148145, 0.4727272727272727, 0.4642857142857143, 0.45614035087719296, 0.4482758620689655, 0.4406779661016949, 0.45, 0.4426229508196721, 0.43548387096774194, 0.42857142857142855, 0.421875, 0.4153846153846154, 0.4090909090909091, 0.417910447761194, 0.4264705882352941, 0.43478260869565216, 0.44285714285714284, 0.4507042253521127, 0.4583333333333333, 0.4657534246575342, 0.4594594594594595, 0.4533333333333333, 0.4473684210526316, 0.44155844155844154, 0.4358974358974359, 0.43037974683544306, 0.425, 0.41975308641975306, 0.4146341463414634, 0.42168674698795183, 0.42857142857142855, 0.43529411764705883, 0.4418604651162791, 0.4367816091954023, 0.4318181818181818, 0.42696629213483145, 0.4222222222222222, 0.4175824175824176, 0.41304347826086957, 0.40860215053763443, 0.40425531914893614, 0.4105263157894737, 0.40625, 0.4020618556701031, 0.3979591836734694, 0.3939393939393939, 0.39, 0.38613861386138615, 0.38235294117647056, 0.3786407766990291, 0.375, 0.37142857142857144, 0.36792452830188677, 0.3644859813084112, 0.3611111111111111, 0.3577981651376147, 0.35454545454545455, 0.35135135135135137, 0.3482142857142857, 0.35398230088495575, 0.35964912280701755, 0.3652173913043478, 0.3620689655172414, 0.358974358974359, 0.3559322033898305, 0.35294117647058826, 0.35, 0.34710743801652894, 0.3524590163934426, 0.35772357723577236, 0.3629032258064516, 0.368, 0.36507936507936506, 0.36220472440944884, 0.359375, 0.35658914728682173, 0.35384615384615387, 0.3511450381679389, 0.3484848484848485, 0.3533834586466165, 0.3582089552238806, 0.362962962962963, 0.3602941176470588, 0.36496350364963503, 0.36231884057971014, 0.3597122302158273, 0.35714285714285715, 0.3546099290780142, 0.352112676056338, 0.34965034965034963, 0.3472222222222222, 0.3448275862068966, 0.3424657534246575, 0.3401360544217687, 0.33783783783783783, 0.33557046979865773, 0.3333333333333333, 0.33112582781456956, 0.32894736842105265, 0.32679738562091504, 0.3246753246753247, 0.3225806451612903, 0.32051282051282054, 0.3184713375796178, 0.31645569620253167, 0.31446540880503143, 0.31875, 0.32298136645962733, 0.32098765432098764, 0.31901840490797545, 0.3170731707317073, 0.3151515151515151, 0.3132530120481928, 0.31137724550898205, 0.30952380952380953, 0.3136094674556213, 0.31176470588235294, 0.3157894736842105, 0.313953488372093, 0.3179190751445087, 0.3160919540229885, 0.3142857142857143, 0.3181818181818182, 0.3163841807909605, 0.3146067415730337, 0.3128491620111732, 0.3111111111111111, 0.30939226519337015, 0.3076923076923077, 0.30601092896174864, 0.30978260869565216, 0.31351351351351353, 0.3118279569892473, 0.31016042780748665, 0.30851063829787234, 0.30687830687830686, 0.30526315789473685, 0.3036649214659686, 0.3072916666666667, 0.31088082901554404, 0.31443298969072164, 0.3128205128205128, 0.3112244897959184, 0.3096446700507614, 0.30808080808080807, 0.3065326633165829, 0.305, 0.3034825870646766, 0.30198019801980197, 0.30049261083743845, 0.30392156862745096, 0.3024390243902439, 0.30097087378640774, 0.30434782608695654, 0.3076923076923077, 0.3062200956937799, 0.30952380952380953, 0.3127962085308057, 0.3113207547169811, 0.30985915492957744, 0.308411214953271, 0.3116279069767442, 0.3148148148148148, 0.31336405529953915, 0.3119266055045872, 0.3105022831050228, 0.3090909090909091, 0.3076923076923077, 0.3063063063063063, 0.30493273542600896, 0.30357142857142855, 0.3022222222222222, 0.3008849557522124, 0.29955947136563876, 0.2982456140350877, 0.29694323144104806, 0.2956521739130435, 0.2943722943722944, 0.29310344827586204, 0.2918454935622318, 0.2905982905982906, 0.28936170212765955, 0.288135593220339, 0.2869198312236287, 0.2857142857142857, 0.28870292887029286, 0.2916666666666667, 0.2946058091286307, 0.2975206611570248, 0.2962962962962963, 0.29508196721311475, 0.2938775510204082, 0.2926829268292683, 0.291497975708502, 0.2903225806451613, 0.2891566265060241, 0.288, 0.2868525896414343, 0.2857142857142857, 0.2845849802371542, 0.28346456692913385, 0.2823529411764706, 0.28125, 0.2801556420233463, 0.27906976744186046, 0.277992277992278, 0.27692307692307694, 0.27586206896551724, 0.2748091603053435, 0.2737642585551331, 0.2727272727272727, 0.27169811320754716, 0.2706766917293233, 0.2696629213483146, 0.26865671641791045, 0.26765799256505574, 0.26666666666666666, 0.2656826568265683, 0.2647058823529412, 0.26373626373626374, 0.26277372262773724, 0.26181818181818184, 0.2608695652173913, 0.259927797833935, 0.2589928057553957, 0.25806451612903225, 0.2571428571428571, 0.25622775800711745, 0.2553191489361702, 0.254416961130742, 0.2535211267605634, 0.25263157894736843, 0.2517482517482518, 0.2508710801393728, 0.25, 0.2491349480968858, 0.2482758620689655, 0.24742268041237114, 0.2465753424657534, 0.24573378839590443, 0.24489795918367346, 0.2440677966101695, 0.24324324324324326, 0.24242424242424243, 0.24161073825503357, 0.2408026755852843, 0.24, 0.23920265780730898, 0.23841059602649006, 0.2376237623762376, 0.23684210526315788, 0.2360655737704918, 0.23529411764705882, 0.23452768729641693, 0.23376623376623376, 0.23300970873786409, 0.23225806451612904, 0.2315112540192926, 0.23076923076923078, 0.23003194888178913, 0.22929936305732485, 0.22857142857142856, 0.22784810126582278, 0.22712933753943218, 0.22641509433962265, 0.22570532915360503, 0.225, 0.22429906542056074, 0.2236024844720497, 0.22291021671826625, 0.2222222222222222, 0.22153846153846155, 0.22392638036809817, 0.22324159021406728, 0.2225609756097561, 0.22188449848024316, 0.22121212121212122, 0.22054380664652568, 0.21987951807228914, 0.21921921921921922, 0.218562874251497, 0.21791044776119403, 0.21726190476190477, 0.2166172106824926, 0.21597633136094674, 0.2182890855457227, 0.21764705882352942, 0.21700879765395895, 0.21637426900584794, 0.21574344023323616, 0.2180232558139535, 0.21739130434782608, 0.21676300578034682, 0.21613832853025935, 0.21551724137931033, 0.2148997134670487, 0.21714285714285714, 0.21652421652421652, 0.2159090909090909, 0.21529745042492918, 0.21468926553672316, 0.2140845070422535, 0.21348314606741572, 0.21288515406162464, 0.2122905027932961, 0.2116991643454039, 0.2111111111111111, 0.21052631578947367, 0.20994475138121546, 0.209366391184573, 0.2087912087912088, 0.20821917808219179, 0.20765027322404372, 0.20708446866485014, 0.20652173913043478, 0.20596205962059622, 0.20540540540540542, 0.20485175202156333, 0.20430107526881722, 0.2037533512064343, 0.20320855614973263, 0.20266666666666666, 0.20212765957446807, 0.20159151193633953, 0.20105820105820105, 0.20052770448548812, 0.2, 0.1994750656167979, 0.19895287958115182, 0.19843342036553524, 0.19791666666666666, 0.2, 0.19948186528497408, 0.19896640826873385, 0.19845360824742267, 0.19794344473007713, 0.2, 0.2020460358056266, 0.20408163265306123, 0.20610687022900764, 0.20812182741116753, 0.20759493670886076, 0.20707070707070707, 0.20906801007556675, 0.21105527638190955, 0.21303258145363407, 0.215, 0.2169576059850374, 0.21890547263681592, 0.22084367245657568, 0.2202970297029703, 0.2222222222222222, 0.22167487684729065, 0.22113022113022113, 0.22058823529411764, 0.2200488997555012, 0.22195121951219512, 0.22384428223844283, 0.22330097087378642, 0.22276029055690072, 0.2222222222222222, 0.2216867469879518, 0.22115384615384615, 0.22062350119904076, 0.22009569377990432, 0.21957040572792363, 0.21904761904761905, 0.2209026128266033, 0.22274881516587677, 0.22458628841607564, 0.2240566037735849, 0.2235294117647059, 0.22300469483568075, 0.2224824355971897, 0.2219626168224299, 0.22144522144522144, 0.22093023255813954, 0.22041763341067286, 0.2199074074074074, 0.21939953810623555, 0.21889400921658986, 0.21839080459770116, 0.21788990825688073, 0.21739130434782608, 0.21689497716894976, 0.2164009111617312, 0.2159090909090909, 0.21541950113378686, 0.2149321266968326, 0.2144469525959368, 0.21396396396396397, 0.21348314606741572, 0.21300448430493274, 0.21476510067114093, 0.21651785714285715, 0.2182628062360802, 0.22, 0.21951219512195122, 0.21902654867256638, 0.2185430463576159, 0.22026431718061673, 0.22197802197802197, 0.22149122807017543, 0.2210065645514223, 0.2205240174672489, 0.22004357298474944, 0.21956521739130436, 0.21908893709327548, 0.21861471861471862, 0.21814254859611232, 0.21767241379310345, 0.2172043010752688, 0.2167381974248927, 0.21627408993576017, 0.21581196581196582, 0.21535181236673773, 0.2148936170212766, 0.21443736730360935, 0.21398305084745764, 0.2135306553911205, 0.21308016877637131, 0.21263157894736842, 0.21218487394957983, 0.21174004192872117, 0.2112970711297071, 0.21085594989561587, 0.21041666666666667, 0.20997920997921, 0.2095435684647303, 0.20910973084886128, 0.20867768595041322, 0.20824742268041238, 0.20781893004115226, 0.20739219712525667, 0.2069672131147541, 0.2065439672801636, 0.20612244897959184, 0.20570264765784113, 0.20528455284552846, 0.20486815415821502, 0.20445344129554655, 0.20404040404040405, 0.2056451612903226, 0.20724346076458752, 0.20682730923694778, 0.20641282565130262, 0.206, 0.2055888223552894, 0.2051792828685259, 0.2047713717693837, 0.20436507936507936, 0.20396039603960395, 0.20355731225296442, 0.20315581854043394, 0.20275590551181102, 0.20235756385068762, 0.2019607843137255, 0.20156555772994128, 0.201171875, 0.20272904483430798, 0.20428015564202334, 0.2058252427184466, 0.20736434108527133, 0.20696324951644102, 0.20656370656370657, 0.20616570327552985, 0.2076923076923077, 0.2092130518234165, 0.20881226053639848, 0.2084130019120459, 0.2099236641221374, 0.21142857142857144, 0.21102661596958175, 0.21062618595825428, 0.21212121212121213, 0.21361058601134217, 0.21509433962264152, 0.21657250470809794, 0.2161654135338346, 0.21575984990619138, 0.2153558052434457, 0.21495327102803738, 0.21455223880597016, 0.21415270018621974, 0.2137546468401487, 0.21335807050092764, 0.21296296296296297, 0.21256931608133087, 0.21217712177121772, 0.21178637200736647, 0.2113970588235294, 0.21100917431192662, 0.21062271062271062, 0.21023765996343693, 0.20985401459854014, 0.20947176684881602, 0.20909090909090908, 0.20871143375680581, 0.20833333333333334, 0.20795660036166366, 0.2075812274368231, 0.2072072072072072, 0.2068345323741007, 0.20646319569120286, 0.2060931899641577, 0.2075134168157424, 0.20892857142857144, 0.2103386809269162, 0.2099644128113879, 0.20959147424511546, 0.20921985815602837, 0.2088495575221239, 0.20848056537102475, 0.20811287477954143, 0.20774647887323944, 0.20738137082601055, 0.20701754385964913, 0.20665499124343256, 0.2062937062937063, 0.20593368237347295, 0.20557491289198607, 0.20521739130434782, 0.2048611111111111, 0.20623916811091855, 0.20588235294117646, 0.20552677029360966, 0.20517241379310344, 0.20481927710843373, 0.20446735395189003, 0.20411663807890223, 0.20376712328767124, 0.20341880341880342, 0.2030716723549488, 0.20272572402044292, 0.20238095238095238, 0.20203735144312393, 0.2016949152542373, 0.20135363790186125, 0.20101351351351351, 0.20067453625632378, 0.20033670033670034, 0.2, 0.19966442953020133, 0.19932998324958123, 0.19899665551839466, 0.1986644407345576, 0.19833333333333333, 0.19800332778702162, 0.19767441860465115, 0.19900497512437812, 0.1986754966887417, 0.2, 0.20132013201320131, 0.20098846787479407, 0.20065789473684212, 0.20032840722495895, 0.2, 0.19967266775777415, 0.19934640522875818, 0.19902120717781402, 0.1986970684039088, 0.1983739837398374, 0.19805194805194806, 0.19773095623987033, 0.19741100323624594, 0.19709208400646203, 0.1967741935483871, 0.1964573268921095, 0.19614147909967847, 0.19743178170144463, 0.1987179487179487, 0.2, 0.19968051118210864, 0.19936204146730463, 0.19904458598726116, 0.1987281399046105, 0.1984126984126984, 0.19809825673534073, 0.19778481012658228, 0.19747235387045814, 0.1971608832807571, 0.1984251968503937, 0.19968553459119498, 0.20094191522762953, 0.2006269592476489, 0.20031298904538342, 0.2, 0.1996879875195008, 0.19937694704049844, 0.2006220839813375, 0.20031055900621117, 0.2, 0.1996904024767802, 0.19938176197836166, 0.19907407407407407, 0.1987673343605547, 0.19846153846153847, 0.19815668202764977, 0.19785276073619631, 0.19754977029096477, 0.19724770642201836, 0.1969465648854962, 0.19664634146341464, 0.1963470319634703, 0.196048632218845, 0.19575113808801214, 0.19545454545454546, 0.1951588502269289, 0.19486404833836857, 0.19457013574660634, 0.19578313253012047, 0.19699248120300752, 0.1981981981981982, 0.19790104947526238, 0.19910179640718562, 0.20029895366218237, 0.20149253731343283, 0.20119225037257824, 0.20089285714285715, 0.20059435364041606, 0.20029673590504452, 0.2, 0.1997041420118343, 0.19940915805022155, 0.19911504424778761, 0.19882179675994108, 0.2, 0.2011747430249633, 0.20234604105571846, 0.2020497803806735, 0.20175438596491227, 0.20145985401459854, 0.20116618075801748, 0.20087336244541484, 0.2005813953488372, 0.20029027576197386, 0.2, 0.19971056439942114, 0.1994219653179191, 0.19913419913419914, 0.1988472622478386, 0.1985611510791367, 0.19827586206896552, 0.1994261119081779, 0.20057306590257878, 0.2017167381974249, 0.20285714285714285, 0.20399429386590584, 0.2037037037037037, 0.2034139402560455, 0.203125, 0.2028368794326241, 0.20396600566572237, 0.2050919377652051, 0.2062146892655367, 0.2073342736248237, 0.20704225352112676, 0.20675105485232068, 0.20646067415730338, 0.2061711079943899, 0.20588235294117646, 0.2055944055944056, 0.2053072625698324, 0.20502092050209206, 0.20473537604456823, 0.20445062586926285, 0.20416666666666666, 0.20388349514563106, 0.203601108033241, 0.2033195020746888, 0.20303867403314918, 0.20413793103448277, 0.20523415977961432, 0.20495185694635487, 0.20467032967032966, 0.20438957475994513, 0.20410958904109588, 0.20383036935704515, 0.20355191256830601, 0.20327421555252387, 0.20299727520435967, 0.20272108843537415, 0.20244565217391305, 0.2021709633649932, 0.2018970189701897, 0.20162381596752368, 0.20135135135135135, 0.20107962213225372, 0.20080862533692723, 0.2018842530282638, 0.20295698924731181, 0.2040268456375839, 0.2037533512064343, 0.2034805890227577, 0.20320855614973263, 0.20293724966622162, 0.20266666666666666, 0.20239680426098536, 0.20212765957446807, 0.20185922974767595, 0.20159151193633953, 0.20264900662251656, 0.2037037037037037, 0.2047556142668428, 0.20448548812664907, 0.20421607378129117, 0.20394736842105263, 0.20367936925098554, 0.20341207349081364, 0.20314547837483618, 0.20287958115183247, 0.20261437908496732, 0.20234986945169714, 0.20208604954367665, 0.20182291666666666, 0.20156046814044212, 0.2012987012987013, 0.20103761348897536, 0.20077720207253885, 0.20051746442432083, 0.20025839793281655, 0.2, 0.19974226804123713, 0.1994851994851995, 0.19922879177377892, 0.19897304236200256, 0.1987179487179487, 0.19846350832266324, 0.19948849104859334, 0.20051085568326948, 0.2002551020408163, 0.20127388535031848, 0.2010178117048346, 0.20076238881829733, 0.2017766497461929, 0.20152091254752852, 0.20126582278481012, 0.20101137800252844, 0.20075757575757575, 0.2005044136191677, 0.20025188916876574, 0.2, 0.20100502512562815, 0.20075282308657466, 0.20050125313283207, 0.2002503128911139, 0.2, 0.19975031210986266, 0.19950124688279303, 0.199252801992528, 0.20024875621890548, 0.20124223602484473, 0.2022332506203474, 0.20198265179677818, 0.20173267326732675, 0.2027194066749073, 0.20246913580246914, 0.20221948212083848, 0.2019704433497537, 0.2017220172201722, 0.20147420147420148, 0.20122699386503068, 0.20098039215686275, 0.200734394124847, 0.20048899755501223, 0.20146520146520147, 0.20121951219512196, 0.20219244823386115, 0.20194647201946472, 0.20170109356014582, 0.20145631067961164, 0.2012121212121212, 0.2009685230024213, 0.2007255139056832, 0.20169082125603865, 0.2014475271411339, 0.20120481927710843, 0.2009626955475331, 0.20072115384615385, 0.20048019207683074, 0.20023980815347722, 0.2, 0.19976076555023922, 0.19952210274790919, 0.19928400954653938, 0.19904648390941598, 0.1988095238095238, 0.1985731272294887, 0.19833729216152018, 0.1981020166073547, 0.19786729857819904, 0.19881656804733727, 0.19858156028368795, 0.19834710743801653, 0.19811320754716982, 0.1978798586572438, 0.1976470588235294, 0.19741480611045828, 0.19718309859154928, 0.1981242672919109, 0.19789227166276346, 0.1976608187134503, 0.19742990654205608, 0.1971995332555426, 0.19696969696969696, 0.19674039580908032, 0.19651162790697674, 0.19628339140534262, 0.19605568445475638, 0.19582850521436848, 0.19560185185185186, 0.19537572254335261, 0.1951501154734411, 0.19492502883506344, 0.19470046082949308, 0.19447640966628307, 0.19425287356321838, 0.19517795637198623, 0.19495412844036697, 0.19473081328751432, 0.1945080091533181, 0.19428571428571428, 0.19406392694063926, 0.1949828962371722, 0.1947608200455581, 0.1945392491467577, 0.1943181818181818, 0.19409761634506242, 0.19387755102040816, 0.19365798414496035, 0.19343891402714933, 0.19322033898305085, 0.1930022573363431, 0.1927846674182638, 0.19256756756756757, 0.1923509561304837, 0.19213483146067414, 0.1919191919191919, 0.19170403587443946, 0.19260918253079506, 0.19239373601789708, 0.19217877094972066, 0.19196428571428573, 0.19175027870680045, 0.19265033407572382, 0.1935483870967742, 0.19333333333333333, 0.19311875693673697, 0.19290465631929046, 0.1937984496124031, 0.19358407079646017, 0.19337016574585636, 0.19315673289183222, 0.19294377067254687, 0.19273127753303965, 0.1925192519251925, 0.1934065934065934, 0.19319429198682767, 0.19298245614035087, 0.1927710843373494, 0.1936542669584245, 0.19344262295081968, 0.19323144104803494, 0.1941112322791712, 0.19389978213507625, 0.19477693144722524, 0.19456521739130433, 0.19435396308360478, 0.19414316702819956, 0.19393282773564463, 0.1937229437229437, 0.1935135135135135, 0.19330453563714903, 0.1941747572815534, 0.19504310344827586, 0.19483315392895587, 0.19462365591397848, 0.19441460794844254, 0.194206008583691, 0.1939978563772776, 0.1937901498929336, 0.19358288770053475, 0.19337606837606838, 0.19316969050160085, 0.1929637526652452, 0.19275825346112885, 0.1925531914893617, 0.19234856535600425, 0.1932059447983015, 0.19406150583244963, 0.19385593220338984, 0.19365079365079366, 0.193446088794926, 0.19429778247096094, 0.1940928270042194, 0.19494204425711276, 0.19473684210526315, 0.19558359621451105, 0.1953781512605042, 0.19622245540398742, 0.1960167714884696, 0.19581151832460733, 0.19560669456066945, 0.19540229885057472, 0.19624217118997914, 0.19708029197080293, 0.19791666666666666, 0.19771071800208118, 0.19750519750519752, 0.19730010384215993, 0.1970954356846473, 0.19689119170984457, 0.19668737060041408, 0.19648397104446744, 0.1962809917355372, 0.19607843137254902, 0.1958762886597938, 0.1956745623069001, 0.19547325102880658, 0.19527235354573483, 0.19507186858316222, 0.19487179487179487, 0.19467213114754098, 0.19447287615148415, 0.19427402862985685, 0.1940755873340143, 0.19387755102040816, 0.19367991845056065, 0.1934826883910387, 0.19328585961342828, 0.19308943089430894, 0.19289340101522842, 0.1926977687626775, 0.19250253292806485, 0.19230769230769232, 0.19211324570273003, 0.1919191919191919, 0.1917255297679112, 0.19153225806451613, 0.19133937562940584, 0.19114688128772636, 0.19095477386934673, 0.19076305220883535, 0.1905717151454363, 0.1903807615230461, 0.19019019019019018, 0.19, 0.18981018981018982, 0.18962075848303392, 0.18943170488534397, 0.1892430278884462, 0.1890547263681592, 0.18886679920477137, 0.18867924528301888, 0.1884920634920635, 0.18830525272547077, 0.18811881188118812, 0.18892185954500496, 0.18873517786561264, 0.1885488647581441, 0.1883629191321499, 0.18817733990147784, 0.18799212598425197, 0.18780727630285152, 0.18762278978389, 0.1874386653581943, 0.18725490196078431, 0.188050930460333, 0.18786692759295498, 0.187683284457478, 0.1875, 0.1873170731707317, 0.1871345029239766, 0.186952288218111, 0.1867704280155642, 0.18658892128279883, 0.18640776699029127, 0.18622696411251213, 0.187015503875969, 0.1868344627299129, 0.18665377176015474, 0.18743961352657004, 0.18822393822393824, 0.1880424300867888, 0.18786127167630057, 0.18864292589027912, 0.18846153846153846, 0.18924111431316043, 0.19001919385796545, 0.19079578139980824, 0.19157088122605365, 0.19138755980861244, 0.19120458891013384, 0.19102196752626552, 0.19083969465648856, 0.19065776930409914, 0.19047619047619047, 0.19029495718363462, 0.19011406844106463, 0.1899335232668566, 0.18975332068311196, 0.1895734597156398, 0.1893939393939394, 0.1892147587511826, 0.1899810964083176, 0.1907459867799811, 0.19056603773584907, 0.19132893496701225, 0.192090395480226, 0.19190968955785512, 0.19172932330827067, 0.19154929577464788, 0.19136960600375236, 0.19212746016869728, 0.19194756554307116, 0.19176800748362957, 0.19158878504672897, 0.19234360410831, 0.1921641791044776, 0.19198508853681268, 0.19180633147113593, 0.19162790697674417, 0.19144981412639406, 0.19127205199628597, 0.19109461966604824, 0.19091751621872105, 0.19074074074074074, 0.19056429232192415, 0.19038817005545286, 0.19113573407202217, 0.19095940959409594, 0.19078341013824884, 0.19152854511970535, 0.1922723091076357, 0.19209558823529413, 0.1919191919191919, 0.19174311926605506, 0.1915673693858845, 0.19139194139194138, 0.19121683440073192, 0.19195612431444242, 0.1917808219178082, 0.19160583941605838, 0.19143117593436645, 0.1912568306010929, 0.19199272065514103, 0.19272727272727272, 0.19346049046321526, 0.19419237749546278, 0.19492293744333636, 0.1947463768115942, 0.19457013574660634, 0.19439421338155516, 0.1942186088527552, 0.194043321299639, 0.19386834986474302, 0.19369369369369369, 0.1935193519351935, 0.19334532374100719, 0.1931716082659479, 0.19299820466786355, 0.19282511210762332, 0.19265232974910393, 0.19337511190689347, 0.19409660107334525, 0.193923145665773, 0.19375, 0.1935771632471008, 0.19340463458110516, 0.19323241317898487, 0.19306049822064056, 0.1928888888888889, 0.19271758436944939, 0.19343389529724933, 0.19326241134751773, 0.19309123117803365, 0.1929203539823009, 0.1927497789566755, 0.19257950530035337, 0.19240953221535745, 0.19223985890652556, 0.1920704845814978, 0.19190140845070422, 0.1917326297273527, 0.19244288224956063, 0.1922739244951712, 0.19210526315789472, 0.19193689745836984, 0.19176882661996497, 0.19160104986876642, 0.19143356643356643, 0.19126637554585152, 0.19109947643979058, 0.1909328683522232, 0.19076655052264807, 0.1906005221932115, 0.19043478260869565, 0.1902693310165074, 0.19010416666666666, 0.1899392888117953, 0.18977469670710573, 0.18961038961038962, 0.1894463667820069, 0.18928262748487468, 0.18911917098445596, 0.18895599654874892, 0.18879310344827585, 0.18863049095607234, 0.1884681583476764, 0.1883061049011178, 0.18814432989690721, 0.18798283261802576, 0.18782161234991424, 0.18766066838046272, 0.18835616438356165, 0.1881950384944397, 0.18888888888888888, 0.1887275832621691, 0.1885665529010239, 0.18840579710144928, 0.18824531516183987, 0.18808510638297873, 0.1879251700680272, 0.18776550552251486, 0.18760611205432937, 0.18744698897370654, 0.188135593220339, 0.18882303132938189, 0.188663282571912, 0.1893491124260355, 0.19003378378378377, 0.189873417721519, 0.1905564924114671, 0.19039595619208088, 0.19023569023569023, 0.1900756938603869, 0.1899159663865546, 0.1897565071368598, 0.18959731543624161, 0.19027661357921208, 0.19095477386934673, 0.1916317991631799, 0.19230769230769232, 0.19298245614035087, 0.19365609348914858, 0.19432860717264386, 0.19416666666666665, 0.19400499583680267, 0.19384359400998336, 0.1936824605153782, 0.19352159468438537, 0.1933609958506224, 0.1932006633499171, 0.19304059652029826, 0.19288079470198677, 0.1935483870967742, 0.1933884297520661, 0.19322873658133774, 0.19306930693069307, 0.19291014014839242, 0.1927512355848435, 0.1934156378600823, 0.19407894736842105, 0.19391947411668037, 0.19376026272577998, 0.1944216570959803, 0.1942622950819672, 0.1941031941031941, 0.1939443535188216, 0.1946034341782502, 0.19444444444444445, 0.19428571428571428, 0.19494290375203915, 0.1947840260798696, 0.19462540716612378, 0.19446704637917006, 0.1951219512195122, 0.19496344435418358, 0.1956168831168831, 0.19626926196269262, 0.19611021069692058, 0.19595141700404858, 0.19579288025889968, 0.19563459983831852, 0.19547657512116318, 0.19531880548829703, 0.19516129032258064, 0.19500402900886382, 0.19484702093397746, 0.19469026548672566, 0.1945337620578778, 0.19518072289156627, 0.19502407704654895, 0.19486768243785085, 0.19471153846153846, 0.1953562850280224, 0.196, 0.19664268585131894, 0.19728434504792333, 0.1971268954509178, 0.19696969696969696, 0.19681274900398407, 0.19665605095541402, 0.19649960222752585, 0.19634340222575516, 0.19618745035742652, 0.19603174603174603, 0.1958762886597938, 0.196513470681458, 0.19635787806809185, 0.1962025316455696, 0.19604743083003953, 0.19589257503949448, 0.1957379636937648, 0.19558359621451105, 0.1954294720252167, 0.1952755905511811, 0.1951219512195122, 0.1949685534591195, 0.194815396700707, 0.1946624803767661, 0.19450980392156864, 0.19435736677115986, 0.1942051683633516, 0.19405320813771518, 0.19390148553557468, 0.19375, 0.19359875097580015, 0.1934477379095164, 0.19329696024941542, 0.19314641744548286, 0.19299610894941635, 0.19284603421461896, 0.1926961926961927, 0.19332298136645962, 0.19317300232738557, 0.1930232558139535, 0.19364833462432224, 0.19349845201238391, 0.19334880123743234, 0.19319938176197837, 0.19305019305019305, 0.19290123456790123, 0.19275250578257516, 0.1933744221879815, 0.19399538106235567, 0.1946153846153846, 0.19523443504996157, 0.195852534562212, 0.19570222563315426, 0.1955521472392638, 0.19540229885057472, 0.19525267993874426, 0.19510328997704668, 0.19495412844036697, 0.19480519480519481, 0.1946564885496183, 0.1945080091533181, 0.19435975609756098, 0.19421172886519422, 0.19406392694063926, 0.19391634980988592, 0.19376899696048633, 0.19362186788154898, 0.19347496206373294, 0.19332827899924185, 0.19318181818181818, 0.19303557910673733, 0.1928895612708018, 0.1927437641723356, 0.19259818731117825, 0.19245283018867926, 0.19230769230769232, 0.19216277317256972, 0.19201807228915663, 0.19187358916478556, 0.19172932330827067, 0.19158527422990232, 0.19144144144144143, 0.19129782445611404, 0.191904047976012, 0.19250936329588014, 0.19311377245508982, 0.19296933433059088, 0.19282511210762332, 0.19268110530246452, 0.1925373134328358, 0.19239373601789708, 0.19225037257824143, 0.1921072226358898, 0.19196428571428573, 0.19182156133828995, 0.19167904903417535, 0.1915367483296214, 0.1913946587537092, 0.19125277983691624, 0.19111111111111112, 0.19096965210954847, 0.1908284023668639, 0.19068736141906872, 0.19054652880354506, 0.1904059040590406, 0.19100294985250738, 0.1915991156963891, 0.19219440353460973, 0.1927888153053716, 0.19338235294117648, 0.19397501836884642, 0.1945668135095448, 0.19515774027879676, 0.19501466275659823, 0.19487179487179487, 0.19472913616398244, 0.19458668617410388, 0.19444444444444445, 0.19430241051862673, 0.19416058394160585, 0.19401896425966447, 0.19387755102040816, 0.1937363437727604, 0.19359534206695778, 0.19345454545454546, 0.1933139534883721, 0.19317356572258534, 0.193033381712627, 0.19289340101522842, 0.1927536231884058, 0.19261404779145547, 0.19247467438494936, 0.19233550253073028, 0.19219653179190752, 0.192057761732852, 0.1919191919191919, 0.1917808219178082, 0.19164265129682997, 0.19150467962562995, 0.19136690647482013, 0.19122933141624732, 0.1910919540229885, 0.19095477386934673, 0.1908177905308465, 0.1906810035842294, 0.19054441260744986, 0.19040801717967074, 0.19027181688125894, 0.19013581129378126, 0.19, 0.18986438258386867, 0.18972895863052783, 0.1895937277263008, 0.18945868945868946, 0.1893238434163701, 0.1891891891891892, 0.1890547263681592, 0.18892045454545456, 0.18878637331440737, 0.18865248226950354, 0.18851878100637845, 0.18909348441926346, 0.18966737438075018, 0.19024045261669023, 0.19010600706713782, 0.1906779661016949, 0.19054340155257588, 0.19040902679830748, 0.19027484143763213, 0.1908450704225352, 0.19141449683321604, 0.19127988748241911, 0.19184820801124386, 0.19171348314606743, 0.19157894736842104, 0.19144460028050492, 0.1913104414856342, 0.19117647058823528, 0.19104268719384185, 0.19090909090909092, 0.1914744933612858, 0.19134078212290503, 0.19120725750174458, 0.1910739191073919, 0.19094076655052264, 0.19080779944289694, 0.1906750173973556, 0.1905424200278164, 0.1911049339819319, 0.1909722222222222, 0.19083969465648856, 0.19070735090152566, 0.19057519057519057, 0.1904432132963989, 0.1903114186851211, 0.19017980636237897, 0.19004837595024188, 0.1899171270718232, 0.18978605935127674, 0.1896551724137931, 0.18952446588559613, 0.1893939393939394, 0.18926359256710254, 0.1891334250343879, 0.18969072164948453, 0.19024725274725274, 0.19011667810569663, 0.1906721536351166, 0.1912268677176148, 0.1917808219178082, 0.19164955509924708, 0.19151846785225718, 0.19138755980861244, 0.1919398907103825, 0.1924914675767918, 0.19236016371077763, 0.1929107021131561, 0.19346049046321526, 0.1933287950987066, 0.19387755102040816, 0.1937457511896669, 0.19361413043478262, 0.1934826883910387, 0.19335142469470828, 0.19322033898305085, 0.19308943089430894, 0.1929587000677048, 0.19350473612990526, 0.1940500338066261, 0.1939189189189189, 0.1937879810938555, 0.19365721997300944, 0.1935266351989211, 0.19339622641509435, 0.19326599326599325, 0.19313593539703902, 0.1936785474108944, 0.19422043010752688, 0.19476158495634655, 0.19463087248322147, 0.19450033534540576, 0.19436997319034852, 0.1942397856664434, 0.19410977242302543, 0.1939799331103679, 0.19385026737967914, 0.19372077488309952, 0.19359145527369825, 0.1934623082054703, 0.19333333333333333, 0.1932045303131246, 0.19307589880159787, 0.19294743845642048, 0.19281914893617022, 0.19269102990033224, 0.19256308100929614, 0.192435301924353, 0.19230769230769232, 0.19218025182239895, 0.19205298013245034, 0.19192587690271343, 0.1917989417989418, 0.19167217448777263, 0.19154557463672392, 0.19141914191419143, 0.19129287598944592, 0.1911667765326302, 0.19104084321475626, 0.19091507570770244, 0.19078947368421054, 0.19066403681788296, 0.19053876478318002, 0.19041365725541695, 0.19028871391076116, 0.1901639344262295, 0.19003931847968544, 0.1899148657498363, 0.18979057591623036, 0.18966644865925442, 0.1895424836601307, 0.18941868060091444, 0.18929503916449086, 0.18917155903457272, 0.18904823989569752, 0.18892508143322476, 0.18880208333333334, 0.18867924528301888, 0.18855656697009102, 0.18843404808317088, 0.18831168831168832, 0.18818948734587929, 0.1880674448767834, 0.1879455605962411, 0.1878238341968912, 0.18770226537216828, 0.18758085381630013, 0.1874595992243051, 0.18733850129198967, 0.18721755971594578, 0.1870967741935484, 0.18697614442295293, 0.18685567010309279, 0.18673535093367674, 0.1866151866151866, 0.1864951768488746, 0.18637532133676094, 0.18625561978163135, 0.18613607188703465, 0.1860166773572803, 0.1858974358974359, 0.18577834721332478, 0.1856594110115237, 0.1855406269993602, 0.18542199488491048, 0.1853035143769968, 0.18518518518518517, 0.18570516911295468, 0.18622448979591838, 0.18674314850223073, 0.18662420382165604, 0.18650541056651815, 0.18702290076335878, 0.18690400508582328, 0.18742058449809404, 0.18793650793650793, 0.18781725888324874, 0.1876981610653139, 0.18757921419518378, 0.18746041798606713, 0.18734177215189873, 0.18722327640733713, 0.1877370417193426, 0.18825015792798483, 0.18876262626262627, 0.1892744479495268, 0.18978562421185372, 0.18966603654694392, 0.18954659949622166, 0.1894273127753304, 0.18930817610062894, 0.1891891891891892, 0.18907035175879397, 0.18895166352793472, 0.18883312421580928, 0.18871473354231974, 0.18859649122807018, 0.18847839699436444, 0.188360450563204, 0.1882426516572858, 0.18875, 0.18863210493441598, 0.18851435705368288, 0.1883967560823456, 0.1882793017456359, 0.1881619937694704, 0.18804483188044832, 0.1879278158058494, 0.1884328358208955, 0.18831572405220634, 0.18819875776397516, 0.18808193668528864, 0.1879652605459057, 0.18784872907625544, 0.18773234200743494, 0.18761609907120744, 0.1875, 0.18738404452690166, 0.18726823238566132, 0.1871525633106856, 0.18703703703703703, 0.18692165330043184, 0.18680641183723798, 0.1866913123844732, 0.18657635467980296, 0.18707692307692309, 0.1875768757687577, 0.1874615857406269, 0.18734643734643736, 0.18723143032535297, 0.18711656441717792, 0.18700183936235437, 0.1868872549019608, 0.18677281077770974, 0.18665850673194614, 0.18654434250764526, 0.18643031784841077, 0.18631643249847282, 0.1862026862026862, 0.18608907870652838, 0.18597560975609756, 0.1858622790981109, 0.18574908647990257, 0.1856360316494218, 0.18552311435523114, 0.18541033434650456, 0.1852976913730255, 0.18518518518518517, 0.18507281553398058, 0.18496058217101274, 0.18484848484848485, 0.18473652331920049, 0.18462469733656175, 0.18451300665456746, 0.18440145102781136, 0.18489425981873112, 0.18478260869565216, 0.18467109233554616, 0.18516284680337755, 0.18565400843881857, 0.186144578313253, 0.18663455749548466, 0.1865222623345367, 0.18641010222489476, 0.18629807692307693, 0.18618618618618618, 0.18607442977190877, 0.1859628074385123, 0.18585131894484413, 0.18573996405032953, 0.18562874251497005, 0.1855176540993417, 0.1854066985645933, 0.1852958756724447, 0.18518518518518517, 0.18507462686567164, 0.18496420047732698, 0.18485390578413835, 0.18474374255065554, 0.18463371054198927, 0.18452380952380953, 0.18441403926234384, 0.18430439952437574, 0.18419489007724302, 0.1846793349168646, 0.18456973293768547, 0.18505338078291814, 0.18553645524599882, 0.1854265402843602, 0.1853167554766134, 0.18579881656804734, 0.1862803075103489, 0.1867612293144208, 0.18724158298877733, 0.1871310507674144, 0.18702064896755163, 0.18691037735849056, 0.18680023571007662, 0.18669022379269729, 0.18658034137728075, 0.18705882352941178, 0.18753674309229865, 0.18801410105757932, 0.18790369935408102, 0.18779342723004694, 0.187683284457478, 0.18815943728018758, 0.18863503222026948, 0.18911007025761123, 0.1889994148624927, 0.18947368421052632, 0.18936294564582115, 0.18925233644859812, 0.18914185639229422, 0.18903150525087514, 0.18892128279883383, 0.1888111888111888, 0.18928363424577752, 0.18917345750873107, 0.18906340895869692, 0.18895348837209303, 0.18884369552585706, 0.18873403019744484, 0.1886244921648288, 0.18851508120649652, 0.18840579710144928, 0.18887601390498263, 0.1887666473653735, 0.1892361111111111, 0.18912666281087334, 0.18901734104046242, 0.18890814558058924, 0.18879907621247113, 0.18869013271783036, 0.18915801614763553, 0.18962536023054755, 0.19009216589861752, 0.19055843408175013, 0.1904487917146145, 0.19033927544565843, 0.19022988505747127, 0.19069500287191268, 0.19115958668197475, 0.19162363740676994, 0.19208715596330275, 0.19197707736389685, 0.1918671248568156, 0.19175729822552948, 0.19164759725400457, 0.19153802172670098, 0.19142857142857142, 0.19131924614505996, 0.19121004566210045, 0.19110096976611524, 0.19156214367160776, 0.19145299145299147, 0.19134396355353075, 0.19123505976095617, 0.19112627986348124, 0.19101762364980102, 0.19090909090909092, 0.19080068143100512, 0.19069239500567536, 0.1905842314237096, 0.19047619047619047, 0.19036827195467423, 0.19026047565118911, 0.19015280135823429, 0.19061085972850678, 0.19106840022611646, 0.19152542372881357, 0.1919819311123659, 0.19243792325056433, 0.19289340101522842, 0.1927846674182638, 0.19267605633802817, 0.19256756756756757, 0.19245920090039392, 0.1923509561304837, 0.19224283305227655, 0.19213483146067414, 0.19202695115103874, 0.1919191919191919, 0.19181155356141336, 0.19170403587443946, 0.1915966386554622, 0.19148936170212766, 0.19138220481253498, 0.191834451901566, 0.19228619340413639, 0.19273743016759776, 0.19318816303740927, 0.19363839285714285, 0.1935303959843837, 0.1939799331103679, 0.1944289693593315, 0.19487750556792874, 0.19476905954368393, 0.1946607341490545, 0.19455252918287938, 0.19444444444444445, 0.1943364797334814, 0.19422863485016648, 0.19412090959511924, 0.19401330376940132, 0.19390581717451524, 0.19435215946843853, 0.19424460431654678, 0.19413716814159293, 0.19458264234383638, 0.19502762430939227, 0.195472114853672, 0.19536423841059603, 0.19525648097076667, 0.19570011025358325, 0.19614325068870522, 0.19658590308370044, 0.19702806824435884, 0.19746974697469746, 0.19791094007696536, 0.19835164835164834, 0.19824272377814386, 0.19813391877058179, 0.19802523313219966, 0.19791666666666666, 0.1978082191780822, 0.1976998904709748, 0.19759168035030103, 0.1974835886214442, 0.19737561509021323, 0.19726775956284154, 0.1971600218459858, 0.19759825327510916, 0.19749045280960176, 0.19792802617230099, 0.1983651226158038, 0.19880174291938998, 0.19923788786064237, 0.19967355821545157, 0.19956498096791733, 0.19945652173913042, 0.19934818033677348, 0.1992399565689468, 0.19913185024416713, 0.19902386117136658, 0.1989159891598916, 0.19880823401950162, 0.19924201407688144, 0.19967532467532467, 0.1995673336938886, 0.2, 0.20043219881145327, 0.20032397408207345, 0.20021586616297896, 0.20064724919093851, 0.20053908355795147, 0.20043103448275862, 0.20032310177705978, 0.20021528525296017, 0.20010758472296933, 0.2, 0.199892530897367, 0.20032223415682063, 0.20021470746108427, 0.20010729613733905, 0.2005361930294906, 0.20042872454448016, 0.2003213711837172, 0.20021413276231265, 0.20010700909577314, 0.2, 0.1998931052912881, 0.1997863247863248, 0.200213561131874, 0.2006403415154749, 0.20106666666666667, 0.20149253731343283, 0.20191795418220565, 0.2018104366347178, 0.2017030335284726, 0.20159574468085106, 0.20148856990962255, 0.2013815090329437, 0.2012745618693574, 0.20116772823779194, 0.20106100795755968, 0.2009544008483563, 0.20084790673025968, 0.2007415254237288, 0.20063525674960297, 0.20105820105820105, 0.20095187731359068, 0.20084566596194503, 0.20073956682514527, 0.2006335797254488, 0.20052770448548812, 0.20042194092827004, 0.20031628887717448, 0.20021074815595363, 0.2001053185887309, 0.2, 0.1998947922146239, 0.19978969505783387, 0.19968470835522859, 0.19957983193277312, 0.1994750656167979, 0.1993704092339979, 0.19926586261143156, 0.19916142557651992, 0.19905709795704557, 0.19895287958115182, 0.1988487702773417, 0.19874476987447698, 0.1986408782017773, 0.19905956112852666, 0.19947780678851174, 0.19989561586638832, 0.19979134063641105, 0.20020855057351408, 0.2006253256904638, 0.20104166666666667, 0.20145757418011453, 0.20135275754422477, 0.20124804992199688, 0.20114345114345114, 0.20103896103896104, 0.20093457943925233, 0.20083030617540218, 0.20072614107883818, 0.2006220839813375, 0.20051813471502591, 0.20041429311237702, 0.20031055900621117, 0.20020693222969477, 0.20010341261633918, 0.2, 0.20041322314049587, 0.20030975735673723, 0.2002063983488132, 0.2001031459515214, 0.2, 0.20041215868109222, 0.2008238928939238, 0.20123520329387545, 0.20113168724279834, 0.20102827763496145, 0.20092497430626927, 0.20082177709296353, 0.20071868583162217, 0.20061570035915854, 0.20051282051282052, 0.2009226037929267, 0.20081967213114754, 0.2007168458781362, 0.20112589559877175, 0.20153452685421994, 0.20194274028629858, 0.20183955033214104, 0.2017364657814096, 0.20163348647269014, 0.20153061224489796, 0.2014278429372769, 0.20132517838939856, 0.2012226184411615, 0.20112016293279023, 0.2010178117048346, 0.20091556459816887, 0.20081342145399084, 0.20071138211382114, 0.2006094464195023, 0.20050761421319796, 0.2009132420091324, 0.2013184584178499, 0.20121642169285353, 0.2011144883485309, 0.2010126582278481, 0.20091093117408906, 0.20080930703085484, 0.20070778564206268, 0.20060636685194544, 0.2005050505050505, 0.20040383644623927, 0.20030272452068618, 0.20020171457387798, 0.2001008064516129, 0.2, 0.1998992950654582, 0.19979869149471566, 0.19969818913480886, 0.19959778783308196, 0.19949748743718593, 0.19939728779507784, 0.1992971887550201, 0.19919719016557952, 0.1990972918756269, 0.19899749373433584, 0.19889779559118237, 0.19879819729594392, 0.1986986986986987, 0.19859929964982492, 0.1985, 0.1984007996001999, 0.19880119880119881, 0.19870194707938094, 0.19860279441117765, 0.19850374064837906, 0.1984047856430708, 0.1983059292476333, 0.19870517928286852, 0.1986062717770035, 0.19850746268656716, 0.1984087518647439, 0.19831013916500995, 0.19821162444113263, 0.19811320754716982, 0.19801488833746897, 0.19791666666666666, 0.19781854238968766, 0.19772051536174431, 0.1976225854383358, 0.19752475247524753, 0.19742701632855023, 0.19732937685459942, 0.1972318339100346, 0.19713438735177866, 0.19753086419753085, 0.19743336623889438, 0.1973359644795264, 0.19723865877712032, 0.19714144898965008, 0.19704433497536947, 0.19694731659281142, 0.1968503937007874, 0.19675356615838663, 0.19665683382497542, 0.19656019656019655, 0.19646365422396855, 0.19636720667648502, 0.19627085377821393, 0.196174595389897, 0.19607843137254902, 0.19598236158745713, 0.1958863858961802, 0.19579050416054822, 0.19569471624266144, 0.19559902200489, 0.19550342130987292, 0.19540791402051783, 0.1953125, 0.19521717911176184, 0.1951219512195122, 0.19502681618722575, 0.1949317738791423, 0.1948368241597662, 0.19474196689386564, 0.19464720194647203, 0.19455252918287938, 0.19494409333981527, 0.19484936831875607, 0.19475473530840215, 0.19514563106796118, 0.1950509461426492, 0.19495635305528614, 0.19486185167232187, 0.19476744186046513, 0.1946731234866828, 0.19457889641819942, 0.19448476052249636, 0.19439071566731142, 0.19429676172063798, 0.19420289855072465, 0.19410912602607436, 0.19401544401544402, 0.1939218523878437, 0.19382835101253615, 0.19373493975903613, 0.1941233140655106, 0.19402985074626866, 0.19393647738209818, 0.19384319384319385, 0.19375, 0.1941374339259971, 0.19452449567723343, 0.19491118578972635, 0.1952975047984645, 0.19568345323741007, 0.1955896452540748, 0.195495927168184, 0.19540229885057472, 0.19530876017233126, 0.19521531100478468, 0.1951219512195122, 0.1950286806883365, 0.19493549928332538, 0.19484240687679083, 0.1947494033412888, 0.1946564885496183, 0.19456366237482117, 0.19447092469018112, 0.19437827536922345, 0.19428571428571428, 0.19419324131366017, 0.19410085632730734, 0.19400855920114124, 0.1943916349809886, 0.19429928741092636, 0.19420702754036087, 0.19411485524442335, 0.19402277039848198, 0.1939307728781413, 0.1938388625592417, 0.1942207484604453, 0.19460227272727273, 0.19451017510648366, 0.1944181646168401, 0.19432624113475178, 0.194234404536862, 0.19414265470004724, 0.19405099150141644, 0.19395941481831053, 0.1938679245283019, 0.19377652050919378, 0.19368520263901978, 0.19359397079604335, 0.19350282485875706, 0.19341176470588237, 0.19332079021636878, 0.19322990126939352, 0.19313909774436092, 0.19304837952090184, 0.19295774647887323, 0.19286719849835757, 0.19277673545966229, 0.19268635724331926, 0.19259606373008434, 0.19250585480093677, 0.19241573033707865, 0.19232569021993448, 0.1922357343311506, 0.19214586255259467, 0.19205607476635514, 0.19196637085474078, 0.19187675070028012, 0.19178721418572095, 0.19169776119402984, 0.1916083916083916, 0.19151910531220875, 0.19142990218910108, 0.19134078212290503, 0.19125174499767333, 0.19116279069767442, 0.1910739191073919, 0.19098513011152415, 0.19089642359498374, 0.19080779944289694, 0.1911832946635731, 0.19155844155844157, 0.19146963375057952, 0.19138090824837814, 0.19129226493747106, 0.1912037037037037, 0.1911152244331328, 0.1910268270120259, 0.19093851132686085, 0.19085027726432532, 0.1907621247113164, 0.19067405355494, 0.19058606368251038, 0.19049815498154982, 0.1904103273397879, 0.19032258064516128, 0.190234914785813, 0.19014732965009207, 0.19005982512655314, 0.18997240110395583, 0.18988505747126436, 0.18979779411764705, 0.18971061093247588, 0.19008264462809918, 0.18999541073887105, 0.18990825688073396, 0.18982118294360384, 0.18973418881759854, 0.1896472743930371, 0.18956043956043955, 0.18947368421052632, 0.1898444647758463, 0.18975765889346136, 0.1896709323583181, 0.189584285061672, 0.18949771689497716, 0.1894112277498859, 0.18932481751824817, 0.18923848609211127, 0.18915223336371922, 0.18906605922551253, 0.1889799635701275, 0.188893946290396, 0.18880800727934485, 0.18872214643019555, 0.18863636363636363, 0.18855065879145844, 0.18846503178928248, 0.18837948252383113, 0.1882940108892922, 0.18820861678004536, 0.18812330009066183, 0.18803806071590395, 0.18795289855072464, 0.1878678134902671, 0.18778280542986425, 0.18815015829941203, 0.18806509945750452, 0.18798011748757343, 0.1878952122854562, 0.18781038374717832, 0.18817689530685922, 0.1880920162381597, 0.18800721370604148, 0.1879224876070302, 0.18783783783783783, 0.18775326429536246, 0.18766876687668768, 0.18758434547908232, 0.1875, 0.18786516853932583, 0.18823000898472597, 0.18859452177817693, 0.18850987432675045, 0.18842530282637954, 0.18834080717488788, 0.18825638727028238, 0.1881720430107527, 0.18853560232870578, 0.18889883616830797, 0.18881431767337808, 0.1887298747763864, 0.18864550737594993, 0.18856121537086684, 0.18847699866011614, 0.18839285714285714, 0.18830879071842926, 0.18822479928635147, 0.1881408827463219, 0.18805704099821746, 0.18797327394209354, 0.18788958147818344, 0.1878059635068981, 0.18772241992882563, 0.187638950644731, 0.18755555555555556, 0.1874722345624167, 0.1878330373001776, 0.1877496671105193, 0.18766637089618457, 0.18758314855875832, 0.1879432624113475, 0.18785999113867966, 0.18777679362267494, 0.1876936697653829, 0.18761061946902655, 0.18752764263600177, 0.1874447391688771, 0.1873619089703933, 0.1872791519434629, 0.18719646799116998, 0.18711385701676964, 0.18703131892368768, 0.18694885361552027, 0.1868664609960335, 0.186784140969163, 0.18670189343901364, 0.18661971830985916, 0.18653761548614167, 0.1864555848724714, 0.18637362637362637, 0.18629173989455183, 0.18620992534036013, 0.1861281826163301, 0.18604651162790697, 0.18596491228070175, 0.18588338448049102, 0.18624014022787028, 0.18615856329391153, 0.18607705779334502, 0.18599562363238512, 0.18591426071741032, 0.18627022299956275, 0.1861888111888112, 0.18654434250764526, 0.1868995633187773, 0.18725447402880838, 0.18760907504363003, 0.18796336676842565, 0.1878814298169137, 0.1877995642701525, 0.18771777003484322, 0.18763604701784936, 0.1875543951261967, 0.18747281426707263, 0.18739130434782608, 0.18730986527596696, 0.18722849695916594, 0.187147199305254, 0.1870659722222222, 0.18698481561822125, 0.18690372940156114, 0.1868227134807109, 0.1867417677642981, 0.1866608921611087, 0.18658008658008657, 0.18649935093033318, 0.18685121107266436, 0.18720276696930394, 0.18755401901469318, 0.1874730021598272, 0.18739205526770294, 0.18731117824773413, 0.18723037100949094, 0.18714963346269944, 0.1870689655172414, 0.1869883670831538, 0.18690783807062877, 0.18682737839001293, 0.18674698795180722, 0.18666666666666668, 0.18658641444539983, 0.18650623119896864, 0.18642611683848798, 0.18634607127522543, 0.18626609442060085, 0.18618618618618618, 0.1865351629502573, 0.18688384054864982, 0.18723221936589546, 0.18715203426124197, 0.1870719178082192, 0.18699186991869918, 0.18733960650128315, 0.18725951261222745, 0.18717948717948718, 0.18709953011533534, 0.1870196413321947, 0.18693982074263765, 0.18686006825938567, 0.18678038379530917, 0.1867007672634271, 0.1866212185769067, 0.18654173764906304, 0.18646232439335889, 0.18638297872340426, 0.1863037005529562, 0.18622448979591838, 0.18614534636634084, 0.1860662701784197, 0.1859872611464968, 0.18633276740237692, 0.18667798048366568, 0.18702290076335878, 0.18736752861381942, 0.18771186440677967, 0.18763235916984328, 0.18755292125317527, 0.18747355057130766, 0.18739424703891708, 0.18731501057082453, 0.18723584108199492, 0.18715673848753697, 0.18707770270270271, 0.1869987336428873, 0.18691983122362868, 0.18726275832981865, 0.1876053962900506, 0.18794774546986937, 0.18828980623420388, 0.18863157894736843, 0.18855218855218855, 0.18847286495582669, 0.1883936080740118, 0.1887347625052543, 0.18865546218487395, 0.18857622847543049, 0.18849706129303107, 0.18841796055392362, 0.18875838926174496, 0.18909853249475891, 0.18943839061190276, 0.18977796397151236, 0.18969849246231155, 0.18961908748430306, 0.1895397489539749, 0.18946047678795483, 0.18938127090301005, 0.1893021312160468, 0.18922305764411027, 0.18914405010438412, 0.18948247078464106, 0.18940342094284524, 0.18932443703085905, 0.18924551896623593, 0.18916666666666668, 0.18950437317784258, 0.18942547876769358, 0.18976279650436953, 0.19009983361064892, 0.19002079002079003, 0.18994181213632585, 0.18986289987536353, 0.1897840531561462, 0.18970527189705272, 0.1900414937759336, 0.18996267109083367, 0.18988391376451078, 0.1898052217157066, 0.18972659486329743, 0.19006211180124225, 0.19039735099337748, 0.19073231278444353, 0.19106699751861042, 0.190988011575031, 0.19090909090909092, 0.19124328789756298, 0.1911643270024773, 0.19149814279818406, 0.19183168316831684, 0.19216494845360824, 0.19208573784006594, 0.19200659250103008, 0.19192751235584843, 0.192260189378345, 0.1925925925925926, 0.1925133689839572, 0.1924342105263158, 0.19235511713933415, 0.19268693508627774, 0.19301848049281314, 0.1933497536945813, 0.19368075502667215, 0.19360131255127153, 0.19352193521935218, 0.19344262295081968, 0.19336337566571077, 0.19328419328419327, 0.19361440851412198, 0.19353518821603927, 0.1934560327198364, 0.1937857726901063, 0.19411524315488354, 0.1940359477124183, 0.19395671702735812, 0.19387755102040816, 0.1937984496124031, 0.19371941272430668, 0.19364044027721158, 0.19356153219233904, 0.1934826883910387, 0.19340390879478828, 0.19332519332519332, 0.193246541903987, 0.19357462383082555, 0.19349593495934958, 0.1934173100365705, 0.1933387489845654, 0.19326025172553796, 0.19318181818181818, 0.19310344827586207, 0.19302514193025141, 0.19335224969598702, 0.1932739059967585, 0.19360064803564195, 0.19392712550607288, 0.1942533387292594, 0.1941747572815534, 0.1940962393853619, 0.19401778496362165, 0.19393939393939394, 0.1938610662358643, 0.19378280177634236, 0.1937046004842615, 0.1936264622831787, 0.1935483870967742, 0.19347037484885127, 0.19339242546333602, 0.19331453886427707, 0.1932367149758454, 0.193158953722334, 0.19308125502815768, 0.19300361881785283, 0.19292604501607716, 0.19284853354760947, 0.1927710843373494, 0.19269369731031713, 0.1926163723916533, 0.19253910950661854, 0.19246190858059342, 0.19238476953907815, 0.19230769230769232, 0.19223067681217462, 0.1921537229783827, 0.19207683073229292, 0.192, 0.1919232307077169, 0.19184652278177458, 0.19176987614862165, 0.19169329073482427, 0.19161676646706588, 0.19154030327214686, 0.19146390107698444, 0.19178628389154706, 0.19210840972499005, 0.19203187250996015, 0.19195539625647154, 0.19187898089171976, 0.1918026263430163, 0.1917263325377884, 0.19165009940357852, 0.1915739268680445, 0.1914978148589591, 0.19142176330420968, 0.19134577213179832, 0.19126984126984126, 0.19119397064656882, 0.19111816019032513, 0.19104240982956797, 0.19096671949286848, 0.1908910891089109, 0.19081551860649248, 0.19074000791452314, 0.1906645569620253, 0.19058916567813364, 0.19090909090909092, 0.19122876333465033, 0.1911532385466035, 0.1910777733912357, 0.1910023677979479, 0.19092702169625247, 0.19085173501577288, 0.1907765076862436, 0.19070133963750985, 0.19062623079952737, 0.19055118110236222, 0.19047619047619047, 0.1904012588512982, 0.190326386158081, 0.19025157232704404, 0.19017681728880156, 0.19010212097407697, 0.19042010208087948, 0.19073783359497645, 0.19066300510003922, 0.19058823529411764, 0.19051352410819286, 0.19043887147335423, 0.19036427732079905, 0.19028974158183243, 0.19021526418786694, 0.19014084507042253, 0.19006648416112631, 0.18999218139171228, 0.1899179366940211, 0.18984375, 0.18976962124170246, 0.18969555035128804, 0.18962153726102224, 0.18993759750390016, 0.1902534113060429, 0.1901792673421668, 0.1901051811453058, 0.19003115264797507, 0.18995718178279486, 0.18988326848249026, 0.1898094126798911, 0.1901244167962675, 0.19005052467936262, 0.18997668997668998, 0.18990291262135922, 0.18982919254658384, 0.18975552968568102, 0.18968192397207137, 0.1896083753392788, 0.18953488372093022, 0.18946144905075551, 0.18938807126258714, 0.18931475029036005, 0.18924148606811145, 0.18916827852998067, 0.18909512761020883, 0.18902203324313877, 0.18894899536321483, 0.18887601390498263, 0.1888030888030888, 0.18873021999228098, 0.1886574074074074, 0.1885846509834169, 0.18889745566692367, 0.18882466281310212, 0.18875192604006163, 0.18867924528301888, 0.18899153194765203, 0.1893035782993459, 0.1896153846153846, 0.1895424836601307, 0.18985395849346656, 0.1897810218978102, 0.18970814132104455, 0.19001919385796545, 0.1903300076745971, 0.19025700038358268, 0.1901840490797546, 0.19011115369873516, 0.1900383141762452, 0.1899655304481042, 0.18989280245022971, 0.18982013011863758, 0.18974751338944146, 0.19005736137667303, 0.19036697247706422, 0.19029423003439053, 0.19022154316271964, 0.19014891179839633, 0.1900763358778626, 0.1900038153376574, 0.18993135011441648, 0.18985894014487228, 0.18978658536585366, 0.18971428571428572, 0.18964204112718963, 0.18956985154168252, 0.18949771689497716, 0.1894256371243819, 0.1897338403041825, 0.19004180919802358, 0.1899696048632219, 0.189897455374098, 0.18982536066818528, 0.18975332068311196, 0.19006069802731412, 0.19036784224497535, 0.19029567854435178, 0.19022356953391437, 0.19015151515151515, 0.19007951533510034, 0.19000757002271007, 0.18993567915247825, 0.18986384266263237, 0.1897920604914934, 0.18972033257747545, 0.18964865885908574, 0.18957703927492447, 0.1895054737636844, 0.18943396226415093, 0.1893625047152018, 0.18929110105580693, 0.18921975122502827, 0.18914845516201959, 0.18907721280602638, 0.18900602409638553, 0.18893488897252542, 0.18886380737396538, 0.1887927792403159, 0.1887218045112782, 0.18865088312664413, 0.188580015026296, 0.18850920015020653, 0.18843843843843844, 0.18836772983114447, 0.18829707426856715, 0.18822647169103862, 0.18815592203898052, 0.1880854252529037, 0.18801498127340824, 0.18794459004118308, 0.18787425149700598, 0.18780396558174337, 0.18773373223635004, 0.18766355140186916, 0.187593423019432, 0.18752334703025775, 0.18745332337565349, 0.1873833519970138, 0.1873134328358209, 0.18724356583364415, 0.1871737509321402, 0.18710398807305256, 0.1870342771982116, 0.18696461824953445, 0.18689501116902457, 0.18682545589877186, 0.18675595238095238, 0.18668650055782818, 0.18661710037174722, 0.18691936083240432, 0.18684992570579495, 0.18678054214630524, 0.18671121009651076, 0.18664192949907235, 0.1865727002967359, 0.18650352243233223, 0.18680504077094143, 0.18673582808447572, 0.18666666666666668, 0.18659755646057016, 0.18652849740932642, 0.1864594894561598, 0.1863905325443787, 0.18632162661737522, 0.18662232076866223, 0.1865533801256003, 0.18648449039881831, 0.1864156515319306, 0.1863468634686347, 0.18627812615271117, 0.1862094395280236, 0.18614080353851825, 0.18607221812822403, 0.1860036832412523, 0.18593519882179677, 0.18586676481413322, 0.18579838116261957, 0.18573004781169547, 0.18566176470588236, 0.18559353178978316, 0.1855253490080823, 0.18545721630554535, 0.1853891336270191, 0.1853211009174312, 0.18525311812179016, 0.18518518518518517, 0.18511730205278593, 0.18504946866984243, 0.184981684981685, 0.1849139509337239, 0.1848462664714495, 0.18477863154043175, 0.1847110460863204, 0.1846435100548446, 0.18457602339181287, 0.1845085860431129, 0.18444119795471148, 0.18437385907265424, 0.1843065693430657, 0.1846041590660343, 0.18490153172866522, 0.1851986875683558, 0.18549562682215742, 0.18579234972677597, 0.18608885651857246, 0.18638514743356388, 0.18668122270742357, 0.18661331393233904, 0.18654545454545454, 0.18684114867320975, 0.1867732558139535, 0.18670541227751544, 0.18663761801016704, 0.18656987295825772, 0.18686502177068215, 0.18679724338048603, 0.18672951414068165, 0.1866618339978253, 0.18659420289855072, 0.186526620789569, 0.18645908761766836, 0.18639160332971408, 0.18632416787264833, 0.18625678119349007, 0.18618944323933478, 0.18612215395735454, 0.18605491329479767, 0.1859877211989888, 0.18592057761732853, 0.1858534824972934, 0.18578643578643578, 0.1857194374323837, 0.18565248738284065, 0.18594594594594593, 0.18587896253602307, 0.18581202736766295, 0.1857451403887689, 0.18567830154731918, 0.1856115107913669, 0.18590435095289465, 0.18583752695902228, 0.1857707509881423, 0.18570402298850575, 0.18599640933572711, 0.1862885857860732, 0.18622174381054898, 0.18651362984218078, 0.18644675510935818, 0.1863799283154122, 0.18631314940881405, 0.18624641833810887, 0.18653777300393842, 0.18682891911238367, 0.18711985688729874, 0.18705293276108725, 0.18698605648909547, 0.18727662616154395, 0.18720971775634154, 0.18714285714285714, 0.1870760442699036, 0.1870092790863669, 0.18694256154120584, 0.18687589158345222, 0.18680926916221033, 0.18674269422665715, 0.18667616672604204, 0.1866096866096866, 0.1865432538269847, 0.18683274021352314, 0.18676627534685167, 0.18669985775248932, 0.18663348738002133, 0.1865671641791045, 0.18685612788632328, 0.18714488636363635, 0.1870784522541711, 0.18701206529453512, 0.18694572543455126, 0.18723404255319148, 0.1871676710386388, 0.18710134656272148, 0.18703506907545164, 0.18696883852691218, 0.18690265486725663, 0.18683651804670912, 0.1867704280155642, 0.1867043847241867, 0.18663838812301167, 0.18657243816254418, 0.18650653479335924, 0.1864406779661017, 0.18637486763148606, 0.1863091037402964, 0.18624338624338624, 0.1861777150916784, 0.18611209023616496, 0.18604651162790697, 0.18633321592109897, 0.18661971830985916, 0.18690601900739176, 0.18719211822660098, 0.18747801618009144, 0.18741209563994374, 0.18734622144112478, 0.18728039353478568, 0.1872146118721461, 0.18714887640449437, 0.18708318708318708, 0.1870175438596491, 0.18730270080673447, 0.1875876577840112, 0.18752190676480898, 0.1874562018220042, 0.18739054290718038, 0.1873249299719888, 0.1872593629681484, 0.18719384184744578, 0.18712836656173487, 0.18706293706293706, 0.18699755330304088, 0.18693221523410203, 0.1868669228082431, 0.1871508379888268, 0.18708551483420593, 0.1873691556175855, 0.18765259853505406, 0.18758716875871687, 0.18752178459393518, 0.18745644599303135, 0.18739115290839428, 0.1876740947075209, 0.18760877131917855, 0.18754349338900486, 0.1874782608695652, 0.18741307371349095, 0.1873479318734793, 0.18728283530229325, 0.18721778395276137, 0.1875, 0.18778202013189865, 0.18806384455239417, 0.1879986125563649, 0.18793342579750347, 0.1878682842287695, 0.1878031878031878, 0.1880845167994458, 0.18801939058171746, 0.18795430944963656, 0.18788927335640138, 0.187824282255275, 0.18810511756569848, 0.18804009678534395, 0.18797512093987562, 0.18825561312607944, 0.18819060773480664, 0.18812564722126338, 0.18806073153899242, 0.18799586064160057, 0.1879310344827586, 0.1878662530162013, 0.18780151619572708, 0.18773682397519806, 0.18767217630853994, 0.18760757314974183, 0.18754301445285615, 0.18747850017199863, 0.187414030261348, 0.1873496046751461, 0.1872852233676976, 0.18722088629336997, 0.1871565934065934, 0.18709234466186062, 0.18702814001372683, 0.18696397941680962, 0.18689986282578874, 0.18683579019540625, 0.18677176148046606, 0.18670777663583418, 0.18664383561643835, 0.18657993837726805, 0.1865160848733744, 0.18645227505987, 0.18638850889192887, 0.18632478632478633, 0.1862611073137389, 0.18619747181414417, 0.18613387978142076, 0.18607033117104813, 0.18600682593856654, 0.18594336403957692, 0.1858799454297408, 0.18581657006478008, 0.18575323790047715, 0.18568994889267462, 0.18596730245231607, 0.18624446714334356, 0.18618107556160654, 0.18645797890438925, 0.18639455782312925, 0.18633117987079226, 0.18626784500339905, 0.18620455317703025, 0.18614130434782608, 0.18607809847198642, 0.18601493550577053, 0.18595181540549713, 0.18588873812754408, 0.1858257036283486, 0.1857627118644068, 0.1856997627922738, 0.1856368563685637, 0.1859126312224856, 0.18584969532836831, 0.18578680203045686, 0.18572395128552097, 0.18566114305038892, 0.18559837728194725, 0.18553565393714092, 0.18547297297297297, 0.18574805808848363, 0.18568534773801484, 0.18562267971650354, 0.18556005398110662, 0.18549747048903878, 0.18543492919757248, 0.18537243006403775, 0.1853099730458221, 0.1852475581003705, 0.18518518518518517, 0.18512285425782565, 0.18506056527590847, 0.1849983181971073, 0.18493611297915266, 0.18487394957983194, 0.18481182795698925, 0.18474974806852537, 0.18468770987239758, 0.18462571332661967, 0.18456375838926176, 0.18450184501845018, 0.18443997317236754, 0.18437814280925244, 0.18431635388739948, 0.18425460636515914, 0.1841929002009377, 0.18446601941747573, 0.18473895582329317, 0.18501170960187355, 0.18528428093645485, 0.1855566700100301, 0.1858288770053476, 0.18576678917474107, 0.18570474281897129, 0.18564273789649416, 0.1855807743658211, 0.18551885218551886, 0.18545697131420946, 0.18539513171057018, 0.18533333333333332, 0.18527157614128623, 0.18520986009327114, 0.18514818514818515, 0.18508655126498003, 0.18502495840266223, 0.18496340652029275, 0.18490189557698702, 0.1848404255319149, 0.18477899634430042, 0.18471760797342193, 0.18465626037861177, 0.1845949535192563, 0.1845336873547959, 0.18447246184472463, 0.18441127694859039, 0.1846816976127321, 0.18462048392442823, 0.1848906560636183, 0.18482941371315004, 0.1847682119205298, 0.18470705064548162, 0.18497683653209795, 0.18491564670856764, 0.18485449735449735, 0.18479338842975207, 0.18473231989424985, 0.18467129170796168, 0.18461030383091148, 0.18454935622317598, 0.1844884488448845, 0.18442758165621906, 0.18436675461741425, 0.184305967688757, 0.1842452208305867, 0.18418451400329489, 0.18412384716732544, 0.18406322028317418, 0.18400263331138908, 0.1839420862125699, 0.18388157894736842, 0.183821111476488, 0.18376068376068377, 0.1837002957607624, 0.18363994743758214, 0.18357963875205255, 0.1835193696651346, 0.1834591401378405, 0.18339895013123358, 0.18333879960642835, 0.18327868852459017, 0.18321861684693544, 0.18315858453473133, 0.18309859154929578, 0.183366077275704, 0.18363338788870703, 0.18357329842931938, 0.18351324828263002, 0.18378024852844996, 0.18404707420725727, 0.1843137254901961, 0.18458020254818686, 0.18484650555192683, 0.18478615736206333, 0.18472584856396868, 0.18466557911908646, 0.18460534898891062, 0.18454515813498532, 0.18481095176010431, 0.18475073313782991, 0.18469055374592833, 0.18495604037772712, 0.18489583333333334, 0.18483566547347868, 0.18477553675992192, 0.18471544715447155, 0.1846553966189857, 0.18459538511537213, 0.1848602988953866, 0.1848002598246184, 0.18474025974025973, 0.18500486854917234, 0.1852693056456846, 0.18553357119688615, 0.185473411154345, 0.1854132901134522, 0.18567725210628647, 0.18594104308390022, 0.18620466321243523, 0.1861443832955649, 0.18640776699029127, 0.1863474603688127, 0.18661060802069857, 0.18687358551568056, 0.18681318681318682, 0.18675282714054928, 0.1866925064599483, 0.18663222473361318, 0.1868947708198838, 0.1868344627299129, 0.1867741935483871, 0.18671396323766526, 0.18665377176015474, 0.18659361907831132, 0.18653350515463918, 0.18647342995169083, 0.18641339343206698, 0.18635339555841648, 0.18629343629343628, 0.18623351559987134, 0.1864951768488746, 0.18675666988106718, 0.18669665809768637, 0.18663668486990043, 0.18657675016056519, 0.18651685393258427, 0.18645699614890887, 0.1867179980750722, 0.18697883258499037, 0.18691888425777492, 0.18685897435897436, 0.1867991028516501, 0.18705957719410635, 0.1873198847262248, 0.18725992317541612, 0.1872, 0.18746001279590532, 0.18771985929005436, 0.18797953964194372, 0.18791946308724833, 0.18817891373801918, 0.18811881188118812, 0.18805874840357598, 0.1879987232684328, 0.1879387364390555, 0.18787878787878787, 0.1881377551020408, 0.18807778131973224, 0.1880178457616316, 0.18795794839120739, 0.18789808917197454, 0.18783826806749443, 0.18777848504137493, 0.18771874005727013, 0.1876590330788804, 0.1875993640699523, 0.18753973299427845, 0.1874801398156975, 0.18742058449809404, 0.18736106700539853, 0.1873015873015873, 0.18724214535068232, 0.18718274111675126, 0.1871233745639074, 0.18706404565630944, 0.18700475435816163, 0.18694550063371357, 0.18688628444726005, 0.18682710576314124, 0.18676796454574232, 0.18670886075949367, 0.1866497943688706, 0.18659076533839342, 0.18653177363262724, 0.18647281921618206, 0.18641390205371247, 0.1863550221099179, 0.18629617934954215, 0.18623737373737373, 0.1861786052382455, 0.1861198738170347, 0.18606117943866288, 0.18600252206809584, 0.18594390167034353, 0.18588531821045998, 0.1858267716535433, 0.1857682619647355, 0.18602455146364494, 0.18596601636249213, 0.18622208241585403, 0.1861635220125786, 0.18610499842816725, 0.18604651162790697, 0.1859880615771285, 0.18592964824120603, 0.1858712715855573, 0.18612680477087257, 0.18638217759648573, 0.18663739021329986, 0.1865788648479147, 0.18683385579937303, 0.18708868693199623, 0.18734335839598998, 0.18728468524898215, 0.18722604884157795, 0.18716744913928013, 0.18710888610763454, 0.18705035971223022, 0.18699186991869918, 0.1869334166927165, 0.186875, 0.18681661980631054, 0.18707058088694567, 0.18701217608492038, 0.1869538077403246, 0.18689547581903276, 0.18683718028696195, 0.18677892111007172, 0.1867206982543641, 0.18666251168588346, 0.1866043613707165, 0.18654624727499222, 0.1864881693648817, 0.18674136321195145, 0.18699439950217797, 0.1869362363919129, 0.18718905472636815, 0.1874417158843643, 0.18769422001243008, 0.18794656725691208, 0.18819875776397516, 0.18814032909034462, 0.18808193668528864, 0.18802358051504808, 0.1879652605459057, 0.18821705426356589, 0.18815871047737137, 0.18810040285094515, 0.18804213135068154, 0.18798389594301643, 0.18792569659442723, 0.187867533271433, 0.18780940594059406, 0.1877513145685122, 0.18769325912183055, 0.18763523956723338, 0.18757725587144622, 0.1875193080012357, 0.18746139592340952, 0.1874035196048163, 0.18734567901234567, 0.1872878741129281, 0.18723010487353486, 0.18748072772124577, 0.187731196054254, 0.187673343605547, 0.1876155268022181, 0.18755774561133354, 0.18780788177339902, 0.18805786395814098, 0.188, 0.18794217163949553, 0.18788437884378845, 0.18782662158007993, 0.18776889981561157, 0.18771121351766512, 0.18765356265356264, 0.18759594719066625, 0.18753836709637814, 0.18748082233814053, 0.18742331288343558, 0.18736583869978535, 0.18761496014714898, 0.18755746245786087, 0.1875, 0.1874425727411945, 0.18738518064911205, 0.18732782369146006, 0.18727050183598531, 0.18721321505047414, 0.1871559633027523, 0.1874044634668297, 0.1876528117359413, 0.18759547815459823, 0.18753817959682345, 0.18748091603053435, 0.18742368742368742, 0.1873664937442783, 0.18730933496034166, 0.18755718206770358, 0.1878048780487805, 0.18805242304175557, 0.1882998171846435, 0.1882424611635699, 0.1881851400730816, 0.18812785388127853, 0.18807060255629945, 0.18831761484636447, 0.1882603406326034, 0.18820310124657952, 0.18814589665653494, 0.18839258584017016, 0.18833535844471447, 0.1882781658062557, 0.1885245901639344, 0.18877086494688922, 0.18901699029126215, 0.18895966029723993, 0.18890236506973923, 0.1888451045771446, 0.18878787878787878, 0.1887306876704029, 0.18867353119321623, 0.18861640932485618, 0.1885593220338983, 0.18850226928895614, 0.18844525105868118, 0.18838826731176292, 0.18833131801692865, 0.1882744031429435, 0.18821752265861028, 0.18846270009060706, 0.18870772946859904, 0.18895261092665258, 0.18889559444779722, 0.18883861236802413, 0.1887816646562123, 0.18872475128127827, 0.188667872212176, 0.18861102741789695, 0.188855421686747, 0.18879855465221318, 0.18904274533413606, 0.18928678904604274, 0.18953068592057762, 0.18947368421052632, 0.1894167167769092, 0.18935978358881875, 0.1893028846153846, 0.1892460198257735, 0.1894894894894895, 0.18943260282197538, 0.18937575030012005, 0.18931893189318932, 0.1892621475704859, 0.18950524737631183, 0.18974820143884893, 0.1896913395265208, 0.1896345116836429, 0.18957771787960467, 0.18952095808383235, 0.18946423226578868, 0.18940754039497307, 0.18935088244092133, 0.18929425837320574, 0.18953662182361733, 0.18947997609085476, 0.18942336420675232, 0.18966547192353644, 0.18960883845924156, 0.18955223880597014, 0.1894956729334527, 0.18943914081145585, 0.18938264240978228, 0.18932617769827073, 0.18926974664679583, 0.18921334922526817, 0.1891569854036342, 0.18910065515187613, 0.1890443584400119, 0.18898809523809523, 0.1889318655162154, 0.18887566924449734, 0.1888195063931014, 0.18876337693222353, 0.1887072808320951, 0.18865121806298277, 0.1885951885951886, 0.18853919239904987, 0.18848322944493914, 0.1884272997032641, 0.18837140314446751, 0.1883155397390273, 0.18825970945745626, 0.1882039122703023, 0.18814814814814815, 0.18809241706161137, 0.1880367189813444, 0.18798105387803435, 0.1879254217224031, 0.1878698224852071, 0.1878142561372375, 0.18775872264931992, 0.1877032219923145, 0.18764775413711585, 0.18759231905465287, 0.18753691671588896, 0.18748154709182166, 0.18772136953955135, 0.18796105045736206, 0.187905604719764, 0.18785019168386907, 0.18808962264150944, 0.1883289124668435, 0.18856806128461992, 0.18880706921944035, 0.18904593639575973, 0.18928466293788637, 0.18952324896998235, 0.18976169461606354, 0.18970588235294117, 0.18965010291090856, 0.18959435626102292, 0.18953864237437554, 0.1897767332549941, 0.1897209985315712, 0.18966529653552555, 0.18960962723803934, 0.18955399061032863, 0.1894983866236433, 0.18944281524926687, 0.18938727645851655, 0.18933177022274325, 0.1892762965133314, 0.18922085530169888, 0.1891654465592972, 0.18911007025761123, 0.1890547263681592, 0.1889994148624927, 0.18894413571219654, 0.18888888888888888, 0.1891259865536393, 0.18936294564582115, 0.18930762489044697, 0.18925233644859812, 0.1891970802919708, 0.18914185639229422, 0.18908666472133062, 0.18903150525087514, 0.1889763779527559, 0.18892128279883383, 0.18886621976100262, 0.1891025641025641, 0.1890474803378969, 0.18899242865463017, 0.18922852983988356, 0.18946449359720605, 0.1897003200465522, 0.18964514252472367, 0.18958999709217797, 0.18953488372093022, 0.1894798023830282, 0.189424753050552, 0.1893697356956143, 0.18960511033681765, 0.18984034833091437, 0.1897852582704585, 0.18973020017406442, 0.18996519721577726, 0.18991011887503625, 0.18985507246376812, 0.18980005795421617, 0.18974507531865586, 0.18997972777295105, 0.1899247249565721, 0.18986975397973951, 0.18981481481481483, 0.1897599074341915, 0.18970503181029497, 0.18965018791558255, 0.18959537572254334, 0.18954059520369834, 0.18948584633160023, 0.1894311290788334, 0.18937644341801385, 0.18932178932178934, 0.189267166762839, 0.18921257571387368, 0.18915801614763553, 0.18910348803689825, 0.18904899135446687, 0.18899452607317777, 0.1889400921658986, 0.1891736251079758, 0.18911917098445596, 0.18906474820143884, 0.18901035673187572, 0.18895599654874892, 0.18890166762507188, 0.18884736993388904, 0.18879310344827585, 0.1887388681413387, 0.1886846639862148, 0.18863049095607234, 0.18857634902411022, 0.1885222381635581, 0.1884681583476764, 0.18841410954975624, 0.18836009174311927, 0.1883061049011178, 0.18825214899713466, 0.18819822400458322, 0.18814432989690721, 0.1880904666475809, 0.18803663423010875, 0.18798283261802576, 0.18792906178489702, 0.18787532170431798, 0.18782161234991424, 0.18776793369534153, 0.18771428571428572, 0.18766066838046272, 0.1876070816676185, 0.18755352554952898, 0.1875, 0.18744650499286733, 0.18739304050199657, 0.18733960650128315, 0.18728620296465223, 0.18723282986605871, 0.18717948717948718, 0.18712617487895186, 0.18707289293849658, 0.1870196413321947, 0.18696642003414912, 0.18691322901849217, 0.18686006825938567, 0.18680693773102075, 0.18675383740761797, 0.1867007672634271, 0.18664772727272727, 0.18659471740982675, 0.18654173764906304, 0.18648878796480273, 0.18643586833144155, 0.18638297872340426, 0.18633011911514463, 0.18627728948114544, 0.18622448979591838, 0.1864550864267498, 0.18640226628895185, 0.18634947606910224, 0.18629671574178935, 0.18624398528163033, 0.18647425014148275, 0.18642149929278642, 0.186368778280543, 0.18631608707944586, 0.18626342566421708, 0.18621079400960724, 0.18615819209039547, 0.18610561988138943, 0.18605307735742518, 0.18600056449336722, 0.18594808126410836, 0.18589562764456982, 0.18584320360970108, 0.18579080913447985, 0.18573844419391206, 0.18568610876303185, 0.18563380281690142, 0.18586313714446634, 0.18609234234234234, 0.18603996622572475, 0.1859876195835678, 0.1859353023909986, 0.1858830146231721, 0.1858307562552713, 0.18577852726250701, 0.185726327620118, 0.18567415730337078, 0.18562201628755967, 0.18556990454800673, 0.18579848442323885, 0.18574635241301907, 0.18569424964936887, 0.1856421761076837, 0.1855901317633866, 0.18553811659192826, 0.18548613056878677, 0.18571428571428572, 0.18566227947353683, 0.18561030235162373, 0.18583823117828155, 0.18606603245663123, 0.18629370629370628, 0.18624161073825504, 0.18618954431087503, 0.18613750698714365, 0.18608549874266556, 0.18603351955307262, 0.18598156939402402, 0.18592964824120603, 0.18587775607033213, 0.18582589285714285, 0.18577405857740587, 0.1857222532069158, 0.18567047672149428, 0.18561872909698995, 0.18556701030927836, 0.18551532033426185, 0.18546365914786966, 0.18541202672605792, 0.18536042304480935, 0.18558708959376738, 0.1855354659248957, 0.185761957730812, 0.1859883236030025, 0.1859366314619233, 0.18588496804667964, 0.18583333333333332, 0.1857817272979728, 0.18573014991671294, 0.18567860116569526, 0.1856270810210877, 0.18557558945908462, 0.18552412645590682, 0.1854726919878015, 0.18542128603104213, 0.1856469936270435, 0.18559556786703602, 0.1855441705898643, 0.18549280177187155, 0.1857182396900083, 0.18566685113447703, 0.1856154910096819, 0.1855641592920354, 0.18551285595797623, 0.18546158098396903, 0.18541033434650456, 0.18535911602209945, 0.18530792598729634, 0.18525676421866372, 0.18520563069279602, 0.18515452538631347, 0.18537931034482757, 0.18532818532818532, 0.18527708850289495, 0.185226019845645, 0.18517497933314964, 0.18539944903581268, 0.18534838887358854, 0.18529735682819384, 0.18524635287641067, 0.1851953769950468, 0.18541953232462174, 0.18564356435643564, 0.18559252130877096, 0.18554150632215502, 0.18549051937345423, 0.18543956043956045, 0.18538862949739082, 0.18533772652388797, 0.18528685149601976, 0.18523600439077936, 0.18545953360768175, 0.1856829402084476, 0.18590622429394021, 0.18612938596491227, 0.18607837763770896, 0.18602739726027398, 0.1859764448096412, 0.18592552026286965, 0.18587462359704351, 0.18582375478927204, 0.18577291381668948, 0.18572210065645514, 0.18594476346732294, 0.1858939311098961, 0.18584312653730528, 0.18579234972677597, 0.1857416006555586, 0.18569087930092845, 0.18564018564018564, 0.18586244541484717, 0.1858117326057299, 0.18576104746317512, 0.18571038996454867, 0.18593238822246455, 0.18615426546742983, 0.18610354223433243, 0.18605284663579405, 0.18600217864923746, 0.18595153825211, 0.1859009254218835, 0.18585034013605442, 0.18579978237214365, 0.1857492521076965, 0.18569874932028277, 0.18564827398749661, 0.1858695652173913, 0.18581907090464547, 0.18576860401955458, 0.18598968232419225, 0.18593919652551574, 0.18588873812754408, 0.18583830710797614, 0.18578790344453486, 0.18600867678958785, 0.1859582542694497, 0.1861788617886179, 0.18612842048225414, 0.1860780065005417, 0.18602761982128352, 0.18597726042230645, 0.18592692828146143, 0.1858766233766234, 0.1858263456856911, 0.18577609518658733, 0.18599621519329548, 0.18594594594594593, 0.1858957038638206, 0.18611561318206374, 0.18633540372670807, 0.18655507559395249, 0.18677462887989205, 0.18699406368051807, 0.18721338009171837, 0.18743257820927725, 0.18765165812887571, 0.18787061994609164, 0.18781999461061707, 0.18776939655172414, 0.18771882574737409, 0.18766828217555195, 0.18761776581426648, 0.18756727664155004, 0.1875168146354587, 0.18746637977407207, 0.1874159720354934, 0.18736559139784947, 0.18731523783929052, 0.18726491133799034, 0.1872146118721461, 0.1871643394199785, 0.18711409395973155, 0.18706387546967257, 0.1870136839280923, 0.1869635193133047, 0.1869133816036471, 0.18686327077747988, 0.18681318681318682, 0.18676312968917472, 0.18671309938387357, 0.18666309587573648, 0.18661311914323964, 0.18656316916488222, 0.18651324591918653, 0.1864633493846977, 0.18641347953998394, 0.18636363636363637, 0.18631381983426892, 0.18626402993051844, 0.18621426663104462, 0.18616452991452992, 0.18611481975967958, 0.18606513614522158, 0.1862823592207099, 0.18649946638207043, 0.18671645772205922, 0.18693333333333334, 0.1871500933084511, 0.18736673773987206, 0.18731681321609378, 0.18726691529035694, 0.18748335552596537, 0.18743343982960597, 0.18738355070535, 0.1873336881319851, 0.18728385208832135, 0.18723404255319148, 0.18745014623770273, 0.18740031897926634, 0.187350518203561, 0.1873007438894793, 0.18725099601593626, 0.18720127456186936, 0.1871515795062384, 0.1873673036093418, 0.18731759087291058, 0.18726790450928382, 0.18748342614691063, 0.18769883351007424, 0.1876490856082693, 0.1875993640699523, 0.18754966887417218, 0.1875, 0.187450357426529, 0.1876654314452091, 0.18788039163799947, 0.1880952380952381, 0.1880454906109495, 0.18799576943416182, 0.18821041501453872, 0.18816067653276955, 0.188110964332893, 0.18806127839408346, 0.18801161869553737, 0.18796198521647306, 0.18791237793613091, 0.18786279683377308, 0.18781324188868373, 0.1877637130801688, 0.18771421038755604, 0.18766473379019505, 0.1876152832674572, 0.18756585879873552, 0.18751646036344483, 0.1874670879410216, 0.18741774151092394, 0.18736842105263157, 0.1873191265456459, 0.18726985796948975, 0.1872206153037076, 0.1871713985278654, 0.1871222076215506, 0.18733578560168154, 0.1875492513790386, 0.1875, 0.1874507744814912, 0.18740157480314962, 0.18735240094463396, 0.18730325288562436, 0.1872541306058222, 0.18720503408495018, 0.1871559633027523, 0.1871069182389937, 0.18705789887346083, 0.18700890518596125, 0.18695993715632364, 0.1869109947643979, 0.18712378958387857, 0.1870748299319728, 0.18702589589327753, 0.18723849372384938, 0.18745098039215685, 0.18740198640878203, 0.18735301802978835, 0.18756530825496343, 0.18777748759467225, 0.18798955613577023, 0.18794048551292092, 0.18815240083507306, 0.1883642055830942, 0.1883150756390193, 0.18826597131681877, 0.18821689259645463, 0.18816783945790982, 0.18811881188118812, 0.18806980984631413, 0.18802083333333333, 0.1879718823223119, 0.18792295679333682, 0.18787405672651575, 0.1878251821019771, 0.18803641092327697, 0.18798751950078002, 0.18793865349623082, 0.18814968814968816, 0.18810080540400104, 0.18805194805194805, 0.1880031160737471, 0.18795430944963656, 0.18790552815987543, 0.18785677218474311, 0.18780804150453956, 0.18775933609958506, 0.18771065595022038, 0.18766200103680664, 0.1876133713397253, 0.18756476683937823, 0.1875161875161875, 0.18746763335059555, 0.18741910432306497, 0.1873706004140787, 0.18732212160413972, 0.18727366787377134, 0.18722523920351694, 0.18717683557394002, 0.1871284569656242, 0.18708010335917313, 0.18703177473521054, 0.18698347107438015, 0.18719339013684483, 0.1874032008260196, 0.18761290322580645, 0.18756449948400414, 0.18751612071189064, 0.18746776689014957, 0.1874194379994844, 0.18737113402061856, 0.1873228549342953, 0.1872746007212777, 0.1874839041977852, 0.18769309989701338, 0.1879021879021879, 0.1878538342768914, 0.1880627733470543, 0.18801440329218108, 0.18796605811262534, 0.1879177377892031, 0.18812644564379338, 0.1883350462487153, 0.18828666837914204, 0.18823831535695942, 0.18818998716302954, 0.1881416837782341, 0.18809340518347448, 0.18804515135967162, 0.18825339830725826, 0.1882051282051282, 0.18815688285055113, 0.18810866222450026, 0.18806046630796822, 0.1880122950819672, 0.1879641485275288, 0.18791602662570406, 0.18786792935756336, 0.18781985670419651, 0.18802762854950114, 0.18797953964194372, 0.18793147532600357, 0.18788343558282208, 0.18783542039355994, 0.18778742973939705, 0.18773946360153257, 0.18769152196118488, 0.18764360479959152, 0.18759571209800918, 0.1878030109721868, 0.18801020408163266, 0.18821729150726854, 0.1884242733299337, 0.18837624267142494, 0.1883282364933741, 0.18828025477707006, 0.18823229750382067, 0.1881843646549529, 0.18813645621181263, 0.18808857215576483, 0.18829516539440203, 0.18824726532688882, 0.18819938962360122, 0.18815153826595474, 0.18810371123538383, 0.1880559085133418, 0.18800813008130082, 0.18796037592075185, 0.18791264601320468, 0.18786494034018786, 0.18781725888324874, 0.18776960162395331, 0.18772196854388634, 0.1876743596246513, 0.1876267748478702, 0.18757921419518378, 0.1875316776482514, 0.18748416518875094, 0.18743667679837892, 0.18738921245885035, 0.18734177215189873, 0.18729435585927615, 0.18724696356275303, 0.1871995952441184, 0.18715225088517956, 0.18710493046776233, 0.1870576339737108, 0.18701036138488755, 0.1869631126831733, 0.18691588785046728, 0.18686868686868688, 0.18682150971976774, 0.1867743563856638, 0.18672722684834722, 0.18668012108980828, 0.18663303909205547, 0.18658598083711547, 0.18653894630703302, 0.18649193548387097, 0.18644494834971026, 0.18639798488664988, 0.18635104507680686, 0.1863041289023162, 0.18625723634533098, 0.18621036738802216, 0.1861635220125786, 0.18611670020120724, 0.18606990193613276, 0.1860231271995978, 0.18597637597386277, 0.18592964824120603, 0.18588294398392363, 0.1860873932697137, 0.18604067285965353, 0.18599397590361447, 0.18594730238393978, 0.18590065228299046, 0.18585402558314523, 0.18580742226680041, 0.18576084231637002, 0.18571428571428572, 0.18566775244299674, 0.18562124248496994, 0.1855747558226897, 0.18577866800200302, 0.18573216520650815, 0.1856856856856857, 0.18563922942206654, 0.1855927963981991, 0.18579644911227808, 0.18575, 0.18595351162209448, 0.18615692153923039, 0.1863602298276293, 0.1863136863136863, 0.18626716604244695, 0.18622066899650525, 0.18617419515847267, 0.18612774451097805, 0.1860813170366675, 0.1860349127182045, 0.18598853153826975, 0.18594217347956132, 0.1858958385247944, 0.18584952665670154, 0.18580323785803238, 0.1857569721115538, 0.1857107294000498, 0.18566450970632156, 0.18561831301318735, 0.1855721393034826, 0.18577468291469784, 0.18572849328692193, 0.18568232662192394, 0.1856361829025845, 0.18583850931677018, 0.1860407352210631, 0.1859945368760864, 0.18594836146971203, 0.18590220898485976, 0.1858560794044665, 0.18580997271148597, 0.18601190476190477, 0.18621373667245228, 0.1864154685176004, 0.18636926889714994, 0.1863230921704658, 0.18627693832053505, 0.18623080733036157, 0.18618469918296607, 0.18613861386138614, 0.18634001484780996, 0.18629391390400793, 0.18624783576552065, 0.18644906033630068, 0.18665018541409148, 0.18660405338606031, 0.18655794415616506, 0.1865118577075099, 0.18646579402321561, 0.18641975308641975, 0.18637373488027648, 0.18632773938795658, 0.18628176659264742, 0.18623581647755302, 0.18618988902589395, 0.1861439842209073, 0.18609810204584668, 0.18605224248398225, 0.18600640551860065, 0.18596059113300492, 0.18591479931051466, 0.18586903003446578, 0.1860694068422348, 0.1860236220472441, 0.1859778597785978, 0.18593212001967535, 0.18588640275387264, 0.18584070796460178, 0.18579503563529123, 0.18574938574938574, 0.18570375829034635, 0.1856581532416503, 0.18561257058679106, 0.18556701030927836, 0.18552147239263803, 0.18547595682041218, 0.18543046357615894, 0.18538499264345268, 0.1853395440058838, 0.18529411764705883, 0.18524871355060035, 0.185203331700147, 0.18515797207935342, 0.1851126346718903, 0.1850673194614443, 0.18502202643171806, 0.18497675556643015, 0.18493150684931506, 0.18488628026412326, 0.18484107579462103, 0.18479589342459057, 0.18475073313782991, 0.18470559491815294, 0.18466047874938935, 0.18461538461538463, 0.1845703125, 0.18452526238711253, 0.18448023426061494, 0.1844352281044157, 0.18439024390243902, 0.18434528163862474, 0.18430034129692832, 0.184255422861321, 0.18421052631578946, 0.18416565164433618, 0.18412079883097907, 0.18407596785975164, 0.18403115871470302, 0.18422973959600877, 0.18442822384428223, 0.1843833617124787, 0.18433852140077822, 0.18429370289326524, 0.18424890617403986, 0.1844471445929526, 0.184645286686103, 0.18460043721156183, 0.18455560951918407, 0.18475358096625394, 0.1849514563106796, 0.1849065760737685, 0.1848617176128093, 0.1848168809119573, 0.18477206595538312, 0.18472727272727274, 0.18468250121182744, 0.18463775139326388, 0.18459302325581395, 0.18454831678372488, 0.18450363196125907, 0.18445896877269427, 0.18441432720232334, 0.18461166223082506, 0.1845670053217223, 0.1845223700120919, 0.18471953578336556, 0.18491660623640319, 0.18511358144030932, 0.18531046146412178, 0.1852657004830918, 0.1852209611205023, 0.18517624336069533, 0.18537291817523532, 0.18532818532818532, 0.18528347406513873, 0.18523878437047755, 0.185194116228599, 0.18514946962391515, 0.18510484454085321, 0.18506024096385543, 0.18501565887737895, 0.18497109826589594, 0.18492655911389358, 0.18488204140587386, 0.18483754512635378, 0.18479307025986524, 0.18474861679095503, 0.1847041847041847, 0.1846597739841308, 0.18461538461538463, 0.18457101658255226, 0.18452666987025468, 0.18448234446312756, 0.1844380403458213, 0.1843937575030012, 0.1843494959193471, 0.18430525557955363, 0.18426103646833014, 0.18445670424562244, 0.1844124700239808, 0.1846080076720211, 0.18480345158197506, 0.18499880182123174, 0.18519405845711548, 0.18538922155688622, 0.1853448275862069, 0.18530045487191765, 0.1852561033987554, 0.18521177315147164, 0.1854066985645933, 0.18536235350394642, 0.18531802965088476, 0.18527372699019842, 0.18546845124282982, 0.18566308243727597, 0.18561872909698995, 0.18557439694291855, 0.18576886341929322, 0.18596323704941514, 0.18591885441527448, 0.18587449296110714, 0.18583015267175573, 0.18578583353207728, 0.1859799713876967, 0.18593563766388557, 0.18589132507149667, 0.18608529902311174, 0.18604097189137683, 0.18599666587282687, 0.18595238095238095, 0.18590811711497263, 0.18586387434554974, 0.18581965262907446, 0.1857754519505233, 0.18573127229488703, 0.18568711364717072, 0.18564297599239363, 0.18559885931558937, 0.18555476360180564, 0.18551068883610453, 0.18546663500356209, 0.18542260208926875, 0.185378590078329, 0.1853345989558614, 0.1852906287069988, 0.18524667931688804, 0.18520275077069007, 0.1851588430535799, 0.18511495615074663, 0.18507109004739336, 0.18502724472873727, 0.18498342018000946, 0.18493961638645512, 0.18489583333333334, 0.18485207100591716, 0.18504495977283483, 0.18500118287201325, 0.18495742667928097, 0.184913691179948, 0.18486997635933805, 0.18482628220278893, 0.18478260869565216, 0.18473895582329317, 0.18469532357109117, 0.1846517119244392, 0.1846081208687441, 0.18456455038942648, 0.18452100047192072, 0.18447747110167492, 0.18443396226415093, 0.18439047394482433, 0.18434700612918434, 0.18453924110299316, 0.18473138548539114, 0.18492343934040048, 0.18487988695242583, 0.18483635507417, 0.1847928436911488, 0.1847493527888915, 0.18470588235294116, 0.18466243236885438, 0.1846190028222013, 0.18457559369856572, 0.1847672778561354, 0.18495887191539365, 0.1849154135338346, 0.18510688278130139, 0.18529826209488023, 0.1854895515379197, 0.18544600938967137, 0.1854024876789486, 0.18535898639136555, 0.18555008210180624, 0.18574108818011256, 0.18569753810082062, 0.18565400843881857, 0.1856104991797516, 0.18556701030927836, 0.18552354181307099, 0.18548009367681498, 0.18543666588620933, 0.1853932584269663, 0.1855838989000702, 0.185774450163781, 0.18596491228070175, 0.18592142188961647, 0.18587795183539865, 0.18583450210378682, 0.18579107268053283, 0.18574766355140188, 0.18570427470217238, 0.18566090611863614, 0.1856175577865982, 0.18557422969187676, 0.1855309218203034, 0.18548763415772282, 0.18567763004432003, 0.18563432835820895, 0.18559104686407088, 0.18554778554778556, 0.18550454439524586, 0.18546132339235788, 0.18541812252504075, 0.18537494177922684, 0.18533178114086146, 0.18528864059590316, 0.18524552013032347, 0.18520241973010704, 0.18515933938125145, 0.18511627906976744, 0.18507323878167867, 0.18503021850302184, 0.18498721821984662, 0.18494423791821563, 0.1849012775842044, 0.18485833720390155, 0.1848154167634084, 0.18477251624883936, 0.18472963564632167, 0.18468677494199537, 0.18464393412201346, 0.18460111317254174, 0.18455831207975887, 0.18451553082985628, 0.18447276940903823, 0.18443002780352177, 0.1843873059995367, 0.1843446039833256, 0.1843019217411438, 0.18425925925925926, 0.1842166165239528, 0.1841739935215178, 0.18413139023826047, 0.18408880666049954, 0.18404624277456647, 0.18400369856680537, 0.18396117402357293, 0.18391866913123844, 0.18387618387618387, 0.1840646651270208, 0.18425305933964442, 0.18421052631578946, 0.1841680129240711, 0.18412551915089986, 0.1843137254901961, 0.18450184501845018, 0.18445930366612867, 0.18441678192715538, 0.18437427978796958, 0.18433179723502305, 0.18428933425478, 0.18424689083371718, 0.18420446695832374, 0.1841620626151013, 0.18411967779056387, 0.18407731247123793, 0.18403496664366228, 0.18399264029438822, 0.1839503334099793, 0.1839080459770115, 0.1838657779820731, 0.18382352941176472, 0.1837813002526993, 0.18373909049150206, 0.18369690011481057, 0.18365472910927455, 0.18361257746155613, 0.18379990821477743, 0.18398715301674695, 0.1841743119266055, 0.18413207979821142, 0.18408986703347088, 0.1842768737107495, 0.18446379468377636, 0.18442153493699887, 0.18437929454878607, 0.18433707350583925, 0.18452380952380953, 0.1847104600595102, 0.1848970251716247, 0.18485472431937772, 0.1848124428179323, 0.18477018065401327, 0.18472793781435756, 0.1846857142857143, 0.1846435100548446, 0.1846013251085218, 0.1845591594335313, 0.1847453756565426, 0.18493150684931506, 0.18488929468157955, 0.18484710178000913, 0.18503308236367785, 0.18499087591240876, 0.18517673888255415, 0.1851345189238486, 0.18509231821290176, 0.18505013673655424, 0.1850079744816587, 0.18496583143507972, 0.18492370758369392, 0.1848816029143898, 0.18483951741406784, 0.1847974510696404, 0.18475540386803185, 0.18471337579617833, 0.18489879463270412, 0.18508412914961347, 0.1852693794044101, 0.18522727272727274, 0.18518518518518517, 0.18514311676510678, 0.18510106745400864, 0.18505903723887376, 0.18501702610669693, 0.1849750340444848, 0.18493306103925572, 0.18489110707803993, 0.18484917214787933, 0.18480725623582767, 0.18476535932895036, 0.18472348141432457, 0.18468162247903921, 0.18463978251019483, 0.18459796149490373, 0.18455615942028986, 0.1845143762734888, 0.1844726120416478, 0.18443086671192577, 0.18438914027149322, 0.18434743270753223, 0.18430574400723654, 0.18426407415781143, 0.1844484629294756, 0.18463276836158193, 0.18481699051061906, 0.1847752428281003, 0.18495934959349594, 0.1849175886204561, 0.18487584650112868, 0.1848341232227488, 0.18479241877256317, 0.18497631400857206, 0.18516012629679748, 0.1851183765501691, 0.1850766456266907, 0.18503493351363534, 0.18499324019828753, 0.18495156566794324, 0.1849099099099099, 0.18486827291150643, 0.18482665466006304, 0.18478505514292146, 0.18474347434743474, 0.18470191226096738, 0.18466036887089518, 0.18484371486395323, 0.18480215827338128, 0.18476062036412677, 0.1849438202247191, 0.18512693776679398, 0.18508535489667566, 0.18526835841006065, 0.18545127974854064, 0.18540965207631874, 0.18536804308797128, 0.18532645277092213, 0.18528488111260655, 0.18524332810047095, 0.18542600896860986, 0.18560860793544048, 0.18556701030927836, 0.18552543132422136, 0.18548387096774194, 0.18544232922732362, 0.18540080609046125, 0.18535930154466085, 0.18531781557743957, 0.1852763481763258, 0.18523489932885906, 0.18519346902259, 0.1851520572450805, 0.1851106639839034, 0.1850692892266428, 0.18502793296089384, 0.18498659517426275, 0.18494527585436676, 0.1849039749888343, 0.18486269256530474, 0.18504464285714287, 0.18500334746708325, 0.18496207050423918, 0.18492081195627927, 0.18487957181088313, 0.18483835005574137, 0.1850200624164066, 0.18497882772453755, 0.18493761140819964, 0.18489641345511248, 0.18485523385300667, 0.18481407258962368, 0.18477292965271594, 0.18495437346984198, 0.184913217623498, 0.18487208008898776, 0.18483096085409254, 0.1847898599066044, 0.18474877723432637, 0.18470771282507223, 0.18488888888888888, 0.1848478115974228, 0.18480675255442025, 0.18476571174772374, 0.1847246891651865, 0.18490566037735848, 0.1848646249445184, 0.18504548480142002, 0.1850044365572316, 0.18496340652029275, 0.18492239467849225, 0.18488140101972955, 0.1848404255319149, 0.1847994682029692, 0.1847585290208241, 0.18471760797342193, 0.18467670504871567, 0.18463582023466904, 0.1845949535192563, 0.18455410489046248, 0.18451327433628317, 0.18447246184472463, 0.18443166740380362, 0.18439089100154765, 0.1843501326259947, 0.18430939226519338, 0.18426866990720284, 0.18422796554009277, 0.18440812720848057, 0.18436741002428791, 0.18432671081677704, 0.18428602957404547, 0.18446601941747573, 0.1846459298477829, 0.18482576091751213, 0.18500551267916207, 0.1849647266313933, 0.18492395856292704, 0.18488320846187747, 0.18506278916060806, 0.18524229074889867, 0.18520149746751816, 0.1851607221488331, 0.18511996478098172, 0.1850792253521127, 0.18503850385038503, 0.18499780026396834, 0.18495711458104244, 0.1849164467897977, 0.18487579687843483, 0.18483516483516482, 0.18479455064820918, 0.18475395430579966, 0.18471337579617833, 0.18467281510759773, 0.18463227222832052, 0.18459174714661986, 0.184551239850779, 0.1845107503290917, 0.1844702785698618, 0.1844298245614035, 0.1843893882920412, 0.18434896975010961, 0.18430856892395353, 0.18426818580192814, 0.18422782037239868, 0.1841874726237407, 0.18414714254433984, 0.18410683012259194, 0.18406653534690304, 0.18402625820568927, 0.18398599868737694, 0.18394575678040245, 0.18390553247321234, 0.18386532575426323, 0.18382513661202185, 0.18378496503496503, 0.18374481101157963, 0.1837046745303626, 0.18366455557982092, 0.18362445414847162, 0.18358437022484173, 0.18354430379746836, 0.18350425485489855, 0.18346422338568935, 0.18342420937840787, 0.18338421282163106, 0.18334423370394592, 0.18330427201394944, 0.18326432774024842, 0.1832244008714597, 0.18318449139621, 0.1831445993031359, 0.18310472458088395, 0.18306486721811058, 0.18302502720348204, 0.1829852045256745, 0.18294539917337393, 0.1829056111352762, 0.18286584040008697, 0.18282608695652175, 0.1827863507933058, 0.18296392872664058, 0.18314142950249837, 0.18310165073848828, 0.18327904451682953, 0.18323925314806774, 0.18319947905361406, 0.1831597222222222, 0.18311998264265567, 0.18308026030368763, 0.18304055519410106, 0.18300086730268864, 0.18296119661825277, 0.18292154312960554, 0.1828819068255688, 0.18284228769497402, 0.18280268572666233, 0.18276310090948464, 0.18272353323230137, 0.18268398268398267, 0.18264444925340836, 0.18260493292946775, 0.18256543370105993, 0.18274221453287198, 0.1827027027027027, 0.18266320795503674, 0.18262373027879836, 0.18258426966292135, 0.18254482609634912, 0.18272138228941684, 0.1828978622327791, 0.18307426597582038, 0.1830347507014893, 0.18321104876996117, 0.1831715210355987, 0.18313201035375323, 0.18309251671339227, 0.18305304010349288, 0.1830135805130416, 0.18297413793103448, 0.18315018315018314, 0.1831107281344248, 0.18328666810251992, 0.1834625322997416, 0.18342303552206674, 0.18338355574687903, 0.18334409296320206, 0.18330464716006883, 0.18326521832652184, 0.1832258064516129, 0.18340141904966673, 0.18357695614789338, 0.18353750268643887, 0.18349806617963044, 0.18345864661654135, 0.18341924398625428, 0.18359458879106721, 0.18376985830828682, 0.1837304142519854, 0.18369098712446352, 0.18365157691482514, 0.18361218361218362, 0.1835728072056616, 0.1835334476843911, 0.1834941050375134, 0.18345477925417916, 0.18341547032354832, 0.18337617823479005, 0.18333690297708288, 0.18329764453961456, 0.1832584029115821, 0.1832191780821918, 0.1831799700406591, 0.18314077877620882, 0.18310160427807487, 0.18306244653550044, 0.18302330553773788, 0.18298418127404875, 0.18294507373370378, 0.1829059829059829, 0.18286690878017517, 0.1828278513455788, 0.18278881059150118, 0.18274978650725876, 0.18292422625400215, 0.18288518992744346, 0.18284617025816088, 0.1828071672354949, 0.18276818084879506, 0.18272921108742005, 0.1826902579407376, 0.18265132139812446, 0.18261240144896654, 0.18257349808265871, 0.18274760383386582, 0.18270868824531517, 0.18266978922716628, 0.1826309067688378, 0.1825920408597574, 0.1825531914893617, 0.18251435864709636, 0.182475542322416, 0.18264937274080376, 0.1828231292517007, 0.18278427205100956, 0.1827454313642159, 0.18270660718079457, 0.1826677994902294, 0.18262900828201317, 0.18259023354564755, 0.18255147527064317, 0.18251273344651953, 0.182474008062805, 0.1824352991090369, 0.1823966065747614, 0.1823579304495335, 0.18231927072291712, 0.18228062738448494, 0.1822420004238186, 0.18220338983050846, 0.18216479559415377, 0.18212621770436255, 0.18208765615075165, 0.18204911092294665, 0.182010582010582, 0.18197206940330088, 0.18193357309075522, 0.18189509306260576, 0.1818566293085219, 0.18181818181818182, 0.18177975058127246, 0.18174133558748942, 0.18170293682653707, 0.18166455428812844, 0.1816261879619852, 0.18158783783783783, 0.18154950390542537, 0.18172224567327985, 0.18168389955686853, 0.18164556962025316, 0.18160725585319554, 0.18156895824546604, 0.18153067678684376, 0.18149241146711637, 0.18145416227608008, 0.18141592920353983, 0.18137771223930904, 0.18133951137320978, 0.18130132659507264, 0.18126315789473685, 0.18143548726583877, 0.1816077441077441, 0.18156953503050705, 0.18153134202776608, 0.1814931650893796, 0.18145500420521446, 0.1814168593651461, 0.18158890290037832, 0.18176087413322126, 0.18172268907563024, 0.18168452005881117, 0.18164636707265855, 0.18160823010707539, 0.18157010915197314, 0.18153200419727178, 0.1814939152328997, 0.1814558422487938, 0.18162751677852348, 0.18158943174669742, 0.18155136268343816, 0.18172290924334522, 0.18189438390611903, 0.1820657867169495, 0.18202764976958524, 0.1819895287958115, 0.18195142378559465, 0.18191333472890936, 0.1818752616157388, 0.18183720443607448, 0.18179916317991632, 0.18176113783727255, 0.18172312839815977, 0.18168513485260296, 0.18164715719063546, 0.18160919540229886, 0.18157124947764314, 0.18153331940672654, 0.1814954051796157, 0.18145750678638548, 0.181419624217119, 0.18138175746190774, 0.18134390651085142, 0.181306071354058, 0.18126825198164373, 0.18123044838373306, 0.1811926605504587, 0.18115488847196165, 0.18132555231346395, 0.18149614503021463, 0.18145833333333333, 0.18162882732764007, 0.18159100374843815, 0.18176139912554654, 0.18172356369691922, 0.18168574401664933, 0.18164794007490637, 0.1816101518618681, 0.18157237936772047, 0.1815346225826575, 0.1814968814968815, 0.1814591561006028, 0.1814214463840399, 0.1813837523374195, 0.18134607395097632, 0.18130841121495328, 0.18147840531561463, 0.18144073074527714, 0.18161062681610626, 0.18178045237601162, 0.18195020746887966, 0.18191246629330016, 0.18187474077146412, 0.182044370723616, 0.1822139303482587, 0.1821761658031088, 0.18213841690841276, 0.1823078516677025, 0.18247721623860813, 0.1826465106647339, 0.18281573498964804, 0.18298488925688264, 0.18294701986754966, 0.18290916614938962, 0.18287132809267687, 0.1828335056876939, 0.1827956989247312, 0.18275790779408724, 0.18272013228606862, 0.18268237239098986, 0.18264462809917356, 0.1826068994009502, 0.1825691862866584, 0.18253148874664465, 0.18249380677126342, 0.1824561403508772, 0.18241848947585637, 0.18238085413657934, 0.18234323432343233, 0.18230563002680966, 0.1822680412371134, 0.18223046794475367, 0.18219291014014838, 0.18215536781372346, 0.18211784095591266, 0.18208032955715758, 0.18204283360790774, 0.18200535309862054, 0.18196788801976121, 0.18193043836180284, 0.18189300411522633, 0.18185558527052048, 0.18181818181818182, 0.18178079374871478, 0.18174342105263158, 0.1817060637204522, 0.1816687217427045, 0.181631395109924, 0.18159408381265407, 0.18155678784144588, 0.1815195071868583, 0.18148224183945802, 0.18144499178981938, 0.18140775702852452, 0.1813705375461633, 0.18133333333333335, 0.18129614438063987, 0.18125897067869592, 0.18122181221812217, 0.18118466898954705, 0.18114754098360655, 0.18111042819094447, 0.1810733306022122, 0.18103624820806882, 0.180999180999181, 0.18096212896622313, 0.1809250920998772, 0.18088807039083282, 0.18085106382978725, 0.1808140724074453, 0.18077709611451942, 0.18074013494172972, 0.18070318887980377, 0.1806662579194768, 0.18062934205149161, 0.18059244126659857, 0.18055555555555555, 0.18051868490912804, 0.180481829318089, 0.18044498877321902, 0.18040816326530612, 0.18037135278514588, 0.18033455732354142, 0.18029777687130327, 0.1802610114192496, 0.1802242609582059, 0.1801875254790053, 0.18015080497248828, 0.18011409942950285, 0.18028111631696883, 0.18024439918533605, 0.1802076970067196, 0.18017100977198697, 0.18013433747201302, 0.1800976800976801, 0.18006103763987794, 0.18002441008950365, 0.17998779743746188, 0.1799511996746645, 0.1799146167920309, 0.1798780487804878, 0.17984149563096932, 0.1798049573344169, 0.1797684338817794, 0.17993501218521527, 0.18010152284263958, 0.18026796589524968, 0.18023137812056017, 0.18019480519480519, 0.18015824710894704, 0.18012170385395537, 0.18008517542080713, 0.18004866180048662, 0.1800121629839854, 0.1799756789623024, 0.18014184397163122, 0.18010534846029175, 0.18006886773344136, 0.180032401782098, 0.1799959505972869, 0.1799595141700405, 0.1799230924913985, 0.17988668555240794, 0.179850293344123, 0.17981391585760517, 0.17977755308392315, 0.17974120501415286, 0.1797048716393774, 0.17966855295068715, 0.17963224893917965, 0.1797979797979798, 0.17976166431024035, 0.1797253634894992, 0.17968907732687261, 0.17965280581348406, 0.17961654894046417, 0.1797820823244552, 0.17994754892071818, 0.1799112545381202, 0.1798749747933051, 0.17983870967741936, 0.18000403144527313, 0.1799677549375252, 0.18013298408220835, 0.18009669621273167, 0.18006042296072508, 0.180225533628675, 0.18018924904368835, 0.18015297906602254, 0.1803179714228215, 0.18048289738430584, 0.18064775699054517, 0.18061142397425584, 0.18057510557007841, 0.18053880176919984, 0.18050251256281408, 0.1804662379421222, 0.18042997789833232, 0.1803937324226597, 0.18055834504920668, 0.18052208835341366, 0.18048584621561936, 0.18065034122842233, 0.18081477021874373, 0.18097913322632425, 0.18094282848545637, 0.18110709987966306, 0.1810707840385001, 0.1810344827586207, 0.1809981960312688, 0.1811623246492986, 0.1813263874974955, 0.1812900641025641, 0.18125375525736032, 0.18121746095314378, 0.18138138138138138, 0.18134507606084868, 0.18150890534320593, 0.18167266906762705, 0.1816363272654531, 0.1816, 0.18156368726254749, 0.18152738904438226, 0.18169098540875475, 0.18185451638689049, 0.18181818181818182, 0.18198162205353577, 0.18214499700419412, 0.18210862619808307, 0.1820722699141545, 0.18203592814371258, 0.18199960087806824, 0.1819632881085395, 0.18192698982645122, 0.18189070602313523, 0.1818544366899302, 0.18201754385964913, 0.18218058600757425, 0.18234356317257872, 0.18230723251643755, 0.18227091633466136, 0.18223461461860188, 0.1821983273596177, 0.18216205454907425, 0.18212579617834396, 0.18208955223880596, 0.1820533227218464, 0.18201710761885817, 0.18198090692124105, 0.18194472062040168, 0.18210735586481114, 0.18207115881534486, 0.1820349761526232, 0.18199880786807074, 0.18196265395311878, 0.18212512413108242, 0.18208895949166004, 0.18205280921183245, 0.18221516474791585, 0.1821790037705894, 0.18214285714285713, 0.18230509819480262, 0.18226894089646967, 0.18223279793773547, 0.18219666931007136, 0.1823587710604559, 0.1823226317875545, 0.18228650683574402, 0.18225039619651348, 0.18221429986135868, 0.18217821782178217, 0.1821421500692932, 0.18210609659540775, 0.1822679596279438, 0.1822318955282944, 0.18219584569732938, 0.18215981012658228, 0.18212378880759345, 0.18208778173190984, 0.1820517888910852, 0.18201581027667985, 0.1819798458802608, 0.18194389569340183, 0.1819079597076832, 0.18187203791469195, 0.18183613030602172, 0.1818002368732728, 0.1817643576080521, 0.18172849250197318, 0.18169264154665615, 0.1816568047337278, 0.18162098205482152, 0.1815851735015773, 0.18154937906564164, 0.1815135987386677, 0.18167487684729064, 0.1818360914105595, 0.1818002757533977, 0.1817644742024419, 0.18192557590076786, 0.18188976377952756, 0.1818539657547727, 0.18181818181818182, 0.1817824119614401, 0.18174665617623917, 0.18190757128810225, 0.1820684231222965, 0.18222921171613918, 0.18238993710691823, 0.18235409707211633, 0.18231827111984283, 0.18228245924179926, 0.18224666142969365, 0.18221087767524052, 0.18217510797016098, 0.18213935230618253, 0.18210361067503925, 0.18206788306847166, 0.18203216947822676, 0.18199646989605806, 0.18196078431372548, 0.1819251127229955, 0.18188945511564092, 0.18185381148344112, 0.18181818181818182, 0.18178256611165525, 0.18174696435566, 0.18171137654200117, 0.1816758026624902, 0.181640242708945, 0.18160469667318982, 0.18156916454705538, 0.18153364632237873, 0.18149814199100334, 0.18146265154477903, 0.18142717497556207, 0.181391712275215, 0.1813562634356068, 0.18132082844861275, 0.18128540730611448, 0.18125, 0.18121460652216365, 0.18117922686450605, 0.1813390591450322, 0.18130366900858705, 0.18126829268292682, 0.18123293015996877, 0.18119758143163645, 0.1811622464898596, 0.18112692532657437, 0.1810916179337232, 0.18105632430325472, 0.18102104442712394, 0.18098577829729204, 0.18095052590572652, 0.18091528724440117, 0.18088006230529596, 0.1808448510803971, 0.18080965356169715, 0.1807744697411948, 0.18073929961089494, 0.1807041431628088, 0.18066900038895373, 0.1806338712813533, 0.18059875583203733, 0.18056365403304178, 0.18052856587640886, 0.1804934913541869, 0.18045843045843046, 0.18042338318120024, 0.18038834951456312, 0.18035332945059213, 0.18031832298136646, 0.18028333009897146, 0.18044237485448195, 0.18040737148399613, 0.18056633048875098, 0.1807252278456467, 0.18088406359053896, 0.18104283775925567, 0.1812015503875969, 0.181360201511335, 0.18132506780317706, 0.1812899477048228, 0.1812548412083656, 0.18121974830590512, 0.18118466898954705, 0.18114960325140314, 0.18111455108359134, 0.18107951247823564, 0.18104448742746615, 0.18100947592341907, 0.18097447795823665, 0.18113280494877249, 0.18109779667568612, 0.18106280193236715, 0.1812210200927357, 0.18137917712961174, 0.18153727307840864, 0.18169530797451244, 0.18166023166023165, 0.18162516888631539, 0.18159011964492475, 0.1815550839282269, 0.18152006172839505, 0.18148505303760848, 0.18145005784805246, 0.18141507615191826, 0.18138010794140325, 0.18134515320871072, 0.1813102119460501, 0.18127528414563668, 0.18124036979969183, 0.1812054689004429, 0.1811705814401232, 0.1811357074109721, 0.1811008468052348, 0.1810659996151626, 0.1810311658330127, 0.18099634545104828, 0.18096153846153845, 0.1809267448567583, 0.18089196462898885, 0.180857197770517, 0.18082244427363567, 0.1809798270893372, 0.180945063388398, 0.18091031304013827, 0.18087557603686635, 0.18084085237089653, 0.18080614203454895, 0.1807714450201497, 0.1807367613200307, 0.18070209092652983, 0.1806674338319908, 0.18063279002876317, 0.18059815950920247, 0.18056354226566992, 0.18052893829053276, 0.180494347576164, 0.18045977011494252, 0.180425205899253, 0.180390654921486, 0.1803561171740379, 0.18032159264931089, 0.1802870813397129, 0.18025258323765786, 0.18021809833556535, 0.18018362662586074, 0.18014916810097534, 0.18011472275334608, 0.1800802905754158, 0.18004587155963303, 0.18001146569845214, 0.17997707298433321, 0.17994269340974212, 0.1799083269671505, 0.1798739736490357, 0.17983963344788087, 0.17980530635617484, 0.17977099236641222, 0.1797366914710933, 0.17970240366272416, 0.1796681289338165, 0.17963386727688788, 0.1797902764537655, 0.17994662600076247, 0.17991233085572708, 0.1798780487804878, 0.18003429224614212, 0.18019047619047618, 0.18034660064749572, 0.1805026656511805, 0.18046830382638493, 0.1804339550818424, 0.18039961941008564, 0.18036529680365296, 0.18033098725508845, 0.1802966907569418, 0.1802624073017684, 0.18022813688212927, 0.18038395742254323, 0.18034967692892437, 0.18031540946228386, 0.18028115501519756, 0.18024691358024691, 0.18021268515001898, 0.18017846971710652, 0.18014426727410782, 0.18011007781362687, 0.18007590132827325, 0.18023145513185354, 0.18038694992412746, 0.18054238573866868, 0.1806977626090254, 0.18066350710900475, 0.1806292645943897, 0.18078453666856167, 0.18093974990526715, 0.1809054745216897, 0.18087121212121213, 0.180836962696459, 0.18080272624006058, 0.18076850274465267, 0.1807342922028766, 0.18070009460737937, 0.18066590995081347, 0.18063173822583695, 0.18059757942511345, 0.18056343354131216, 0.18052930056710775, 0.18049518049518049, 0.18065003779289493, 0.18080483657661062, 0.18095957687948622, 0.18092540132200188, 0.18089123867069487, 0.18104587502359826, 0.18101170252925633, 0.1809775429326288, 0.1809433962264151, 0.18090926240332011, 0.18087514145605432, 0.1808410333773336, 0.18080693815987933, 0.18077285579641847, 0.18092725216735772, 0.18089315997738836, 0.1808590806330068, 0.18082501412695423, 0.1807909604519774, 0.18075691960082846, 0.18072289156626506, 0.18068887634105024, 0.18065487391795257, 0.18062088428974601, 0.18058690744920994, 0.1805529433891292, 0.1805189921022941, 0.18048505358150027, 0.18045112781954886, 0.18041721480924638, 0.18038331454340473, 0.18034942701484125, 0.18031555221637866, 0.18028169014084508, 0.18024784078107398, 0.1804017270508729, 0.18055555555555555, 0.1807093263276412, 0.18086303939962475, 0.18101669480397675, 0.1811702925731433, 0.18113632102006375, 0.18110236220472442, 0.18125585754451734, 0.18140929535232383, 0.18156267566048342, 0.18152866242038215, 0.18149466192170818, 0.18146067415730338, 0.18142669912001497, 0.18139273680269563, 0.18135878719820325, 0.1813248502994012, 0.1814780168381665, 0.18163112607557053, 0.18178417804376285, 0.18193717277486912, 0.18190315946905963, 0.18186915887850466, 0.1818351709960755, 0.18180119581464874, 0.1817672333271063, 0.18173328352633544, 0.18169934640522875, 0.1818521284540702, 0.18181818181818182, 0.18178424785367675, 0.18175032655346146, 0.18171641791044776, 0.1816825219175527, 0.1816486385676986, 0.18161476785381317, 0.18158090976882924, 0.18154706430568499, 0.1815132314573239, 0.1814794112166946, 0.18144560357675113, 0.18159806295399517, 0.18175046554934823, 0.1817166263265686, 0.18168279970215934, 0.18164898566908616, 0.18161518422032005, 0.18158139534883722, 0.18154761904761904, 0.18151385530965222, 0.1814801041279286, 0.18144636549544524, 0.18141263940520447, 0.1813789258502137, 0.1813452248234857, 0.18131153631803826, 0.1812778603268945, 0.18124419684308263, 0.18121054585963609, 0.18117690736959347, 0.18114328136599853, 0.18110966784190016, 0.1810760667903525, 0.18104247820441477, 0.18100890207715134, 0.18116076395327277, 0.18131256952169078, 0.1814643188137164, 0.1816160118606375, 0.18176764869371873, 0.18191922934420154, 0.18188553435821447, 0.18185185185185185, 0.18181818181818182, 0.18178452425027766, 0.18175087914121785, 0.18190229459659513, 0.1818686401480111, 0.1818349981502035, 0.181986314037359, 0.18213757396449703, 0.18228877796265483, 0.1822550831792976, 0.18222140085012012, 0.18237250554323725, 0.18233881396637724, 0.18230513483561137, 0.18227146814404432, 0.18223781388478583, 0.1822041720509507, 0.18235511258767073, 0.18232146152426648, 0.18228782287822878, 0.18225419664268586, 0.18222058281077094, 0.18218698137562234, 0.18215339233038347, 0.18211981566820276, 0.1820862513822337, 0.1820526994656348, 0.18201915991156964, 0.18198563271320686, 0.18195211786372006, 0.18191861535628798, 0.18188512518409425, 0.18185164734032763, 0.18181818181818182, 0.18178472861085557, 0.1817512877115526, 0.1817178591134817, 0.18168444280985657, 0.18165103879389594, 0.18161764705882352, 0.18158426759786803, 0.18155090040426314, 0.18151754547124746, 0.1816678912564291, 0.18163452708907254, 0.18178479618068308, 0.18175142280154213, 0.1817180616740088, 0.18168471279133785, 0.181651376146789, 0.18161805173362686, 0.18158473954512105, 0.18155143957454611, 0.18151815181518152, 0.18148487626031165, 0.1814516129032258, 0.1816016126076599, 0.18156834005130085, 0.18153507968492397, 0.1815018315018315, 0.18146859549533054, 0.1816184547784694, 0.18158520959179938, 0.1815519765739385, 0.18151875571820678, 0.18148554701792902, 0.181452350466435, 0.18141916605705927, 0.18138599378314135, 0.1813528336380256, 0.18150246755620544, 0.18165204678362573, 0.18161885620317925, 0.1815856777493606, 0.18155251141552511, 0.18151935719503287, 0.18148621508124885, 0.1814530850675429, 0.18141996714728964, 0.1813868613138686, 0.18135376756066413, 0.1813206858810653, 0.18128761626846618, 0.1812545587162655, 0.18122151321786692, 0.18118847976667882, 0.18133770730818297, 0.18130466472303208, 0.1812716341774458, 0.18123861566484517, 0.181205609178656, 0.18135469774217042, 0.1813216821409066, 0.18128867855842737, 0.18125568698817107, 0.1812227074235808, 0.1811897398581044, 0.1811567842851946, 0.18112384069830878, 0.18127272727272728, 0.18123977458643883, 0.1812068338785896, 0.18117390514264947, 0.18114098837209303, 0.18110808356039965, 0.1810751907010534, 0.18104230978754313, 0.18100944081336237, 0.18097658377200945, 0.1809437386569873, 0.18091090546180366, 0.18087808417997098, 0.18084527480500634, 0.18081247733043163, 0.18077969174977335, 0.18092820884699057, 0.18089541417437013, 0.18104385646973542, 0.1810110527269433, 0.18097826086956523, 0.1809454808911429, 0.18091271278522275, 0.1808799565453558, 0.18084721216509775, 0.18081447963800906, 0.18078175895765472, 0.18074905011760448, 0.1807163531114327, 0.1806836679327184, 0.18065099457504522, 0.18061833303200145, 0.18058568329718006, 0.18055304536417857, 0.1805204192265992, 0.18048780487804877, 0.18045520231213874, 0.1804226115224851, 0.18039003250270855, 0.18035746524643437, 0.18032490974729243, 0.18029236599891715, 0.18025983399494766, 0.18022731372902762, 0.18037518037518038, 0.18052299368800723, 0.18049044356292823, 0.1804579051739679, 0.1804253785147801, 0.18039286357902326, 0.18036036036036035, 0.18032786885245902, 0.18047550432276657, 0.1804430037817396, 0.18041051494418436, 0.18037803780378037, 0.18034557235421167, 0.18031311858916682, 0.18028067650233898, 0.1802482460874258, 0.18039568345323742, 0.18036324402085957, 0.18033081625314634, 0.1802984001438073, 0.18026599568655644, 0.1802336028751123, 0.180201221703198, 0.18016885216454104, 0.18013649425287356, 0.18028371341353924, 0.18025134649910232, 0.18021899120445162, 0.18018664752333094, 0.1801543154494886, 0.18030139935414424, 0.18044843049327355, 0.18041606886657102, 0.1803837188452573, 0.1803513804230907, 0.1804982971858756, 0.18064516129032257, 0.1806127934061996, 0.18058043711931207, 0.18054809242342826, 0.18051575931232092, 0.18048343777976725, 0.18045112781954886, 0.18041882942545195, 0.180386542591267, 0.18035426731078905, 0.18050089445438283, 0.18064746914684315, 0.18061516452074391, 0.1805828714464509, 0.18055058991776904, 0.1805183199285076, 0.18048606147248034, 0.18045381454350545, 0.1804215791354055, 0.1805679585640293, 0.18071428571428572, 0.18068202106766648, 0.1806497679400214, 0.18061752632518294, 0.18076374018558172, 0.1809099018733274, 0.18105601141633965, 0.18102372034956304, 0.18099144079885876, 0.1809591727580674, 0.18092691622103388, 0.18089467118160757, 0.1808624376336422, 0.1808302155709959, 0.18079800498753118, 0.18094390026714158, 0.18108974358974358, 0.18105750400569698, 0.18102527589889642, 0.1809930592632141, 0.18096085409252669, 0.18092866038071517, 0.1808964781216649, 0.1808643073092655, 0.1810099573257468, 0.18097777777777777, 0.1809456096693921, 0.18091345299449085, 0.1810589907604833, 0.18120447681648605, 0.18134991119005328, 0.18131770555851537, 0.18128551136363635, 0.18125332859932541, 0.18122115725949592, 0.1813664596273292, 0.18133427963094392, 0.18147951037786056, 0.18162468960624334, 0.18176981734350062, 0.18173758865248227, 0.18188264492111328, 0.18185040765685928, 0.18181818181818182, 0.1817859673990078, 0.18175376439326837, 0.18172157279489903, 0.18168939259783956, 0.181657223796034, 0.1816250663834307, 0.1815929203539823, 0.18156078570164572, 0.18152866242038215, 0.18149655050415708, 0.18146444994694022, 0.18143236074270558, 0.1815770862800566, 0.18172176065052148, 0.18168964298338636, 0.1816575366672557, 0.18180212014134275, 0.18177000529941706, 0.18173790180148358, 0.18170580964153277, 0.1816737288135593, 0.18164165931156223, 0.18160960112954466, 0.18157755426151403, 0.181545518701482, 0.18151349444346446, 0.1814814814814815, 0.1814494798095574, 0.18141748942172073, 0.18138551031200423, 0.18135354247444482, 0.1814977973568282, 0.18164200140944328, 0.18178615465915096, 0.181754138781261, 0.18189822151787285, 0.18204225352112677, 0.1820102094701637, 0.18215417106652587, 0.1822980819989442, 0.18244194229415905, 0.18240985048372912, 0.18255364052057685, 0.18252154035519605, 0.18248945147679324, 0.1824573738794164, 0.18242530755711775, 0.1823932525039536, 0.18236120871398454, 0.18232917618127525, 0.18229715489989462, 0.18244073748902545, 0.18240870786516855, 0.18237668948569422, 0.18234468234468235, 0.18231268643621687, 0.1824561403508772, 0.1824241361164708, 0.18256752016836197, 0.18271085393652464, 0.1826788218793829, 0.18264680105170902, 0.182614791447599, 0.18275801647100054, 0.1829011913104415, 0.18304431599229287, 0.18318739054290717, 0.18333041498861846, 0.18347338935574228, 0.18361631367057588, 0.18375918795939797, 0.18390201224846894, 0.18386983904828552, 0.1838376771033759, 0.1838055264078349, 0.1837733869557615, 0.1839160839160839, 0.18405873099108547, 0.18420132820692064, 0.18434387558972568, 0.18448637316561844, 0.18445414847161573, 0.18442193503318197, 0.18438973284442117, 0.18435754189944134, 0.18432536219235468, 0.18429319371727748, 0.18426103646833014, 0.18422889043963714, 0.18419675562532706, 0.18416463201953262, 0.18413251961639057, 0.18410041841004185, 0.18406832839463133, 0.1840362495643081, 0.18417842829761283, 0.1843205574912892, 0.18428845148928757, 0.18425635667014978, 0.18422427302803412, 0.18419220055710306, 0.18416013925152305, 0.18412808910546466, 0.18409605011310248, 0.18406402226861518, 0.18420594886067143, 0.18434782608695652, 0.18448965397322206, 0.1844575799721836, 0.18442551712150182, 0.18439346541536322, 0.1843614248479583, 0.1843293954134816, 0.18429737710613167, 0.18426536992011114, 0.18423337384962668, 0.1842013888888889, 0.18416941503211248, 0.18413745227351613, 0.1841055006073226, 0.18407356002775851, 0.18404163052905465, 0.18400971210544573, 0.18397780475117045, 0.18394590846047157, 0.18391402322759576, 0.18388214904679376, 0.18385028591232022, 0.18381843381843382, 0.18395981292222416, 0.18392795289227573, 0.1838961038961039, 0.18386426592797783, 0.18383243898217067, 0.1838006230529595, 0.18394185845301955, 0.18408304498269895, 0.1842241826673586, 0.18436527153234175, 0.18433339097354315, 0.1843015214384509, 0.1842696629213483, 0.1844106463878327, 0.18437878002419217, 0.18451969592259848, 0.18466056313698392, 0.1848013816925734, 0.18476946986703505, 0.1847375690607735, 0.18470567926808218, 0.18467380048325854, 0.18464193270060397, 0.18478260869565216, 0.18475073313782991, 0.1848913418420145, 0.18503190205207795, 0.185, 0.18496810894673332, 0.18493622888659084, 0.18490435981388936, 0.1848725017229497, 0.18484065460809646, 0.1848088184636583, 0.18477699328396763, 0.18474517906336088, 0.18471337579617833, 0.1846815834767642, 0.1848218895198761, 0.18496214728148658, 0.1849303285738861, 0.1848985208118335, 0.18486672398968185, 0.18483493810178817, 0.18480316314251333, 0.18477139910622206, 0.18491149682075958, 0.18487972508591066, 0.184847964267308, 0.18481621435932669, 0.18478447535634554, 0.18475274725274726, 0.18472103004291845, 0.18486096807415037, 0.18500085807448086, 0.1849691146190803, 0.18493738205524105, 0.18490566037735848, 0.18504544675012863, 0.18501371742112482, 0.1849819989713698, 0.1849502913952691, 0.1849185946872322, 0.1848869088416724, 0.18485523385300667, 0.18482356971565606, 0.18479191642404522, 0.18493150684931506, 0.18507104947782915, 0.18521054433413214, 0.18534999144275202, 0.18531827515400412, 0.18545765611633874, 0.18559698939445776, 0.18556524713528305, 0.18570451436388508, 0.18584373397161907, 0.18598290598290598, 0.18612203042215006, 0.18609022556390978, 0.1862292841277977, 0.18619747181414417, 0.18616567036720752, 0.18613387978142076, 0.1862728359228274, 0.18641174462273813, 0.1863799283154122, 0.1863481228668942, 0.1864869476198601, 0.1866257250085295, 0.1865938939109671, 0.18656207366984992, 0.1867007672634271, 0.18666893965223322, 0.18680756775183227, 0.18694614860259032, 0.18708468222865907, 0.18722316865417377, 0.18719127916879577, 0.18715940054495914, 0.1871275327771156, 0.1870956758597208, 0.18723404255319148, 0.18720217835262082, 0.18734047983665136, 0.18747873426335487, 0.18744684470147985, 0.18741496598639457, 0.1873830981125659, 0.18735124107446446, 0.18731939486656468, 0.18728755948334466, 0.18725573491928632, 0.1872239211688753, 0.18736198403261423, 0.1875, 0.18763796909492272, 0.18777589134125636, 0.1879137667628586, 0.1878818737270876, 0.1878499915153572, 0.18781812012215812, 0.18778625954198475, 0.18775440976933513, 0.1877225707987112, 0.18769074262461852, 0.18765892524156635, 0.1876271186440678, 0.18759532282663954, 0.1875635377838021, 0.1875317635100796, 0.1875, 0.18746824724809483, 0.1876058245851676, 0.18774335534112072, 0.18771157752200407, 0.18784904383144357, 0.18781725888324874, 0.18778548468956183, 0.18775372124492556, 0.18789108743446642, 0.18802840716942848, 0.1881656804733728, 0.1881338742393509, 0.18810207875612642, 0.1880702940182494, 0.1880385200202737, 0.18800675675675677, 0.18814389461239656, 0.18828098615332658, 0.18841803140300523, 0.1885550303848751, 0.18852320675105486, 0.18849139385757677, 0.18845959169900456, 0.18842780026990552, 0.18856468207117558, 0.1885328836424958, 0.18850109593660427, 0.18863789615643964, 0.18860610146637452, 0.18857431749241657, 0.18854254422914912, 0.18851078167115903, 0.18847902981303688, 0.1884472886493769, 0.1884155581747769, 0.18838383838383838, 0.18835212927116646, 0.1883204308313699, 0.18828874305906107, 0.188257065948856, 0.18822539949537426, 0.18819374369323916, 0.18816209853707752, 0.18813046402151984, 0.1880988401412002, 0.1880672268907563, 0.18803562426482945, 0.18800403225806453, 0.18797245086511002, 0.18794088008061807, 0.18790931989924434, 0.1878777703156481, 0.18801410105757932, 0.18798254447801277, 0.18795099848967947, 0.18791946308724833, 0.1878879382653917, 0.18785642401878563, 0.18782492034210968, 0.18779342723004694, 0.18776194467728416, 0.18773047267851156, 0.187699011228423, 0.1876675603217158, 0.18763611995309096, 0.18760469011725292, 0.18757327080890973, 0.18754186202277295, 0.1876778838104805, 0.18781386006026113, 0.18778242677824267, 0.18775100401606426, 0.18771959176844571, 0.1876881900301104, 0.18765679879578526, 0.18762541806020067, 0.1875940478180906, 0.18756268806419257, 0.18753133879324754, 0.1875, 0.187468671679198, 0.18743735382559304, 0.1874060464339402, 0.187374749498998, 0.18734346301552846, 0.18731218697829716, 0.1872809213820731, 0.18724966622162884, 0.18721842149174037, 0.1871871871871872, 0.1871559633027523, 0.18712474983322214, 0.1870935467733867, 0.18706235411803934, 0.18703117186197699, 0.187, 0.18696883852691218, 0.18710429856714428, 0.18723971347659504, 0.1873750832778148, 0.18751040799333887, 0.1874791874791875, 0.18744797735974697, 0.1874167776298269, 0.18738558828424032, 0.18735440931780367, 0.18732324072533688, 0.18729208250166335, 0.18726093464160984, 0.18722979714000665, 0.18719866999168744, 0.18733377659574468, 0.1874688382915074, 0.18743768693918245, 0.1875726864927729, 0.1877076411960133, 0.18767646570337154, 0.18764530056459647, 0.18778017599203056, 0.18791500664010624, 0.18788381742738589, 0.18785263856621306, 0.1878214700514352, 0.18795620437956204, 0.18792502902637254, 0.187893864013267, 0.18786270933510196, 0.1879973474801061, 0.1879661859771258, 0.18810076234670203, 0.18823529411764706, 0.18820410868124585, 0.18817293357627962, 0.1881417687976151, 0.18811061434012255, 0.1880794701986755, 0.18804833636815096, 0.18801721284342932, 0.18815158034089027, 0.18828590337524817, 0.18825475599669148, 0.18822361892160105, 0.1883578634033405, 0.18832671957671956, 0.18829558604728056, 0.18826446280991735, 0.18823334985952736, 0.18820224719101122, 0.1881711547992731, 0.18814007267922034, 0.18810900082576384, 0.18807793923381771, 0.1882119861317484, 0.18834598877517333, 0.1884799471860043, 0.18844884488448846, 0.1885827421217621, 0.1885516331243814, 0.1885205343889164, 0.18848944591029024, 0.18845836768342952, 0.18859215298384438, 0.18872589418163838, 0.18869479235332895, 0.18866370077442743, 0.1886326194398682, 0.18860154834458903, 0.18857048748353097, 0.1885394368516384, 0.18850839644385908, 0.18847736625514402, 0.18844634628044765, 0.1885798913937798, 0.1885488647581441, 0.18851784833031748, 0.18848684210526315, 0.18845584607794771, 0.188424860243341, 0.18839388459641623, 0.1883629191321499, 0.18833196384552178, 0.18830101873151495, 0.1882700837851158, 0.18823915900131405, 0.18820824437510264, 0.18817733990147784, 0.18814644557543916, 0.18811556139198948, 0.1880846873461349, 0.1880538234328848, 0.18802296964725185, 0.18799212598425197, 0.1879612924389044, 0.18793046900623156, 0.18789965568125921, 0.18786885245901638, 0.18783805933453532, 0.18780727630285152, 0.18777650335900378, 0.18774574049803408, 0.18787878787878787, 0.18801179168031446, 0.18798100540363516, 0.1879502292075966, 0.18791946308724833, 0.1878887070376432, 0.18785796105383734, 0.18782722513089006, 0.1877964992638639, 0.18792934249263984, 0.18806214227309895, 0.1881948986265533, 0.18832761157430114, 0.18846028113762667, 0.1885929073378003, 0.18872549019607843, 0.1886946577356641, 0.18866383534792552, 0.18863302302792748, 0.18860222077073807, 0.18857142857142858, 0.18870388507998695, 0.18867308633915456, 0.18864229765013055, 0.18861151900799478, 0.18858075040783034, 0.18854999184472354, 0.18851924331376385, 0.18848850481004403, 0.18845777632865993, 0.18842705786471067, 0.18839634941329855, 0.1883656509695291, 0.18833496252851092, 0.18830428408535593, 0.18827361563517916, 0.18824295717309886, 0.1882123086942364, 0.18818167019371643, 0.18815104166666666, 0.18812042310821805, 0.1880898145135047, 0.1880592158776639, 0.18802862719583605, 0.18799804846316473, 0.18796747967479674, 0.18793692082588198, 0.18790637191157347, 0.18787583292702748, 0.1878453038674033, 0.18781478472786353, 0.18778427550357374, 0.18775377618970276, 0.18772328678142253, 0.1876928072739081, 0.18766233766233767, 0.18763187794189254, 0.18760142810775723, 0.18757098815511927, 0.18754055807916936, 0.18751013787510137, 0.18747972753811223, 0.18744932706340198, 0.1874189364461738, 0.18738855568163398, 0.18752025931928687, 0.18765192027224112, 0.18762151652624756, 0.18775311841892112, 0.18788467768059605, 0.18785425101214576, 0.1878238341968912, 0.18779342723004694, 0.18776303010683068, 0.18773264282246319, 0.1878640776699029, 0.18799546998867497, 0.18812681979941767, 0.188096393336568, 0.1880659767141009, 0.18819725141471302, 0.18816682832201745, 0.18813641506384354, 0.1881060116354234, 0.18823719502342867, 0.18836833602584815, 0.1883379098691649, 0.1883074935400517, 0.1882770870337478, 0.18824669034549565, 0.18821630347054075, 0.1881859264041317, 0.1881555591415201, 0.18812520167796062, 0.1880948540087111, 0.18806451612903224, 0.18803418803418803, 0.18800386971944533, 0.18797356118007416, 0.1879432624113475, 0.1879129734085415, 0.18788269416693523, 0.18785242468181085, 0.1878221649484536, 0.18779191496215172, 0.18776167471819646, 0.18773144421188215, 0.18770122343850612, 0.18767101239336875, 0.1876408110717734, 0.18761061946902655, 0.18774131274131275, 0.18787196396976033, 0.18800257317465424, 0.18797234282038913, 0.18794212218649517, 0.18791191126828485, 0.1878817100610736, 0.18785151856017998, 0.18782133676092544, 0.18779116465863455, 0.18776100224863476, 0.18773084952625663, 0.18770070648683365, 0.18767057312570237, 0.18764044943820224, 0.1876103354196758, 0.18758023106546856, 0.18755013637092893, 0.1875200513314084, 0.18748997594226144, 0.18745991019884542, 0.18742985409652077, 0.18739980763065084, 0.18736977079660203, 0.1873397435897436, 0.18730972600544785, 0.18727971803909005, 0.18724971968604837, 0.18721973094170405, 0.18718975180144115, 0.1873198847262248, 0.18744997598847446, 0.18758002560819462, 0.18771003360537686, 0.18784, 0.18796992481203006, 0.18793985924504159, 0.18790980329441867, 0.18787975695554845, 0.18784972022382093, 0.18797953964194372, 0.18810931756432794, 0.18807925854905722, 0.18804920913884007, 0.18817891373801918, 0.1883085769046478, 0.18827850526988182, 0.188408111128852, 0.1883780332056194, 0.18834796488427774, 0.1883179061602298, 0.1884474230094144, 0.18841735800893428, 0.1883873026000957, 0.18835725677830942, 0.188327220538989, 0.18829719387755103, 0.18826717678941496, 0.1882371692700032, 0.18820717131474105, 0.18817718291905672, 0.1881472040783814, 0.1881172347881491, 0.18824653607262304, 0.18821656050955415, 0.18834580480815158, 0.18831582298631008, 0.18828585070826037, 0.1882558879694462, 0.18822593476531424, 0.18819599109131402, 0.18816605694289804, 0.18813613231552162, 0.18810621720464302, 0.18807631160572338, 0.18804641551422668, 0.18801652892561985, 0.18798665183537264, 0.18795678423895773, 0.18792692613185066, 0.18789707750952986, 0.18786723836747657, 0.18783740870117496, 0.1878075885061121, 0.18777777777777777, 0.1877479765116648, 0.18771818470326881, 0.1876884023480882, 0.18765862944162437, 0.18762886597938144, 0.1875991119568665, 0.18756936736958935, 0.18753963221306277, 0.18766841020763989, 0.187797147385103, 0.1877673902709555, 0.18789607097591887, 0.18786630761919848, 0.18783655369021224, 0.1878068091844814, 0.18777707409753008, 0.18774734842488522, 0.1877176321620766, 0.187846178192752, 0.1879746835443038, 0.1881031482360386, 0.18807339449541285, 0.18804365016606042, 0.18801391524351677, 0.18798418972332015, 0.1879544736010117, 0.1879247668721353, 0.18789506953223767, 0.18786538157686838, 0.18783570300157978, 0.18780603380192704, 0.18793430195830702, 0.1879046265592926, 0.18787496053047048, 0.1878453038674033, 0.18781565656565657, 0.1877860186207985, 0.18775639002840014, 0.18772677078403532, 0.18769716088328076, 0.1876675603217158, 0.18763796909492272, 0.187766041305376, 0.18789407313997478, 0.1880220646178093, 0.18815001575795776, 0.18812037182921065, 0.1880907372400756, 0.18806111198613956, 0.18818897637795276, 0.18815934498504172, 0.18812972292191435, 0.18810011018416495, 0.18807050676739062, 0.1880409126671912, 0.1881686595342983, 0.18813905930470348, 0.188109468386285, 0.1880798867746501, 0.18820754716981133, 0.18817795944033958, 0.18830556428795975, 0.18843312902718842, 0.18856065367693275, 0.188688138256088, 0.18865849827207037, 0.18862886759855504, 0.1885992462311558, 0.1887266446851939, 0.18885400313971742, 0.1888243603829854, 0.18879472693032015, 0.1887651027773419, 0.18889237527455288, 0.18901960784313726, 0.18914680050188207, 0.18927395326956248, 0.18940106616494198, 0.18937137482364008, 0.18934169278996865, 0.1893120200595518, 0.1892823566280163, 0.1892527024909917, 0.18922305764411027, 0.18919342208300705, 0.18916379580331977, 0.1891341788006889, 0.18910457107075768, 0.18907497260917203, 0.1890453834115806, 0.1890158034736348, 0.18898623279098872, 0.18895667135929922, 0.18892711917422583, 0.1888975762314308, 0.1888680425265791, 0.18883851805533844, 0.18896530165676775, 0.18893577121425223, 0.18890625, 0.188876738009686, 0.18900343642611683, 0.1891300952678432, 0.1891005621486571, 0.18907103825136612, 0.18919762722447706, 0.18932417668175433, 0.18929463171036204, 0.18926509595880792, 0.18923556942277692, 0.18936203400405552, 0.1893325015595758, 0.1893029783252768, 0.18927346429685063, 0.18939984411535463, 0.18952618453865336, 0.18949664952470002, 0.18946712371455282, 0.18943760710391028, 0.18940809968847352, 0.18937860146394642, 0.1893491124260355, 0.18947532305776116, 0.18960149439601495, 0.18972762645914396, 0.18985371926548397, 0.18997977283335926, 0.18995021779713753, 0.18992067195520299, 0.19004665629860032, 0.1900171046493547, 0.18998756218905472, 0.1901134773822478, 0.19023935343487722, 0.19036519036519037, 0.19033561218147918, 0.19046139505981047, 0.1904318111214663, 0.19040223637210746, 0.190527950310559, 0.1904983698183512, 0.19046879850977957, 0.19043923638056806, 0.1904096834264432, 0.19038013964313422, 0.19035060502637294, 0.1903210795718939, 0.19029156327543426, 0.19026205613273375, 0.19023255813953488, 0.1902030692915827, 0.19017358958462494, 0.1901441190144119, 0.19011465757669663, 0.1900852052672347, 0.19005576208178437, 0.19002632801610655, 0.1899969030659647, 0.18996748722712495, 0.18993808049535604, 0.18990868286642934, 0.18987929433611886, 0.18984991490020114, 0.18982054455445543, 0.18979118329466357, 0.18976183111660996, 0.18973248801608164, 0.18970315398886828, 0.1896738290307621, 0.18964451313755795, 0.18961520630505332, 0.18958590852904822, 0.18955661980534527, 0.18952734012974976, 0.1894980694980695, 0.1894688079061149, 0.18943955534969895, 0.18941031182463725, 0.18938107732674794, 0.18935185185185185, 0.18932263539577227, 0.18929342795433507, 0.1892642295233688, 0.1892350400987045, 0.18920585967617579, 0.18917668825161887, 0.18914752582087252, 0.18911837237977805, 0.18908922792417937, 0.18906009244992295, 0.18903096595285782, 0.1890018484288355, 0.18897273987371016, 0.18894364028333846, 0.18891454965357968, 0.18888546798029557, 0.18885639525935047, 0.18882733148661127, 0.18879827665794738, 0.18876923076923077, 0.18874019381633594, 0.18871116579513997, 0.18868214670152236, 0.1886531365313653, 0.1886241352805534, 0.18874884721795265, 0.18871984017212232, 0.18869084204056547, 0.18866185281917344, 0.18863287250384025, 0.1886039010904623, 0.18857493857493857, 0.18854598495317057, 0.18851704022106233, 0.18848810437452035, 0.18845917740945364, 0.18843025932177382, 0.1884013501073949, 0.18837244976223347, 0.18834355828220858, 0.18831467566324184, 0.1882858019012573, 0.18825693699218152, 0.1882280809319436, 0.1881992337164751, 0.1881703953417101, 0.1881415658035851, 0.1881127450980392, 0.18808393322101394, 0.1880551301684533, 0.18802633593630377, 0.1879975505205144, 0.1879687739170366, 0.1879400061218243, 0.18791124713083396, 0.18788249694002448, 0.1878537555453572, 0.18797797491587642, 0.1879492277106591, 0.18792048929663607, 0.18789175966977525, 0.18786303882604707, 0.18783432676142442, 0.18780562347188265, 0.18792971734148206, 0.18805377329666972, 0.18802504964105698, 0.18799633475870495, 0.18796762864559474, 0.18793893129770992, 0.18791024271103648, 0.18788156288156288, 0.18785289180528003, 0.18782422947818125, 0.1877955758962624, 0.18776693105552167, 0.18773829495195973, 0.18786215309545592, 0.18783351120597652, 0.1878048780487805, 0.18777625361987502, 0.18774763791526974, 0.1877190309309767, 0.18769043266301036, 0.18766184310738765, 0.18763326226012794, 0.18760469011725292, 0.18772838002436054, 0.18785203227279648, 0.18797564687975646, 0.18794704002434942, 0.1879184418746196, 0.18788985242659365, 0.18786127167630057, 0.18783269961977186, 0.18780413625304138, 0.18777558157214536, 0.18774703557312253, 0.18771849825201398, 0.18768996960486323, 0.18766144962771616, 0.1876329383166211, 0.18760443566762874, 0.18757594167679223, 0.18754745634016703, 0.18751897965381112, 0.18749051161378472, 0.1874620522161506, 0.18758536955531946, 0.187556904400607, 0.18752844788347747, 0.1875, 0.18747156074624602, 0.1875947831361844, 0.18756633813495072, 0.1875379017586416, 0.18750947400333484, 0.18748105486511063, 0.18745264434005152, 0.18742424242424244, 0.18754734131192244, 0.18767040290820963, 0.18764198091776466, 0.18761356753482739, 0.18758516275548826, 0.18755676657584014, 0.18752837899197822, 0.1875, 0.18747162959600544, 0.1875945537065053, 0.18771744062925427, 0.18784029038112524, 0.18781188567972176, 0.18793468400362867, 0.18790627362055934, 0.18787787182587667, 0.18784947861568688, 0.18782109398609853, 0.18779271793322255, 0.18776435045317222, 0.18773599154206314, 0.1877076411960133, 0.18767929941114297, 0.18765096618357488, 0.18762264150943397, 0.18759432538484758, 0.18756601780594537, 0.18753771876885938, 0.18750942826972394, 0.18748114630467572, 0.1874528728698537, 0.1874246079613993, 0.18739635157545606, 0.18736810370817003, 0.18733986435568953, 0.18731163351416516, 0.1872834111797499, 0.18725519734859897, 0.18722699201687001, 0.18719879518072288, 0.18732118656828792, 0.18729298404095152, 0.18726479000451604, 0.1872366044551475, 0.1872084273890143, 0.18733072524826963, 0.18745298630961335, 0.18757521058965101, 0.18754699954880433, 0.1875187969924812, 0.1874906029168546, 0.18746241731809982, 0.1874342401923944, 0.18740607153591823, 0.1873779113448535, 0.1873497596153846, 0.18732161634369837, 0.18729348152598377, 0.1872653551584322, 0.18723723723723723, 0.1872091277585948, 0.1871810267187031, 0.18730301665916255, 0.1874249699879952, 0.18739684921230307, 0.18751875187518752, 0.18749062546872655, 0.1874625074985003, 0.18743439796071376, 0.18755622188905546, 0.18767800929395892, 0.18764988009592326, 0.18762175932863778, 0.18759364698831285, 0.18756554307116105, 0.18753744757339724, 0.1875093604912386, 0.18748128182090446, 0.18745321155861655, 0.18757485029940119, 0.18769645262685228, 0.18766836276563903, 0.18764028131078858, 0.18761220825852784, 0.18758414360508602, 0.18755608734669457, 0.18752803947958727, 0.1875, 0.18747196890417103, 0.18744394618834082, 0.18741593184875205, 0.18738792588164974, 0.18735992828328105, 0.18733193904989542, 0.1873039581777446, 0.1874253285543608, 0.1873973420934747, 0.18736936398925053, 0.18734139423794596, 0.18746268656716417, 0.18758394269512013, 0.1877051626380185, 0.1878263464120543, 0.18794749403341288, 0.18791946308724833, 0.18789144050104384, 0.1878634262710601, 0.18783542039355994, 0.18780742286480848, 0.18777943368107303, 0.18775145283862316, 0.18772348033373062, 0.18769551616266944, 0.1876675603217158, 0.18763961280714817, 0.18761167361524717, 0.18758374274229567, 0.18755582018457875, 0.1875279059383837, 0.1875, 0.1874721023657194, 0.18744421303183575, 0.18741633199464525, 0.18738845925044617, 0.18736059479553904, 0.1873327386262266, 0.18730489073881373, 0.1872770511296076, 0.18724921979491752, 0.18722139673105498, 0.1871935819343337, 0.18716577540106952, 0.18713797712758057, 0.18711018711018712, 0.1870824053452116, 0.18705463182897863, 0.18702686655781506, 0.18699910952804988, 0.18711975070485234, 0.18724035608308606, 0.18736092567868268, 0.18733313556808068, 0.18730535370013346, 0.18727758007117437, 0.18724981467753893, 0.18722205751556478, 0.1871943085815918, 0.1873147599288678, 0.18743517558156764, 0.18755555555555556, 0.18767589986668642, 0.1877962085308057, 0.18791648156374943, 0.1880367189813444, 0.18800888230940044, 0.18798105387803435, 0.18795323368358738, 0.1879254217224031, 0.18789761799082705, 0.1878698224852071, 0.18784203520189321, 0.1878142561372375, 0.18778648528759426, 0.18775872264931992, 0.1877309682187731, 0.1877032219923145, 0.18767548396630707, 0.18764775413711585, 0.18762003250110798, 0.18759231905465287, 0.18756461379412198, 0.18753691671588896, 0.18765687287760224, 0.1876291703572483, 0.1877490774907749, 0.18772136953955135, 0.1876936697653829, 0.18766597816465033, 0.18763829473373653, 0.18761061946902655, 0.18758295236690753, 0.18770274255381894, 0.18782249742002063, 0.1879422169811321, 0.18806190125276345, 0.18803418803418803, 0.1880064829821718, 0.18797878609310548, 0.18795109736338195, 0.18792341678939617, 0.18789574436754528, 0.1880153121319199, 0.18798763432945678, 0.187959964674713, 0.18793230316409124, 0.18805179517363155, 0.1881712520229513, 0.18829067372756694, 0.18826297984997795, 0.18823529411764706, 0.18820761652698131, 0.1881799470743899, 0.18815228575628398, 0.18812463256907702, 0.1880969875091844, 0.1880693505730238, 0.18804172175701483, 0.18801410105757932, 0.18798648847114113, 0.18795888399412627, 0.18793128762296285, 0.18790369935408102, 0.18787611918391312, 0.18784854710889345, 0.18782098312545856, 0.18794014084507044, 0.1879125715123955, 0.18788501026694046, 0.18785745710514737, 0.18782991202346042, 0.18780237501832575, 0.18777484608619174, 0.18774732522350873, 0.1877198124267292, 0.18769230769230769, 0.18766481101670085, 0.18763732239636738, 0.18760984182776802, 0.18758236930736566, 0.18755490483162518, 0.1875274483970136, 0.1875, 0.18747255963705547, 0.1874451273046532, 0.18741770299926847, 0.1873902867173786, 0.18736287845546293, 0.18733547821000293, 0.18730808597748208, 0.18728070175438596, 0.18725332553720217, 0.18722595732242034, 0.18719859710653222, 0.18717124488603157, 0.18714390065741418, 0.18711656441717792, 0.1870892361618227, 0.18706191588785046, 0.18703460359176521, 0.18700729927007298, 0.18698000291928185, 0.18695271453590193, 0.18692543411644535, 0.18689816165742631, 0.18687089715536104, 0.18698949824970829, 0.1869622283797579, 0.18693496646252553, 0.18690771249453272, 0.18688046647230322, 0.18685322839236262, 0.18682599825123872, 0.18679877604546116, 0.18677156177156176, 0.1867443554260743, 0.1867171570055345, 0.18668996650648026, 0.18666278392545138, 0.1867811908574756, 0.1868995633187773, 0.18701790132440693, 0.1869906868451688, 0.18696348028517387, 0.18708175734652313, 0.18705454545454545, 0.18702734147760325, 0.18700014541224372, 0.186972957255016, 0.18694577700247128, 0.18691860465116278, 0.1868914401976457, 0.18686428363847718, 0.18683713497021648, 0.18680999418942476, 0.18678286129266522, 0.18675573627650305, 0.18672861913750544, 0.18670150987224157, 0.18667440847728262, 0.18664731494920175, 0.18662022928457409, 0.1865931514799768, 0.18671115624546641, 0.18682912677690747, 0.18680203045685279, 0.1869199535962877, 0.1868928519646223, 0.18686575819077994, 0.18683867227134368, 0.18681159420289856, 0.1867845239820316, 0.1867574616053318, 0.18673040706939012, 0.18670336037079954, 0.18667632150615496, 0.18664929047205328, 0.18662226726509337, 0.1865952518818761, 0.1865682443190042, 0.1865412445730825, 0.1865142526407177, 0.18648726851851852, 0.18646029220309562, 0.1864333236910616, 0.18655097613882862, 0.1866685945633314, 0.18678617897932628, 0.18675917895345476, 0.18673218673218672, 0.18670520231213872, 0.1868227134807109, 0.18679572377925455, 0.18676874187490972, 0.1867417677642981, 0.1868592057761733, 0.1869766098758302, 0.1869496174390068, 0.18692263279445728, 0.18689565593880791, 0.18686868686868688, 0.1868417255807243, 0.18681477207155223, 0.1867878263378047, 0.18676088837611768, 0.18673395818312905, 0.18670703575547867, 0.18668012108980828, 0.1866532141827616, 0.18662631503098429, 0.18659942363112392, 0.18671661143927387, 0.18668971477960242, 0.1866628258677805, 0.18663594470046083, 0.18660907127429804, 0.18658220558594873, 0.1865553476320714, 0.18652849740932642, 0.18650165491437617, 0.1864748201438849, 0.1864479930945188, 0.18642117376294592, 0.18639436214583632, 0.18636755823986195, 0.1863407620416966, 0.1863139735480161, 0.18628719275549807, 0.18626041966082207, 0.18623365426066962, 0.18620689655172415, 0.18632380405114207, 0.1864406779661017, 0.18641390205371247, 0.18653072946582425, 0.18664752333094042, 0.18662072925638817, 0.18659394287354672, 0.1865671641791045, 0.18654039316975177, 0.18651362984218078, 0.18648687419308563, 0.18646012621916236, 0.18643338591710884, 0.18640665328362488, 0.1863799283154122, 0.18635321100917432, 0.18632650136161674, 0.18629979936944682, 0.18627310502937383, 0.18624641833810887, 0.186219739292365, 0.18619306788885706, 0.18616640412430188, 0.1861397479954181, 0.18611309949892627, 0.18608645863154882, 0.18605982539001, 0.18603319977103605, 0.18600658177135498, 0.1859799713876967, 0.185953368616793, 0.1859267734553776, 0.1859001859001859, 0.18587360594795538, 0.18584703359542531, 0.18582046883933676, 0.18593683007003, 0.18591026007430694, 0.18588369767109586, 0.186, 0.18597343236680475, 0.18594687232219365, 0.1859203198629159, 0.18589377498572243, 0.18586723768736615, 0.18584070796460178, 0.18581418581418582, 0.1857876712328767, 0.18576116421743472, 0.18573466476462197, 0.1857081728712024, 0.18568168853394182, 0.18565521174960786, 0.18562874251497005, 0.1857448325017819, 0.18586088939566706, 0.18597691321077384, 0.1859504132231405, 0.18592392078643682, 0.1858974358974359, 0.1858709585529127, 0.185844488749644, 0.18581802648440837, 0.18579157175398633, 0.18576512455516014, 0.18573868488471393, 0.18571225273943362, 0.185685828116107, 0.1856594110115237, 0.1856330014224751, 0.18560659934575452, 0.185580204778157, 0.18569600454997867, 0.18581177139607621, 0.1859275053304904, 0.18590108015918136, 0.18587466249822368, 0.18584825234441602, 0.1858218496945589, 0.18579545454545454, 0.18576906689390713, 0.18574268673672253, 0.18571631407070852, 0.18568994889267462, 0.1856635911994322, 0.1856372409877945, 0.1856108982545764, 0.1855845629965948, 0.1855582352106682, 0.18553191489361703, 0.18550560204226352, 0.18547929665343166, 0.1855947823621154, 0.18571023532747377, 0.1856839121190645, 0.1856575963718821, 0.18563128808275473, 0.18560498724851232, 0.1855786938659867, 0.18555240793201133, 0.18552612944342162, 0.18549985839705466, 0.1854735947897494, 0.18544733861834656, 0.1854210898796886, 0.18539484857061986, 0.1853686146879864, 0.1853423882286361, 0.1853161691894186, 0.18528995756718528, 0.18526375335878942, 0.18523755656108598, 0.1852113671709317, 0.18518518518518517, 0.18515901060070672, 0.1851328434143584, 0.1851066836230041, 0.18508053122350945, 0.18505438621274192, 0.1850282485875706, 0.18500211834486655, 0.1849759954815024, 0.18494987999435267, 0.18492377188029363, 0.18489767113620326, 0.18487157775896132, 0.18498659517426275, 0.18510158013544017, 0.18521653265622795, 0.18533145275035262, 0.18530531659850516, 0.18527918781725888, 0.1852530664034964, 0.18522695235410205, 0.18520084566596196, 0.18517474633596392, 0.18514865436099762, 0.18512256973795435, 0.18523735737427807, 0.1852112676056338, 0.18518518518518517, 0.18515911010982822, 0.18513304237646064, 0.18510698198198197, 0.1852216748768473, 0.18519560934421617, 0.1851695511467567, 0.1851435002813731, 0.18511745674497115, 0.18523206751054852, 0.18520601884404445, 0.18517997750281215, 0.18515394348376213, 0.18512791678380658, 0.18510189739985944, 0.18507588532883643, 0.18504988056765492, 0.18502388311323406, 0.18499789296249472, 0.18497191011235956, 0.18508636427468053, 0.18506037629879246, 0.1850343956198231, 0.1850084222346996, 0.1849824561403509, 0.18495649733370756, 0.18493054581170199, 0.18490460157126823, 0.18487866460934213, 0.18485273492286114, 0.18496704529519, 0.1850813236118901, 0.18505537641945885, 0.18502943650126155, 0.18500350385423966, 0.18497757847533633, 0.18495166036149643, 0.18506584477444663, 0.18517999719848718, 0.18529411764705883, 0.18540820613359474, 0.18552226267152058, 0.18549629007419852, 0.18547032474804032, 0.185444366689993, 0.1854184158970053, 0.1853924723660277, 0.18536653609401232, 0.185340607077913, 0.1853146853146853, 0.18528877080128653, 0.1852628635346756, 0.18523696351181324, 0.18521107072966173, 0.18518518518518517, 0.18515930687534934, 0.1851334357971217, 0.18510757194747135, 0.18508171532336917, 0.18505586592178772, 0.18516966904063678, 0.18528344037978217, 0.18539717995253385, 0.1855108877721943, 0.18548499651081646, 0.1854591124755791, 0.1854332356634575, 0.18540736607142858, 0.1853815036964709, 0.18535564853556485, 0.18532980058569237, 0.18530395984383716, 0.18527812630698454, 0.18525229997212156, 0.18522648083623694, 0.18520066889632106, 0.18531419813292463, 0.18528838116466984, 0.18540186655523053, 0.18551532033426185, 0.18562874251497005, 0.18574213311055415, 0.18585549213420577, 0.18582962138084633, 0.1859429366736256, 0.1860562204286112, 0.18616947265896758, 0.18628269337785197, 0.18625678119349007, 0.18623087621696802, 0.1862049784452788, 0.18617908787541712, 0.18615320450437925, 0.1861273283291632, 0.18610145934676858, 0.18607559755419678, 0.18604974294845075, 0.18602389552653514, 0.18599805528545632, 0.18611111111111112, 0.186224135536731, 0.18633712857539572, 0.18631125919755656, 0.18628539700166574, 0.18625954198473282, 0.18637246738828753, 0.1864853614541418, 0.1865982241953385, 0.18657234013039256, 0.18654646324549237, 0.18652059353765083, 0.18649473100388242, 0.18646887564120337, 0.18644302744663155, 0.1864171864171864, 0.18639135254988914, 0.1863655258417625, 0.186339706289831, 0.18631389389112066, 0.18628808864265928, 0.18626229054147625, 0.18637496538355025, 0.1864876090267202, 0.18646179401993354, 0.18643598615916954, 0.1864101854414614, 0.18638439186384392, 0.1863586054233536, 0.1864711578364919, 0.18644536652835408, 0.18641958235375466, 0.1865320796460177, 0.18650629061247062, 0.18648050870887475, 0.18645473393227366, 0.18642896627971256, 0.1864032057482382, 0.18637745233489914, 0.18635170603674542, 0.18632596685082872, 0.18630023477420246, 0.18627450980392157, 0.18624879193704266, 0.18622308117062397, 0.18619737750172533, 0.1861716809274082, 0.18614599144473576, 0.18612030905077262, 0.1862325838046627, 0.18620689655172415, 0.1863191283960833, 0.18643132928847214, 0.18654349924169308, 0.18651778329197685, 0.1864920744314266, 0.18646637265711136, 0.1864406779661017, 0.18655276935794984, 0.18666482986637278, 0.18677685950413223, 0.18675113620713402, 0.1868631231065822, 0.1869750791683877, 0.18694933920704845, 0.18706125258086717, 0.18717313515001377, 0.18728498692720516, 0.18739680792515134, 0.18750859815655524, 0.1874828060522696, 0.1874570210424976, 0.18743124312431242, 0.18740547229478893, 0.18737970855100358, 0.18735395189003437, 0.18732820230896097, 0.18730245980486465, 0.18727672437482826, 0.18738837752438522, 0.18736263736263736, 0.1873369042713913, 0.18731117824773413, 0.18728545928875465, 0.1872597473915431, 0.18723404255319148, 0.18734559429041997, 0.1873198847262248, 0.1872941822173436, 0.18726848676087254, 0.18724279835390947, 0.1872171169935537, 0.1871914426769062, 0.18716577540106952, 0.1871401151631478, 0.18711446196024675, 0.18708881578947367, 0.1870631766479375, 0.1870375445327487, 0.18701191944101933, 0.18698630136986302, 0.186960690316395, 0.18693508627773212, 0.18690948925099274, 0.18688389923329682, 0.1868583162217659, 0.18683274021352314, 0.18694402627617354, 0.1870552818828681, 0.18716650704610754, 0.18727770177838576, 0.18738886609218985, 0.187363238512035, 0.18733761794065362, 0.1873120043751709, 0.1872863978127136, 0.18726079825041006, 0.18723520568539018, 0.18720962011478545, 0.1873206722229813, 0.18743169398907103, 0.18754268542548833, 0.18751707183829555, 0.1874914652464837, 0.18746586564718734, 0.18744027303754265, 0.18741468741468742, 0.18738910877576087, 0.18736353711790393, 0.18733797243825898, 0.18731241473396998, 0.1872868640021825, 0.18726132024004363, 0.18723578344470204, 0.18734660485410418, 0.18732106339468302, 0.18729552889858234, 0.18727000136295488, 0.18724448078495504, 0.18721896716173866, 0.1871934604904632, 0.1871679607682877, 0.18714246799237266, 0.18711698215988015, 0.18709150326797386, 0.18706603131381894, 0.18704056629458207, 0.1870151082074316, 0.1869896570495373, 0.1869642128180705, 0.18693877551020407, 0.1869133451231125, 0.1868879216539717, 0.1868625050999592, 0.186837095458254, 0.1868116927260367, 0.1867862969004894, 0.18676090797879571, 0.1867355259581408, 0.18671015083571138, 0.18668478260869564, 0.1866594212742834, 0.18663406682966585, 0.18660871927203584, 0.18658337859858773, 0.1865580448065173, 0.186532717893022, 0.18650739785530066, 0.18648208469055375, 0.18645677839598318, 0.1864314789687924, 0.18640618640618642, 0.18638090070537167, 0.18635562186355623, 0.18633034987794955, 0.1863050847457627, 0.18641540130151843, 0.1863901314897655, 0.1863648685280564, 0.1863396124136062, 0.18631436314363142, 0.18628912071535023, 0.18626388512598213, 0.1862386563727482, 0.18621343445287108, 0.18618821936357483, 0.18616301110208502, 0.18613780966562882, 0.18611261505143475, 0.18608742725673297, 0.18606224627875506, 0.18603707211473414, 0.18614718614718614, 0.18625727039091033, 0.18636732485799296, 0.186342123056119, 0.18631692806922662, 0.18629173989455183, 0.18626655852933224, 0.18624138397080686, 0.18621621621621623, 0.18619105526280233, 0.1861659011078087, 0.18614075374848035, 0.18611561318206374, 0.1860904794058069, 0.18606535241695923, 0.1860402322127717, 0.18601511879049676, 0.1859900121473883, 0.18596491228070175, 0.18593981918769398, 0.18604964921748515, 0.18602455146364494, 0.18599946048017266, 0.18597437626432906, 0.1859492988133765, 0.18592422812457868, 0.18589916419520086, 0.18587410702250978, 0.18584905660377357, 0.18582401293626197, 0.18579897601724601, 0.1857739458439984, 0.1857489224137931, 0.18572390572390574, 0.18569889577161325, 0.18567389255419417, 0.18564889606892837, 0.18562390631309733, 0.18559892328398384, 0.18557394697887228, 0.18554897739504844, 0.18552401452979955, 0.1854990583804143, 0.18547410894418292, 0.185449166218397, 0.1854242302003496, 0.1853993008873353, 0.1853743782766501, 0.1853494623655914, 0.1854589436903642, 0.18543402311206664, 0.18540910923014914, 0.18538420204191294, 0.1854936198791135, 0.18546870803115767, 0.1854438028736404, 0.1854189044038668, 0.1853940126191435, 0.18536912751677853, 0.18534424909408134, 0.18531937734836285, 0.1854286864349926, 0.1854038100348806, 0.1853789403085178, 0.1853540772532189, 0.18532922086630013, 0.1853043711450791, 0.18527952808687492, 0.18525469168900804, 0.18522986194880042, 0.18520503886357545, 0.1851802224306579, 0.18515541264737406, 0.18513060951105156, 0.18523975354942407, 0.18521494576134995, 0.18532404927691484, 0.1852992368456286, 0.1854082998661312, 0.18538348280016062, 0.18535867237687367, 0.18533386859360365, 0.1853090714476853, 0.18528428093645485, 0.18525949705724987, 0.18536846328741474, 0.18534367477935276, 0.18531889290012032, 0.18529411764705883, 0.18526934901751102, 0.18524458700882118, 0.18521983161833488, 0.18519508284339925, 0.18517034068136273, 0.1851456051295752, 0.185120876185388, 0.18522970085470086, 0.18533849646147682, 0.18544726301735648, 0.1855560005339741, 0.18553123331553656, 0.1856399306018951, 0.18574859887910328, 0.1857238158772515, 0.18569903948772679, 0.18567426970788314, 0.18564950653507603, 0.18562474996666223, 0.1856, 0.185575256632449, 0.1855505198613703, 0.18552578968412636, 0.18550106609808104, 0.1854763491005996, 0.18545163868904876, 0.1854269348607966, 0.18553542887586574, 0.18564389399387402, 0.18575233022636484, 0.18572759952070297, 0.18570287539936103, 0.18567815785970984, 0.18578653180729304, 0.18589487691284098, 0.18587014369345398, 0.18584541705467605, 0.18582069699388135, 0.18579598350844528, 0.18590425531914895, 0.18601249833798697, 0.18612071257644244, 0.18609597235145553, 0.18607123870281764, 0.18604651162790697, 0.1860217911241031, 0.18599707718878702, 0.18597236981934112, 0.18594766901314916, 0.18592297476759628, 0.18603107157084053, 0.1860063728093468, 0.1859816806053365, 0.18595699495619858, 0.18593231585932316, 0.1859076433121019, 0.18588297731192782, 0.18585831785619528, 0.18583366494230005, 0.18580901856763926, 0.18578437872961145, 0.18575974542561655, 0.1857351186530558, 0.18571049840933193, 0.1856858846918489, 0.1856612774980122, 0.18563667682522858, 0.1856120826709062, 0.18558749503245464, 0.18556291390728477, 0.1855383392928089, 0.1855137711864407, 0.18548920958559512, 0.18546465448768865, 0.18544010589013898, 0.18541556379036528, 0.185391028185788, 0.18536649907382904, 0.18534197645191164, 0.18531746031746033, 0.18529295066790108, 0.1852684475006612, 0.18524395081316938, 0.18521946060285563, 0.18519497686715136, 0.1851704996034893, 0.18514602880930356, 0.1851215644820296, 0.18509710661910425, 0.18507265521796565, 0.18504821027605337, 0.18502377179080823, 0.18499933975967253, 0.1849749141800898, 0.18495049504950495, 0.1849260823653643, 0.1849016761251155, 0.18487727632620743, 0.1848528829660905, 0.18496042216358838, 0.18506793299037066, 0.1851754154576629, 0.18515099564816037, 0.185126582278481, 0.18510217534607779, 0.18507777484840496, 0.18518518518518517, 0.18516078017923038, 0.18513638160495455, 0.18511198945981555, 0.18508760374127256, 0.18506322444678608, 0.18517055182404846, 0.18514616802739003, 0.18525345622119815, 0.18536071616640337, 0.1853363169672239, 0.1854435377730982, 0.18541913409659166, 0.18539473684210525, 0.18537034600710434, 0.1853459615890555, 0.18545311061423123, 0.18542872172540767, 0.18553583168967785, 0.1855114383381541, 0.1854870514000263, 0.18546267087276552, 0.18543829675384413, 0.18541392904073586, 0.18538956773091578, 0.18536521282186022, 0.1853408643110469, 0.18544785920672446, 0.1855548260013132, 0.18566176470588236, 0.18563739004857555, 0.18561302179049619, 0.18558865992912454, 0.18556430446194225, 0.18553995538643223, 0.1855156127000787, 0.1854912764003673, 0.1854669464847849, 0.18544262295081967, 0.1854183057959612, 0.18552510816834927, 0.18563188253801782, 0.1857386289159785, 0.1858453473132372, 0.18582099331673438, 0.18579664570230608, 0.185772304467444, 0.18574796960964107, 0.18572364112639161, 0.1856993190151912, 0.18567500327353673, 0.1856506938989264, 0.1856263908888598, 0.1856020942408377, 0.18557780395236226, 0.18555352002093692, 0.18566008111997906, 0.1857666143380429, 0.18587311968606932, 0.18597959717499346, 0.18608604681574473, 0.18619246861924685, 0.18616812655249051, 0.1861437908496732, 0.18611946150829956, 0.18622582331416623, 0.18633215732392525, 0.18630781290828324, 0.18641410842586545, 0.18638975966562174, 0.1863654172652475, 0.18634108122225124, 0.18631675153414284, 0.18629242819843342, 0.18626811121263542, 0.1862438005742626, 0.18621949628082995, 0.18619519832985387, 0.18617090671885192, 0.18614662144534308, 0.18612234250684753, 0.18609806990088681, 0.1860738036249837, 0.18604954367666232, 0.18602529005344806, 0.18600104275286758, 0.18597680177244885, 0.18595256710972113, 0.18592833876221498, 0.1859041167274622, 0.18587990100299595, 0.18585569158635062, 0.18583148847506187, 0.18580729166666668, 0.1857831011587033, 0.18575891694871127, 0.18573473903423143, 0.18571056741280584, 0.18568640208197787, 0.1856622430392922, 0.1857681800442305, 0.18587408949011447, 0.1859799713876967, 0.1859557867360208, 0.18593160837342348, 0.1859074362974519, 0.18588327050565448, 0.18585911099558097, 0.18583495776478232, 0.1858108108108108, 0.18578667013121997, 0.18576253572356458, 0.1857384075854007, 0.18571428571428572, 0.18569017010777822, 0.18566606076343806, 0.18564195767882644, 0.18561786085150572, 0.1855937702790396, 0.18556968595899298, 0.18554560788893215, 0.1855215360664245, 0.18549747048903878, 0.185473411154345, 0.18544935805991442, 0.1854253112033195, 0.18540127058213407, 0.18537723619393312, 0.18535320803629293, 0.18532918610679108, 0.18530517040300634, 0.18528116092251878, 0.1852571576629097, 0.18523316062176165, 0.18520916979665847, 0.18518518518518517, 0.18516120678492815, 0.1851372345934749, 0.18511326860841423, 0.18508930882733626, 0.18506535524783227, 0.18517080745341616, 0.18527623237158752, 0.1852522639068564, 0.18522830164273704, 0.18520434557682358, 0.1851803957067115, 0.18515645202999742, 0.18513251454427926, 0.18523784901758014, 0.1853431562621171, 0.18531920392866374, 0.18529525778524358, 0.18527131782945735, 0.18524738405890712, 0.18522345647119606, 0.18519953506392872, 0.1853047520661157, 0.1854099418979987, 0.1855151045701007, 0.1856202400929392, 0.18559628291171915, 0.18557233191379532, 0.18554838709677418, 0.18552444845826346, 0.18550051599587203, 0.18547658970721012, 0.1854526695898891, 0.1854287556415216, 0.1854048478597215, 0.1853809462421039, 0.18535705078628512, 0.18533316148988271, 0.18530927835051547, 0.18528540136580338, 0.1852615305333677, 0.18523766585083087, 0.1852138073158166, 0.1853187379265937, 0.1852948750965748, 0.18527101841122698, 0.18524716786817713, 0.1852233234650534, 0.1851994851994852, 0.18517565306910308, 0.18515182707153885, 0.18512800720442557, 0.18510419346539747, 0.18508038585209002, 0.18505658436213993, 0.18503278899318504, 0.1850089997428645, 0.18498521660881861, 0.18496143958868894, 0.18493766868011824, 0.18491390388075046, 0.18489014518823077, 0.18486639260020554, 0.1848426461143224, 0.18494734138196764, 0.18505200975985617, 0.18515665125834618, 0.18526126588779046, 0.18536585365853658, 0.18547041458092672, 0.18544661190965092, 0.1854228153471064, 0.18539902489094176, 0.18537524053880694, 0.185351462288353, 0.18532769013723227, 0.18530392408309823, 0.1852801641236056, 0.18525641025641026, 0.18523266247916934, 0.18520892078954115, 0.18518518518518517, 0.1851614556637622, 0.185137732222934, 0.18511401486036383, 0.1850903035737159, 0.18506659836065573, 0.18504289921885003, 0.1850192061459667, 0.18499551913967482, 0.18497183819764465, 0.18494816331754768, 0.18492449449705656, 0.18490083173384517, 0.18487717502558854, 0.1848535243699629, 0.18482987976464568, 0.1848062412073155, 0.18478260869565216, 0.18475898222733667, 0.18473536180005115, 0.18471174741147897, 0.1846881390593047, 0.18466453674121405, 0.18464094045489393, 0.18461735019803246, 0.18459376596831886, 0.1845701877634436, 0.18454661558109833, 0.18452304941897588, 0.18449948927477017, 0.18447593514617644, 0.18445238703089098, 0.18442884492661135, 0.18440530883103623, 0.1843817787418655, 0.1843582546568002, 0.18433473657354255, 0.18431122448979592, 0.18428771840326488, 0.18426421831165518, 0.18424072421267373, 0.18421723610402857, 0.18419375398342894, 0.18417027784858528, 0.18414680769720912, 0.18412334352701326, 0.18409988533571156, 0.1840764331210191, 0.18405298688065214, 0.18402954661232807, 0.18400611231376543, 0.18398268398268397, 0.1839592616168046, 0.18393584521384929, 0.1839124347715413, 0.18401628913209467, 0.1841201170632396, 0.18422391857506362, 0.18420048339905865, 0.18417705418468583, 0.1841536309296706, 0.18425737538148526, 0.18436109345200255, 0.184464785151284, 0.18456845048938605, 0.18454499237417388, 0.18464862117168637, 0.1846251588310038, 0.18460170245203913, 0.18457825203252032, 0.18455480757017656, 0.18453136906273812, 0.1845079365079365, 0.18448450990350432, 0.18446108924717533, 0.18443767453668444, 0.18441426576976774, 0.18439086294416243, 0.1843674660576069, 0.18434407510784065, 0.18432069009260435, 0.18429731100963978, 0.1842739378566899, 0.18425057063149886, 0.18422720933181183, 0.18420385395537525, 0.18418050449993661, 0.1841571609632446, 0.18413382334304904, 0.18411049163710086, 0.1842138603826175, 0.18431720293894097, 0.18429385687143762, 0.18427051671732522, 0.18424718247435734, 0.1842238541402887, 0.18432713001645779, 0.18430379746835443, 0.18428047082647767, 0.18425715008858518, 0.18436036947994433, 0.18446356275303644, 0.18444022770398483, 0.18441689855805718, 0.18452004552927787, 0.18449671219018715, 0.18447338475154887, 0.18445006321112517, 0.18442674756667932, 0.1845298281092012, 0.18463288259825603, 0.18473591104372, 0.18471257106759317, 0.1848155634158666, 0.1847922192749779, 0.18476888103056327, 0.18474554868038895, 0.18472222222222223, 0.1846989016538316, 0.1846755869729866, 0.18465227817745802, 0.18462897526501768, 0.18460567823343849, 0.18458238708049457, 0.18468525293301374, 0.18478809283551967, 0.18489090679783074, 0.1849936948297604, 0.18497036943638887, 0.18494704992435704, 0.18504979200806757, 0.18515250819258885, 0.18525519848771266, 0.1852318548387097, 0.18520851707194155, 0.18518518518518517, 0.18516185917621866, 0.18513853904282115, 0.18511522478277295, 0.18521782926215058, 0.1851945108900919, 0.18517119838872104, 0.18527375707992447, 0.18525044047319406, 0.18522712973449101, 0.1852038248616004, 0.18518052585230846, 0.1851572327044025, 0.185133945415671, 0.1852364185110664, 0.18521312712184082, 0.18518984158913754, 0.18516656191074796, 0.18514328808446456, 0.18512002010808093, 0.18509675797939182, 0.185073501696193, 0.18517587939698493, 0.18515261901771135, 0.1851293644812861, 0.18510611578550798, 0.1850828729281768, 0.18505963590709354, 0.18503640472006025, 0.18501317936488013, 0.18498995983935743, 0.18496674614129752, 0.1849435382685069, 0.1849203362187931, 0.18489713998996488, 0.18487394957983194, 0.18485076498620517, 0.18482758620689654, 0.18480441323971916, 0.18478124608248714, 0.1847580847330158, 0.18473492918912143, 0.18471177944862155, 0.18468863550933468, 0.18466549736908044, 0.18464236502567957, 0.1846192384769539, 0.18459611772072637, 0.18457300275482094, 0.18454989357706272, 0.18452679018527793, 0.18450369257729377, 0.18448060075093867, 0.18445751470404204, 0.18443443443443444, 0.1845364694107344, 0.1845133850387791, 0.18461538461538463, 0.18471735867933967, 0.18481930724021509, 0.1849212303075769, 0.184898112264033, 0.185, 0.1849768778902637, 0.1849537615596101, 0.1849306510058728, 0.18490754622688654, 0.1848844472204872, 0.18486135398451162, 0.1848382665167978, 0.1848151848151848, 0.1847921088775128, 0.18476903870162298, 0.18474597428535763, 0.18472291562656015, 0.184699862723075, 0.1846768155727477, 0.18465377417342482, 0.18463073852295409, 0.18460770861918424, 0.18458468445996506, 0.18456166604314753, 0.18453865336658354, 0.18451564642812618, 0.18449264522562953, 0.18446964975694877, 0.18444666001994017, 0.18442367601246107, 0.1844006977323698, 0.18450230472156473, 0.18447932237169906, 0.18445634574666833, 0.18443337484433375, 0.1844104096625576, 0.18451195219123506, 0.1846134694385659, 0.18459049041573314, 0.18469197261978842, 0.18479342956694872, 0.18477043673012317, 0.18474744961433193, 0.1848488617987312, 0.1849502487562189, 0.18492724785474443, 0.1849042526734643, 0.18488126321024492, 0.18485827946295375, 0.18483530142945928, 0.18481232910763112, 0.18478936249533987, 0.18476640159045726, 0.18474344639085602, 0.18472049689440995, 0.1846975530989939, 0.18467461500248386, 0.18465168260275674, 0.1846287558976906, 0.1846058348851645, 0.18458291956305858, 0.18456000992925406, 0.18453710598163317, 0.18463829259213302, 0.1847394540942928, 0.1847165364098747, 0.1846936244108162, 0.18467071809500185, 0.18464781746031747, 0.18474891506509608, 0.1848499876022812, 0.18482707326143547, 0.1848041646008924, 0.18478126161854008, 0.18475836431226766, 0.18473547267996532, 0.18471258671952429, 0.18468970642883686, 0.18466683180579638, 0.1846439628482972, 0.18462109955423478, 0.1845982419215055, 0.18457538994800693, 0.1846763213268969, 0.18477722772277227, 0.1847543620839005, 0.18473150210343975, 0.18470864777928986, 0.18468579910935182, 0.18466295609152752, 0.18464011872372002, 0.1846172870038333, 0.1845944609297725, 0.1845716404994437, 0.184548825710754, 0.18452601656161166, 0.18450321304992584, 0.18448041517360683, 0.18445762293056586, 0.18443483631871527, 0.18441205533596838, 0.1843892799802396, 0.1843665102494443, 0.18434374614149895, 0.18432098765432098, 0.1842982347858289, 0.1843989138484325, 0.1844995680612119, 0.18447680157946694, 0.18445404071560764, 0.18443128546755488, 0.18440853583323055, 0.18438579181055748, 0.18436305339745962, 0.1843403205918619, 0.1843175933916903, 0.1842948717948718, 0.1842721557993344, 0.18424944540300714, 0.18422674060382008, 0.18420404139970428, 0.18418134778859185, 0.18415865976841586, 0.18413597733711048, 0.18411330049261085, 0.1840906292328531, 0.18406796355577443, 0.18404530345931305, 0.18402264894140818, 0.184, 0.18397735663302978, 0.18395471883843978, 0.18405511811023623, 0.1841554926805265, 0.1842558425584256, 0.1843561677530439, 0.18445646827348747, 0.18443378827001106, 0.1844111138431276, 0.18438844499078058, 0.18448869223205505, 0.18458891483347672, 0.18456623248955517, 0.18454355571937583, 0.18452088452088453, 0.184498218892028, 0.18459837877671334, 0.1846985140611568, 0.18479862475442044, 0.1848987108655617, 0.18487601276700222, 0.1849760648091322, 0.18507609229258715, 0.18505338078291814, 0.18503067484662578, 0.1850079744816587, 0.18498527968596665, 0.1849625904575003, 0.18493990679421143, 0.18503985285101165, 0.1850171652770966, 0.1849944832659066, 0.18497180681539593, 0.18507169996323078, 0.18504901960784315, 0.18514887881387085, 0.18524871355060035, 0.185226019845645, 0.185203331700147, 0.1851806491120637, 0.18515797207935342, 0.18513530059997552, 0.1851126346718903, 0.18508997429305912, 0.1850673194614443, 0.18504467017500917, 0.18502202643171806, 0.18499938822953627, 0.18497675556643015, 0.18495412844036696, 0.18493150684931506, 0.18490889079124373, 0.18488628026412326, 0.18486367526592493, 0.18484107579462103, 0.1848184818481848, 0.18479589342459057, 0.1847733105218135, 0.18475073313782991, 0.18472816127061698, 0.18470559491815294, 0.184683034078417, 0.18466047874938935, 0.18463792892905118, 0.18473748473748475, 0.18483701623733365, 0.1849365234375, 0.1849139509337239, 0.1848913839394679, 0.18486882245271508, 0.1848462664714495, 0.1848237159936562, 0.1848011710173213, 0.18477863154043175, 0.1847560975609756, 0.18473356907694183, 0.1847110460863204, 0.18468852858710227, 0.18466601657727938, 0.18476538695917125, 0.18486473312210577, 0.18496405507493602, 0.18494152046783627, 0.18504080886831525, 0.1851400730816078, 0.18511752527097797, 0.1850949829517779, 0.18507244612200172, 0.1850499147796445, 0.18502738892270237, 0.18500486854917234, 0.18498235365705246, 0.1849598442443417, 0.18493734030904002, 0.18491484184914841, 0.18489234886266878, 0.1849914862563853, 0.18509059953788154, 0.18506809338521402, 0.18504559270516718, 0.1850230974957452, 0.1851221587455938, 0.18509965969859019, 0.18507716611982014, 0.18517618469015795, 0.1851536872797959, 0.18513119533527697, 0.1851087088546095, 0.185207675491863, 0.18518518518518517, 0.1852841185041282, 0.18526162437780747, 0.1852391357125516, 0.18521665250637212, 0.18519417475728156, 0.1851717024632933, 0.18514923562242175, 0.18512677423268228, 0.18510431829209123, 0.18508186779866587, 0.18505942275042445, 0.1850369831453862, 0.1850145489815713, 0.18499212025700085, 0.18496969696969698, 0.18494727911768272, 0.18492486669898206, 0.18490245971162, 0.1848800581536225, 0.18485766202301634, 0.18483527131782945, 0.18481288603609058, 0.1847905061758295, 0.1847681317350769, 0.1847457627118644, 0.18472339910422467, 0.18470104091019124, 0.1846786881277986, 0.18465634075508228, 0.18463399879007864, 0.18461166223082506, 0.18458933107535985, 0.1845670053217223, 0.1845446849679526, 0.1845223700120919, 0.1845000604521823, 0.18447775628626692, 0.1844554575123897, 0.1844331641285956, 0.1844108761329305, 0.1845094248429193, 0.18460794974024405, 0.18470645083353468, 0.18480492813141683, 0.18490338164251208, 0.18488105301292115, 0.18485872977541656, 0.18495714113243994, 0.18505552873008208, 0.18503319251659625, 0.18501086169442432, 0.18498853626161457, 0.18496621621621623, 0.1849439015562794, 0.18492159227985525, 0.18489928838499578, 0.18487698986975398, 0.18485469673218377, 0.18483240897034, 0.1848101265822785, 0.18478784956605593, 0.18476557791973003, 0.18474331164135938, 0.1847210507290035, 0.18469879518072288, 0.18467654499457897, 0.18465430016863407, 0.18463206070095145, 0.18460982658959538, 0.18470800722456351, 0.18468576932338068, 0.18466353677621283, 0.18476167549350023, 0.18485979058851848, 0.18483754512635378, 0.18481530501744675, 0.18479307025986524, 0.18477084085167808, 0.18474861679095503, 0.18472639807576668, 0.1847041847041847, 0.1846819766742816, 0.1846597739841308, 0.18463757663180672, 0.18461538461538463, 0.18459319793294074, 0.18457101658255226, 0.18454884056229726, 0.18452666987025468, 0.1845045045045045, 0.18448234446312756, 0.18446018974420558, 0.1844380403458213, 0.18441589626605834, 0.1845138055222089, 0.1846116912735566, 0.18470955352856458, 0.18480739229569182, 0.1847852171826254, 0.1847630473905219, 0.1847408829174664, 0.1847187237615449, 0.18481650275845526, 0.18491425830435304, 0.18501199040767385, 0.18498980937537465, 0.18496763366099256, 0.18494546326261538, 0.18492329817833172, 0.18490113840623126, 0.1848789839444045, 0.18485683479094286, 0.18483469094393867, 0.1848125524014852, 0.18479041916167666, 0.18476829122260807, 0.18486590038314177, 0.18496348617263259, 0.18494134546325114, 0.18491921005385997, 0.18489707994255625, 0.18487495512743807, 0.18485283560660445, 0.1848307213781553, 0.1848086124401914, 0.18478650879081449, 0.18476441042812725, 0.18474231735023317, 0.18472022955523673, 0.18469814704124327, 0.18467606980635906, 0.1846539978486913, 0.184631931166348, 0.18472935834627793, 0.18482676224611708, 0.18492414287420858, 0.18490205446727187, 0.18487997133643855, 0.18485789347981849, 0.1848358208955224, 0.18481375358166188, 0.18479169153634953, 0.18476963475769873, 0.18474758324382384, 0.18472553699284008, 0.18470349600286362, 0.18468146027201146, 0.18465942979840153, 0.18463740458015268, 0.18461538461538463, 0.18459336990221797, 0.18457136043877428, 0.18454935622317598, 0.1845273572535463, 0.18462455303933253, 0.18460255035156717, 0.18458055290753098, 0.18467770761348742, 0.1847748391708363, 0.18487194758784992, 0.18496903287279656, 0.1849470048826962, 0.18492498213860442, 0.18502202643171806, 0.185, 0.1849779788120462, 0.18507498214710782, 0.18505295727716292, 0.1850309376487387, 0.18500892325996432, 0.18498691410896978, 0.18508385868918759, 0.18518078020932446, 0.18515875847306457, 0.18525564803804995, 0.18535251456426108, 0.18533048026628626, 0.1853084512064662, 0.18528642738293322, 0.18526440879382056, 0.18524239543726237, 0.18522038731139362, 0.18519838441435021, 0.18517638674426892, 0.1851543942992874, 0.18513240707754425, 0.18511042507717881, 0.18508844829633148, 0.1850664767331434, 0.18504451038575667, 0.18502254925231426, 0.18500059333096, 0.18497864261983862, 0.18495669711709575, 0.18493475682087782, 0.18491282172933224, 0.18489089184060722, 0.1848689671528519, 0.18484704766421628, 0.18494368701837582, 0.18492176386913228, 0.18489984591679506, 0.18487793315951648, 0.1848560255954497, 0.1848341232227488, 0.18481222603956876, 0.1847903340440654, 0.18476844723439537, 0.18474656560871625, 0.1847246891651865, 0.18470281790196544, 0.18468095181721322, 0.1846590909090909, 0.18463723517576044, 0.18461538461538463, 0.1845935392261271, 0.1845716990061524, 0.18454986395362594, 0.18452803406671398, 0.18450620934358367, 0.18448438978240303, 0.1844625753813409, 0.18444076613856702, 0.18441896205225203, 0.18439716312056736, 0.18437536934168539, 0.18435358071377925, 0.18433179723502305, 0.1843100189035917, 0.18428824571766095, 0.18426647767540752, 0.18424471477500887, 0.18422295701464336, 0.18420120439249027, 0.18417945690672963, 0.18415771455554245, 0.18413597733711048, 0.18411424524961642, 0.18409251829124382, 0.184070796460177, 0.18404907975460122, 0.1840273681727026, 0.18400566171266808, 0.18398396037268547, 0.18396226415094338, 0.1839405730456314, 0.18391888705493986, 0.18389720617706, 0.18387553041018387, 0.18385385975250443, 0.18383219420221542, 0.1838105337575115, 0.1839066918001885, 0.1840028271881258, 0.18409893992932863, 0.18407725827346602, 0.18405558172397551, 0.1841516543035441, 0.18424770426183187, 0.1842260153031195, 0.1843220338983051, 0.18430034129692832, 0.18439632854789362, 0.184492293210966, 0.1844705882352941, 0.1844488883660746, 0.18454481298517997, 0.18464071504174998, 0.1847365945437441, 0.18471487360376249, 0.1846931577709852, 0.18467144704361113, 0.1847672778561354, 0.1847455635209778, 0.18472385428907168, 0.18470215015861827, 0.18479793233082706, 0.18489369200046987, 0.18487197556965, 0.1848502642395772, 0.18482855800845469, 0.1848068568744863, 0.18478516083587695, 0.18476346989083225, 0.1847417840375587, 0.18472010327426358, 0.18481577094578738, 0.18491141616801596, 0.18488972313467855, 0.18498533724340177, 0.18496364062866527, 0.18494194910284978, 0.1850375234521576, 0.1851330753898464, 0.18522860492379836, 0.18520689250967062, 0.18518518518518517, 0.18516348294855267, 0.18514178579798454, 0.18512009373169303, 0.1850984067478913, 0.18507672484479326, 0.18505504802061373, 0.18515048600538705, 0.1851288056206089, 0.1852242126214729, 0.18520252868180753, 0.18518084981856492, 0.18515917602996254, 0.18513750731421885, 0.185115843669553, 0.1852111852111852, 0.18518951801591016, 0.18516785588957774, 0.18514619883040936, 0.1851245468366273, 0.18510289990645462, 0.1850812580381153, 0.185059621229834, 0.18503798947983635, 0.18501636278634875, 0.18499474114759845, 0.1849731245618135, 0.18506834910620398, 0.18504672897196262, 0.1850251138885644, 0.18500350385423966, 0.18498189886721944, 0.18496029892573565, 0.18505545826036193, 0.18515059537707215, 0.18524571028364656, 0.18522408963585435, 0.18520247403430973, 0.18518086347724622, 0.18527593046318983, 0.18537097526831545, 0.18534935261868657, 0.18532773501282948, 0.1853061224489796, 0.18528451492537312, 0.18526291244024717, 0.18535789228258334, 0.18545284998251543, 0.18554778554778556, 0.18564269898613214, 0.18573759030529013, 0.18571595013398579, 0.18569431500465983, 0.1856726849155504, 0.18565105986489636, 0.18562943985093747, 0.1856078248719143, 0.18558621492606822, 0.18568102444703144, 0.1856594110115237, 0.18563780260707635, 0.18561619923193298, 0.1855946008843379, 0.18557300756253636, 0.1855514192647743, 0.1855298359892986, 0.18550825773435684, 0.18548668449819747, 0.18546511627906978, 0.1854435530752238, 0.18542199488491048, 0.1854004417063815, 0.18549511854951187, 0.18558977338756538, 0.1855682082268185, 0.18554664807714652, 0.18564126394052044, 0.18561970031362526, 0.18559814169570268, 0.18557658808500754, 0.18555503947979562, 0.18553349587832346, 0.1855119572788484, 0.18549042367962856, 0.18546889507892295, 0.1854473714749913, 0.18542585286609423, 0.1854043392504931, 0.1853828306264501, 0.1853613269922283, 0.1853398283460914, 0.18531833468630407, 0.18529684601113172, 0.1852753623188406, 0.18536981219568746, 0.18546424017619104, 0.1854427445526194, 0.1855371421949241, 0.18551564310544613, 0.18549414899779862, 0.18547265987025024, 0.1854511757210703, 0.18554551772063932, 0.18552403011001736, 0.18550254747568318, 0.1854810698159083, 0.18545959712896504, 0.1854381294131265, 0.18541666666666667, 0.1853952088878602, 0.18537375607498263, 0.1853523082263103, 0.1853308653401203, 0.1853094274146906, 0.1852879944482998, 0.18526656643922748, 0.18524514338575393, 0.18522372528616024, 0.18520231213872831, 0.18518090394174083, 0.18515950069348128, 0.1851381023922339, 0.1851167090362838, 0.18509532062391681, 0.1850739371534196, 0.1850525586230796, 0.18503118503118504, 0.18500981637602495, 0.18498845265588915, 0.18496709386906823, 0.18506118679288847, 0.1851552579937666, 0.18524930747922438, 0.1852279284477784, 0.18520655435033465, 0.18518518518518517, 0.18516382095062298, 0.18514246164494175, 0.185121107266436, 0.185099757813401, 0.18507841328413285, 0.18517237403435952, 0.18515102605487666, 0.1852449567723343, 0.18533886583679116, 0.18543275325573355, 0.18552661903664439, 0.18562046318700312, 0.18559907834101383, 0.1855776984218408, 0.1855563234277816, 0.18553495335713463, 0.185513588208199, 0.18549222797927462, 0.18547087266866222, 0.1854495222746633, 0.1854281767955801, 0.18540683622971574, 0.18538550057537398, 0.18536416983085952, 0.18534284399447767, 0.18543655815023583, 0.18541522889348977, 0.18539390454284072, 0.18537258509659613, 0.18535127055306427, 0.18544492986893538, 0.18553856765145418, 0.18551724137931033, 0.18549592000919435, 0.18547460353941622, 0.1854532919682868, 0.18543198529411764, 0.18541068351522114, 0.18538938662991042, 0.18536809463649936, 0.1853468075333027, 0.1853255253186359, 0.18530424799081516, 0.1852829755481575, 0.18526170798898073, 0.18524044531160336, 0.1853339453752582, 0.18542742398164086, 0.18552088113813675, 0.18549959848571757, 0.1854783207157605, 0.18545704782658562, 0.18543577981651377, 0.18541451668386652, 0.1853932584269663, 0.18548664450303795, 0.1854653828519028, 0.18544412607449856, 0.18542287416914965, 0.18540162713418126, 0.18538038496791934, 0.18535914766869058, 0.1854524627720504, 0.18554575649982818, 0.18552450755840585, 0.18561777167067445, 0.18559651934966798, 0.1855752718946766, 0.18566849816849818, 0.18576170310175116, 0.18585488670176242, 0.18594804897585537, 0.1859267734553776, 0.18590550280288295, 0.18588423701670098, 0.18586297609516184, 0.18584172003659652, 0.18582046883933676, 0.18579922250171507, 0.18577798102206472, 0.1857567443987197, 0.18573551263001487, 0.18571428571428572, 0.1856930636498686, 0.18567184643510054, 0.18565063406831944, 0.18562942654786382, 0.1856082238720731, 0.18558702603928734, 0.18556583304784743, 0.185544644896095, 0.18552346158237243, 0.18550228310502284, 0.18548110946239013, 0.18545994065281898, 0.1854387766746548, 0.18541761752624372, 0.18551055333713634, 0.18548939082819987, 0.1855822972510551, 0.1855611313868613, 0.18553997035009692, 0.18551881413911062, 0.18549766275225174, 0.1855905152758778, 0.18556936053801437, 0.18554821062229315, 0.18552706552706552, 0.18550592525068368, 0.18548478979150052, 0.18546365914786966, 0.18544253331814559, 0.18542141230068337, 0.18540029609383898, 0.18537918469596903, 0.18535807810543095, 0.18533697632058288, 0.18531587933978372, 0.18529478716139314, 0.18527369978377148, 0.18525261720527994, 0.18523153942428036, 0.18521046643913538, 0.1851893982482084, 0.1851683348498635, 0.1851472762424656, 0.18512622242438026, 0.18510517339397384, 0.18508412914961347, 0.18506308968966692, 0.18504205501250284, 0.18502102511649052, 0.185, 0.18497897966140212, 0.1849579640990684, 0.1849369533113711, 0.18491594729668331, 0.18489494605337875, 0.18487394957983194, 0.18485295787441808, 0.18483197093551318, 0.18492450902486093, 0.18501702610669693, 0.1849960276926569, 0.1849750340444848, 0.18495404516055827, 0.18493306103925572, 0.1849120816789563, 0.18489110707803993, 0.18498355449699444, 0.1850759809480608, 0.1851683864383717, 0.18514739229024943, 0.18512640290216528, 0.18521877125368397, 0.18519777853337868, 0.18529011786038077, 0.18538243626062323, 0.18536143213233627, 0.18534043276311318, 0.18531943815133667, 0.1852984482953902, 0.18527746319365798, 0.18525648284452498, 0.18534873188405798, 0.18532774821691383, 0.18541996830427893, 0.18539898132427843, 0.18537799909461294, 0.1853570216136698, 0.18533604887983707, 0.18531508089150356, 0.18529411764705883, 0.18527315914489312, 0.18525220538339743, 0.18523125636096346, 0.1852103120759837, 0.1853024307518372, 0.1853945286004974, 0.1853735729625862, 0.1853526220614828, 0.18533167589558142, 0.1854237288135593, 0.18551576093096825, 0.18549480343425215, 0.18547385067208855, 0.18545290264287329, 0.1854319593450028, 0.18541102077687444, 0.18539008693688608, 0.18536915782343644, 0.18546111299243706, 0.1855530474040632, 0.1856449610653425, 0.18562401263823064, 0.1857158975516191, 0.18569494584837545, 0.18567399887196842, 0.18565305662079856, 0.18563211909326718, 0.1856111862877763, 0.1855902582027286, 0.18556933483652763, 0.1855484161875775, 0.18552750225428313, 0.18550659303505015, 0.18548568852828487, 0.18546478873239436, 0.1855565570076611, 0.1856483046074124, 0.18562739355710745, 0.18571911251267034, 0.1858108108108108, 0.18578988852606687, 0.18576897095248818, 0.18574805808848363, 0.18572714993246286, 0.18570624648283623, 0.18568534773801484, 0.1856644536964105, 0.18564356435643564, 0.18562267971650354, 0.1856017997750281, 0.18558092453042402, 0.18556005398110662, 0.18553918812549197, 0.18551832696199685, 0.18549747048903878, 0.18547661870503598, 0.18545577160840732, 0.18543492919757248, 0.18541409147095178, 0.1853932584269663, 0.18537243006403775, 0.18535160638058862, 0.18533078737504213, 0.1853099730458221, 0.18528916339135318, 0.18526835841006065, 0.1852475581003705, 0.1852267624607095, 0.185205971489505, 0.18518518518518517, 0.18516440354617889, 0.18514362657091563, 0.18512285425782565, 0.18510208660533992, 0.1850813236118901, 0.18506056527590847, 0.1850398115958282, 0.18501906257008296, 0.1849983181971073, 0.18497757847533633, 0.18495684340320592, 0.18493611297915266, 0.1849153872016138, 0.18489466606902735, 0.18487394957983194, 0.18485323773246695, 0.18483253052537246, 0.18481182795698925, 0.18479113002575875, 0.18477043673012317, 0.18474974806852537, 0.18472906403940886, 0.18470838464121794, 0.18468770987239758, 0.1846670397313934, 0.18464637421665175, 0.18462571332661967, 0.18460505705974492, 0.1845844054144759, 0.18456375838926176, 0.1845431159825523, 0.18463430999776337, 0.18472548361847255, 0.18470483005366725, 0.18468418110676355, 0.18466353677621283, 0.1846428970604672, 0.18462226195797943, 0.18460163146720304, 0.18458100558659218, 0.18456038431460173, 0.18453976764968721, 0.18451915559030493, 0.18449854813491176, 0.18447794528196537, 0.18445734702992408, 0.18443675337724685, 0.18441616432239338, 0.1843955798638241, 0.184375, 0.18435442472938288, 0.18433385405043518, 0.1844248577485217, 0.18440428380187415, 0.18438371444506413, 0.18436314967655587, 0.18434258949481433, 0.1844335414808207, 0.18452447318541643, 0.18461538461538463, 0.18459480548433843, 0.18468568880962996, 0.18466510643040232, 0.1846445286382884, 0.1846239554317549, 0.18460338680926916, 0.18458282276929933, 0.1845622633103141, 0.18454170843078294, 0.18452115812917594, 0.18450061240396393, 0.18448007125361834, 0.1844595346766114, 0.18443900267141586, 0.18441847523650529, 0.1843979523703539, 0.18437743407143653, 0.18435692033822876, 0.18433641116920682, 0.1843159065628476, 0.18440662885107328, 0.18438612099644128, 0.18436561770265764, 0.18434511896820102, 0.18432462479155087, 0.18430413517118718, 0.18428365010559075, 0.18426316959324293, 0.18435381709078785, 0.18433333333333332, 0.18431285412731918, 0.18440346589646744, 0.18438298344996112, 0.18436250555308753, 0.18434203220433093, 0.1843215634021763, 0.18430109914510936, 0.1843916518650089, 0.18448218448218448, 0.18457269700332962, 0.1845522139607147, 0.184531735463826, 0.18451126151115055, 0.18449079210117594, 0.18447032723239046, 0.18444986690328305, 0.18442941111234334, 0.18440895985806166, 0.18438851313892893, 0.1844789356984479, 0.18445848575545948, 0.18454888051429838, 0.18463925523661753, 0.18472960992907803, 0.18470914127423824, 0.18468867715488588, 0.18466821756951368, 0.1847585290208241, 0.18473806623103334, 0.18471760797342193, 0.18469715424648434, 0.18467670504871567, 0.18465626037861177, 0.18463582023466904, 0.18461538461538463, 0.18470562195661797, 0.18468518313599647, 0.18466474883823855, 0.18464431906184312, 0.18462389380530975, 0.1846034730671386, 0.18458305684583057, 0.1845626451398872, 0.18454223794781072, 0.18463239358761746, 0.1847225292947159, 0.1848126450757157, 0.1849027409372237, 0.1848823074372859, 0.18486187845303867, 0.1848414539829853, 0.1848210340256297, 0.1848006185794764, 0.1848906560636183, 0.18487023743787961, 0.18484982332155478, 0.18482941371315004, 0.18491940825789357, 0.18489899547411415, 0.184878587196468, 0.18496854651804437, 0.18494813506952107, 0.1849277281253448, 0.1849073256840247, 0.1848869277440706, 0.18486653430399294, 0.18484614536230284, 0.18493603881782092, 0.1850259124490021, 0.18500551267916207, 0.18509535883585052, 0.18518518518518517, 0.18516477460597378, 0.18514436852545735, 0.18523415977961433, 0.18532393124724547, 0.18541368293489038, 0.1855034148490857, 0.18559312699636524, 0.18568281938325992, 0.18566237198546415, 0.1856419290905087, 0.1857315864802378, 0.18571114046675474, 0.1856906989543203, 0.1856702619414484, 0.18564982942665345, 0.18562940140845072, 0.18560897788535594, 0.1855885588558856, 0.1855681443185568, 0.18554773427188737, 0.1855273287143957, 0.18550692764460083, 0.18548653106102253, 0.18546613896218117, 0.18555567769594372, 0.18553528247966586, 0.18551489174634575, 0.1856043956043956, 0.18558400175804857, 0.1855636123928807, 0.1856530814017357, 0.1857425307557118, 0.185831960461285, 0.18581155282231496, 0.18579114966509278, 0.1857707509881423, 0.1857503567899879, 0.1857299670691548, 0.18570958182416858, 0.18568920105355574, 0.1856688247558433, 0.18564845292955892, 0.18562808557323093, 0.18560772268538833, 0.1855873642645607, 0.18556701030927836, 0.18554666081807217, 0.18552631578947368, 0.18550597522201512, 0.18548563911422933, 0.1854653074646498, 0.1854449802718106, 0.18542465753424658, 0.1854043392504931, 0.18538402541908622, 0.18536371603856266, 0.18534341110745975, 0.18532311062431545, 0.18541233161756654, 0.18550153307052125, 0.18548122194240665, 0.18546091526165973, 0.1854406130268199, 0.18542031523642732, 0.18550946700229834, 0.18548916611950098, 0.185468869679396, 0.18555798687089717, 0.18564708456405207, 0.18573616276525926, 0.18571584818987202, 0.18569553805774278, 0.1856752323674139, 0.1857642685326919, 0.1858532852301301, 0.18583296895496285, 0.18581265712099684, 0.18579234972677597, 0.18577204677084472, 0.18575174825174826, 0.18573145416803233, 0.1857111645182434, 0.18569087930092845, 0.18567059851463522, 0.18565032215791197, 0.1856300502293077, 0.185609782727372, 0.185589519650655, 0.18556926099770768, 0.18554900676708141, 0.18552875695732837, 0.18561763422086425, 0.18570649208947082, 0.18579533056949596, 0.1857750627249918, 0.1857547993019197, 0.18573454029883302, 0.18582333696837514, 0.18580307491004253, 0.18578281726995202, 0.18576256404665867, 0.18574231523871812, 0.18572207084468664, 0.1857018308631212, 0.18568159529257927, 0.1856613641316191, 0.18564113737879942, 0.18562091503267975, 0.18560069709182006, 0.1856893922892616, 0.18566917129478383, 0.18564895470383275, 0.18562874251497005, 0.18560853472675812, 0.18558833133775987, 0.18556813234653896, 0.1855479377516596, 0.1855277475516866, 0.1855075617451855, 0.18548738033072237, 0.18546720330686392, 0.18544703067217752, 0.1854268624252311, 0.1854066985645933, 0.18538653908883332, 0.18536638399652097, 0.18534623328622676, 0.18532608695652175, 0.1853059450059776, 0.1852858074331667, 0.18526567423666196, 0.18524554541503693, 0.18522542096686584, 0.18520530089072343, 0.18518518518518517, 0.1851650738488271, 0.18514496688022586, 0.18512486427795874, 0.18510476604060364, 0.18508467216673904, 0.1850645826549441, 0.18504449750379856, 0.1850244167118828, 0.1850043402777778, 0.1849842682000651, 0.18507268387936646, 0.18505260874281376, 0.18503253796095445, 0.18512091963995228, 0.18520928215137714, 0.18529762550146373, 0.18538594969644406, 0.18536585365853658, 0.18534576197702146, 0.18532567465048227, 0.1854139575205895, 0.18539386715787193, 0.18537378114842903, 0.18535369949084607, 0.18533362218370883, 0.1853135492256038, 0.18529348061511805, 0.1852734163508392, 0.18525335643135557, 0.18523330085525602, 0.18532149815977483, 0.18540967637190173, 0.18538961038961038, 0.18536954875013525, 0.18545769314001298, 0.18554581845721085, 0.18563392470791865, 0.1857220118983234, 0.18581008003460955, 0.1858981291229588, 0.1858780276816609, 0.1858579305870905, 0.18583783783783783, 0.1858177494324938, 0.1857976653696498, 0.18588565870528478, 0.1858655716446942, 0.18584548892490546, 0.185933448573898, 0.18591336286053797, 0.18600129617627997, 0.18608921049789395, 0.18606911447084235, 0.18604902278371666, 0.1860289354351112, 0.18611680880924106, 0.18609671848013817, 0.186184565569347, 0.1862723936973883, 0.18625229308298263, 0.18623219680621494, 0.1862121048656813, 0.18629989212513484, 0.18638766044655378, 0.1864754098360656, 0.18645530033430388, 0.1864351951692905, 0.18641509433962264, 0.1865028029322984, 0.1864826991484316, 0.18646259969821083, 0.18644250458023495, 0.1865301724137931, 0.18651007434543693, 0.18648998060762767, 0.18657761499515244, 0.1865575183110728, 0.18653742595584274, 0.18651733792806374, 0.1864972542263379, 0.1865848406546081, 0.1865647540101195, 0.18654467168998923, 0.18663222473361318, 0.186719758932415, 0.1868072742924782, 0.18678717452119648, 0.18687466379774073, 0.18685456110154905, 0.18694202430891685, 0.18702946870294687, 0.18711689428970857, 0.1870967741935484, 0.18718417374475863, 0.18716405074177597, 0.1872514242717403, 0.18733877901977644, 0.1874261149919398, 0.18751343219428326, 0.18760073063285698, 0.18768801031370863, 0.18777527124288323, 0.18775510204081633, 0.18773493717108797, 0.1877147766323024, 0.18769462042306453, 0.1876744685419798, 0.18765432098765433, 0.18763417775869473, 0.18761403885370828, 0.18759390427130285, 0.18757377401008693, 0.18755364806866953, 0.18753352644566035, 0.1875134091396696, 0.18749329614930815, 0.18747318747318747, 0.18745308310991957, 0.1874329830581171, 0.18741288731639327, 0.1873927958833619, 0.18737270875763748, 0.18735262593783494, 0.18733254742256994, 0.18731247321045863, 0.18729240330011787, 0.187272337690165, 0.18725227637921799, 0.18723221936589546, 0.18721216664881654, 0.18719211822660098, 0.18717207409786915, 0.18715203426124197, 0.18713199871534097, 0.18711196745878828, 0.18709194049020658, 0.1871789383561644, 0.18726591760299627, 0.187245880590627, 0.18722584786562532, 0.18720581942661532, 0.18718579527222162, 0.18716577540106952, 0.18714575981178483, 0.18712574850299402, 0.18710574147332407, 0.1870857387214026, 0.18706574024585784, 0.18715262932877297, 0.1872394998396922, 0.18732635178456936, 0.18730633614702424, 0.1872863247863248, 0.1872663177011003, 0.18724631488998078, 0.1872263163515967, 0.18731311405382314, 0.18739989321943407, 0.18737988468930172, 0.1873598804313014, 0.1873398804440649, 0.1873198847262248, 0.18740661686232657, 0.1873866182904706, 0.1873666239863423, 0.1873466339485757, 0.1873266481758054, 0.18730666666666668, 0.1873933447098976, 0.18737336034979205, 0.1873533802516528, 0.18733340441411664, 0.1873134328358209, 0.18729346551540346, 0.18727350245150287, 0.1873601193648087, 0.1874467178175618, 0.18742674480554075, 0.18740677604943534, 0.18738681154788536, 0.18736685129953132, 0.18734689530301415, 0.18732694355697552, 0.1873069960600575, 0.1872870528109029, 0.187267113808155, 0.18724717905045773, 0.18722724853645556, 0.18731375053214133, 0.18740023411727147, 0.1873802936795063, 0.1873603574848388, 0.1873404255319149, 0.18732049781938093, 0.18730057434588385, 0.18728065511007125, 0.18726074011059124, 0.1872408293460925, 0.18722092281522432, 0.18720102051663653, 0.18718112244897958, 0.18716122861090445, 0.1871413390010627, 0.18712145361810648, 0.18710157246068848, 0.187081695527462, 0.18706182281708095, 0.18704195432819967, 0.18702209005947323, 0.18710842094085164, 0.1870885538330856, 0.18706869094383693, 0.1870488322717622, 0.18713512365990873, 0.18722139673105498, 0.1872015281757402, 0.18718166383701187, 0.18716180371352786, 0.18714194780394652, 0.1871220961069269, 0.18710224862112856, 0.18718846113055468, 0.18716861081654296, 0.1871487647121196, 0.18723494486853265, 0.1873211067528888, 0.18730125079499682, 0.18728139904610494, 0.18726155150487495, 0.18724170816996927, 0.18722186904005086, 0.18720203411378325, 0.18718220338983052, 0.18716237686685733, 0.1871425545435289, 0.18712273641851107, 0.18710292249047014, 0.18708311275807304, 0.1870633072199873, 0.18704350587488092, 0.18702370872142252, 0.1870039157582813, 0.18708994708994708, 0.18717596021585017, 0.18715615742699956, 0.18713635882788532, 0.18711656441717792, 0.1870967741935484, 0.18707698815566837, 0.18705720630221, 0.18703742863184605, 0.1870176551432498, 0.18699788583509513, 0.18697812070605643, 0.1869583597548087, 0.1870442777131988, 0.18702451394759087, 0.18700475435816163, 0.18698499894358758, 0.18707087778599346, 0.18715673848753697, 0.1871369732812335, 0.18711721224920802, 0.1870974553901383, 0.18707770270270271, 0.18705795418558008, 0.18703820983744987, 0.1871240105540897, 0.18720979316167158, 0.18729555766592804, 0.18738130407258916, 0.18736153602700706, 0.18734177215189873, 0.1873220124459445, 0.18730225690782534, 0.18728250553622272, 0.18726275832981865, 0.18724301528729573, 0.18722327640733713, 0.18720354168862655, 0.18718381112984822, 0.187164084729687, 0.18724973656480506, 0.1873353703508587, 0.18742098609355246, 0.18750658379858842, 0.18759216347166632, 0.1876777251184834, 0.18776326874473462, 0.18784879435611246, 0.18782901663508106, 0.18780924307821875, 0.18778947368421053, 0.18776970845174193, 0.18774994737949904, 0.18773019046616857, 0.18771043771043772, 0.1876906891109942, 0.1876709446665264, 0.18765120437572316, 0.18763146823727386, 0.18761173624986854, 0.1875920084121977, 0.18757228472295237, 0.18755256518082422, 0.1875328497845054, 0.18751313853268867, 0.18749343142406727, 0.187473728457335, 0.1874540296311863, 0.18743433494431602, 0.18751969744721084, 0.1875, 0.1874803066904737, 0.1874606175173283, 0.18744093247926075, 0.1874212515749685, 0.18740157480314962, 0.1873819021625026, 0.18736223365172666, 0.18734256926952142, 0.18732290901458706, 0.18730325288562436, 0.18728360088133458, 0.1873688627780109, 0.1874541067869506, 0.18753933291378225, 0.18762454116413216, 0.18760486577181207, 0.18758519450560973, 0.1875655273642273, 0.18754586434636755, 0.18752620545073376, 0.18750655067602975, 0.18748690002095997, 0.18746725348422927, 0.18744761106454316, 0.18742797276060766, 0.18740833857112926, 0.18738870849481512, 0.18736908253037285, 0.18734946067651062, 0.18732984293193716, 0.18731022929536173, 0.18729061976549413, 0.1872710143410447, 0.18725141302072432, 0.18723181580324438, 0.18721222268731688, 0.18719263367165428, 0.18717304875496965, 0.18715346793597656, 0.18723849372384938, 0.18721891015584144, 0.18719933068395733, 0.18728432500261424, 0.18726474278544541, 0.18724516466283325, 0.18722559063349362, 0.187206020696143, 0.18718645484949833, 0.18716689309227713, 0.1871473354231975, 0.18712778184097795, 0.18710823234433765, 0.18708868693199623, 0.1870691456026739, 0.18704960835509138, 0.18703007518796994, 0.18701054610003132, 0.1869910210899979, 0.18697150015659256, 0.18695198329853863, 0.18693247051456008, 0.18691296180338135, 0.18689345716372743, 0.18687395659432388, 0.18685446009389672, 0.18683496766117255, 0.1868154792948785, 0.18679599499374216, 0.18677651475649182, 0.1867570385818561, 0.1867375664685643, 0.18671809841534612, 0.18669863442093193, 0.18667917448405252, 0.1866597186034393, 0.18664026677782408, 0.18662081900593935, 0.18660137528651802, 0.18658193561829356, 0.1865625, 0.18654306843037183, 0.18652364090814413, 0.18650421743205248, 0.18648479800083298, 0.1864653826132223, 0.18644597126795753, 0.1864265639637764, 0.18640716069941715, 0.1863877614736185, 0.18636836628511966, 0.1863489751326605, 0.18643362463587182, 0.18641423072922084, 0.18649885583524028, 0.18658346333853354, 0.1865640599001664, 0.1865446604970365, 0.18652526512788523, 0.18650587379145442, 0.1864864864864865, 0.18646710321172436, 0.18644772396591144, 0.18642834874779174, 0.18640897755610972, 0.18638961038961038, 0.18637024724703927, 0.1863508881271424, 0.1863315330286664, 0.18631218195035829, 0.18629283489096574, 0.18627349184923683, 0.18625415282392027, 0.1862348178137652, 0.1862154868175213, 0.18619615983393875, 0.18617683686176836, 0.18615751789976134, 0.18613820294666944, 0.18611889200124493, 0.18609958506224067, 0.1860802821284099, 0.18606098319850653, 0.18604168827128487, 0.1860223973454998, 0.1860031104199067, 0.18598382749326145, 0.18596454856432051, 0.1859452736318408, 0.18592600269457976, 0.18590673575129535, 0.18588747280074602, 0.18586821384169083, 0.18584895887288927, 0.1858297078931013, 0.18581046090108752, 0.18579121789560896, 0.18577197887542715, 0.1857527438393042, 0.1857335127860027, 0.18571428571428572, 0.18569506262291688, 0.18567584351066033, 0.18576011590603334, 0.18584437086092714, 0.1859286083807553, 0.18590937306021105, 0.18589014171925106, 0.18587091435664047, 0.1858516909711449, 0.18583247156153052, 0.18581325612656396, 0.1857940446650124, 0.18577483717564355, 0.18575563365722556, 0.18573643410852714, 0.18571723852831748, 0.18569804691536634, 0.18567885926844388, 0.1856596755863209, 0.18574380165289256, 0.18582791033984092, 0.18580871720718858, 0.18578952803883095, 0.18577034283353985, 0.1858544140423335, 0.1859384678918026, 0.18591927325281304, 0.18590008257638316, 0.185880895861286, 0.18586171310629515, 0.1859457228356207, 0.1860297152290549, 0.18601052305787683, 0.18609449143800288, 0.18617844249613202, 0.18615924092409242, 0.18614004331236464, 0.18612084965972364, 0.18610165996494485, 0.18618556701030928, 0.18626945675703535, 0.1862502576788291, 0.18623106255797175, 0.18621187139323991, 0.18619268418341062, 0.18617350092726148, 0.18615432162357062, 0.1861351462711166, 0.18611597486867854, 0.18619979402677653, 0.18618061991555968, 0.18616144975288304, 0.18614228353752701, 0.18622606547251389, 0.18620689655172415, 0.18618773157678056, 0.18616857054646496, 0.18614941345955957, 0.1861302603148472, 0.18611111111111112, 0.1861948359222302, 0.18617568401563464, 0.18615653604854468, 0.18613739201974497, 0.18611825192802056, 0.1860991157721571, 0.1860799835509407, 0.18606085526315788, 0.18604173090759585, 0.18612538540596094, 0.18620902271092385, 0.18618988902589395, 0.1862735025172095, 0.18635709882884735, 0.18633795582948126, 0.18631881676253081, 0.18629968162678442, 0.186280550421031, 0.18626142314405997, 0.18634496919917864, 0.186428498100811, 0.18651200985423938, 0.18649286667350917, 0.18647372742200327, 0.18645459209851206, 0.1864354607018264, 0.18641633323073767, 0.18639720968403775, 0.18637809006051903, 0.18646153846153846, 0.18654496974669266, 0.18652584085315832, 0.18650671588229262, 0.18648759483288907, 0.18646847770374167, 0.18644936449364494, 0.18643025520139386, 0.18641114982578397, 0.18639204836561124, 0.18637295081967212, 0.18645630570638255, 0.186539643515673, 0.18662296425279115, 0.1867062679229824, 0.18678955453149002, 0.18687282408355518, 0.18685369100030716, 0.18683456183456185, 0.18681543658511618, 0.18679631525076765, 0.1868795415003582, 0.18696275071633237, 0.18694362017804153, 0.1869244935543278, 0.18690537084398978, 0.1868862520458265, 0.1869694180218881, 0.18705256698711392, 0.18713569894672258, 0.18711656441717792, 0.18719967283508843, 0.18728276426088736, 0.18726362056628845, 0.18724448078495504, 0.18722534491568726, 0.18720621295728593, 0.1872892612649433, 0.18727012668573764, 0.18725099601593626, 0.18723186925434115, 0.18721274639975488, 0.1871936274509804, 0.18727662616154395, 0.1872575045946498, 0.18723838693210823, 0.18721927317272355, 0.187302235378177, 0.18738518064911205, 0.18736605776099602, 0.1873469387755102, 0.18732782369146006, 0.1873087125076515, 0.1873916148117923, 0.18747450020399836, 0.1874553799082101, 0.18743626351213544, 0.18751911899663506, 0.18760195758564438, 0.18768477928433072, 0.18766564729867483, 0.1876465192131281, 0.18762739502649817, 0.18760827473759298, 0.18769105359690239, 0.18777381558838513, 0.18775468622656888, 0.18773556076194356, 0.18781829293135058, 0.1877991648844078, 0.18778004073319757, 0.1877609204765299, 0.18774180411321523, 0.18772269164206454, 0.18770358306188925, 0.18768447837150126, 0.18776714838184408, 0.187849801567111, 0.18793243793243794, 0.1880150574829586, 0.18809766022380467, 0.18807852710812736, 0.1880593978844589, 0.18804027255161193, 0.18802115110839943, 0.18800203355363498, 0.18798291988613258, 0.18796381010470672, 0.1879447042081724, 0.18792560219534504, 0.18790650406504064, 0.1878874098160756, 0.1878683194472668, 0.18784923295743167, 0.18783015034538805, 0.1878110716099543, 0.18789356083688807, 0.18797603330963744, 0.18805848903330624, 0.18814092801299626, 0.1881218274111675, 0.18810273068723987, 0.18808363784003249, 0.18806454886836496, 0.18804546377105744, 0.1880263825469305, 0.18800730519480519, 0.1879882317135031, 0.18807060255629945, 0.18805152652398824, 0.18803245436105476, 0.1881147956596694, 0.18809572094909754, 0.1880766501064585, 0.18805758313057583, 0.1880385200202737, 0.18801946077437665, 0.18800040539170973, 0.1879813538710985, 0.18796230621136895, 0.1879432624113475, 0.1879242224698612, 0.18790518638573744, 0.1878861541578041, 0.18786712578488962, 0.1878481012658228, 0.18782908059943296, 0.18781006378454995, 0.18779105082000405, 0.18777204170462597, 0.18785425101214576, 0.18783523934824412, 0.18781623153207852, 0.18779722756248102, 0.1877782274382841, 0.1877592311583207, 0.18774023872142423, 0.18782239304136744, 0.18790453074433658, 0.18788552937607442, 0.1878665318503539, 0.1878475381660095, 0.18782854832187626, 0.18780956231678964, 0.1877905801495856, 0.18777160181910055, 0.1877526273241714, 0.18773365666363545, 0.18771468983633058, 0.18769572684109506, 0.18767676767676766, 0.18765781234218765, 0.18763886083619472, 0.187619913157629, 0.18760096930533118, 0.18758202927814235, 0.1875630930749041, 0.18754416069445845, 0.18752523213564795, 0.18750630739731558, 0.18748738647830474, 0.1874684693774594, 0.1874495560936239, 0.1874306466256431, 0.18741174097236232, 0.18739283913262733, 0.18737394110528438, 0.1873550468891802, 0.18733615648316193, 0.18731726988607722, 0.18729838709677418, 0.1872795081141014, 0.18736141906873613, 0.18744331351405824, 0.18742442563482467, 0.18750629722921913, 0.18748740681039694, 0.1874685201974413, 0.18744963738920226, 0.18743075838453016, 0.18741188318227592, 0.18739301178129092, 0.18737414418042692, 0.1873552803785362, 0.1873364203744715, 0.18731756416708606, 0.1872987117552335, 0.18727986313776793, 0.18726101831354397, 0.18724217728141665, 0.18722334004024144, 0.18720450658887436, 0.1871856769261718, 0.18716685105099065, 0.18714802896218827, 0.18712921065862242, 0.18711039613915142, 0.18709158540263396, 0.18707277844792924, 0.18705397527389686, 0.187035175879397, 0.18701638026329012, 0.1869975884244373, 0.18707927258113133, 0.1871609403254973, 0.18724259166248117, 0.18722378465247086, 0.18720498142010647, 0.18718618196424985, 0.18716738628376342, 0.18714859437751005, 0.18712980624435296, 0.18711102188315598, 0.1870922412927833, 0.18707346447209955, 0.1870546914199699, 0.18703592213525988, 0.18701715661683554, 0.1869983948635634, 0.18697963687431035, 0.18696088264794383, 0.18694213218333167, 0.1870236662655435, 0.1870049132658177, 0.1869861640264688, 0.18696741854636592, 0.18694867682437852, 0.18692993885937656, 0.18701142513529764, 0.18699268463773924, 0.18697394789579158, 0.18705540527001302, 0.18703666599879784, 0.18701793048181908, 0.1869991987179487, 0.18698047070605908, 0.18696174644502303, 0.18694302593371384, 0.1869243091710052, 0.18690559615577135, 0.1868868868868869, 0.18686818136322692, 0.18684947958366693, 0.18683078154708296, 0.18691214728837302, 0.18699349674837418, 0.1870748299319728, 0.18705611683505052, 0.1870374074814963, 0.18711871187118712, 0.1871], [0.0, 0.0, 0.0, 0.0, 0.2, 0.3333333333333333, 0.42857142857142855, 0.375, 0.3333333333333333, 0.3, 0.2727272727272727, 0.25, 0.23076923076923078, 0.21428571428571427, 0.2, 0.1875, 0.17647058823529413, 0.2222222222222222, 0.21052631578947367, 0.25, 0.2857142857142857, 0.2727272727272727, 0.2608695652173913, 0.25, 0.24, 0.23076923076923078, 0.2222222222222222, 0.21428571428571427, 0.2413793103448276, 0.23333333333333334, 0.22580645161290322, 0.21875, 0.21212121212121213, 0.20588235294117646, 0.22857142857142856, 0.2222222222222222, 0.21621621621621623, 0.21052631578947367, 0.20512820512820512, 0.2, 0.1951219512195122, 0.19047619047619047, 0.18604651162790697, 0.20454545454545456, 0.2222222222222222, 0.2391304347826087, 0.2553191489361702, 0.25, 0.2653061224489796, 0.28, 0.27450980392156865, 0.2692307692307692, 0.2641509433962264, 0.25925925925925924, 0.2545454545454545, 0.25, 0.24561403508771928, 0.2413793103448276, 0.23728813559322035, 0.23333333333333334, 0.22950819672131148, 0.22580645161290322, 0.2222222222222222, 0.21875, 0.2153846153846154, 0.21212121212121213, 0.208955223880597, 0.20588235294117646, 0.2028985507246377, 0.2, 0.19718309859154928, 0.19444444444444445, 0.1917808219178082, 0.20270270270270271, 0.21333333333333335, 0.2236842105263158, 0.23376623376623376, 0.24358974358974358, 0.25316455696202533, 0.2625, 0.25925925925925924, 0.25609756097560976, 0.25301204819277107, 0.25, 0.24705882352941178, 0.2441860465116279, 0.25287356321839083, 0.25, 0.24719101123595505, 0.24444444444444444, 0.24175824175824176, 0.2391304347826087, 0.23655913978494625, 0.23404255319148937, 0.23157894736842105, 0.23958333333333334, 0.24742268041237114, 0.25510204081632654, 0.25252525252525254, 0.25, 0.24752475247524752, 0.24509803921568626, 0.24271844660194175, 0.2403846153846154, 0.23809523809523808, 0.2358490566037736, 0.2336448598130841, 0.23148148148148148, 0.22935779816513763, 0.22727272727272727, 0.22522522522522523, 0.22321428571428573, 0.22123893805309736, 0.21929824561403508, 0.21739130434782608, 0.21551724137931033, 0.21367521367521367, 0.211864406779661, 0.21008403361344538, 0.20833333333333334, 0.2066115702479339, 0.20491803278688525, 0.2032520325203252, 0.20161290322580644, 0.2, 0.20634920634920634, 0.2125984251968504, 0.21875, 0.2248062015503876, 0.23076923076923078, 0.2366412213740458, 0.24242424242424243, 0.24060150375939848, 0.23880597014925373, 0.23703703703703705, 0.23529411764705882, 0.23357664233576642, 0.2318840579710145, 0.2302158273381295, 0.22857142857142856, 0.22695035460992907, 0.22535211267605634, 0.22377622377622378, 0.2222222222222222, 0.2206896551724138, 0.2191780821917808, 0.21768707482993196, 0.21621621621621623, 0.21476510067114093, 0.21333333333333335, 0.2119205298013245, 0.21052631578947367, 0.20915032679738563, 0.2077922077922078, 0.2064516129032258, 0.21153846153846154, 0.21656050955414013, 0.22151898734177214, 0.22641509433962265, 0.225, 0.2236024844720497, 0.2222222222222222, 0.22085889570552147, 0.22560975609756098, 0.23030303030303031, 0.23493975903614459, 0.23952095808383234, 0.24404761904761904, 0.24260355029585798, 0.24705882352941178, 0.24561403508771928, 0.2441860465116279, 0.24277456647398843, 0.2413793103448276, 0.24, 0.23863636363636365, 0.23728813559322035, 0.23595505617977527, 0.2346368715083799, 0.23333333333333334, 0.23204419889502761, 0.23626373626373626, 0.24043715846994534, 0.2391304347826087, 0.23783783783783785, 0.23655913978494625, 0.23529411764705882, 0.23404255319148937, 0.23809523809523808, 0.23684210526315788, 0.2356020942408377, 0.234375, 0.23316062176165803, 0.23195876288659795, 0.2358974358974359, 0.23979591836734693, 0.23857868020304568, 0.23737373737373738, 0.24120603015075376, 0.245, 0.24875621890547264, 0.2524752475247525, 0.2561576354679803, 0.2549019607843137, 0.25853658536585367, 0.2621359223300971, 0.2608695652173913, 0.25961538461538464, 0.2631578947368421, 0.2619047619047619, 0.26066350710900477, 0.25943396226415094, 0.25821596244131456, 0.2570093457943925, 0.2558139534883721, 0.25462962962962965, 0.2534562211981567, 0.25229357798165136, 0.2511415525114155, 0.25, 0.248868778280543, 0.25225225225225223, 0.2556053811659193, 0.2544642857142857, 0.25333333333333335, 0.252212389380531, 0.2511013215859031, 0.25, 0.24890829694323144, 0.24782608695652175, 0.24675324675324675, 0.24568965517241378, 0.2446351931330472, 0.24358974358974358, 0.2425531914893617, 0.24152542372881355, 0.24050632911392406, 0.23949579831932774, 0.2384937238493724, 0.2375, 0.23651452282157676, 0.23553719008264462, 0.2345679012345679, 0.2336065573770492, 0.23265306122448978, 0.23170731707317074, 0.23076923076923078, 0.22983870967741934, 0.23293172690763053, 0.236, 0.23904382470119523, 0.24206349206349206, 0.2450592885375494, 0.24803149606299213, 0.25098039215686274, 0.25390625, 0.2529182879377432, 0.25193798449612403, 0.25096525096525096, 0.25, 0.24904214559386972, 0.25190839694656486, 0.25475285171102663, 0.25757575757575757, 0.26037735849056604, 0.2593984962406015, 0.26217228464419473, 0.26119402985074625, 0.26022304832713755, 0.25925925925925924, 0.25830258302583026, 0.25735294117647056, 0.2564102564102564, 0.25547445255474455, 0.2545454545454545, 0.2536231884057971, 0.2527075812274368, 0.2517985611510791, 0.25089605734767023, 0.25, 0.2491103202846975, 0.24822695035460993, 0.24734982332155478, 0.24647887323943662, 0.24561403508771928, 0.24475524475524477, 0.24738675958188153, 0.25, 0.25259515570934254, 0.2517241379310345, 0.2508591065292096, 0.25, 0.24914675767918087, 0.24829931972789115, 0.24745762711864408, 0.24662162162162163, 0.24579124579124578, 0.24496644295302014, 0.24414715719063546, 0.24333333333333335, 0.2425249169435216, 0.24172185430463577, 0.24092409240924093, 0.24013157894736842, 0.23934426229508196, 0.238562091503268, 0.23778501628664495, 0.237012987012987, 0.23624595469255663, 0.23870967741935484, 0.24115755627009647, 0.24358974358974358, 0.24600638977635783, 0.2484076433121019, 0.24761904761904763, 0.2468354430379747, 0.24605678233438485, 0.24528301886792453, 0.2445141065830721, 0.24375, 0.24299065420560748, 0.2422360248447205, 0.24148606811145512, 0.24074074074074073, 0.24, 0.2392638036809816, 0.2415902140672783, 0.24085365853658536, 0.24012158054711247, 0.23939393939393938, 0.24169184290030213, 0.24397590361445784, 0.24624624624624625, 0.24850299401197604, 0.2507462686567164, 0.25297619047619047, 0.2522255192878338, 0.25443786982248523, 0.2536873156342183, 0.25588235294117645, 0.25513196480938416, 0.2573099415204678, 0.2565597667638484, 0.2558139534883721, 0.25507246376811593, 0.2543352601156069, 0.25360230547550433, 0.25287356321839083, 0.2521489971346705, 0.25142857142857145, 0.25071225071225073, 0.25, 0.24929178470254956, 0.24858757062146894, 0.24788732394366197, 0.24719101123595505, 0.24649859943977592, 0.24581005586592178, 0.24512534818941503, 0.24444444444444444, 0.24376731301939059, 0.2430939226519337, 0.24242424242424243, 0.24175824175824176, 0.2410958904109589, 0.24043715846994534, 0.23978201634877383, 0.2391304347826087, 0.23848238482384823, 0.23783783783783785, 0.2371967654986523, 0.23655913978494625, 0.2359249329758713, 0.23529411764705882, 0.23466666666666666, 0.23404255319148937, 0.23342175066312998, 0.2328042328042328, 0.23218997361477572, 0.23157894736842105, 0.23097112860892388, 0.23036649214659685, 0.23237597911227154, 0.234375, 0.23376623376623376, 0.23316062176165803, 0.23255813953488372, 0.23195876288659795, 0.23136246786632392, 0.23076923076923078, 0.23017902813299232, 0.22959183673469388, 0.22900763358778625, 0.22842639593908629, 0.23037974683544304, 0.23232323232323232, 0.23173803526448364, 0.23115577889447236, 0.23057644110275688, 0.23, 0.22942643391521197, 0.22885572139303484, 0.228287841191067, 0.2301980198019802, 0.22962962962962963, 0.229064039408867, 0.2285012285012285, 0.22794117647058823, 0.2273838630806846, 0.22682926829268293, 0.22627737226277372, 0.22815533980582525, 0.22760290556900725, 0.22946859903381642, 0.23132530120481928, 0.23317307692307693, 0.23501199040767387, 0.23684210526315788, 0.2386634844868735, 0.24047619047619048, 0.23990498812351543, 0.23933649289099526, 0.23877068557919623, 0.24056603773584906, 0.24235294117647058, 0.24413145539906103, 0.24355971896955503, 0.24299065420560748, 0.24242424242424243, 0.24186046511627907, 0.24129930394431554, 0.24074074074074073, 0.24018475750577367, 0.23963133640552994, 0.23908045977011494, 0.23853211009174313, 0.2402745995423341, 0.2420091324200913, 0.2437357630979499, 0.2431818181818182, 0.24263038548752835, 0.2420814479638009, 0.24153498871331827, 0.240990990990991, 0.24044943820224718, 0.242152466367713, 0.24161073825503357, 0.24107142857142858, 0.24053452115812918, 0.24, 0.24168514412416853, 0.24336283185840707, 0.24503311258278146, 0.2444933920704846, 0.24395604395604395, 0.24342105263157895, 0.24288840262582057, 0.2423580786026201, 0.24183006535947713, 0.24130434782608695, 0.24078091106290672, 0.24025974025974026, 0.23974082073434125, 0.23922413793103448, 0.23870967741935484, 0.23819742489270387, 0.23768736616702354, 0.23717948717948717, 0.23667377398720682, 0.23617021276595745, 0.2356687898089172, 0.23516949152542374, 0.2346723044397463, 0.23417721518987342, 0.2336842105263158, 0.23319327731092437, 0.23270440251572327, 0.23221757322175732, 0.23173277661795408, 0.23125, 0.23076923076923078, 0.23029045643153526, 0.22981366459627328, 0.22933884297520662, 0.2288659793814433, 0.22839506172839505, 0.22792607802874743, 0.22745901639344263, 0.22699386503067484, 0.22653061224489796, 0.22606924643584522, 0.22560975609756098, 0.22718052738336714, 0.22874493927125505, 0.23030303030303031, 0.22983870967741934, 0.22937625754527163, 0.2289156626506024, 0.22845691382765532, 0.228, 0.2275449101796407, 0.22709163346613545, 0.22664015904572565, 0.2261904761904762, 0.22574257425742575, 0.22529644268774704, 0.22485207100591717, 0.22440944881889763, 0.22593320235756384, 0.22745098039215686, 0.22896281800391388, 0.23046875, 0.2300194931773879, 0.22957198443579765, 0.229126213592233, 0.22868217054263565, 0.22823984526112184, 0.2277992277992278, 0.22736030828516376, 0.22692307692307692, 0.22648752399232247, 0.22796934865900384, 0.2294455066921606, 0.22900763358778625, 0.22857142857142856, 0.2300380228136882, 0.22960151802656548, 0.22916666666666666, 0.22873345935727787, 0.22830188679245284, 0.2278719397363465, 0.2274436090225564, 0.2270168855534709, 0.22659176029962547, 0.2261682242990654, 0.22574626865671643, 0.22532588454376165, 0.22490706319702602, 0.22448979591836735, 0.22407407407407406, 0.22365988909426987, 0.22324723247232472, 0.22283609576427257, 0.22242647058823528, 0.22201834862385322, 0.2216117216117216, 0.22120658135283364, 0.2208029197080292, 0.2204007285974499, 0.22, 0.22141560798548093, 0.22282608695652173, 0.22423146473779385, 0.22563176895306858, 0.22702702702702704, 0.22841726618705036, 0.22980251346499103, 0.23118279569892472, 0.23076923076923078, 0.23035714285714284, 0.22994652406417113, 0.2313167259786477, 0.23268206039076378, 0.23404255319148937, 0.2336283185840708, 0.23498233215547704, 0.23633156966490299, 0.23767605633802816, 0.2390158172231986, 0.24035087719298245, 0.24168126094570927, 0.243006993006993, 0.2443280977312391, 0.24390243902439024, 0.24347826086956523, 0.24305555555555555, 0.24263431542461006, 0.24394463667820068, 0.2452504317789292, 0.24655172413793103, 0.24784853700516352, 0.24914089347079038, 0.24871355060034306, 0.2482876712328767, 0.24786324786324787, 0.24744027303754265, 0.24701873935264054, 0.2465986394557823, 0.2461799660441426, 0.2457627118644068, 0.24534686971235195, 0.24493243243243243, 0.24451939291736932, 0.2441077441077441, 0.24369747899159663, 0.24328859060402686, 0.24288107202680068, 0.24247491638795987, 0.24207011686143573, 0.24166666666666667, 0.24126455906821964, 0.2425249169435216, 0.24212271973466004, 0.24172185430463577, 0.2413223140495868, 0.24092409240924093, 0.24052718286655683, 0.24013157894736842, 0.2413793103448276, 0.24262295081967214, 0.24222585924713586, 0.24183006535947713, 0.24143556280587275, 0.24104234527687296, 0.24065040650406505, 0.24025974025974026, 0.23987034035656402, 0.23948220064724918, 0.23909531502423265, 0.23870967741935484, 0.23832528180354268, 0.2379421221864952, 0.2375601926163724, 0.23717948717948717, 0.2368, 0.2380191693290735, 0.23763955342902712, 0.2372611464968153, 0.2384737678855326, 0.2396825396825397, 0.24088748019017434, 0.24208860759493672, 0.24328593996840442, 0.24290220820189273, 0.24251968503937008, 0.24213836477987422, 0.24175824175824176, 0.24294670846394983, 0.24413145539906103, 0.2453125, 0.24648985959438377, 0.24766355140186916, 0.24727838258164853, 0.2484472049689441, 0.2496124031007752, 0.25077399380804954, 0.25193199381761977, 0.25308641975308643, 0.2542372881355932, 0.2553846153846154, 0.25499231950844853, 0.254601226993865, 0.2542113323124043, 0.25382262996941896, 0.2534351145038168, 0.2530487804878049, 0.2526636225266362, 0.25227963525835867, 0.251896813353566, 0.2515151515151515, 0.25113464447806355, 0.25075528700906347, 0.25037707390648567, 0.25, 0.24962406015037594, 0.24924924924924924, 0.24887556221889057, 0.24850299401197604, 0.24813153961136025, 0.24776119402985075, 0.2488822652757079, 0.25, 0.2511144130757801, 0.2522255192878338, 0.25333333333333335, 0.25443786982248523, 0.2555391432791728, 0.25663716814159293, 0.25773195876288657, 0.25735294117647056, 0.25697503671071953, 0.2565982404692082, 0.2562225475841874, 0.25584795321637427, 0.25547445255474455, 0.25510204081632654, 0.2547307132459971, 0.2543604651162791, 0.2539912917271408, 0.2536231884057971, 0.2532561505065123, 0.2543352601156069, 0.2554112554112554, 0.2564841498559078, 0.25755395683453236, 0.25862068965517243, 0.2582496413199426, 0.25787965616045844, 0.2575107296137339, 0.2571428571428571, 0.25677603423680456, 0.25783475783475784, 0.25889046941678523, 0.2599431818181818, 0.26099290780141843, 0.26062322946175637, 0.26025459688826025, 0.2598870056497175, 0.25952045133991536, 0.2591549295774648, 0.2587904360056259, 0.25842696629213485, 0.25806451612903225, 0.25770308123249297, 0.2573426573426573, 0.2569832402234637, 0.25662482566248257, 0.2562674094707521, 0.25591098748261476, 0.25555555555555554, 0.2552011095700416, 0.2548476454293629, 0.2544951590594744, 0.2541436464088398, 0.2537931034482759, 0.2534435261707989, 0.2544704264099037, 0.2554945054945055, 0.25651577503429357, 0.25753424657534246, 0.2585499316005472, 0.25956284153005466, 0.2605729877216917, 0.2615803814713896, 0.2612244897959184, 0.2608695652173913, 0.26051560379918587, 0.2601626016260163, 0.2598105548037889, 0.2608108108108108, 0.26180836707152494, 0.2628032345013477, 0.26244952893674295, 0.2620967741935484, 0.26174496644295303, 0.26273458445040215, 0.2637215528781794, 0.2647058823529412, 0.2656875834445928, 0.2653333333333333, 0.26498002663115844, 0.2646276595744681, 0.2642762284196547, 0.2639257294429708, 0.2635761589403974, 0.26322751322751325, 0.2628797886393659, 0.262532981530343, 0.2621870882740448, 0.2618421052631579, 0.2614980289093298, 0.26115485564304464, 0.2608125819134993, 0.2604712041884817, 0.2601307189542484, 0.2597911227154047, 0.25945241199478486, 0.2591145833333333, 0.258777633289987, 0.2584415584415584, 0.25810635538262, 0.25777202072538863, 0.2574385510996119, 0.2571059431524548, 0.2567741935483871, 0.25644329896907214, 0.25611325611325614, 0.25578406169665807, 0.2554557124518614, 0.2551282051282051, 0.25480153649167736, 0.2544757033248082, 0.2541507024265645, 0.2538265306122449, 0.2535031847133758, 0.2544529262086514, 0.2554002541296061, 0.2550761421319797, 0.25475285171102663, 0.25443037974683547, 0.25410872313527183, 0.2537878787878788, 0.25346784363177804, 0.2531486146095718, 0.2540880503144654, 0.2537688442211055, 0.2547051442910916, 0.2556390977443609, 0.2565707133917397, 0.2575, 0.25842696629213485, 0.2593516209476309, 0.2602739726027397, 0.2599502487562189, 0.2596273291925466, 0.25930521091811415, 0.26022304832713755, 0.26113861386138615, 0.26081582200247216, 0.2617283950617284, 0.26140567200986436, 0.26108374384236455, 0.2607626076260763, 0.26044226044226043, 0.26012269938650306, 0.2610294117647059, 0.26193390452876375, 0.2628361858190709, 0.2625152625152625, 0.2621951219512195, 0.2618757612667479, 0.26277372262773724, 0.26366950182260024, 0.2645631067961165, 0.26545454545454544, 0.26634382566585957, 0.2672309552599758, 0.2669082125603865, 0.2677925211097708, 0.26867469879518074, 0.2695547533092659, 0.2704326923076923, 0.27130852340936373, 0.2709832134292566, 0.2718562874251497, 0.2727272727272727, 0.2735961768219833, 0.2744630071599045, 0.27532777115613827, 0.275, 0.2746730083234245, 0.27434679334916867, 0.27402135231316727, 0.273696682464455, 0.2733727810650888, 0.27423167848699764, 0.27508854781582054, 0.2759433962264151, 0.2767962308598351, 0.2776470588235294, 0.2784958871915394, 0.27816901408450706, 0.27784290738569756, 0.2786885245901639, 0.2783625730994152, 0.2780373831775701, 0.2777129521586931, 0.2773892773892774, 0.2770663562281723, 0.27674418604651163, 0.2764227642276423, 0.27610208816705334, 0.27578215527230593, 0.27546296296296297, 0.2751445086705202, 0.2748267898383372, 0.27450980392156865, 0.27419354838709675, 0.27387802071346373, 0.2735632183908046, 0.27324913892078073, 0.27293577981651373, 0.27262313860252, 0.2723112128146453, 0.27314285714285713, 0.273972602739726, 0.27366020524515394, 0.2733485193621868, 0.27303754266211605, 0.2727272727272727, 0.2724177071509648, 0.272108843537415, 0.2718006795016987, 0.27262443438914025, 0.2734463276836158, 0.2742663656884876, 0.2750845546786922, 0.2759009009009009, 0.27671541057367827, 0.27752808988764044, 0.2783389450056117, 0.27914798206278024, 0.2788353863381859, 0.2796420581655481, 0.28044692737430166, 0.28125, 0.28205128205128205, 0.2817371937639198, 0.2814238042269188, 0.2822222222222222, 0.2830188679245283, 0.2838137472283814, 0.28349944629014395, 0.2842920353982301, 0.2850828729281768, 0.2858719646799117, 0.2866593164277839, 0.28744493392070486, 0.28822882288228824, 0.2879120879120879, 0.28869374313940727, 0.2894736842105263, 0.2902519167579409, 0.2899343544857768, 0.2907103825136612, 0.2914847161572052, 0.29116684841875684, 0.29193899782135074, 0.2916213275299238, 0.29239130434782606, 0.2920738327904452, 0.2917570498915401, 0.2914409534127844, 0.2911255411255411, 0.29081081081081084, 0.29049676025917925, 0.2901833872707659, 0.28987068965517243, 0.28955866523143164, 0.289247311827957, 0.2889366272824919, 0.2886266094420601, 0.2883172561629153, 0.2880085653104925, 0.2877005347593583, 0.28846153846153844, 0.2892209178228389, 0.2899786780383795, 0.2896698615548456, 0.2904255319148936, 0.2911795961742827, 0.2908704883227176, 0.29056203605514314, 0.2913135593220339, 0.2920634920634921, 0.2928118393234672, 0.2925026399155227, 0.29324894514767935, 0.2929399367755532, 0.29368421052631577, 0.29337539432176657, 0.2930672268907563, 0.29275970619097585, 0.29350104821802936, 0.2942408376963351, 0.29497907949790797, 0.2946708463949843, 0.29436325678496866, 0.2940563086548488, 0.29375, 0.2934443288241415, 0.29313929313929316, 0.29283489096573206, 0.2925311203319502, 0.2922279792746114, 0.2919254658385093, 0.29162357807652534, 0.29132231404958675, 0.29102167182662536, 0.2907216494845361, 0.29042224510813597, 0.29012345679012347, 0.289825282631038, 0.28952772073921973, 0.28923076923076924, 0.2889344262295082, 0.28863868986693964, 0.2883435582822086, 0.28804902962206336, 0.28775510204081634, 0.2874617737003058, 0.28716904276985744, 0.28687690742624616, 0.2865853658536585, 0.2862944162436548, 0.28600405679513186, 0.2857142857142857, 0.2854251012145749, 0.2851365015166835, 0.28484848484848485, 0.28456104944500504, 0.2842741935483871, 0.283987915407855, 0.2837022132796781, 0.2834170854271357, 0.28313253012048195, 0.28284854563691075, 0.28256513026052105, 0.2822822822822823, 0.282, 0.2817182817182817, 0.281437125748503, 0.2811565304087737, 0.28087649402390436, 0.28059701492537314, 0.2803180914512923, 0.2800397219463754, 0.27976190476190477, 0.2794846382556987, 0.27920792079207923, 0.2789317507418398, 0.27865612648221344, 0.2783810463968411, 0.27909270216962523, 0.2798029556650246, 0.28051181102362205, 0.28121927236971483, 0.2819253438113949, 0.2826300294406281, 0.2833333333333333, 0.28305582761998044, 0.2827788649706458, 0.2825024437927664, 0.2822265625, 0.2819512195121951, 0.28167641325536064, 0.28140214216163584, 0.2811284046692607, 0.28085519922254615, 0.28058252427184466, 0.28031037827352084, 0.2800387596899225, 0.2807357212003872, 0.281431334622824, 0.2811594202898551, 0.2808880308880309, 0.2815814850530376, 0.28227360308285165, 0.28200192492781523, 0.28173076923076923, 0.2814601344860711, 0.28119001919385794, 0.2809204218600192, 0.28065134099616856, 0.2813397129186603, 0.28107074569789675, 0.2808022922636103, 0.28053435114503816, 0.28026692087702576, 0.28, 0.2797335870599429, 0.279467680608365, 0.2792022792022792, 0.27893738140417457, 0.2796208530805687, 0.2803030303030303, 0.28098391674550616, 0.28071833648393196, 0.2804532577903683, 0.2811320754716981, 0.28086710650329877, 0.2806026365348399, 0.2812793979303857, 0.2819548872180451, 0.28262910798122065, 0.28330206378986866, 0.2830365510777882, 0.28277153558052437, 0.2825070159027128, 0.28317757009345795, 0.28291316526610644, 0.2826492537313433, 0.28238583410997203, 0.28212290502793297, 0.28186046511627905, 0.2815985130111524, 0.28133704735376047, 0.2810760667903525, 0.2808155699721965, 0.28055555555555556, 0.2802960222016651, 0.2800369685767098, 0.27977839335180055, 0.28044280442804426, 0.28110599078341014, 0.28084714548802947, 0.28058877644894203, 0.28125, 0.28191000918273645, 0.28256880733944956, 0.2832263978001833, 0.2838827838827839, 0.2845379688929552, 0.2842778793418647, 0.28401826484018267, 0.28375912408759124, 0.2835004557885141, 0.28324225865209474, 0.2829845313921747, 0.2827272727272727, 0.28247048138056313, 0.2822141560798548, 0.28195829555757024, 0.2826086956521739, 0.2832579185520362, 0.28390596745027125, 0.2845528455284553, 0.2851985559566787, 0.284941388638413, 0.28468468468468466, 0.2844284428442844, 0.28507194244604317, 0.2857142857142857, 0.2863554757630162, 0.28699551569506726, 0.2867383512544803, 0.2864816472694718, 0.28622540250447226, 0.2868632707774799, 0.2875, 0.288135593220339, 0.2887700534759358, 0.2894033837934105, 0.2900355871886121, 0.2906666666666667, 0.2912966252220249, 0.29103815439219166, 0.2916666666666667, 0.29229406554472986, 0.2929203539823009, 0.29354553492484525, 0.2941696113074205, 0.294792586054722, 0.29541446208112876, 0.2960352422907489, 0.2966549295774648, 0.297273526824978, 0.29701230228471004, 0.2976294995610184, 0.2982456140350877, 0.2988606485539001, 0.29947460595446584, 0.300087489063867, 0.3006993006993007, 0.30131004366812225, 0.3010471204188482, 0.3007846556233653, 0.30052264808362367, 0.3002610966057441, 0.3, 0.2997393570807993, 0.2994791666666667, 0.2992194275802255, 0.2989601386481802, 0.2987012987012987, 0.2984429065743945, 0.29818496110630943, 0.2979274611398964, 0.29767040552200175, 0.2974137931034483, 0.2971576227390181, 0.29690189328743544, 0.29664660361135, 0.2963917525773196, 0.296137339055794, 0.29588336192109777, 0.29562982005141386, 0.2953767123287671, 0.29597946963216426, 0.29572649572649573, 0.2954739538855679, 0.295221843003413, 0.2958226768968457, 0.29642248722316866, 0.2970212765957447, 0.2976190476190476, 0.2982158028887001, 0.298811544991511, 0.29940627650551316, 0.29915254237288136, 0.2988992379339543, 0.2986463620981388, 0.29839391377852914, 0.2981418918918919, 0.2978902953586498, 0.2976391231028668, 0.2982308340353833, 0.2988215488215488, 0.2994112699747687, 0.3, 0.30058774139378674, 0.3011744966442953, 0.30092204526404026, 0.30067001675041877, 0.300418410041841, 0.3001672240802676, 0.29991645781119464, 0.2996661101836394, 0.2994161801501251, 0.2991666666666667, 0.29891756869275604, 0.29866888519134777, 0.29842061512884455, 0.29817275747508304, 0.2979253112033195, 0.29767827529021557, 0.29743164871582434, 0.2980132450331126, 0.2977667493796526, 0.2975206611570248, 0.2972749793559042, 0.297029702970297, 0.2967848309975268, 0.29736408566721584, 0.297119341563786, 0.296875, 0.29663105998356615, 0.2963875205254516, 0.29614438063986875, 0.2967213114754098, 0.2972972972972973, 0.2978723404255319, 0.29762878168438267, 0.2973856209150327, 0.29714285714285715, 0.2969004893964111, 0.29665851670741644, 0.2964169381107492, 0.29617575264442636, 0.2959349593495935, 0.2965069049553209, 0.2962662337662338, 0.2960259529602595, 0.2965964343598055, 0.297165991902834, 0.2977346278317152, 0.29830234438156833, 0.2988691437802908, 0.2994350282485876, 0.3, 0.3005640612409347, 0.3003220611916264, 0.3000804505229284, 0.30064308681672025, 0.3004016064257028, 0.3001605136436597, 0.29991980753809144, 0.29967948717948717, 0.29943955164131303, 0.2992, 0.29896083133493206, 0.2987220447284345, 0.29848363926576216, 0.2982456140350877, 0.29800796812749003, 0.29777070063694266, 0.2975338106603023, 0.2972972972972973, 0.29706115965051627, 0.2976190476190476, 0.29817605075337034, 0.2979397781299525, 0.29849564528899447, 0.2990506329113924, 0.29960474308300394, 0.3001579778830964, 0.3007103393843725, 0.30126182965299686, 0.30181245074862095, 0.30236220472440944, 0.3029110936270653, 0.30345911949685533, 0.3032207384131972, 0.3029827315541601, 0.3027450980392157, 0.30250783699059564, 0.30227094753328115, 0.3028169014084507, 0.3033620015637217, 0.30390625, 0.3044496487119438, 0.3049921996879875, 0.3055339049103663, 0.3060747663551402, 0.3066147859922179, 0.307153965785381, 0.3076923076923077, 0.30745341614906835, 0.30799069045771915, 0.3085271317829457, 0.308288148721921, 0.3088235294117647, 0.30935808197989173, 0.3091190108191654, 0.3088803088803089, 0.30864197530864196, 0.3084040092521203, 0.3081664098613251, 0.30792917628945343, 0.3076923076923077, 0.3074558032282859, 0.30721966205837176, 0.3069838833461243, 0.3067484662576687, 0.3065134099616858, 0.30627871362940273, 0.306044376434583, 0.3058103975535168, 0.30557677616501144, 0.3053435114503817, 0.30511060259344014, 0.3048780487804878, 0.30464584920030463, 0.30441400304414, 0.3041825095057034, 0.303951367781155, 0.30372057706909644, 0.30349013657056145, 0.3032600454890068, 0.30303030303030304, 0.3028009084027252, 0.30257186081694404, 0.30234315948601664, 0.3021148036253776, 0.3018867924528302, 0.30165912518853694, 0.30143180105501133, 0.30120481927710846, 0.3017306245297216, 0.3022556390977444, 0.30277986476333585, 0.3033033033033033, 0.3038259564891223, 0.30359820089955025, 0.30337078651685395, 0.3031437125748503, 0.3029169783096485, 0.30269058295964124, 0.30246452576549665, 0.30223880597014924, 0.30275913497390006, 0.30327868852459017, 0.3037974683544304, 0.30357142857142855, 0.3033457249070632, 0.3031203566121842, 0.3028953229398664, 0.3026706231454006, 0.30244625648628615, 0.3022222222222222, 0.30199851961509994, 0.3025147928994083, 0.30303030303030304, 0.30354505169867063, 0.3040590405904059, 0.30383480825958703, 0.3036109064112012, 0.30338733431516934, 0.3031640912435614, 0.3029411764705882, 0.3027185892725937, 0.302496328928047, 0.30227439471753487, 0.3020527859237537, 0.3018315018315018, 0.30161054172767204, 0.3013899049012436, 0.30116959064327486, 0.30094959824689554, 0.3007299270072993, 0.30051057622173594, 0.30029154518950435, 0.30007283321194467, 0.29985443959243085, 0.29963636363636365, 0.29941860465116277, 0.29920116194626, 0.29898403483309144, 0.29876722262509064, 0.2985507246376812, 0.2983345401882694, 0.2981186685962373, 0.29790310918293567, 0.2976878612716763, 0.29747292418772564, 0.2972582972582973, 0.29704397981254504, 0.2968299711815562, 0.2966162706983441, 0.29640287769784174, 0.29690869877785764, 0.2974137931034483, 0.2979181622397703, 0.2984218077474892, 0.2989247311827957, 0.2994269340974212, 0.2999284180386543, 0.29971387696709584, 0.29949964260185846, 0.29928571428571427, 0.2990720913633119, 0.29885877318116977, 0.29864575908766927, 0.2984330484330484, 0.298220640569395, 0.29871977240398295, 0.2992181947405828, 0.2997159090909091, 0.30021291696238467, 0.300709219858156, 0.30049610205527993, 0.3002832861189802, 0.30007077140835103, 0.29985855728429983, 0.3003533568904594, 0.3001412429378531, 0.30063514467184194, 0.3011283497884344, 0.30162085976039466, 0.30140845070422534, 0.3011963406052076, 0.30168776371308015, 0.30147575544624033, 0.30196629213483145, 0.3024561403508772, 0.3022440392706872, 0.3020322354590049, 0.3018207282913165, 0.30160951714485656, 0.3013986013986014, 0.30118798043326345, 0.3009776536312849, 0.3007676203768318, 0.300557880055788, 0.3003484320557491, 0.30013927576601673, 0.29993041057759223, 0.3004172461752434, 0.30020847810979845, 0.3, 0.2997918112421929, 0.29958391123439665, 0.2993762993762994, 0.29916897506925205, 0.29896193771626295, 0.2987551867219917, 0.299239806496199, 0.29972375690607733, 0.3002070393374741, 0.3006896551724138, 0.30117160578911095, 0.30165289256198347, 0.3021335168616655, 0.30261348005502064, 0.3024054982817869, 0.3021978021978022, 0.3026767330130405, 0.30246913580246915, 0.3022618231665524, 0.30205479452054795, 0.3025325119780972, 0.3030095759233926, 0.303485987696514, 0.30327868852459017, 0.3030716723549488, 0.30286493860845837, 0.30265848670756645, 0.3024523160762943, 0.30292716133424097, 0.30272108843537415, 0.3025152957171992, 0.3023097826086957, 0.30210454854039376, 0.3018995929443691, 0.3016949152542373, 0.30149051490514905, 0.3019634394041977, 0.3017591339648173, 0.30155510480054093, 0.30202702702702705, 0.3024983119513842, 0.3029689608636977, 0.30343897505057316, 0.30390835579514824, 0.30437710437710436, 0.30484522207267833, 0.304640215198386, 0.30443548387096775, 0.30423102753525855, 0.3040268456375839, 0.3038229376257545, 0.30361930294906164, 0.3034159410582719, 0.3032128514056225, 0.30301003344481603, 0.30280748663101603, 0.3026052104208417, 0.30240320427236317, 0.30220146764509676, 0.302, 0.301798800799467, 0.3015978695073236, 0.3013972055888224, 0.3011968085106383, 0.3009966777408638, 0.300796812749004, 0.30059721300597214, 0.3003978779840849, 0.30019880715705766, 0.3, 0.299801455989411, 0.2996031746031746, 0.29940515532055517, 0.29920739762219284, 0.299009900990099, 0.29881266490765174, 0.2986156888595913, 0.29907773386034253, 0.2995391705069124, 0.2993421052631579, 0.29914529914529914, 0.29894875164257556, 0.29875246224556795, 0.29855643044619423, 0.2983606557377049, 0.2981651376146789, 0.297969875573019, 0.29777486910994766, 0.2975801177240026, 0.2973856209150327, 0.29719137818419333, 0.29699738903394257, 0.2968036529680365, 0.2966101694915254, 0.2964169381107492, 0.2962239583333333, 0.2960312296681848, 0.2958387516254877, 0.29564652371669914, 0.29545454545454547, 0.29526281635301754, 0.29507133592736706, 0.2948801036941024, 0.29468911917098445, 0.29449838187702265, 0.2943078913324709, 0.29411764705882354, 0.29457364341085274, 0.2950290510006456, 0.2954838709677419, 0.29593810444874274, 0.2963917525773196, 0.29620090148100453, 0.296010296010296, 0.2958199356913183, 0.29562982005141386, 0.29543994861913936, 0.2952503209242619, 0.29506093649775494, 0.2948717948717949, 0.2946828955797566, 0.29449423815621, 0.2943058221369162, 0.29411764705882354, 0.2939297124600639, 0.2937420178799489, 0.2935545628589662, 0.29336734693877553, 0.29318036966220523, 0.2929936305732484, 0.2934436664544876, 0.29325699745547074, 0.2937062937062937, 0.2935196950444727, 0.29333333333333333, 0.29314720812182743, 0.29296131896005073, 0.29340937896070973, 0.29385687143761874, 0.29430379746835444, 0.2947501581277672, 0.2945638432364096, 0.2943777637397347, 0.29419191919191917, 0.294006309148265, 0.2938209331651955, 0.2942659105229994, 0.2947103274559194, 0.2945248584015104, 0.2943396226415094, 0.2941546197360151, 0.29396984924623115, 0.2937853107344633, 0.2936010037641154, 0.29341692789968654, 0.2932330827067669, 0.29304946775203505, 0.2934918648310388, 0.2939337085678549, 0.29375, 0.29356652092442226, 0.2933832709113608, 0.29320024953212726, 0.29301745635910226, 0.29345794392523367, 0.29389788293897884, 0.2943372744243933, 0.2941542288557214, 0.29459291485394656, 0.2950310559006211, 0.2948479205462446, 0.29466501240694787, 0.2944823310601364, 0.2942998760842627, 0.29411764705882354, 0.2939356435643564, 0.2937538651824366, 0.29357231149567364, 0.2933909820877085, 0.2932098765432099, 0.29302899444787167, 0.2928483353884094, 0.292667898952557, 0.29248768472906406, 0.2923076923076923, 0.2921279212792128, 0.29256299938537184, 0.292997542997543, 0.29343155310006136, 0.29386503067484665, 0.29429797670141017, 0.29473039215686275, 0.2951622780159216, 0.295593635250918, 0.2960244648318043, 0.29645476772616136, 0.29688454489920585, 0.2967032967032967, 0.2965222696766321, 0.29634146341463413, 0.2961608775137112, 0.29598051157125455, 0.295800365185636, 0.2956204379562044, 0.29544072948328265, 0.29526123936816523, 0.29508196721311475, 0.2949029126213592, 0.29472407519708915, 0.29454545454545455, 0.2943670502725621, 0.2947941888619855, 0.29522081064730793, 0.29564691656590086, 0.29546827794561936, 0.29528985507246375, 0.29511164755582375, 0.29493365500603136, 0.29475587703435807, 0.29457831325301204, 0.2944009632751355, 0.29482551143200963, 0.2946482260974143, 0.29447115384615385, 0.29429429429429427, 0.29411764705882354, 0.2939412117576485, 0.29376498800959233, 0.29358897543439183, 0.2934131736526946, 0.29323758228605623, 0.2930622009569378, 0.2928870292887029, 0.2927120669056153, 0.29253731343283584, 0.29236276849642007, 0.29218843172331543, 0.29201430274135876, 0.29184038117927336, 0.2916666666666667, 0.2914931588340274, 0.291319857312723, 0.29114676173499704, 0.29097387173396677, 0.2913946587537092, 0.2912218268090154, 0.29104919976289273, 0.2914691943127962, 0.29188869153345176, 0.2917159763313609, 0.29154346540508574, 0.291371158392435, 0.29119905493207326, 0.29161747343565525, 0.2920353982300885, 0.29245283018867924, 0.2928697701826753, 0.2926972909305065, 0.29252501471453796, 0.2923529411764706, 0.29218106995884774, 0.2920094007050529, 0.2924251321197886, 0.29284037558685444, 0.2932551319648094, 0.29308323563892147, 0.29291154071470415, 0.2927400468384075, 0.29256875365710944, 0.29239766081871343, 0.29222676797194624, 0.29205607476635514, 0.29188558085230587, 0.29171528588098017, 0.2915451895043732, 0.2913752913752914, 0.29120559114735, 0.29161816065192087, 0.2920302501454334, 0.2924418604651163, 0.2928529924462522, 0.2932636469221835, 0.293673824724318, 0.29408352668213456, 0.2944927536231884, 0.2943221320973349, 0.2947307469600463, 0.2945601851851852, 0.2949681897050318, 0.2953757225433526, 0.29578278451761986, 0.29618937644341803, 0.29659549913444894, 0.2964244521337947, 0.2962536023054755, 0.2960829493087558, 0.29591249280368453, 0.2963176064441887, 0.29672225416906267, 0.296551724137931, 0.2963813900057438, 0.29621125143513205, 0.29604130808950085, 0.2958715596330275, 0.2962750716332378, 0.29667812142038946, 0.29708070978820833, 0.2974828375286041, 0.2978845054316752, 0.29828571428571427, 0.298686464877213, 0.2990867579908676, 0.2994865944095836, 0.2993158494868871, 0.29971509971509974, 0.3001138952164009, 0.30051223676721683, 0.3003412969283277, 0.3001705514496873, 0.3, 0.29982964224872233, 0.2996594778660613, 0.2994895065229722, 0.29931972789115646, 0.2991501416430595, 0.29898074745186864, 0.298811544991511, 0.2986425339366516, 0.2984737139626908, 0.2983050847457627, 0.2981366459627329, 0.2979683972911964, 0.29780033840947545, 0.2976324689966178, 0.29746478873239435, 0.2972972972972973, 0.297129994372538, 0.296962879640045, 0.29679595278246207, 0.2966292134831461, 0.29646266142616506, 0.2962962962962963, 0.2961301177790241, 0.29596412556053814, 0.29635854341736695, 0.2967525195968645, 0.2971460548405148, 0.29697986577181207, 0.29681386249301284, 0.2966480446927374, 0.2964824120603015, 0.2963169642857143, 0.29615170105967653, 0.2959866220735786, 0.2958217270194986, 0.29565701559020047, 0.29604897050639956, 0.296440489432703, 0.29683157309616454, 0.2972222222222222, 0.29761243753470296, 0.29800221975582686, 0.2983915696062119, 0.29878048780487804, 0.29916897506925205, 0.29900332225913623, 0.2993912562257886, 0.2997787610619469, 0.2996130458817026, 0.2994475138121547, 0.2992821645499724, 0.29911699779249445, 0.2989520132377275, 0.298787210584344, 0.2986225895316804, 0.29845814977973567, 0.298293891029169, 0.29812981298129815, 0.29796591533809785, 0.2978021978021978, 0.2981878088962109, 0.29857299670691545, 0.29895776193088314, 0.2993421052631579, 0.2997260273972603, 0.30010952902519167, 0.30049261083743845, 0.30087527352297594, 0.30071077091306725, 0.3010928961748634, 0.3014746040415074, 0.30131004366812225, 0.3016912165848336, 0.3015267175572519, 0.3013623978201635, 0.30119825708061004, 0.3010342950462711, 0.30087051142546245, 0.30070690592713434, 0.3005434782608696, 0.30038022813688214, 0.3002171552660152, 0.30005425935973956, 0.29989154013015185, 0.2997289972899729, 0.29956663055254606, 0.2994044396318354, 0.29924242424242425, 0.29908058409951327, 0.2989189189189189, 0.29875742841707187, 0.2985961123110151, 0.2984349703184026, 0.2982740021574973, 0.2986522911051213, 0.2990301724137931, 0.29940764674205705, 0.2997847147470398, 0.300161377084454, 0.30053763440860215, 0.30037614185921546, 0.30021482277121375, 0.30059044551798175, 0.3009656652360515, 0.30080428954423594, 0.3011789924973205, 0.30101767541510444, 0.30085653104925053, 0.30069555912252544, 0.30053475935828877, 0.3003741314804917, 0.3002136752136752, 0.3000533902829685, 0.29989327641408753, 0.29973333333333335, 0.2995735607675906, 0.29941395844432606, 0.2992545260915868, 0.2990952634379989, 0.298936170212766, 0.2987772461456672, 0.29861849096705634, 0.2984599044078598, 0.29830148619957536, 0.29814323607427057, 0.2985153764581124, 0.2988871224165342, 0.2992584745762712, 0.2996294335627316, 0.29947089947089944, 0.2993125330512956, 0.29915433403805497, 0.29899630216587425, 0.2988384371700106, 0.2986807387862797, 0.29852320675105487, 0.29836584080126516, 0.2982086406743941, 0.29805160610847814, 0.29789473684210527, 0.29773803261441345, 0.29758149316508936, 0.2974251182343668, 0.2972689075630252, 0.2971128608923885, 0.2969569779643232, 0.29680125852123757, 0.2966457023060797, 0.2964903090623363, 0.2963350785340314, 0.29618001046572473, 0.29602510460251047, 0.29639309984317824, 0.2962382445141066, 0.29608355091383814, 0.29592901878914407, 0.2962962962962963, 0.2961418143899896, 0.29598749348619074, 0.29583333333333334, 0.2956793336803748, 0.29604578563995837, 0.296411856474259, 0.29677754677754675, 0.29714285714285715, 0.29750778816199375, 0.2978723404255319, 0.29771784232365145, 0.2975635044064282, 0.29740932642487045, 0.2972553081305023, 0.2971014492753623, 0.29694774961200204, 0.296794208893485, 0.296640826873385, 0.2964876033057851, 0.2968508002065049, 0.29721362229102166, 0.29757607013924703, 0.2979381443298969, 0.29778464708912933, 0.2976313079299691, 0.2974781266083376, 0.2978395061728395, 0.2982005141388175, 0.29856115107913667, 0.29892141756548535, 0.29928131416837783, 0.2996408414571575, 0.3, 0.2998462327011789, 0.30020491803278687, 0.300563236047107, 0.30040941658137155, 0.30025575447570335, 0.3001022494887526, 0.30045988758303527, 0.3003064351378958, 0.3001531393568147, 0.3, 0.2998470168281489, 0.2996941896024465, 0.2995415180845644, 0.29938900203665986, 0.29923664122137406, 0.2990844354018311, 0.298932384341637, 0.29878048780487804, 0.29862874555611985, 0.2984771573604061, 0.2983257229832572, 0.29817444219066935, 0.29853015712113534, 0.2983789260385005, 0.29822784810126585, 0.2980769230769231, 0.2979261507334345, 0.29777553083923153, 0.29762506316321374, 0.29747474747474745, 0.2973245835436648, 0.29717457114026236, 0.29702471003530007, 0.296875, 0.29672544080604535, 0.29657603222557904, 0.2964267740312028, 0.2962776659959759, 0.2961287078934138, 0.29597989949748743, 0.2958312405826218, 0.2956827309236948, 0.29553437029603613, 0.29538615847542626, 0.29523809523809524, 0.29509018036072143, 0.29494241362043067, 0.2947947947947948, 0.29514757378689344, 0.2955, 0.2958520739630185, 0.2957042957042957, 0.2960559161258113, 0.2964071856287425, 0.29625935162094763, 0.29611166500498504, 0.2964623816641754, 0.2963147410358566, 0.2966650074664012, 0.29701492537313434, 0.2973644952759821, 0.297713717693837, 0.29806259314456035, 0.2984111221449851, 0.2987593052109181, 0.2986111111111111, 0.29846306395637084, 0.2983151635282458, 0.2981674096087172, 0.298019801980198, 0.2978723404255319, 0.29772502472799206, 0.2975778546712803, 0.2974308300395257, 0.29728395061728397, 0.2976307996051333, 0.29797730636408487, 0.2983234714003945, 0.29866929521931984, 0.29901477832512313, 0.29935992122107336, 0.29970472440944884, 0.29955730447614365, 0.2994100294985251, 0.2992628992628993, 0.29911591355599215, 0.29896907216494845, 0.2988223748773307, 0.2986758214811182, 0.2985294117647059, 0.2983831455169035, 0.2982370225269344, 0.29809104258443464, 0.2979452054794521, 0.2982885085574572, 0.2981427174975562, 0.2979970688812897, 0.2978515625, 0.2977061981454368, 0.2975609756097561, 0.29741589468551927, 0.297270955165692, 0.29712615684364346, 0.29698149951314506, 0.29683698296836986, 0.29669260700389105, 0.2965483714146816, 0.29640427599611274, 0.29626032054395335, 0.2961165048543689, 0.2964580300824842, 0.2963142580019399, 0.29617062530295685, 0.29602713178294576, 0.29588377723970943, 0.2957405614714424, 0.29559748427672955, 0.29545454545454547, 0.29531174480425326, 0.2951690821256039, 0.2950265572187349, 0.2948841698841699, 0.2947419199228172, 0.2945998071359691, 0.2944578313253012, 0.2943159922928709, 0.294174289841117, 0.2945139557266602, 0.29485329485329487, 0.2951923076923077, 0.29505045651129264, 0.29490874159462055, 0.29476716274603937, 0.2946257197696737, 0.294484412470024, 0.29482262703739215, 0.29516051748921895, 0.29549808429118773, 0.29583532790809, 0.29569377990430623, 0.29555236728837875, 0.2954110898661568, 0.2952699474438605, 0.29512893982808025, 0.29498806682577566, 0.2948473282442748, 0.2947067238912732, 0.2945662535748332, 0.29442591710338256, 0.29428571428571426, 0.2941456449309853, 0.2940057088487155, 0.29386590584878747, 0.29372623574144485, 0.294061757719715, 0.2943969610636277, 0.2947318462268628, 0.29459203036053133, 0.29445234708392604, 0.2943127962085308, 0.29417337754618667, 0.2940340909090909, 0.2938949361097965, 0.29375591296121095, 0.2936170212765957, 0.29347826086956524, 0.293339631554086, 0.29320113314447593, 0.2930627654554035, 0.2929245283018868, 0.2927864214992928, 0.29264844486333647, 0.2925105982100801, 0.2923728813559322, 0.29223529411764704, 0.2920978363123236, 0.2919605077574048, 0.2918233082706767, 0.29168623767026775, 0.2915492957746479, 0.29141248240262785, 0.29127579737335835, 0.2911392405063291, 0.2910028116213683, 0.2908665105386417, 0.2907303370786517, 0.2905942910622368, 0.29045837231057064, 0.2903225806451613, 0.29018691588785045, 0.2900513778608127, 0.28991596638655465, 0.2897806812879141, 0.2896455223880597, 0.2895104895104895, 0.2893755824790308, 0.28924080111783884, 0.28910614525139666, 0.2889716147045137, 0.2888372093023256, 0.28870292887029286, 0.28856877323420077, 0.2884347422201579, 0.2883008356545961, 0.2881670533642691, 0.2880333951762523, 0.28789986091794156, 0.28776645041705284, 0.2876331635016211, 0.2875, 0.28736695974086074, 0.2872340425531915, 0.2871012482662968, 0.2869685767097967, 0.2868360277136259, 0.2867036011080332, 0.286571296723581, 0.28690036900369004, 0.28722913785154447, 0.2870967741935484, 0.2869645324735145, 0.2868324125230203, 0.28670041417395303, 0.28656853725850967, 0.2864367816091954, 0.28630514705882354, 0.2861736334405145, 0.2860422405876951, 0.28591096833409824, 0.28577981651376144, 0.285648784961027, 0.2855178735105408, 0.2853870819972515, 0.28525641025641024, 0.2851258581235698, 0.2849954254345837, 0.28532235939643347, 0.2851919561243144, 0.28506167199634536, 0.28493150684931506, 0.28480146052031036, 0.2846715328467153, 0.28454172366621067, 0.284412032816773, 0.28428246013667424, 0.28415300546448086, 0.28402366863905326, 0.28389444949954507, 0.2837653478854025, 0.28363636363636363, 0.283507496592458, 0.28337874659400547, 0.283250113481616, 0.2831215970961887, 0.2829931972789116, 0.2828649138712602, 0.2827367467149977, 0.2826086956521739, 0.2824807605251245, 0.2823529411764706, 0.28222523744911804, 0.2825497287522604, 0.28287392679620427, 0.28319783197831977, 0.2835214446952596, 0.2833935018050541, 0.2837167343256653, 0.2835888187556357, 0.28346101847679134, 0.2833333333333333, 0.2832057631697434, 0.2830783078307831, 0.2829509671614935, 0.28327338129496404, 0.28314606741573034, 0.2830188679245283, 0.2828917826672654, 0.283213644524237, 0.2835352175863616, 0.2838565022421525, 0.2841774988794263, 0.28449820788530467, 0.2843708016121809, 0.28424350940017906, 0.2841163310961969, 0.2844364937388193, 0.28475637013857846, 0.28507596067917784, 0.28539526574363555, 0.2857142857142857, 0.28603302097278, 0.2863514719000892, 0.2862238074008025, 0.28654188948306597, 0.2868596881959911, 0.2871772039180766, 0.28749443702714733, 0.2878113879003559, 0.2881280569141841, 0.28844444444444445, 0.28876055086628166, 0.2886323268206039, 0.2885042166000888, 0.2883762200532387, 0.2886917960088692, 0.28856382978723405, 0.2884359769605671, 0.2883082373782108, 0.28818061088977426, 0.28805309734513274, 0.28792569659442724, 0.28779840848806365, 0.2876712328767123, 0.2875441696113074, 0.28741721854304636, 0.2872903795233892, 0.2871636524040582, 0.28703703703703703, 0.2869105332745703, 0.286784140969163, 0.2866578599735799, 0.2869718309859155, 0.2872855257369116, 0.287598944591029, 0.2879120879120879, 0.28822495606326887, 0.28809837505489677, 0.28797190517998245, 0.2878455462922334, 0.28771929824561404, 0.2875931608943446, 0.287467134092901, 0.287341217696014, 0.28765323992994746, 0.28796498905908097, 0.2882764654418198, 0.2881504153913424, 0.28846153846153844, 0.28833551769331583, 0.28820960698689957, 0.28808380619816676, 0.2879581151832461, 0.28783253379851725, 0.2877070619006103, 0.2875816993464052, 0.2874564459930314, 0.2873313016978668, 0.28720626631853785, 0.2875163114397564, 0.28782608695652173, 0.288135593220339, 0.2884448305821025, 0.2883195831524099, 0.2881944444444444, 0.2880694143167028, 0.28794449262792715, 0.28781967923710444, 0.2876949740034662, 0.28800346470333477, 0.2883116883116883, 0.2886196451752488, 0.2884948096885813, 0.2883700821444012, 0.2882454624027658, 0.28812095032397406, 0.2879965457685665, 0.28787224859732413, 0.28774805867126835, 0.2876239758516602, 0.2875, 0.2873761309780267, 0.28725236864771747, 0.2871287128712871, 0.2870051635111876, 0.2868817204301075, 0.2867583834909716, 0.2866351525569403, 0.2865120274914089, 0.2863890081580077, 0.28626609442060086, 0.28614328614328616, 0.28602058319039453, 0.2858979854264895, 0.28577549271636676, 0.2856531049250535, 0.2855308219178082, 0.2858365425759521, 0.2857142857142857, 0.2860196665241556, 0.2863247863247863, 0.2866296454506621, 0.28693424423569597, 0.2872385830132309, 0.28754266211604096, 0.2878464818763326, 0.28815004262574595, 0.2884533446953558, 0.2887563884156729, 0.2886334610472541, 0.2885106382978723, 0.2883879200340281, 0.288265306122449, 0.2881427964300892, 0.28802039082412917, 0.2878980891719745, 0.28777589134125636, 0.2876537971998303, 0.2875318066157761, 0.2874099194573972, 0.28728813559322036, 0.28716645489199494, 0.2870448772226926, 0.286923402454507, 0.2868020304568528, 0.28668076109936574, 0.2865595942519019, 0.2864385297845374, 0.28673986486486486, 0.28704094554664417, 0.2873417721518987, 0.2872205820328975, 0.2870994940978078, 0.28697850821744625, 0.2868576242628475, 0.2867368421052632, 0.28703703703703703, 0.2873369793857804, 0.287636669470143, 0.287515762925599, 0.28781512605042014, 0.2876942461150777, 0.2875734676742233, 0.28745279060008394, 0.2873322147651007, 0.28721174004192873, 0.28709136630343673, 0.2869710934227063, 0.28726968174204354, 0.28756802009208876, 0.2878661087866109, 0.28816394813885404, 0.28846153846153844, 0.2887588800668617, 0.28905597326649957, 0.28935281837160753, 0.2892320534223706, 0.28952857738840215, 0.28982485404503755, 0.2901208837015423, 0.29041666666666666, 0.29029571012078303, 0.29017485428809325, 0.2900540990428631, 0.2899334442595674, 0.28981288981288983, 0.28969243557772234, 0.28957208142916496, 0.28945182724252494, 0.2897467828974678, 0.28962655601659754, 0.2899211945250933, 0.2902155887230514, 0.29050973891421467, 0.2908036454018227, 0.2906832298136646, 0.2905629139072848, 0.2904426975589574, 0.2903225806451613, 0.2906159570070277, 0.2909090909090909, 0.29078893019413465, 0.2910817506193229, 0.29096161782913743, 0.2908415841584158, 0.2907216494845361, 0.2906018136850783, 0.2904820766378245, 0.2907742998352554, 0.29065459036640595, 0.2905349794238683, 0.29082682023858497, 0.2911184210526316, 0.29140978216193997, 0.2912900575184881, 0.291170431211499, 0.29105090311986864, 0.29093147312269185, 0.2908121410992617, 0.2906929069290693, 0.2905737704918033, 0.2904547316673494, 0.2903357903357903, 0.2902169463774048, 0.2905073649754501, 0.2907975460122699, 0.29067865903515944, 0.29055986922762567, 0.2908496732026144, 0.2911392405063291, 0.2914285714285714, 0.2917176662586699, 0.29200652528548127, 0.29229514879739094, 0.2925835370823146, 0.29287169042769856, 0.2931596091205212, 0.2934472934472934, 0.2933279088689992, 0.2932086213908093, 0.2934959349593496, 0.2937830150345388, 0.29406986190089357, 0.29435647584246855, 0.29464285714285715, 0.2949290060851927, 0.29521492295214924, 0.29509525739764897, 0.2953808752025932, 0.29526123936816523, 0.2951417004048583, 0.2950222581950627, 0.2953074433656958, 0.29559239789729075, 0.29587712206952305, 0.2961616161616162, 0.2964458804523425, 0.29672991522002423, 0.2970137207425343, 0.2972972972972973, 0.29758064516129035, 0.2978637646110439, 0.29814665592264306, 0.29842931937172773, 0.29871175523349436, 0.29899396378269616, 0.29927594529364443, 0.2991556091676719, 0.2990353697749196, 0.2989152269987947, 0.2987951807228916, 0.29867523083099157, 0.2985553772070626, 0.29843561973525873, 0.2983159582999198, 0.2985971943887776, 0.2988782051282051, 0.29915899078894675, 0.29943955164131303, 0.29931972789115646, 0.2992, 0.29908036785285885, 0.29896083133493206, 0.29884139033160206, 0.2987220447284345, 0.29860279441117765, 0.29848363926576216, 0.2983645791783008, 0.2982456140350877, 0.2981267437225986, 0.29840637450199203, 0.29828753484667464, 0.2981687898089172, 0.298050139275766, 0.2979315831344471, 0.2978131212723658, 0.29809220985691576, 0.29837107667858564, 0.29864972200158857, 0.2989281460897181, 0.2988095238095238, 0.29869099563665213, 0.2985725614591594, 0.2984542211652794, 0.29833597464342315, 0.2982178217821782, 0.2980997624703088, 0.29798179659675506, 0.2978639240506329, 0.2977461447212337, 0.2976284584980237, 0.297510865270644, 0.29739336492890994, 0.29727595736281087, 0.2971586424625099, 0.29704142011834317, 0.2969242902208202, 0.2968072526606228, 0.2966903073286052, 0.2965734541157936, 0.29645669291338583, 0.29634002361275086, 0.2962234461054288, 0.29610696028313016, 0.2959905660377358, 0.2958742632612967, 0.295758051846033, 0.2956419316843345, 0.29552590266875983, 0.2954099646920361, 0.2952941176470588, 0.2951783614268914, 0.2950626959247649, 0.29494712103407755, 0.2948316366483947, 0.29471624266144814, 0.2949921752738654, 0.29487680876026595, 0.2947615324472244, 0.2946463462289957, 0.29453125, 0.29441624365482233, 0.29430132708821233, 0.2941865001950839, 0.29407176287051484, 0.2939571150097466, 0.29423226812159003, 0.2945072068562524, 0.2947819314641745, 0.2950564421954068, 0.2953307392996109, 0.2956048230260599, 0.2954898911353033, 0.2957636999611349, 0.29564879564879565, 0.2955339805825243, 0.2954192546583851, 0.2953046177726038, 0.2951900698215671, 0.2950756107018224, 0.29496124031007753, 0.2948469585432003, 0.29473276529821846, 0.294618660472319, 0.2945046439628483, 0.2943907156673114, 0.294276875483372, 0.29416312330885197, 0.2940494590417311, 0.2939358825801468, 0.29382239382239383, 0.29370899266692396, 0.2935956790123457, 0.29348245275742385, 0.2933693138010794, 0.29364161849710985, 0.2939137134052388, 0.29418559876780903, 0.294072363356428, 0.2939592150827241, 0.29384615384615387, 0.2937331795463283, 0.29362029208301305, 0.29389166346523243, 0.2941628264208909, 0.2940499040307102, 0.29393706830391403, 0.2942079018028385, 0.2940950920245399, 0.294365657339977, 0.2946360153256705, 0.2945231711987744, 0.2944104134762634, 0.2942977420589361, 0.29418515684774293, 0.2940726577437858, 0.29396024464831805, 0.2938479174627436, 0.2937356760886173, 0.2936235204276441, 0.29351145038167936, 0.29339946585272797, 0.2932875667429443, 0.2931757529546321, 0.2930640243902439, 0.29295238095238096, 0.29284082254379284, 0.29272934906737724, 0.2926179604261796, 0.2925066565233929, 0.2923954372623574, 0.29228430254656024, 0.29217325227963525, 0.2920622863653627, 0.29233105542900534, 0.29259962049335864, 0.2924886191198786, 0.2923777019340159, 0.29226686884003034, 0.29215611974232664, 0.29204545454545455, 0.29193487315410827, 0.2918243754731264, 0.2917139614074915, 0.2916036308623298, 0.29149338374291117, 0.29138321995464855, 0.29127313940309785, 0.2911631419939577, 0.29105322763306907, 0.2909433962264151, 0.2908336476801207, 0.2907239819004525, 0.29061439879381834, 0.2905048982667671, 0.2903954802259887, 0.29028614457831325, 0.29017689123071133, 0.29006772009029347, 0.2899586310643099, 0.28984962406015036, 0.2897406989853439, 0.28963185574755823, 0.2898986105895606, 0.29016516516516516, 0.2904315196998124, 0.2903225806451613, 0.29021372328458944, 0.2901049475262369, 0.2899962532783814, 0.2898876404494382, 0.28977910894795955, 0.28967065868263475, 0.2895622895622896, 0.2894540014958863, 0.2893457943925234, 0.289237668161435, 0.28912962271199105, 0.2890216579536968, 0.2889137737961926, 0.28880597014925374, 0.28869824692279, 0.2889634601043997, 0.2888557584793142, 0.2887481371087928, 0.2886405959031657, 0.2885331347728965, 0.2884257536285821, 0.2883184523809524, 0.2882112309408702, 0.28810408921933084, 0.2879970271274619, 0.287890044576523, 0.2877831414779057, 0.2876763177431329, 0.287569573283859, 0.2874629080118694, 0.28735632183908044, 0.2872498146775389, 0.287143386439422, 0.28703703703703703, 0.28693076638282117, 0.2868245743893412, 0.2867184609692934, 0.28661242603550297, 0.28650646950092423, 0.28640059127864004, 0.2866642039157739, 0.2865583456425406, 0.28645256552233295, 0.2863468634686347, 0.2866101069715972, 0.2868731563421829, 0.2871360117950608, 0.28739867354458365, 0.2876611418047882, 0.28792341678939615, 0.2881854987118145, 0.2884473877851361, 0.2887090842221405, 0.28860294117647056, 0.2884968761484748, 0.28839088905216753, 0.2882849798016893, 0.28854625550660795, 0.2888073394495413, 0.289068231841526, 0.2893289328932893, 0.2895894428152493, 0.2898497618175156, 0.28974358974358977, 0.289637495422922, 0.28953147877013174, 0.28942553969996343, 0.28931967812728604, 0.28921389396709324, 0.2891081871345029, 0.289002557544757, 0.2888970051132213, 0.2887915297553852, 0.28868613138686133, 0.28858080992338564, 0.2884755652808169, 0.2883703973751367, 0.288265306122449, 0.28816029143898, 0.28805535324107795, 0.28795049144521295, 0.2878457059679767, 0.2881047653692252, 0.2883636363636364, 0.28825881497637224, 0.28815406976744184, 0.28804940065383217, 0.2879448075526507, 0.2882032667876588, 0.2880986937590711, 0.2879941965904969, 0.2878897751994199, 0.28778542950344327, 0.2876811594202899, 0.28757696486780154, 0.28747284576393917, 0.2873688020267825, 0.28726483357452964, 0.28716094032549727, 0.28705712219812, 0.2873147813516444, 0.2875722543352601, 0.2878295413506681, 0.28808664259927796, 0.2883435582822086, 0.2886002886002886, 0.28885683375405696, 0.2891131939437635, 0.289009009009009, 0.2892651296829971, 0.28916096507021966, 0.289056875449964, 0.2893127024109392, 0.289568345323741, 0.28946422150305645, 0.28936017253774265, 0.2892561983471074, 0.2891522988505747, 0.289048473967684, 0.2889447236180904, 0.28919985647649804, 0.2890961262553802, 0.2893510218716386, 0.2896057347670251, 0.2898602651379434, 0.29011461318051573, 0.2900107411385607, 0.28990694345025053, 0.2898032200357782, 0.28969957081545067, 0.28959599570968897, 0.2894924946390279, 0.28938906752411575, 0.2892857142857143, 0.2891824348446983, 0.2890792291220557, 0.2889760970388869, 0.2888730385164051, 0.2887700534759358, 0.2886671418389166, 0.28856430352689705, 0.28846153846153844, 0.28871484514061946, 0.2886120996441281, 0.2888651725364639, 0.28911806543385493, 0.28937077852826165, 0.2896233120113717, 0.2895204262877442, 0.28941761363636365, 0.2896698615548456, 0.2899219304471256, 0.2901738205037247, 0.2900709219858156, 0.2903225806451613, 0.2905740609496811, 0.2908253630889125, 0.29107648725212465, 0.2913274336283186, 0.2915782024062279, 0.2918287937743191, 0.29207920792079206, 0.29232944503358077, 0.29222614840989397, 0.29212292476156837, 0.2920197740112994, 0.29191669608189197, 0.2918136908962597, 0.29171075837742505, 0.29160789844851903, 0.2915051110327811, 0.29140239605355883, 0.29129975343430786, 0.29119718309859155, 0.29109468497008095, 0.29099225897255454, 0.290889905029898, 0.2911392405063291, 0.2913884007029877, 0.29128601546029514, 0.29118370214260625, 0.2910814606741573, 0.290979290979291, 0.2908771929824561, 0.2907751666082076, 0.2906732117812062, 0.290571328426218, 0.2904695164681149, 0.2903677758318739, 0.29026610644257705, 0.2901645082254113, 0.2900629811056683, 0.28996152500874434, 0.28986013986013986, 0.2897588255854596, 0.29000698812019565, 0.2902549772965421, 0.2901536312849162, 0.2900523560209424, 0.28995115143056527, 0.2898500174398326, 0.2900976290097629, 0.2903450679679331, 0.2905923344947735, 0.29083942877046326, 0.2907381615598886, 0.29063696484510965, 0.29053583855254, 0.29043478260869565, 0.29033379694019473, 0.29023288147375736, 0.2901320361362057, 0.29003126085446335, 0.2899305555555556, 0.2898299201666088, 0.2897293546148508, 0.2899757197363857, 0.29022191400832176, 0.2904679376083189, 0.2907137907137907, 0.29061309317630757, 0.29085872576177285, 0.29110418830045, 0.29134948096885815, 0.29159460394327225, 0.29149377593361, 0.2913930176287591, 0.2912923289564616, 0.2911917098445596, 0.29109116022099446, 0.2909906800138074, 0.2908902691511387, 0.290789927561228, 0.2906896551724138, 0.2905894519131334, 0.29083390764989664, 0.29107819497071996, 0.29132231404958675, 0.29156626506024097, 0.2914659325533379, 0.2913656690746474, 0.29126547455295737, 0.2911653489171537, 0.29106529209621995, 0.29096530401923737, 0.29086538461538464, 0.29076553381393755, 0.29066575154426905, 0.29056603773584905, 0.29046639231824417, 0.29036681522111757, 0.29026730637422893, 0.290167865707434, 0.29006849315068495, 0.28996918863402943, 0.28986995208761124, 0.2897707834416695, 0.289671682626539, 0.28957264957264955, 0.2894736842105263, 0.2893747864707892, 0.289275956284153, 0.2891771935814271, 0.289419795221843, 0.2896622313203685, 0.28990450204638474, 0.2898056597340607, 0.2897068847989093, 0.28960817717206133, 0.2895095367847411, 0.28941096356826695, 0.2893124574540504, 0.28921401837359645, 0.2891156462585034, 0.28901734104046245, 0.28925900747790617, 0.28950050968399593, 0.289741847826087, 0.2896434634974533, 0.2895451459606246, 0.28944689514760774, 0.289348710990502, 0.28925059342149884, 0.2894915254237288, 0.2897322941375805, 0.2899728997289973, 0.28987470369116153, 0.29011509817197023, 0.29035532994923857, 0.290595399188092, 0.29083530605343255, 0.29107505070993916, 0.29131463332206825, 0.29155405405405405, 0.29145558932792975, 0.2913571910871033, 0.2912588592642592, 0.29116059379217274, 0.29106239460371, 0.29096426163182737, 0.29086619480957193, 0.29076819407008087, 0.29067025934658136, 0.2905723905723906, 0.2904745876809155, 0.29037685060565277, 0.29027917928018837, 0.2901815736381977, 0.29008403361344537, 0.28998655913978494, 0.2898891501511589, 0.28979180658159837, 0.28969452836522325, 0.2895973154362416, 0.28950016772895004, 0.28940308517773305, 0.28964130070398925, 0.289544235924933, 0.2897822445561139, 0.290020093770931, 0.28992299966521595, 0.2898259705488621, 0.289729006356641, 0.28963210702341136, 0.28953527248411903, 0.2894385026737968, 0.28934179752756434, 0.2892451569806279, 0.28914858096828044, 0.2890520694259012, 0.2889556222889556, 0.28885923949299536, 0.2887629209736579, 0.2886666666666667, 0.28857047650783074, 0.28847435043304465, 0.2883782883782884, 0.28828229027962715, 0.2881863560732113, 0.2880904856952761, 0.28799467908214166, 0.2878989361702128, 0.28780325689597874, 0.2877076411960133, 0.28761208900697444, 0.28751660026560427, 0.28775307002987055, 0.28798938287989384, 0.28822553897180764, 0.28812997347480107, 0.2883659264169705, 0.2882703777335984, 0.28850612785690627, 0.28874172185430463, 0.28897715988083417, 0.2888815354070152, 0.28878597419781676, 0.28869047619047616, 0.28859504132231406, 0.28849966953073364, 0.288404360753221, 0.2883091149273448, 0.288213931990756, 0.2881188118811881, 0.2880237545364566, 0.2879287598944591, 0.2878338278931751, 0.2877389584706658, 0.2876441515650741, 0.2875494071146245, 0.28745472505762265, 0.28736010533245554, 0.2872655478775913, 0.28717105263157894, 0.28707661953304836, 0.2869822485207101, 0.28688793953335523, 0.2867936925098555, 0.28669950738916256, 0.2866053841103086, 0.28651132261240564, 0.28641732283464566, 0.2866513611020007, 0.28688524590163933, 0.2871189773844641, 0.28735255570117957, 0.2875859810022928, 0.2874918140144073, 0.2873977086743044, 0.28763089005235604, 0.2878639188747138, 0.28776978417266186, 0.2876757110166721, 0.2875816993464052, 0.2874877491016008, 0.2873938602220771, 0.28730003264773096, 0.28720626631853785, 0.28711256117455136, 0.28701891715590344, 0.286925334202804, 0.28683181225554105, 0.28706419028999675, 0.28729641693811075, 0.2872028655161185, 0.287109375, 0.2870159453302961, 0.28724788549121666, 0.28747967479674796, 0.28771131339401823, 0.28794280142996426, 0.28784925276153345, 0.2880805456316986, 0.287987012987013, 0.287893541058098, 0.28780012978585334, 0.28770677911125525, 0.28793774319066145, 0.28816855753646675, 0.2880751782242385, 0.28798185941043086, 0.28788860103626945, 0.2881191324053092, 0.28802588996763756, 0.28825622775800713, 0.28816300129366107, 0.2880698351115422, 0.2879767291531997, 0.2878836833602585, 0.2877906976744186, 0.2876977720374556, 0.28760490639122016, 0.28751210067763794, 0.2874193548387097, 0.2873266688165108, 0.2872340425531915, 0.28714147599097645, 0.28737113402061853, 0.28760064412238323, 0.28783000643915, 0.2880592211136144, 0.2882882882882883, 0.28851720810550013, 0.2884244372990354, 0.28833172613307617, 0.288560411311054, 0.2887889495663347, 0.28901734104046245, 0.28924558587479937, 0.2894736842105263, 0.28938081488610845, 0.28928800513149455, 0.2895158704713049, 0.28974358974358977, 0.28965075296379367, 0.2895579756566304, 0.28946525776496956, 0.28969270166453265, 0.28992, 0.28982725527831094, 0.28973456987527985, 0.28964194373401536, 0.28954937679769893, 0.28945686900958467, 0.28968380709038644, 0.28991060025542786, 0.29013724864347273, 0.29036375239310785, 0.29059011164274323, 0.29049744897959184, 0.2907236212942302, 0.2909496494582537, 0.29117553360942977, 0.2910828025477707, 0.2909901305316778, 0.29089751750477405, 0.29080496341075407, 0.2907124681933842, 0.29062003179650236, 0.2905276541640178, 0.29043533523991105, 0.2903430749682338, 0.29025087329310895, 0.29015873015873017, 0.2900666455093621, 0.2899746192893401, 0.28988265144307007, 0.2897907419150285, 0.2896988906497623, 0.2899239543726236, 0.2901488755147292, 0.2903736542115263, 0.2902817347261792, 0.29050632911392404, 0.29041442581461563, 0.2903225806451613, 0.2902307935504268, 0.2904551201011378, 0.29067930489731436, 0.2909033480732786, 0.2911272497631828, 0.29103535353535354, 0.29094351530451246, 0.2908517350157729, 0.2907600126143173, 0.2906683480453972, 0.2905767412543334, 0.2904851921865154, 0.29039370078740157, 0.2903022670025189, 0.29021089077746304, 0.29011957205789807, 0.2900283107895565, 0.289937106918239, 0.2898459603898145, 0.28975487115022, 0.28966383914546023, 0.28957286432160806, 0.28948194662480375, 0.2893910860012555, 0.28930028239723876, 0.28920953575909664, 0.2894324239573534, 0.28934169278996863, 0.28925101848950174, 0.2891604010025063, 0.2893830253679925, 0.28960551033187226, 0.28982785602503913, 0.2900500625782228, 0.2902721301219894, 0.2904940587867417, 0.2904032510159425, 0.2903125, 0.2902218056857232, 0.2901311680199875, 0.29035279425538557, 0.29057428214731584, 0.290795631825273, 0.29070492825951344, 0.2906142812597443, 0.29052369077306733, 0.29043315674665005, 0.2903426791277259, 0.2902522578635939, 0.2901618929016189, 0.29007158418923124, 0.2899813316739266, 0.28989113530326593, 0.2898009950248756, 0.289710910786447, 0.2896208825357365, 0.2895309102205654, 0.2894409937888199, 0.2896615957777088, 0.28988206083178153, 0.2901023890784983, 0.2903225806451613, 0.29023255813953486, 0.2901425914445133, 0.290052680508212, 0.2899628252788104, 0.2898730257045525, 0.2897832817337461, 0.28969359331476324, 0.2896039603960396, 0.28951438292607484, 0.2894248608534323, 0.2893353941267388, 0.2892459826946848, 0.2891566265060241, 0.2890673255095738, 0.2892868169188021, 0.2895061728395062, 0.2897253933970997, 0.2899444787168415, 0.2898550724637681, 0.28976572133168926, 0.2899845916795069, 0.2902033271719039, 0.29042192793347704, 0.29033251231527096, 0.2902431517389966, 0.29046153846153844, 0.2906797908335897, 0.2908979089790898, 0.291115893021826, 0.2913337430854333, 0.2912442396313364, 0.29115479115479115, 0.2910653976051581, 0.29097605893186, 0.2908867750843817, 0.2907975460122699, 0.2907083716651334, 0.29061925199264255, 0.2908366533864542, 0.29105392156862747, 0.291271056661562, 0.29148805878750766, 0.2917049280685644, 0.291921664626683, 0.2921382685836647, 0.2923547400611621, 0.29226536227453376, 0.2921760391198044, 0.2923923006416132, 0.2926084300549786, 0.292824427480916, 0.29304029304029305, 0.29325602685382973, 0.29347162904209884, 0.2933821286977737, 0.29329268292682925, 0.29320329167936604, 0.2931139549055454, 0.2933292720073104, 0.2935444579780755, 0.2937595129375951, 0.2936701156421181, 0.2935807727411013, 0.29349148418491483, 0.29340224992398906, 0.2933130699088146, 0.2932239440899423, 0.293134872417983, 0.2930458548436077, 0.29295689131754704, 0.2928679817905918, 0.29277912621359226, 0.2929936305732484, 0.2932080048514251, 0.2934222491664141, 0.29363636363636364, 0.293850348379279, 0.2940642035130224, 0.29427792915531337, 0.2944915254237288, 0.2947049924357035, 0.29491833030852993, 0.2951315391593589, 0.2953446191051995, 0.2955575702629193, 0.29546827794561936, 0.2953790395650861, 0.29528985507246375, 0.2952007244189556, 0.29541339770669883, 0.2956259426847662, 0.29583835946924003, 0.2960506481760627, 0.2962628089210368, 0.29647484181982525, 0.2963855421686747, 0.29659741041854865, 0.29650812763395545, 0.29641889858561543, 0.2963297232250301, 0.2962406015037594, 0.29645219482862295, 0.29666366095581603, 0.296875, 0.29678582156803845, 0.2966966966966967, 0.29660762533773644, 0.2965186074429772, 0.2964296429642964, 0.29634073185362925, 0.2962518740629685, 0.2961630695443645, 0.29637398861252623, 0.2965847813061714, 0.296795447738844, 0.2970059880239521, 0.29721640227476803, 0.2974266906044285, 0.2976368531259348, 0.29784688995215314, 0.29775784753363227, 0.29796772265391513, 0.29817747236331044, 0.2980884109916368, 0.297999402806808, 0.297910447761194, 0.2978215458072217, 0.2977326968973747, 0.29764390098419324, 0.2975551580202743, 0.29746646795827125, 0.2973778307508939, 0.29728924635090853, 0.29720071471113757, 0.29711223578445967, 0.2970238095238095, 0.2969354358821779, 0.29684711481261156, 0.2967588462682129, 0.2966706302021403, 0.2965824665676077, 0.2964943553178847, 0.2964062964062964, 0.29631828978622327, 0.2962303354111012, 0.29614243323442135, 0.29605458320973005, 0.2959667852906287, 0.29617551141417137, 0.2963841138114997, 0.2962962962962963, 0.2962085308056872, 0.29612081729345574, 0.2960331557134399, 0.2959455460195324, 0.2958579881656805, 0.29577048210588586, 0.29568302779420463, 0.29559562518474725, 0.29580378250591016, 0.2960118168389956, 0.2959243945658594, 0.295837023914969, 0.2957497048406139, 0.2956624372971378, 0.29557522123893804, 0.29548805662046596, 0.2954009433962264, 0.2953138815207781, 0.29522687094873307, 0.295139911634757, 0.2950530035335689, 0.29496614659994114, 0.29487934078869926, 0.294792586054722, 0.29470588235294115, 0.29461922963834164, 0.2945326278659612, 0.29444607699089037, 0.29435957696827264, 0.2945668135095448, 0.2947739283617146, 0.29498092163193423, 0.29518779342723006, 0.2953945438545028, 0.29560117302052785, 0.2958076810319554, 0.29601406799531066, 0.2962203340169938, 0.29642647920328064, 0.2966325036603221, 0.2968384074941452, 0.29704419081065264, 0.2972498537156232, 0.2974553963147119, 0.2976608187134503, 0.29757380882782813, 0.29748684979544127, 0.2976920829681566, 0.29789719626168226, 0.2981021897810219, 0.29830706363105663, 0.2985118179165451, 0.29871645274212366, 0.2989209682123068, 0.2991253644314869, 0.2993296415039347, 0.29924242424242425, 0.2991552577920186, 0.2990681421083285, 0.298981077147016, 0.2988940628637951, 0.2988070992144312, 0.2990110529377545, 0.29921488804885144, 0.29941860465116277, 0.2996222028480093, 0.2998256827425915, 0.3000290444379901, 0.29994192799070846, 0.2998548621190131, 0.3000580383052815, 0.3002610966057441, 0.3001740139211137, 0.3000869817338359, 0.3, 0.2999130686757462, 0.30011587485515645, 0.3000289603243556, 0.2999420961204401, 0.2998552821997106, 0.29976851851851855, 0.29968180503326586, 0.29959514170040485, 0.2995085284764383, 0.2994219653179191, 0.29933545218145047, 0.29924898902368574, 0.2991625758013283, 0.29907621247113164, 0.298989898989899, 0.29890363531448355, 0.2988174214017883, 0.29873125720876587, 0.29864514269241854, 0.2985590778097983, 0.2984730625180063, 0.29838709677419356, 0.29830118053556004, 0.298503166378814, 0.298705035971223, 0.29861910241657075, 0.2985332182916307, 0.29873490511788386, 0.29893647599885026, 0.2991379310344828, 0.2993392703246194, 0.29954049396898336, 0.2997416020671835, 0.29965556831228474, 0.2995695839311334, 0.29948364888123924, 0.2993977631201606, 0.2993119266055046, 0.29951275437087993, 0.2997134670487106, 0.29991406473789745, 0.30011454753722794, 0.3003149155453765, 0.3002289639381797, 0.3001430615164521, 0.30005720823798626, 0.2999714040606234, 0.2998856489422527, 0.2997999428408117, 0.2997142857142857, 0.2996286775207084, 0.29954311821816104, 0.29945760776477304, 0.2993721461187215, 0.2992867332382311, 0.29920136908157446, 0.29911605360707155, 0.2990307867730901, 0.29894556853804505, 0.29886039886039883, 0.29877527769866136, 0.29869020501138954, 0.2986051807571876, 0.2985202048947069, 0.2984352773826458, 0.29835039817974973, 0.2982655672448109, 0.2981807845366686, 0.2980960500142086, 0.29801136363636366, 0.297926725362113, 0.2978421351504827, 0.297757592960545, 0.29767309875141884, 0.2975886524822695, 0.2975042541123086, 0.2974199036007939, 0.2973356009070295, 0.29725134599036557, 0.2971671388101983, 0.29708297932597, 0.29699886749716875, 0.29691480328332864, 0.29683078664402945, 0.29674681753889676, 0.2966628959276018, 0.29657902176986145, 0.2964951950254381, 0.2964114156541396, 0.2963276836158192, 0.2962439988703756, 0.2961603613777527, 0.2960767710979396, 0.29599322799097066, 0.2959097320169252, 0.2958262831359278, 0.29574288130814774, 0.29565952649379934, 0.2955762186531417, 0.2954929577464789, 0.2954097437341594, 0.29532657657657657, 0.2952434562341683, 0.295160382667417, 0.2950773558368495, 0.2949943757030371, 0.29491144222659543, 0.29482855536818436, 0.294745715088508, 0.2946629213483146, 0.29458017410839654, 0.29449747332959014, 0.29441481897277577, 0.2943322109988777, 0.29424964936886394, 0.2941671340437465, 0.29408466498458086, 0.29400224215246634, 0.2939198655085458, 0.2938375350140056, 0.2940352842341081, 0.29423292273236284, 0.2941505737475511, 0.2940682708449916, 0.293986013986014, 0.29390380313199105, 0.2938216382443388, 0.29373951928451647, 0.2936574462140263, 0.2935754189944134, 0.29349343758726615, 0.2934115019542155, 0.29332961205693553, 0.29324776785714285, 0.29316596931659694, 0.2930842163970998, 0.29300250906049624, 0.29292084726867335, 0.2928392309835609, 0.2927576601671309, 0.2926761347813979, 0.29259465478841873, 0.29279153910381295, 0.29271007234279356, 0.2929068150208623, 0.292825361512792, 0.292743953294412, 0.29266259032796, 0.2925812725757155, 0.2925, 0.2924187725631769, 0.2923375902276513, 0.2922564529558701, 0.29217536071032185, 0.29209431345353676, 0.29201331114808654, 0.29193235375658444, 0.29185144124168516, 0.29177057356608477, 0.2916897506925208, 0.29160897258377183, 0.2915282392026578, 0.29144755051203985, 0.29136690647482016, 0.29128630705394193, 0.29120575221238937, 0.2911252419131877, 0.291044776119403, 0.290964354794142, 0.2908839779005525, 0.29107981220657275, 0.29127553837658754, 0.291471156500138, 0.2916666666666667, 0.29158620689655174, 0.2915057915057915, 0.2914254204576785, 0.29134509371554573, 0.2912648112427666, 0.2911845730027548, 0.2913797851831451, 0.2915748898678414, 0.29149463253509494, 0.29168959823885526, 0.29160935350756534, 0.2915291529152915, 0.2917239483090459, 0.2919186366135239, 0.29211321791701017, 0.2923076923076923, 0.29250205987366107, 0.29269632070291046, 0.2928904748833379, 0.29308452250274425, 0.29300411522633746, 0.29292375205704885, 0.2928434329585961, 0.29276315789473684, 0.29295697451356534, 0.29315068493150687, 0.2933442892358258, 0.29353778751369114, 0.29345743224746784, 0.29337712096332785, 0.293296853625171, 0.29321663019693656, 0.29313645064260324, 0.29332968835429196, 0.2935228204427439, 0.2937158469945355, 0.2939087680961486, 0.2941015838339705, 0.29429429429429427, 0.2942139737991266, 0.29440654843110503, 0.2945990180032733, 0.29479138260158166, 0.294711014176663, 0.2946306895611883, 0.29455040871934607, 0.29447017161536365, 0.29438997821350765, 0.2943098284780833, 0.2942297223734349, 0.2941496598639456, 0.294069640914037, 0.2939896654881697, 0.2939097335508428, 0.2938298450665942, 0.29375, 0.2939418636240152, 0.2941336230309614, 0.29405376052131416, 0.2942453854505972, 0.2944369063772049, 0.29462832338578404, 0.2948196365608896, 0.2947396963123644, 0.29493087557603687, 0.2948509485094851, 0.29504199403955567, 0.2952329360780065, 0.29542377470890874, 0.29561451001624256, 0.29580514208389713, 0.295995670995671, 0.29618609683527186, 0.29637641968631695, 0.2962962962962963, 0.2964864864864865, 0.2964063766549581, 0.2963263101026472, 0.29624628679449094, 0.29616630669546434, 0.2960863697705803, 0.2960064759848894, 0.2959266253034799, 0.29584681769147786, 0.29576705311404694, 0.29568733153638815, 0.29560765292374025, 0.29552801724137934, 0.2954484244546189, 0.2953688745288099, 0.29528936742934053, 0.29520990312163614, 0.29513048157115956, 0.29505110274341045, 0.29497176660392577, 0.2948924731182796, 0.2948132222520828, 0.29473401397098337, 0.2946548482406661, 0.29457572502685286, 0.29449664429530203, 0.2944176060118089, 0.2943386101422055, 0.29425965665236054, 0.29418074550817913, 0.2941018766756032, 0.2940230501206111, 0.29394426580921756, 0.2938655237074739, 0.2937868237814676, 0.29370816599732263, 0.29362955032119914, 0.29355097671929353, 0.29347244515783844, 0.29339395560310244, 0.29358288770053476, 0.2937717187917669, 0.29396044895777657, 0.29414907827945497, 0.29433760683760685, 0.2945260347129506, 0.2947143619861185, 0.2946357085668535, 0.2945570971184632, 0.294478527607362, 0.2944, 0.29432151426286324, 0.2942430703624733, 0.2944311217692513, 0.29461907298881196, 0.2945406125166445, 0.29472843450479236, 0.294916156507852, 0.2951037786056413, 0.29529130087789307, 0.2954787234042553, 0.29540015953203935, 0.2953216374269006, 0.2952431570555408, 0.29516471838469716, 0.2950863213811421, 0.2950079660116835, 0.2949296522431643, 0.29485138004246286, 0.29477314937649246, 0.2946949602122016, 0.29461681251657384, 0.29453870625662776, 0.2944606413994169, 0.2943826179120297, 0.2943046357615894, 0.2944915254237288, 0.2946783161239079, 0.2946003176283748, 0.2945223604128076, 0.29444444444444445, 0.294631049986776, 0.29481755684822847, 0.29473962463653186, 0.2949260042283298, 0.295112285336856, 0.2952984680401479, 0.29548455241616056, 0.29567053854276665, 0.2958564264977567, 0.29604221635883904, 0.2962279082036402, 0.29641350210970463, 0.29659899815449514, 0.2967843964153927, 0.29670619235836626, 0.2966280295047418, 0.2965499078219647, 0.2964718272775145, 0.29639378783890497, 0.2963157894736842, 0.29623783214943433, 0.2961599158337717, 0.29608204049434655, 0.2960042060988433, 0.2959264126149803, 0.29584866001050975, 0.29577094825321776, 0.2959558823529412, 0.2958781832501969, 0.2958005249343832, 0.2957229073733928, 0.29564533053515213, 0.2955677943876213, 0.2954902988987939, 0.29541284403669726, 0.29533542976939203, 0.2952580560649725, 0.29518072289156627, 0.2951034302173344, 0.2950261780104712, 0.2949489662392044, 0.2948717948717949, 0.29479466387653674, 0.29471757322175735, 0.294640522875817, 0.29482488238369053, 0.29500914554481317, 0.294932079414838, 0.294855053538783, 0.2947780678851175, 0.29496215087444533, 0.2948851774530271, 0.2948082441951474, 0.29473135106937925, 0.29465449804432853, 0.29457768508863397, 0.2947615324472244, 0.2949452840020844, 0.29486845532690803, 0.2947916666666667, 0.29471491799010674, 0.2946382092660073, 0.2945615404631798, 0.29448491155046824, 0.29440832249674903, 0.29433177327093085, 0.2942552638419548, 0.29417879417879417, 0.29410236425045466, 0.294025974025974, 0.2939496234744222, 0.29387331256490135, 0.29379704126654554, 0.29372080954852103, 0.29364461738002595, 0.29356846473029047, 0.2934923515685766, 0.29341627786417834, 0.29334024358642136, 0.2932642487046632, 0.2931882931882932, 0.29311237700673226, 0.2930365001294331, 0.29296066252587993, 0.2928848641655886, 0.2928091050181066, 0.29273338505301266, 0.29265770423991727, 0.29258206254846214, 0.2925064599483204, 0.2924308964091966, 0.29235537190082644, 0.29227988639297703, 0.2922044398554466, 0.2921290322580645, 0.29231166150670795, 0.2924941965437194, 0.2926766374419804, 0.2928589842742975, 0.2930412371134021, 0.2932233960319505, 0.29340546110252447, 0.2933298995621942, 0.293254376930999, 0.2931788931788932, 0.29336078229541945, 0.293285310007718, 0.2934670781893004, 0.2933916173823605, 0.29331619537275067, 0.2932408121305577, 0.2931654676258993, 0.29334703313639865, 0.2935285053929122, 0.2937098844672657, 0.2938911704312115, 0.294072363356428, 0.2942534633145203, 0.29417799435752756, 0.2941025641025641, 0.2940271725198667, 0.29395181957970273, 0.29387650525236997, 0.29405737704918034, 0.2939820742637644, 0.2939068100358423, 0.2938315843358075, 0.29401228249744116, 0.29393706830391403, 0.29411764705882354, 0.29429813346970085, 0.29422290388548056, 0.2941477127523639, 0.2940725600408789, 0.29399744572158365, 0.2939223697650664, 0.29384733214194536, 0.2937723328228688, 0.2936973717785149, 0.29362244897959183, 0.29354756439683755, 0.29347271800101987, 0.2933979097629365, 0.2933231396534149, 0.2932484076433121, 0.293173713703515, 0.29309905780494017, 0.29327902240325865, 0.29345889539322983, 0.29338422391857505, 0.2935639786313915, 0.29348931841302134, 0.2934146961606916, 0.29334011184544995, 0.29326556543837357, 0.2931910569105691, 0.2931165862331725, 0.2930421533773489, 0.29296775831429295, 0.2928934010152284, 0.2928190814514083, 0.29274479959411465, 0.29267055541465886, 0.29259634888438135, 0.29252217997465146, 0.2924480486568677, 0.29237395490245754, 0.2922998986828774, 0.2922258799696126, 0.29215189873417724, 0.2920779549481144, 0.2922570850202429, 0.29218315203642803, 0.2921092564491654, 0.2920353982300885, 0.2919615773508595, 0.2918877937831691, 0.29181404749873674, 0.2917403384693104, 0.2916666666666667, 0.29159303206261045, 0.2915194346289753, 0.29144587433762303, 0.291372351160444, 0.29129886506935687, 0.29122541603630864, 0.2911520040332745, 0.29107862903225806, 0.291005291005291, 0.29093198992443325, 0.29085872576177285, 0.290785498489426, 0.29071230807953685, 0.2906391545042778, 0.29056603773584905, 0.2904929577464789, 0.29067136032185065, 0.2908496732026144, 0.29077657702940435, 0.2907035175879397, 0.29063049485054004, 0.290557508789553, 0.2907356264122521, 0.2909136546184739, 0.29109159347553326, 0.29126944305067737, 0.29144720341108604, 0.2916248746238716, 0.2915517673602407, 0.2914786967418546, 0.29140566274116764, 0.2913326653306613, 0.291259704482845, 0.2911867801702554, 0.2913642052565707, 0.29154154154154155, 0.29171878909181886, 0.291895947973987, 0.29182295573893474, 0.292, 0.29192701824543865, 0.29185407296351823, 0.2917811641269048, 0.2917082917082917, 0.2916354556803995, 0.29156265601597603, 0.29148989268779635, 0.29141716566866266, 0.29134447493140436, 0.2912718204488778, 0.2911992021939666, 0.29112662013958124, 0.29105407425865937, 0.2909815645241654, 0.2909090909090909, 0.2908366533864542, 0.2907642519293005, 0.2906918865107018, 0.29061955710375714, 0.29054726368159206, 0.2904750062173589, 0.29065141720537047, 0.29082774049217003, 0.29100397614314116, 0.29093167701863354, 0.2908594138102335, 0.2907871864911845, 0.29071499503475673, 0.29064283941424673, 0.29057071960297765, 0.29049863557429917, 0.2904265873015873, 0.2903545747582445, 0.29028259791769956, 0.2902106567534077, 0.29013875123885036, 0.2900668813475353, 0.2902426944031699, 0.2904184204010894, 0.2905940594059406, 0.2905221479831725, 0.29069767441860467, 0.29087311402423943, 0.29080118694362017, 0.2907292954264524, 0.2906574394463668, 0.29058561897702, 0.29051383399209485, 0.29044208446530007, 0.2903703703703704, 0.2902986916810664, 0.29022704837117475, 0.29015544041450775, 0.2900838677849038, 0.2902589395807645, 0.29043392504930965, 0.2906088242543752, 0.2907836372597339, 0.2909583641290958, 0.2911330049261084, 0.29130755971435607, 0.2914820285573609, 0.2914102879645582, 0.2915846456692913, 0.2917589175891759, 0.29193310378750614, 0.29210720432751414, 0.2922812192723697, 0.2922093880560334, 0.29213759213759216, 0.29206583149103416, 0.2919941060903733, 0.2919224159096489, 0.2918507609229259, 0.2920245398773006, 0.292198233562316, 0.2923718420407162, 0.29254536537518394, 0.2927188036283403, 0.2928921568627451, 0.29306542514089684, 0.2929936305732484, 0.292921871173157, 0.29285014691478944, 0.2927784577723378, 0.29270680372001956, 0.29263518473207734, 0.2925636007827789, 0.2924920518464172, 0.29242053789731054, 0.292349058909802, 0.29227761485826004, 0.29220620571707795, 0.29213483146067415, 0.2920634920634921, 0.2919921875, 0.29192091774469126, 0.29184968277208395, 0.2917784825567212, 0.2917073170731707, 0.29163618629602533, 0.29180887372013653, 0.29198147696807214, 0.2921539961013645, 0.292326431181486, 0.292498782269849, 0.2926710494278062, 0.2925998052580331, 0.29252859576539303, 0.2924574209245742, 0.2923862807102895, 0.2923151750972763, 0.2922441040602966, 0.2921730675741371, 0.29210206561360874, 0.2920310981535471, 0.2922030604809327, 0.2923749392909179, 0.2923039572711823, 0.2922330097087379, 0.29216209657850034, 0.29233381853469187, 0.2922629153528984, 0.292192046556741, 0.2921212121212121, 0.29205041202132814, 0.29197964623212985, 0.2919089147286822, 0.29183821748607414, 0.2917675544794189, 0.2916969256838538, 0.29162633107454017, 0.29155577062666344, 0.29172714078374457, 0.2918984280532044, 0.29182785299806574, 0.2917573120618806, 0.291686805219913, 0.29161633244745105, 0.29178743961352654, 0.29171697657570633, 0.29164654756156444, 0.2915761525464639, 0.2915057915057915, 0.29143546441495777, 0.291365171249397, 0.29129491198456714, 0.29122468659594986, 0.2911544950590504, 0.2910843373493976, 0.29101421344254397, 0.2909441233140655, 0.29087406693956175, 0.29080404429465573, 0.29073405535499397, 0.2906641000962464, 0.29059417849410635, 0.2905242905242905, 0.2904544361625391, 0.2903846153846154, 0.29031482816630616, 0.2902450744834214, 0.29017535431179436, 0.29010566762728146, 0.2900360144057623, 0.2899663946231397, 0.2898968082553396, 0.29006717850287905, 0.28999760134324776, 0.290167865707434, 0.29009829777031887, 0.2900287631831256, 0.28995926192187876, 0.28988979396262576, 0.2898203592814371, 0.2899904214559387, 0.2901604022025377, 0.2903303015797032, 0.29050011964584826, 0.2904306220095694, 0.2903611576177948, 0.2902917264466762, 0.2902223284723882, 0.2901529636711281, 0.2900836320191159, 0.29001433349259437, 0.289945068067829, 0.2898758357211079, 0.28980663642874194, 0.28997613365155134, 0.2901455499880697, 0.29031488549618323, 0.2904841402337229, 0.290414878397711, 0.2905840286054827, 0.29075309818875117, 0.2906838217774601, 0.2906145783706527, 0.2905453679447487, 0.2904761904761905, 0.2904070459414425, 0.2903379343169919, 0.29026885557934806, 0.29019980970504283, 0.2901307966706302, 0.29006181645268664, 0.2899928690278108, 0.2899239543726236, 0.2898550724637681, 0.28978622327790976, 0.2897174067917359, 0.2896486229819563, 0.28957987182530265, 0.2895111532985287, 0.28944246737841045, 0.2893738140417457, 0.28930519326535453, 0.28923660502607873, 0.28916804930078216, 0.2890995260663507, 0.2892679459843639, 0.28943628612032213, 0.28960454653090223, 0.2897727272727273, 0.28994082840236685, 0.28987221959299575, 0.2898036432458008, 0.2897350993377483, 0.28966658784582644, 0.2895981087470449, 0.2895296620184354, 0.28946124763705106, 0.2893928655799669, 0.28932451582427965, 0.2892561983471074, 0.28918791312559017, 0.28911966013688933, 0.28905143935818783, 0.28898325076669024, 0.28891509433962265, 0.2888469700542325, 0.2887788778877888, 0.2887108178175819, 0.2886427898209237, 0.28857479387514723, 0.2885068299576072, 0.2884388980456793, 0.2883709981167608, 0.2883031301482702, 0.28823529411764703, 0.28816749000235237, 0.2880997177798683, 0.2880319774276981, 0.28796426892336624, 0.2878965922444183, 0.2880639097744361, 0.28799624148461356, 0.2879286049788633, 0.2878610002347969, 0.28779342723004697, 0.28772588594226706, 0.2876583763491319, 0.28759089842833685, 0.2875234521575985, 0.28745603751465415, 0.2873886544772621, 0.2873213030232013, 0.2872539831302718, 0.2871866947762942, 0.28711943793911004, 0.2870522125965816, 0.28698501872659177, 0.28691785630704425, 0.28685072531586336, 0.28678362573099414, 0.28671655753040226, 0.2866495206920739, 0.2865825151940159, 0.2865155410142557, 0.2864485981308411, 0.2863816865218407, 0.28631480616534327, 0.2862479570394583, 0.2861811391223156, 0.28611435239206534, 0.2860475968268782, 0.2859808724049452, 0.28614738805970147, 0.28608067148519467, 0.28601398601398603, 0.28594733162433, 0.2858807082945014, 0.28581411600279527, 0.2857475547275268, 0.2856810244470314, 0.2856145251396648, 0.28554805678380263, 0.28548161935784083, 0.285647825075599, 0.2855813953488372, 0.28551499651243895, 0.28544862854486286, 0.2853822914245875, 0.2853159851301115, 0.28524970963995355, 0.2851834649326521, 0.2851172509867657, 0.2850510677808728, 0.2849849152935716, 0.28491879350348026, 0.2848527023892368, 0.2847866419294991, 0.2847206121029446, 0.28465461288827076, 0.28458864426419467, 0.2845227062094532, 0.2844567987028029, 0.28439092172301994, 0.2843250752489002, 0.28425925925925927, 0.2841934737329322, 0.28412771864877373, 0.2840619939856581, 0.2839962997224792, 0.2839306358381503, 0.2838650023116043, 0.2837993991217934, 0.28373382624768945, 0.28366828366828367, 0.2836027713625866, 0.28353728930962824, 0.283471837488458, 0.28340641587814447, 0.2833410244577757, 0.283275663206459, 0.283210332103321, 0.28337560525709016, 0.2835408022130014, 0.2837059230237382, 0.2836405529953917, 0.28357521308454275, 0.28350990327038234, 0.28344462353212063, 0.2833793738489871, 0.28331415420023015, 0.28324896456511733, 0.2831838049229354, 0.2831186752529899, 0.28328351345136815, 0.28344827586206894, 0.28361296253734775, 0.28377757352941174, 0.2839421088904204, 0.28410656867248507, 0.28427095292766935, 0.284435261707989, 0.284599495065412, 0.28453418999541075, 0.28446891488873594, 0.28440366972477066, 0.2845677596881449, 0.28473177441540576, 0.2846665138666055, 0.2846012832263978, 0.2847651775486827, 0.28492899679340356, 0.2850927410121365, 0.2850274725274725, 0.28496223392080566, 0.28489702517162474, 0.2848318462594372, 0.28476669716376946, 0.2847015778641665, 0.28463648834019206, 0.2845714285714286, 0.28473491773308957, 0.2848983321909984, 0.28506167199634536, 0.2849965745604019, 0.28493150684931506, 0.28509472723122575, 0.28525787311729806, 0.28519279032626055, 0.2853558394160584, 0.28529076396807296, 0.28522571819425446, 0.2851607020743105, 0.2850957155879672, 0.28503075871496925, 0.28496583143507975, 0.2849009337280802, 0.2848360655737705, 0.28477122695196905, 0.2847064178425125, 0.28486916951080776, 0.28480436760691535, 0.2847395951785308, 0.284674852205548, 0.28461013866787904, 0.28454545454545455, 0.2844807998182231, 0.28441617446615175, 0.28435157846922554, 0.28428701180744775, 0.28422247446084, 0.2841579664094417, 0.28409348763331066, 0.28402903811252267, 0.2839646178271717, 0.2841269841269841, 0.28406257084561326, 0.28399818676337263, 0.28393383186041243, 0.28386950611690076, 0.2838052095130238, 0.28374094202898553, 0.2836767036450079, 0.2836124943413309, 0.28354831409821224, 0.2834841628959276, 0.2834200407147704, 0.283355947535052, 0.2835179742256387, 0.2834538878842676, 0.28338983050847455, 0.2833258020786263, 0.28348768918003164, 0.28342366757000903, 0.283585459471664, 0.2837471783295711, 0.28390882419318436, 0.28407039711191334, 0.2840063162643808, 0.2839422643211547, 0.28410372040586246, 0.28426510369702435, 0.28442641424385845, 0.28458765209553855, 0.28474881730119395, 0.2849099099099099, 0.2850709299707273, 0.28523187753264295, 0.2853927526446095, 0.28555355535553556, 0.2857142857142857, 0.2858749437696806, 0.2858106588711491, 0.28597122302158273, 0.2861317149921331, 0.28606741573033706, 0.2860031453605931, 0.2861635220125786, 0.28609925892656635, 0.2860350246969017, 0.28619528619528617, 0.2863554757630162, 0.28651559344850797, 0.28667563930013457, 0.2868356133662256, 0.28677130044843047, 0.28670701636404394, 0.28664276109368, 0.28657853461796995, 0.28651433691756273, 0.2864501679731243, 0.2863860277653381, 0.28632191627490483, 0.2862578334825425, 0.2861937793689863, 0.2861297539149888, 0.2860657571013196, 0.28600178890876565, 0.285937849318131, 0.28587393831023694, 0.2858100558659218, 0.2857462019660411, 0.2856823765914675, 0.2856185797230907, 0.28555481134181737, 0.28549107142857144, 0.2854273599642937, 0.28536367692994197, 0.2853000223064912, 0.2852363960749331, 0.2851727982162765, 0.28510922871154704, 0.2852685535992868, 0.285427807486631, 0.2855869904210292, 0.28574610244988863, 0.2859051436205745, 0.2860641139804096, 0.2860004451368796, 0.2861593235425011, 0.28631813125695216, 0.28647686832740216, 0.2864131643317767, 0.2863494886616274, 0.2865081129139809, 0.28644444444444445, 0.2866029771161964, 0.2867614393602843, 0.2869198312236287, 0.28685612788632325, 0.28679245283018867, 0.28695073235685753, 0.2868870645662303, 0.2870452528837622, 0.28720337103570637, 0.28736141906873613, 0.2875193970294835, 0.287677304964539, 0.28783514292045204, 0.2877713779353124, 0.2877076411960133, 0.28764393268379096, 0.28758025237989815, 0.28751660026560427, 0.2874529763221952, 0.28738938053097346, 0.28732581287325815, 0.2872622733303848, 0.2871987618837055, 0.28713527851458887, 0.2870718232044199, 0.2870083959346001, 0.2869449966865474, 0.2868816254416961, 0.286818282181497, 0.2867549668874172, 0.2866916795409402, 0.28662842012356576, 0.2865651886168101, 0.2865019850022056, 0.286438809261301, 0.2863756613756614, 0.28631254132686795, 0.2862494490965183, 0.28618638466622603, 0.2861233480176211, 0.2860603391323497, 0.285997357992074, 0.28593440457847236, 0.28587147887323944, 0.2858085808580858, 0.28574571051473824, 0.2856828678249395, 0.28562005277044855, 0.2855572653330402, 0.2854945054945055, 0.2854317732366513, 0.2853690685413005, 0.2855260267955194, 0.28568291611769875, 0.2858397365532382, 0.2859964881474978, 0.2861531709457977, 0.28609039052215884, 0.2860276376398333, 0.28596491228070176, 0.2859022144266608, 0.285839544059623, 0.28577690116151655, 0.2857142857142857, 0.28565169769989046, 0.2855891371003066, 0.2855266038975257, 0.28546409807355516, 0.28540161961041804, 0.28533916849015317, 0.2852767446948151, 0.2852143482064742, 0.2851519790072163, 0.285089637079143, 0.28502732240437156, 0.28496503496503495, 0.28490277474328163, 0.28484054172127565, 0.2847783358811968, 0.2847161572052402, 0.28465400567561666, 0.2845918812745526, 0.28452978398428974, 0.2844677137870855, 0.28440567066521266, 0.28434365460095945, 0.2842816655766296, 0.2842197035745423, 0.284157768577032, 0.2840958605664488, 0.28425179699411895, 0.2844076655052265, 0.28456346614413236, 0.2847191989551589, 0.28487486398258977, 0.28503046127067017, 0.2851859908636067, 0.28534145280556766, 0.28549684714068274, 0.2856521739130435, 0.2858074331667029, 0.28574532811820946, 0.2856832500543124, 0.2856211989574283, 0.28555917480998916, 0.2857142857142857, 0.2858693292815281, 0.2860243055555556, 0.28617921458016926, 0.28633405639913234, 0.28648883105617, 0.28664353859496966, 0.2865814003902016, 0.28651928912006935, 0.28645720476706393, 0.28639514731369153, 0.28633311674247347, 0.2862711130359463, 0.2862091361766616, 0.28614718614718615, 0.2860852629301017, 0.2860233665080052, 0.2859614968635085, 0.2858996539792388, 0.28605405405405404, 0.28620838737570253, 0.28636265398746485, 0.28651685393258425, 0.2866709872542666, 0.2866090712742981, 0.2865471820341179, 0.2864853195164076, 0.28663932657025687, 0.28657747086750107, 0.2867313915857605, 0.28688524590163933, 0.2870390338580979, 0.2871927554980595, 0.28734641086441043, 0.2875, 0.2874380521439345, 0.2873761309780267, 0.28731423648503124, 0.28725236864771747, 0.28719052744886975, 0.2871287128712871, 0.2870669248977835, 0.28722030981067126, 0.2873736287373629, 0.2875268817204301, 0.2874650612771447, 0.28740326741186584, 0.28734150010745757, 0.2874946282767512, 0.28764769065520945, 0.28780068728522334, 0.2877388876959416, 0.28767711464147705, 0.28783000643915, 0.28798283261802576, 0.288135593220339, 0.2880737880737881, 0.2880120094359854, 0.28795025728987994, 0.28788853161843514, 0.28782683240462925, 0.28797943004071136, 0.28813196229648674, 0.28828442921396447, 0.28822269807280515, 0.28816099336330553, 0.2880993150684932, 0.2880376631714102, 0.28797603765511337, 0.2879144385026738, 0.28785286569717705, 0.28779131922172335, 0.2877297990594271, 0.2876683051934174, 0.2876068376068376, 0.28754539628284553, 0.28748398120461344, 0.2874225923553278, 0.28736122971818956, 0.2872998932764141, 0.2874519846350832, 0.2876040110945168, 0.28775597269624575, 0.28790786948176583, 0.2880597014925373, 0.2882114687699851, 0.2883631713554987, 0.28851480929043255, 0.28866638261610567, 0.288604898828541, 0.2887563884156729, 0.28890781349797745, 0.2890591741166454, 0.28921047031283253, 0.28936170212765955, 0.2895128696022123, 0.28966397277754147, 0.2896023814586434, 0.2895408163265306, 0.28947927736450585, 0.28963025924351893, 0.2897811769704695, 0.2897196261682243, 0.28987046081970697, 0.2898089171974522, 0.2897473997028232, 0.28968590831918506, 0.28962444302991724, 0.2895630038184132, 0.28950159066808057, 0.28944020356234096, 0.2893788424846301, 0.2893175074183976, 0.2892561983471074, 0.2891949152542373, 0.28913365812327896, 0.28907242693773827, 0.28901122168113486, 0.28895004233700256, 0.28888888888888886, 0.2888277613203555, 0.28876665961497777, 0.2887055837563452, 0.2886445337280609, 0.28858350951374206, 0.28852251109701965, 0.28846153846153844, 0.28861187407563915, 0.28876214617659485, 0.2889123548046463, 0.2890625, 0.28921258180282877, 0.2891515407344871, 0.28909052542730534, 0.2890295358649789, 0.28896857203121706, 0.2889076339097427, 0.2890575585072739, 0.28920741989881954, 0.2893572181243414, 0.2895069532237674, 0.28965662523699176, 0.2898062342038753, 0.2899557801642451, 0.29010526315789475, 0.2900442012207956, 0.289983164983165, 0.29013254786450665, 0.2902818679007152, 0.2904311251314406, 0.29037005887300255, 0.2903090182888375, 0.29024800336275747, 0.29018701407858793, 0.2901260504201681, 0.2900651123713506, 0.2900041999160017, 0.28994331303800125, 0.28988245172124266, 0.2900314795383001, 0.290180444817457, 0.29032934759807005, 0.2902684563758389, 0.29020759068987206, 0.290146750524109, 0.29008593586250264, 0.2900251466890193, 0.2899643829876388, 0.2899036447423544, 0.28984293193717275, 0.2897822445561139, 0.28972158258321123, 0.2896609460025115, 0.2896003347980749, 0.2895397489539749, 0.28947918845429826, 0.28941865328314514, 0.2893581434246289, 0.28929765886287623, 0.28923719958202715, 0.28917676556623484, 0.28911635679966574, 0.28905597326649957, 0.28920442681144287, 0.28914405010438415, 0.28908369860154454, 0.28902337228714525, 0.2889630711454204, 0.28911138923654567, 0.28925964546402505, 0.2891993327773144, 0.2891390452366062, 0.28907878282617755, 0.2890185455303188, 0.2891666666666667, 0.2891064361591335, 0.2892544773011245, 0.2891942535915053, 0.2893422148209825, 0.2892819979188345, 0.28922180607573866, 0.28916163927605576, 0.28910149750415975, 0.2890413807444375, 0.288981288981289, 0.288921222199127, 0.2888611803823774, 0.2888011635154789, 0.28874117158288326, 0.28868120456905505, 0.28862126245847175, 0.2887689433257214, 0.2887090078870901, 0.28864909732309607, 0.28858921161825724, 0.28873677660236463, 0.2888842803815844, 0.2888243831640058, 0.28876451077943616, 0.2889119170984456, 0.289059262329051, 0.28899937849596025, 0.2889395194697597, 0.2888796852350383, 0.2888198757763975, 0.2887600910784517, 0.2887003311258278, 0.2886405959031657, 0.2885808853951179, 0.28852119958634953, 0.28846153846153844, 0.28840190200537524, 0.288342290202563, 0.2882827030378177, 0.2882231404958678, 0.28816360256145424, 0.28810408921933084, 0.2880446004542639, 0.2879851362510322, 0.28792569659442724, 0.28786628146925297, 0.28780689086032596, 0.2877475247524752, 0.2876881831305424, 0.2876288659793814, 0.287569573283859, 0.2875103050288541, 0.2874510611992582, 0.2873918417799753, 0.28733264675592174, 0.28727347611202636, 0.28721432983323036, 0.28715520790448745, 0.28709611031076354, 0.28703703703703703, 0.2869779880682987, 0.28691896338955164, 0.28685996298581123, 0.28680098684210525, 0.2867420349434738, 0.28668310727496915, 0.28662420382165604, 0.28656532456861133, 0.28650646950092423, 0.2864476386036961, 0.28638883186204067, 0.28633004926108374, 0.2862712907859635, 0.28621255642183013, 0.28615384615384615, 0.2860951599671862, 0.2860364978470371, 0.2859778597785978, 0.28591924574707933, 0.2858606557377049, 0.2858020897357099, 0.28574354772634164, 0.2856850296948597, 0.2858312858312858, 0.2859774820880246, 0.286123618501842, 0.28626969510947414, 0.28621112929623566, 0.28615258744119454, 0.28609406952965233, 0.28603557554692294, 0.285977105478332, 0.2859186593092172, 0.28586023702492847, 0.28580183861082736, 0.28594771241830064, 0.28588931999183176, 0.28583095140873827, 0.2857726066544193, 0.2857142857142857, 0.28565598857376046, 0.28559771521827826, 0.28553946563328575, 0.28548123980424145, 0.2854230377166157, 0.28536485935589073, 0.28530670470756064, 0.2852485737571312, 0.2851904664901202, 0.28533604887983705, 0.28548157198126656, 0.28542345276872966, 0.28536535721555056, 0.28530728530728533, 0.2852492370295015, 0.28519121236777867, 0.28533658735001016, 0.28548190321268807, 0.2854238666395609, 0.28536585365853656, 0.2853078642552327, 0.28524989841527837, 0.2851919561243144, 0.2851340373679935, 0.2850761421319797, 0.2850182704019488, 0.2849604221635884, 0.2851055194805195, 0.2852505579224995, 0.28539553752535496, 0.2855404583248834, 0.2856853203568532, 0.28583012365700383, 0.2857721929468991, 0.2857142857142857, 0.28565640194489467, 0.2855985416244683, 0.28554070473876064, 0.28548289127353715, 0.2854251012145749, 0.28536733454766244, 0.28551193848644274, 0.28565648391664983, 0.2858009708737864, 0.2859453993933266, 0.28608976951071574, 0.2862340812613705, 0.2863783346806791, 0.2865225298040008, 0.2864646464646465, 0.28640678650777623, 0.28634894991922455, 0.28629113668483747, 0.286435203875656, 0.2865792129162462, 0.28652138821630346, 0.2864635868468832, 0.2866075030254135, 0.2867513611615245, 0.28689516129032255, 0.2868373311832292, 0.28698105602579604, 0.28692323191617974, 0.2870668815471394, 0.2872104733131923, 0.28715263793797824, 0.2870948258506141, 0.28703703703703703, 0.2869792714831958, 0.2869215291750503, 0.2868638100985717, 0.28680611423974256, 0.2867484415845566, 0.2866907921190189, 0.2866331658291457, 0.2865755627009646, 0.2865179827205144, 0.2864604258738449, 0.2864028921470175, 0.2863453815261044, 0.28628789399718935, 0.2862304295463669, 0.2861729881597431, 0.286115569823435, 0.28625877632898694, 0.2862013638186923, 0.28634449568879083, 0.2862870890136327, 0.2862297053517739, 0.28617234468937874, 0.2861150070126227, 0.2860576923076923, 0.2860004005607851, 0.28594313175810976, 0.28588588588588587, 0.28582866293034426, 0.28577146287772665, 0.2857142857142857, 0.28585717143428685, 0.286, 0.2861427714457109, 0.28628548580567775, 0.2862282630421747, 0.28617106314948043, 0.2863136863136863, 0.2862564922093488, 0.2861993209506691, 0.28634185303514376, 0.28648432820922337, 0.28662674650698605, 0.28656954699660747, 0.286512370311253, 0.2864552164372631, 0.2863980853609892, 0.28634097706879363, 0.2862838915470494, 0.28622682878214073, 0.28616978876046234, 0.28631201434548714, 0.2864541832669323, 0.2865962955586537, 0.2867383512544803, 0.2868803503882142, 0.2870222929936306, 0.2871641791044776, 0.2873060087544767, 0.28744778197732246, 0.2873906125696102, 0.2873334658977928, 0.28727634194831014, 0.2874180083482409, 0.28755961844197137, 0.2877011722630638, 0.28784266984505363, 0.287785501489573, 0.28792692613185067, 0.28806829461981337, 0.28801111552203257, 0.28815241119269697, 0.28829365079365077, 0.28823646101963896, 0.2883776279254264, 0.28851873884592505, 0.28865979381443296, 0.28860257680872153, 0.28874355925485534, 0.2888844858331682, 0.2890253565768621, 0.28916617151911267, 0.2893069306930693, 0.2894476341318551, 0.2895882818685669, 0.2895309716999802, 0.2894736842105263, 0.2894164193867458, 0.2893591772151899, 0.2893019576824204, 0.2892447607750099, 0.2891875864795414, 0.2891304347826087, 0.28907330567081607, 0.28901619913077836, 0.2889591151491211, 0.28890205371248023, 0.28884501480750246, 0.28878799842084485, 0.28873100453917505, 0.2886740331491713, 0.2886170842375222, 0.28856015779092703, 0.2885032537960954, 0.2884463722397476, 0.2883895131086142, 0.2883326763894363, 0.2882758620689655, 0.28821907013396375, 0.28835926728382905, 0.28849940921622685, 0.28844260681236467, 0.28858267716535435, 0.2887226923833891, 0.28886265249901616, 0.289002557544757, 0.28914240755310777, 0.2890855457227139, 0.28902870625245775, 0.2889718891291527, 0.28891509433962265, 0.2890548241304775, 0.28919449901768174, 0.2893341190335887, 0.2894736842105263, 0.28961319458079715, 0.28975265017667845, 0.289892051030422, 0.28983516483516486, 0.2897783009613498, 0.2897214593958415, 0.2896646401255148, 0.2896078431372549, 0.28955106841795725, 0.2894943159545276, 0.289437585733882, 0.2893808777429467, 0.28932419196865816, 0.28926752839796316, 0.28921088701781866, 0.2891542678151919, 0.2890976707770601, 0.28904109589041094, 0.2889845431422422, 0.2889280125195618, 0.2888715040093878, 0.28881501759874856, 0.2887585532746823, 0.2887021110242377, 0.28864569083447333, 0.288589292692458, 0.2885329165852706, 0.2884765625, 0.28842023042374537, 0.2883639203436158, 0.28830763224673045, 0.28825136612021857, 0.2881951219512195, 0.28813889972688256, 0.2880826994343671, 0.2880265210608424, 0.287970364593488, 0.2879142300194932, 0.2878581173260573, 0.2878020265003897, 0.2877459575297097, 0.2876899104012466, 0.28763388510223953, 0.2875778816199377, 0.28752189994160016, 0.28746594005449594, 0.2874100019459039, 0.2875486381322957, 0.2874927056992803, 0.28743679502139247, 0.2873809060859421, 0.28732503888024885, 0.28726919339164236, 0.28721336960746213, 0.28715756751505733, 0.2871017871017871, 0.2870460283550204, 0.28699029126213593, 0.28693457581052223, 0.28687888198757766, 0.2870172714923346, 0.2869615832363213, 0.28690591658583897, 0.28685027152831655, 0.28679464805119254, 0.2867390461419155, 0.2866834657879434, 0.2866279069767442, 0.2865723696957954, 0.28651685393258425, 0.2864613596746078, 0.2864058869093726, 0.28635043562439494, 0.2862950058072009, 0.2862395974453261, 0.28618421052631576, 0.2861288450377249, 0.286073500967118, 0.2860181783020692, 0.28596287703016243, 0.2859075971389909, 0.2860456126787785, 0.2861835748792271, 0.28612828438948995, 0.286073015259803, 0.2860177674777907, 0.2859625410310871, 0.2861003861003861, 0.28623817795792317, 0.28637591663450407, 0.2863206637082771, 0.2862654320987654, 0.2862102217936355, 0.28615503278056303, 0.28609986504723345, 0.28604471858134156, 0.28598959337059165, 0.2859344894026975, 0.2858794066653824, 0.28582434514637906, 0.2857693048334296, 0.2857142857142857, 0.28565928777670835, 0.28579676674364896, 0.2859341928035405, 0.286071565986918, 0.28620888632429314, 0.28634615384615386, 0.2864833685829648, 0.28662053056516723, 0.2867576398231789, 0.2868946963873943, 0.2868395773294909, 0.28678447944679214, 0.2867294027270981, 0.2866743471582181, 0.2866193127279708, 0.28675623800383876, 0.2868931107273076, 0.2870299309286262, 0.28716669863802036, 0.28730341388569236, 0.28744007670182165, 0.2875766871165644, 0.2875215641173088, 0.2874664622460713, 0.28741138149070705, 0.28735632183908044, 0.2873012832790653, 0.2872462657985446, 0.2871912693854107, 0.2871362940275651, 0.28708133971291866, 0.2870264064293915, 0.28697149416491297, 0.2869166029074216, 0.2868617326448652, 0.28680688336520077, 0.28675205505639456, 0.286697247706422, 0.2866424613032677, 0.2865876958349255, 0.28653295128939826, 0.28647822765469827, 0.28642352491884665, 0.286368843069874, 0.2863141820958198, 0.2862595419847328, 0.28620492272467085, 0.28615032430370085, 0.2860957467098989, 0.28604118993135014, 0.2859866539561487, 0.28593213877239804, 0.2858776443682104, 0.2860137195121951, 0.2859592303295866, 0.2859047619047619, 0.28585031422586177, 0.2857958872810358, 0.28574148105844277, 0.2856870955462505, 0.28563273073263556, 0.2857686453576865, 0.2859045082746814, 0.28604031951312286, 0.28598592888381824, 0.2859315589353612, 0.2858772096559589, 0.2860129228430255, 0.2861485844575337, 0.2862841945288754, 0.28641975308641976, 0.2865552601595139, 0.28669071577748245, 0.2868261199696279, 0.28677168343139114, 0.2867172675521822, 0.28666287232024285, 0.28660849772382396, 0.28655414375118526, 0.28649981039059536, 0.2864454976303318, 0.2863912054586808, 0.2863369338639378, 0.286282682834407, 0.2862284523584012, 0.28617424242424244, 0.28612005302026133, 0.28606588413479744, 0.28601173575619915, 0.2859576078728236, 0.2859035004730369, 0.28584941354521376, 0.28598449025912615, 0.2861195158850227, 0.2862544904518813, 0.28638941398865786, 0.2863352863352863, 0.286281179138322, 0.2862270923861704, 0.28617302606724593, 0.2863078375826251, 0.28644259818731116, 0.2863885218047952, 0.28633446583616456, 0.2862804302698622, 0.2862264150943396, 0.28617242029805695, 0.2861184458694832, 0.286064491797096, 0.2861990950226244, 0.2863336475023563, 0.2862796833773087, 0.28622573958922176, 0.28617181612660136, 0.28611791297796196, 0.28606403013182674, 0.28601016757672754, 0.2859563253012048, 0.2859025032938076, 0.2858487015430937, 0.28579492003762935, 0.2857411587659895, 0.2856874177167576, 0.28563369687852574, 0.28576800150404214, 0.28590225563909777, 0.2860364593121594, 0.2861706125516723, 0.2861168513995867, 0.28606311044327576, 0.2860093896713615, 0.28614344723995494, 0.286089731556223, 0.28603603603603606, 0.2859823606680428, 0.28592870544090054, 0.2858750703432752, 0.28582145536384096, 0.28595537221076317, 0.28608923884514437, 0.2860356138706654, 0.28598200899550225, 0.28592842420835674, 0.2860621955788685, 0.286008615845664, 0.2859550561797753, 0.28590151656993074, 0.28584799700486707, 0.2857944974733296, 0.28574101796407186, 0.2856875584658559, 0.2856341189674523, 0.2855806994576398, 0.2855272999252057, 0.2854739203589456, 0.28542056074766353, 0.28536722108017193, 0.2853139013452915, 0.2852606015318513, 0.2853940978707508, 0.28552754435107375, 0.28547423450336074, 0.28542094455852157, 0.28536767450541245, 0.28531442433289794, 0.28526119402985073, 0.28520798358515204, 0.28515479298769114, 0.2851016222263658, 0.28504847129008204, 0.28499534016775396, 0.2849422288483041, 0.2848891373206633, 0.2848360655737705, 0.28478301359657293, 0.2847299813780261, 0.2848631539750512, 0.2849962769918094, 0.28512935045598364, 0.28526237439523633, 0.2853953488372093, 0.28552827380952384, 0.28566114933978054, 0.2857939754555597, 0.2859267521844209, 0.2860594795539034, 0.2861921575915257, 0.2863247863247863, 0.28645736578116293, 0.2865898959881129, 0.28672237697307335, 0.2868548087634608, 0.2869871913866716, 0.2871195248700817, 0.2872518092410466, 0.2873840445269017, 0.2873307364125394, 0.28727744807121663, 0.28722417949193396, 0.2871709306637004, 0.2871177015755329, 0.28706449221645663, 0.2870113025755049, 0.28695813264171915, 0.2870902018892387, 0.2872222222222222, 0.28735419366783926, 0.28748611625323955, 0.2876179900055525, 0.28756476683937826, 0.28769657724329323, 0.2878283388827229, 0.28777510634362863, 0.28772189349112426, 0.287668700314291, 0.2878003696857671, 0.2879319903899464, 0.2878787878787879, 0.28801034546462223, 0.28814185445142226, 0.28827331486611263, 0.28840472673559825, 0.2885360900867639, 0.2884828349944629, 0.2886141354493449, 0.2887453874538745, 0.2888765910348644, 0.28900774621910735, 0.2891388530333764, 0.28926991150442477, 0.2894009216589862, 0.2893475856984888, 0.2892942693937719, 0.289240972733972, 0.28918769570823355, 0.289134438305709, 0.28908120051555886, 0.28902798232695137, 0.28897478372906316, 0.2889216047110784, 0.2888684452621895, 0.2888153053715968, 0.2889461099871253, 0.28907686649503495, 0.2892075749218606, 0.2893382352941177, 0.2894688476383018, 0.2895994119808894, 0.28972992834833733, 0.2896767083027186, 0.2898071625344353, 0.2897539478516342, 0.2897007527079126, 0.289647577092511, 0.2895944209946779, 0.2895412844036697, 0.2894881673087507, 0.2896184886280264, 0.28974876214927564, 0.28987898789878985, 0.2900091659028414, 0.2901392961876833, 0.2900861279091076, 0.29021619640894103, 0.2903462172559077, 0.2904761904761905, 0.2906061160959531, 0.2905529110216038, 0.29068277503203366, 0.2908125915080527, 0.2909423604757548, 0.29107208196121476, 0.29120175599048836, 0.2913313825896123, 0.2914609617846041, 0.2915904936014625, 0.2915371961250228, 0.291483918128655, 0.29143065960168096, 0.29137742053343074, 0.2915068493150685, 0.29163623082542, 0.29158298338506483, 0.29152975538517706, 0.29147654681511226, 0.29142335766423355, 0.2915526363802226, 0.2916818679314119, 0.2918110523436075, 0.29194018964259666, 0.29206927985414766, 0.2921983230040102, 0.29214507016584657, 0.2922740524781341, 0.29240298779376933, 0.2925318761384335, 0.2926607175377891, 0.2926074289876184, 0.2927362097214637, 0.29286494357480886, 0.2929936305732484, 0.2931222707423581, 0.29325086410769513, 0.2933794106947981, 0.2935079105291871, 0.29345454545454547, 0.2935829849118342, 0.2937113776808433, 0.2938397237870253, 0.2937863372093023, 0.29373297002724796, 0.2936796222302942, 0.29362629380788086, 0.2935729847494553, 0.2935196950444727, 0.29346642468239564, 0.2934131736526946, 0.2933599419448476, 0.2933067295483403, 0.29325353645266594, 0.29320036264732546, 0.29314720812182743, 0.2932753307957223, 0.2932221819499819, 0.2933502446095307, 0.29347826086956524, 0.29360623075529796, 0.29373415429192323, 0.29368097048705416, 0.2936278059377263, 0.29357466063348414, 0.29352153456387986, 0.2934684277184729, 0.2934153400868307, 0.29336227165852774, 0.2933092224231465, 0.2932561923702766, 0.2932031814895155, 0.2931501897704681, 0.2930972172027467, 0.2930442637759711, 0.2929913294797688, 0.2929384143037746, 0.2928855182376309, 0.29283264127098757, 0.2927797833935018, 0.2927269445948385, 0.2926741248646698, 0.29262132419267545, 0.2925685425685426, 0.29251577998196576, 0.2924630364226469, 0.29241031188029565, 0.2923576063446287, 0.2923049198053703, 0.29225225225225226, 0.2921996036750135, 0.29214697406340057, 0.2922744462452728, 0.2924018725243068, 0.2925292529252925, 0.29265658747300216, 0.29278387619219004, 0.29291111910759265, 0.2930383162439288, 0.2929856115107914, 0.2931127495054846, 0.29323984178353113, 0.29336688836958474, 0.293314162473041, 0.29326145552560645, 0.2932087675170679, 0.29315609843721935, 0.2932830459770115, 0.2932303824744119, 0.2933572710951526, 0.2934841141626279, 0.29361091170136394, 0.29373766373586935, 0.2936849659131683, 0.2936322869955157, 0.2937589670014347, 0.2938856015779093, 0.2940121907493725, 0.2939594909481986, 0.2939068100358423, 0.29403332736068805, 0.29415979935506986, 0.29428622604334587, 0.29441260744985676, 0.2945389435989257, 0.2946652345148586, 0.2947914802219438, 0.2949176807444524, 0.29486491322240116, 0.29481216457960646, 0.29475943480593814, 0.2948855507868383, 0.29501162166994455, 0.29513764747944227, 0.29526362823949953, 0.29538956397426736, 0.2955154547078792, 0.2956413004644516, 0.2955884979460618, 0.2955357142857143, 0.29548294947330833, 0.29543020349875043, 0.2953774763519543, 0.29532476802284086, 0.2952720785013381, 0.29521940777738137, 0.2953451043338684, 0.29547075606276746, 0.2955963629880549, 0.29572192513368983, 0.29584744252361433, 0.2959729151817534, 0.29609834313201494, 0.29622372639829, 0.29617097061442565, 0.29611823361823364, 0.29606551539967957, 0.2960128159487362, 0.2959601352553835, 0.296085409252669, 0.29603273438889877, 0.295980078263963, 0.29592744086786416, 0.2958748221906117, 0.296, 0.29612513330963386, 0.296250222143238, 0.2961975835110163, 0.2961449635814532, 0.2960923623445826, 0.29603977979044577, 0.2959872159090909, 0.2959346706905734, 0.2958821441249556, 0.295829636202307, 0.29595457771469125, 0.29590207557211284, 0.2958495920539198, 0.29579712715020395, 0.29592198581560286, 0.2958695266796667, 0.2958170861396668, 0.29576466418571684, 0.2957122608079376, 0.29565987599645704, 0.29560750974140987, 0.29555516203293786, 0.2955028328611898, 0.29545052221632145, 0.2953982300884956, 0.2953459564678818, 0.29529370134465677, 0.2952414647090041, 0.2951892465511143, 0.2951370468611848, 0.2950848656294201, 0.29503270284603145, 0.295157299399081, 0.29510514225128115, 0.2950530035335689, 0.29517753047164813, 0.2953020134228188, 0.2954264524103832, 0.2955508474576271, 0.29567519858781993, 0.2957995058242146, 0.2957473089818246, 0.2956951305575159, 0.2956429705415417, 0.2955908289241623, 0.29571504143889965, 0.2958392101551481, 0.2959633350960691, 0.2960874162848079, 0.2960352422907489, 0.2959830866807611, 0.2959309494451295, 0.2960549489256781, 0.2960028173974291, 0.29595070422535213, 0.29589860939975354, 0.29584653291094687, 0.29579447474925213, 0.29574243490499647, 0.2958663148636763, 0.29581428068941257, 0.2957622648144892, 0.2957102672292546, 0.29565828792406396, 0.29560632688927946, 0.29555438411526974, 0.2955024595924104, 0.2954505533110838, 0.29539866526167896, 0.29534679543459175, 0.29547050561797755, 0.29559417237142355, 0.2957177957177957, 0.29584137567994384, 0.29578947368421055, 0.2959129977196983, 0.2958611013679411, 0.2958092232158513, 0.2959326788218794, 0.2960560911481157, 0.2961794602173151, 0.296127562642369, 0.29607568325157674, 0.29602382203538274, 0.29597197898423816, 0.29592015408860095, 0.2958683473389356, 0.2958165587257133, 0.295764788239412, 0.29571303587051617, 0.29566130160951715, 0.2957845023613783, 0.29590766002098634, 0.29603077461094596, 0.29597902097902096, 0.29592728543960845, 0.2958755679832227, 0.2958238686003844, 0.29577218728162125, 0.2958951965065502, 0.29601816276632903, 0.2961410860834643, 0.29608938547486036, 0.29603770291499387, 0.29598603839441534, 0.2959343919036817, 0.2958827634333566, 0.29583115297401014, 0.29577956051621906, 0.2957279860505667, 0.29567642956764295, 0.2956248910580443, 0.29557337051237365, 0.29552186792124063, 0.2954703832752613, 0.29541891656505836, 0.2953674677812609, 0.29549016193627026, 0.2956128133704735, 0.2957354221061793, 0.2958579881656805, 0.29598051157125455, 0.2961029923451635, 0.29605148721516783, 0.296, 0.29594853069031474, 0.2960709318497914, 0.2961932904571528, 0.29631560653458466, 0.29643788010425715, 0.2965601111883252, 0.29668229980892824, 0.29680444598819034, 0.29675290849105745, 0.29670138888888886, 0.2966498871723659, 0.29659840333217635, 0.2965469373590144, 0.2964954892435808, 0.2964440589765828, 0.296392646548734, 0.2963412519507543, 0.2962898751733703, 0.29623851620731495, 0.29618717504332753, 0.2961358516721539, 0.2960845460845461, 0.29603325827126276, 0.2961551783858677, 0.29627705627705625, 0.296398891966759, 0.29634758525186083, 0.2962962962962963, 0.29624502509084616, 0.29619377162629756, 0.296142535893444, 0.29609131788308546, 0.2962130382154591, 0.2963347164591978, 0.2964563526361279, 0.2964051157967508, 0.29635389666493867, 0.2963026952315135, 0.2962515114873035, 0.29620034542314333, 0.29632187877741323, 0.29644337016574585, 0.29656481960987396, 0.2966862271315154, 0.29680759275237273, 0.29675638371290547, 0.2968776953596688, 0.2968264918937565, 0.29677530608725644, 0.2968965517241379, 0.2970177555593863, 0.29713891761461564, 0.2970877132517663, 0.2970365265334252, 0.2969853574504737, 0.2969342059937995, 0.29688307215429655, 0.296831955922865, 0.2967808572904114, 0.29690189328743544, 0.2968508002065049, 0.2967997247075017, 0.296920694993979, 0.29704162366701065, 0.2971625107480653, 0.297111416781293, 0.29706034038164003, 0.29700928154004813, 0.2969582402474652, 0.29690721649484536, 0.29685621027314896, 0.2968052215733425, 0.29675425038639874, 0.2967032967032967, 0.2966523605150215, 0.29660144181256437, 0.29655054058692293, 0.29667124227865477, 0.2967919025561846, 0.2969125214408233, 0.2968616017835706, 0.29698216735253774, 0.2971026915823761, 0.2972231744943435, 0.29734361610968296, 0.297464016449623, 0.29758437553537775, 0.29770469338814665, 0.29782497002911457, 0.29777397260273974, 0.29772299263824686, 0.29767203012666893, 0.297621085059045, 0.29774127310061604, 0.29769033361847735, 0.2976394115634622, 0.297588506926629, 0.2975376196990424, 0.2974867498717729, 0.29743589743589743, 0.29738506238249873, 0.29733424470266573, 0.2972834443874936, 0.2974034847967202, 0.2975234842015371, 0.29764344262295084, 0.2975926242103466, 0.297541823147832, 0.29766171701655575, 0.2977815699658703, 0.2977307626684866, 0.29767997270556124, 0.29762920006822446, 0.2975784447476125, 0.29752770673486784, 0.2976474599386294, 0.2975967274586671, 0.29754601226993865, 0.2974953143636054, 0.29744463373083474, 0.29756429909725773, 0.29768392370572205, 0.2978035075770475, 0.2979230507320395, 0.2978723404255319, 0.29799183117767186, 0.2979411264250468, 0.2978904389248044, 0.29800986562340537, 0.2981292517006803, 0.2982485971773508, 0.29836790207412445, 0.2984871664116947, 0.298606390210741, 0.2985556499575191, 0.2985049269452939, 0.2984542211652794, 0.2984035326086957, 0.2983528612667686, 0.29830220713073, 0.298251570191818, 0.2982009504412763, 0.29815034787035466, 0.2980997624703088, 0.29804919423240034, 0.29799864314789687, 0.2979481092080719, 0.2978975924042048, 0.2978470927275809, 0.29779661016949155, 0.2977461447212337, 0.2976956963741105, 0.2976452651194308, 0.29759485094850946, 0.29754445385266726, 0.2974940738232306, 0.2974437108515321, 0.2975626269465132, 0.2975122694195295, 0.29746192893401013, 0.297411605481306, 0.29736129905277403, 0.29731100963977675, 0.2972607372336828, 0.29721048182586646, 0.2971602434077079, 0.2971100219705932, 0.29705981750591415, 0.2970096300050684, 0.29695945945945945, 0.2969093058604965, 0.2968591691995947, 0.29680904946817493, 0.2967589466576637, 0.2968776371308017, 0.29699628754640567, 0.29711489792475115, 0.29723346828609987, 0.2971833361443751, 0.29713322091062394, 0.29708312257629405, 0.29703304113283885, 0.2969829765717175, 0.296932928884395, 0.296882898062342, 0.29700134770889486, 0.29711975745325925, 0.2970697204445941, 0.29701970028624347, 0.296969696969697, 0.2969197104864501, 0.29686974082800405, 0.2968197879858657, 0.29676985195154776, 0.29671993271656855, 0.2966700302724521, 0.2966201446107281, 0.2965702757229321, 0.29652042360060515, 0.2964705882352941, 0.2964207696185515, 0.2963709677419355, 0.2963211825970099, 0.2962714141753443, 0.29622166246851384, 0.2961719274680994, 0.29612220916568743, 0.2962403491104397, 0.2963584494042625, 0.2964765100671141, 0.2965945311189398, 0.29671251257967124, 0.2968304544692269, 0.29694835680751175, 0.2970662196144174, 0.2971840429098223, 0.2973018267135914, 0.2974195710455764, 0.2975372759256157, 0.2974874371859296, 0.29743761513984257, 0.2973878097789685, 0.2973380210949272, 0.2972882490793438, 0.29740585774058576, 0.2975234270414993, 0.2976409570018404, 0.2975911676145868, 0.2975413948820873, 0.2974916387959866, 0.29744189934793513, 0.29739217652958877, 0.2973424703326091, 0.2972927807486631, 0.29724310776942353, 0.29719345138656866, 0.2971438115917822, 0.2970941883767535, 0.2970445817331775, 0.2969949916527546, 0.2969454181271908, 0.2968958611481976, 0.29684632070749206, 0.29679679679679677, 0.29674728940783984, 0.2968645763842562, 0.29698182424545605, 0.29709903301100365, 0.29721620270045007, 0.29733333333333334, 0.29728378603566075, 0.2972342552482506, 0.2971847409628519, 0.2971352431712192, 0.29708576186511243, 0.2972027972027972, 0.2973197935741635, 0.29727030625832224, 0.2972208354135463, 0.297171381031614, 0.2971219431043088, 0.2972388556220892, 0.2973557292532846, 0.297472564017293, 0.2975893599334996, 0.29753989361702127, 0.2974904437427289, 0.29744101030242603, 0.2973915932879216, 0.2973421926910299, 0.2974588938714499, 0.29757555629359017, 0.2975261497592562, 0.29747675962815406, 0.2974273858921162, 0.2973780285429804, 0.29732868757259, 0.2972793629727936, 0.29723005473544534, 0.29718076285240463, 0.2971314873155364, 0.29708222811671087, 0.29703298524780375, 0.29698375870069604, 0.29693454846727424, 0.29705102717031145, 0.29716746728507537, 0.29728386883073865, 0.29740023182646136, 0.29751655629139073, 0.29763284224466147, 0.29774908970539554, 0.29769981797120637, 0.29765056254136335, 0.297601323407775, 0.29771749917300694, 0.2976682652554986, 0.2976190476190476, 0.2975698462555794, 0.2975206611570248, 0.2974714923153198, 0.29742233972240584, 0.29737320337022966, 0.29732408325074333, 0.2972749793559042, 0.2973910171730515, 0.2973419184414727, 0.2972928359194454, 0.2972437695989437, 0.2973597359735974, 0.2973106748061376, 0.2974265918838667, 0.297542470724064, 0.29765831134564646, 0.29777411376751856, 0.29772502472799206, 0.29767595187077633, 0.29779169413315754, 0.297907398253419, 0.29802306425041186, 0.2981386921429748, 0.29825428194993414, 0.2983698336901037, 0.29848534738228516, 0.29860082304526747, 0.29871626069782753, 0.29866710547967745, 0.2987824942415268, 0.2988978450403027, 0.2988486842105263, 0.29879953954941624, 0.298750411048997, 0.2988656912707546, 0.2989809335963182, 0.2990961380443714, 0.2990469930989155, 0.29899786430096925, 0.29894875164257556, 0.29889965511578254, 0.2988505747126437, 0.2988015104252175, 0.29875246224556795, 0.298703430165764, 0.29865441417787986, 0.29860541427399506, 0.29855643044619423, 0.29850746268656714, 0.29845851098720894, 0.2984095753402197, 0.2983606557377049, 0.29831175217177514, 0.2984267453294002, 0.29854170080288384, 0.29865661861074705, 0.2986076986076986, 0.29855879462823454, 0.2985099066644834, 0.29846103470857893, 0.29841217875266, 0.2983633387888707, 0.29831451480936017, 0.29842931937172773, 0.2985440863733028, 0.29849525678770034, 0.29844644317252655, 0.2983976455199477, 0.29834886382213505, 0.2983000980712651, 0.29825134825951954, 0.29820261437908496, 0.2983172684201928, 0.29843188500490037, 0.2985464641515597, 0.2984977139124755, 0.29844897959183675, 0.29840026118184787, 0.29851477068712257, 0.29846605744125326, 0.2984173600913689, 0.2983686786296901, 0.29832001304844236, 0.2982713633398565, 0.2982227294961683, 0.29817411150961853, 0.29812550937245313, 0.2980769230769231, 0.2980283526152843, 0.29797979797979796, 0.2979312591627301, 0.2978827361563518, 0.29783422895293926, 0.29778573754477367, 0.2977372619241413, 0.2976888020833333, 0.29764035801464606, 0.29759192971038073, 0.29754351716284366, 0.2974951203643461, 0.29744673930720444, 0.29739837398373986, 0.29735002438627867, 0.29730169050715216, 0.2972533723386966, 0.2972050698732532, 0.2971567831031682, 0.29710851202079275, 0.297060256618483, 0.2970120168886002, 0.2969637928235103, 0.2969155844155844, 0.2968673916571985, 0.2968192145407335, 0.2967710530585754, 0.29672290720311484, 0.29667477696674777, 0.2966266623418748, 0.2965785633209016, 0.29653047989623865, 0.2966445128870157, 0.2965964343598055, 0.2965483714146816, 0.2966623460790668, 0.29661428802851125, 0.2965662455458374, 0.29668016194331986, 0.2967940414507772, 0.29690788408612595, 0.29702168986727095, 0.2971354588121055, 0.2970873786407767, 0.2970393140268565, 0.2969912649627952, 0.29710496522723595, 0.29721862871927557, 0.29717057396928054, 0.29728419010669255, 0.29739776951672864, 0.29751131221719457, 0.29746324123444823, 0.29741518578352183, 0.29736714585688906, 0.29731912144702843, 0.29727111254642336, 0.29722311914756216, 0.29717514124293787, 0.2972885732730794, 0.2974019686945296, 0.2975153275250081, 0.29746733344087756, 0.2974193548387097, 0.29737139171101434, 0.29732344405030636, 0.2972755118491053, 0.2972275950999355, 0.2971796937953263, 0.2971318079278118, 0.2970839374899307, 0.2970360824742268, 0.2969882428732485, 0.2969404186795491, 0.29689260988568666, 0.29684481648422406, 0.296797038467729, 0.29674927582877375, 0.29670152855993565, 0.29665379665379665, 0.29660608010294354, 0.29655837889996783, 0.29651069303746586, 0.2964630225080386, 0.2964153673042919, 0.2963677274188364, 0.29632010284428734, 0.2962724935732648, 0.2962248995983936, 0.29617732091230325, 0.29612975750762804, 0.2960822093770071, 0.29603467651308396, 0.29598715890850724, 0.29593965655593, 0.2958921694480103, 0.29584469757741055, 0.2957972409367982, 0.2957497995188452, 0.29570237331622834, 0.29565496232162897, 0.29560756652773323, 0.29556018592723193, 0.2955128205128205, 0.29546547027719916, 0.29541813521307275, 0.29537081531315074, 0.29532351057014733, 0.2952762209767814, 0.29522894652577647, 0.2951816872098607, 0.29513444302176695, 0.29508721395423265, 0.29504, 0.2949928011518157, 0.29510556621880996, 0.29521829521829523, 0.29533098816757275, 0.29528377298161473, 0.2952365728900256, 0.29518938788556814, 0.2953020134228188, 0.29541460297172073, 0.2953674121405751, 0.2953202363839642, 0.29543276908335997, 0.295385597956251, 0.29549808429118773, 0.29561053471668, 0.2957229492499202, 0.29567576192755707, 0.2956285896617741, 0.2955814324453661, 0.29553429027113237, 0.2956466273321639, 0.29575892857142855, 0.2958711940060577, 0.2959834236531718, 0.29609561752988045, 0.2962077756532823, 0.2963198980404652, 0.2964319847085059, 0.2963847746456442, 0.2963375796178344, 0.2962903996178952, 0.29640241961158864, 0.296514403947159, 0.29646721833227246, 0.2964200477326969, 0.29637289214126633, 0.29632575155081914, 0.29627862595419846, 0.29623151534425185, 0.29618441971383147, 0.296137339055794, 0.29609027336300064, 0.29604322262831717, 0.29599618684461393, 0.2959491660047657, 0.2959021601016518, 0.2958551691281563, 0.2958081930771674, 0.29576123194157805, 0.2958730158730159, 0.2958260593556578, 0.29593779752459537, 0.29604950023798193, 0.29616116751269034, 0.2962727993655829, 0.29638439581351095, 0.29649595687331537, 0.29644895370957514, 0.29640196544618796, 0.29635499207606975, 0.29646648708604023, 0.29641951837769326, 0.29637256454934263, 0.2963256255939183, 0.2962787015043547, 0.29623179227359087, 0.2961848978945702, 0.29613801836024056, 0.2960911536635544, 0.2960443037974684, 0.2959974687549438, 0.29610882632078456, 0.29606199588802784, 0.29601518026565465, 0.29596837944664034, 0.29592159342396457, 0.2958748221906117, 0.29582806573957016, 0.2957813240638332, 0.2957345971563981, 0.29568788501026694, 0.295641187618446, 0.2957524080214748, 0.2958635933059678, 0.2959747434885556, 0.29608585858585856, 0.29619693861448637, 0.29630798359103816, 0.2964189935321029, 0.29652996845425866, 0.2966409083740735, 0.2965941343424787, 0.29654737505912027, 0.29650063051702397, 0.29645390070921984, 0.2964071856287425, 0.2965180400189066, 0.2966288594833018, 0.2967396440384312, 0.29669291338582676, 0.2966461974492206, 0.2965994962216625, 0.2965528096962065, 0.29650613786591123, 0.2964594807238395, 0.29641283826305853, 0.2965235173824131, 0.2966341616860648, 0.29674477119043874, 0.2966981132075472, 0.29680867788083637, 0.29676202452059103, 0.29671538582429674, 0.29666876178504087, 0.29662215239591516, 0.2967326421614829, 0.2968430972200408, 0.2969535175879397, 0.29690689276181503, 0.2968602825745683, 0.2969706482498823, 0.2970809792843691, 0.29719127569433545, 0.2971446501411986, 0.2970980392156863, 0.29705144291091595, 0.2970048612200094, 0.2969582941360928, 0.2970685060354287, 0.29717868338557996, 0.2972888262027895, 0.2973989345032905, 0.2973523421588595, 0.2973057644110276, 0.2972592012529366, 0.29721265267773256, 0.29716611867856585, 0.2971195992485911, 0.2970730943809673, 0.2970266040688576, 0.2969801283054295, 0.2969336670838548, 0.2968872203973096, 0.29684078823897403, 0.29679437060203284, 0.2967479674796748, 0.296701578865093, 0.2966552047514848, 0.2967651195499297, 0.296875, 0.2969848461177941, 0.29693845673227115, 0.29689208183663907, 0.29700187382885695, 0.297111631537861, 0.29706525132688105, 0.2970188855938817, 0.29712858926342073, 0.29723825869870496, 0.2973478939157566, 0.29730151302448915, 0.29741110417966315, 0.2975206611570248, 0.29763018397256, 0.2975837879968823, 0.2975374064837905, 0.2976468754869877, 0.2977563103770645, 0.2978657111699642, 0.2979750778816199, 0.29808441052795515, 0.2981937091248832, 0.2981472832009964, 0.29810087173100874, 0.2980544747081712, 0.2980080921257392, 0.2979617239769721, 0.2979153702551338, 0.297869030953492, 0.2978227060653188, 0.2979318923962059, 0.2980410447761194, 0.2979947147520597, 0.2979483991296239, 0.29790209790209793, 0.29801118707271596, 0.29796489047693026, 0.2980739360049705, 0.29818294766268055, 0.2981366459627329, 0.2982456140350877, 0.29835454827693264, 0.29846344870401986, 0.2985723153320919, 0.2986811481768813, 0.29878994725411107, 0.29889871257949435, 0.2990074441687345, 0.2991161420375252, 0.2990697674418605, 0.29902340722368626, 0.2989770613763174, 0.298930729893073, 0.2988844127672761, 0.2988381099922541, 0.29879182156133827, 0.29874554746786436, 0.2986992877051719, 0.2986530422666047, 0.29860681114551085, 0.29856059433524224, 0.29851439182915507, 0.2984682036206096, 0.29842202970297027, 0.2983758700696056, 0.298329724713888, 0.2982835936291944, 0.2982374768089054, 0.29819137424640596, 0.298145285935085, 0.29809921186833566, 0.298053152039555, 0.2980071064421443, 0.2979610750695088, 0.2979150579150579, 0.29786905497220506, 0.2978230662343678, 0.2977770916949676, 0.2977311313474302, 0.29768518518518516, 0.2976392532016664, 0.29759333539031163, 0.2975474317445627, 0.2975015422578655, 0.29745566692367, 0.29740980573543013, 0.297363958686604, 0.29731812577065353, 0.29727230698104484, 0.2972265023112481, 0.2971807117547373, 0.29713493530499074, 0.29708917295549053, 0.29704342469972284, 0.29715165511932257, 0.2972598522167488, 0.29736801600738805, 0.2974761465066174, 0.2975842437298046, 0.29753846153846153, 0.29749269343177975, 0.29744693940326056, 0.29740119944640936, 0.29735547355473557, 0.2973097617217525, 0.29726406394097754, 0.29721838020593205, 0.2971727105101414, 0.29712705484713475, 0.29708141321044546, 0.2970357855936108, 0.29699017199017197, 0.29694457239367417, 0.2968989867976666, 0.29685341519570224, 0.29680785758133826, 0.2967623139481356, 0.2967167842896594, 0.29667126859947845, 0.29662576687116565, 0.2965802790982978, 0.2965348052744557, 0.29648934539322397, 0.2964438994481913, 0.2963984674329502, 0.29635304934109713, 0.2963076451662326, 0.2962622549019608, 0.29621687854189005, 0.2961715160796325, 0.29612616750880416, 0.2960808328230251, 0.29603551201591916, 0.2959902050811142, 0.29594491201224177, 0.2958996328029376, 0.29585436744684107, 0.29580911593759557, 0.2959168068512005, 0.2960244648318043, 0.29613208989451156, 0.2962396820544176, 0.2963472413266086, 0.29645476772616136, 0.29640947288006114, 0.2963641918728995, 0.2963189246983351, 0.2962736713500305, 0.29622843182165215, 0.2961832061068702, 0.2961379941993589, 0.2960927960927961, 0.29604761178086375, 0.2960024412572475, 0.2961098398169336, 0.29621720561317877, 0.29617202989171876, 0.296126867947545, 0.2960817197743558, 0.29603658536585364, 0.29599146471574456, 0.2959463578177385, 0.2959012646655493, 0.2958561852528946, 0.2958111195734958, 0.29576606762107827, 0.2957210293893711, 0.2956760048721072, 0.2956309940630233, 0.29558599695585996, 0.2955410135443616, 0.29549604382227634, 0.29545108778335616, 0.29540614542135685, 0.295361216730038, 0.29531630170316303, 0.295271400334499, 0.29522651261781696, 0.2951816385468916, 0.29513677811550154, 0.29509193131742895, 0.29504709814646, 0.2950022785963846, 0.29495747266099637, 0.2949126803340926, 0.2948679016094746, 0.2948231364809473, 0.2947783849423194, 0.29473364698740323, 0.29468892261001517, 0.2946442118039751, 0.2945995145631068, 0.2945548308812377, 0.294510160752199, 0.29446550416982564, 0.29442086112795635, 0.2943762316204335, 0.2943316156411034, 0.2942870131838157, 0.29424242424242425, 0.29419784881078626, 0.2941532868827628, 0.294260184764501, 0.29421562689279224, 0.29417108251324753, 0.2941265516197396, 0.294082034206145, 0.2940375302663438, 0.29399303979422, 0.2939485627836611, 0.2939040992285585, 0.29385964912280704, 0.29381521246030545, 0.29377078923495614, 0.29372637944066515, 0.2936819830713422, 0.29363760012090073, 0.29359323058325776, 0.2935488744523342, 0.2935045317220544, 0.29346020238634646, 0.29341588643914224, 0.2933715838743772, 0.29332729468599034, 0.2932830188679245, 0.29323875641412617, 0.29319450731854535, 0.2931502715751358, 0.2931060491778549, 0.29306184012066366, 0.29301764439752676, 0.29297346200241253, 0.29292929292929293, 0.2928851371721435, 0.29284099472494346, 0.2927968655816757, 0.29275274973632665, 0.2927086471828864, 0.2926645579153487, 0.2927710843373494, 0.2927269989459419, 0.2928334838903945, 0.2929399367755532, 0.29304635761589404, 0.2931527464258841, 0.2931086367739994, 0.2930645403941628, 0.29302045728038506, 0.2931267859828546, 0.2932330827067669, 0.2933393474665464, 0.29344558027660855, 0.29355178115136027, 0.2936579501051999, 0.2937640871525169, 0.2938701923076923, 0.2939762655850984, 0.29393211174526884, 0.29388797116684184, 0.2938438438438438, 0.2937997297703048, 0.2937556289402582, 0.29371154134774125, 0.29366746698679475, 0.29362340585146285, 0.2935793579357936, 0.2935353232338383, 0.29349130173965204, 0.2934472934472934, 0.29340329835082457, 0.2933593164443112, 0.29331534772182255, 0.2932713921774314, 0.29322744980521426, 0.29333333333333333, 0.29343918514080286, 0.2935450052418751, 0.29365079365079366, 0.29375655038179366, 0.2937125748502994, 0.29366861248316123, 0.29362466327446873, 0.2937303606164896, 0.29368641532016754, 0.293642483171279, 0.2935985641639246, 0.2935546582922088, 0.29351076555023925, 0.2936163851098819, 0.2937219730941704, 0.293827529517262, 0.2939330543933054, 0.29388913790527416, 0.29384523453839256, 0.2938013442867812, 0.2937574671445639, 0.2938629236971778, 0.2939683487608241, 0.29407374234960443, 0.29402985074626864, 0.2939859722429488, 0.29394210683378097, 0.2938982545129047, 0.293854415274463, 0.29381058911260255, 0.29376677602147333, 0.29372297599522884, 0.29367918902802626, 0.2936354151140259, 0.293591654247392, 0.2935479064222918, 0.2935041716328963, 0.29346044987338, 0.29341674113792077, 0.2933730454206999, 0.2933293627159023, 0.29328569301771623, 0.2932420363203334, 0.2931983926179491, 0.2931547619047619, 0.29311114417497397, 0.29306753942279085, 0.2930239476424215, 0.29298036882807854, 0.2929368029739777, 0.29289325007433836, 0.2928497101233834, 0.2928061831153389, 0.29276266904443454, 0.29271916790490343, 0.292675679690982, 0.2927807486631016, 0.29288578642507057, 0.292990792990793, 0.2930957683741648, 0.29320071258907365, 0.2933056256493988, 0.2934105075690116, 0.29336696839293663, 0.2933234421364985, 0.2932799287939475, 0.29338475229902106, 0.2933412427702803, 0.29329774614472126, 0.2932542624166049, 0.2932107915801957, 0.2931673336297614, 0.2931238885595732, 0.2930804563639058, 0.29303703703703704, 0.2929936305732484, 0.29295023696682465, 0.2929068562120539, 0.2928634883032277, 0.2929681717246484, 0.29307282415630553, 0.2930294509397662, 0.2931340633323469, 0.2932386447699364, 0.29334319526627217, 0.2934477148350836, 0.2935522034900917, 0.2936566612450096, 0.2937610881135423, 0.29386548410938657, 0.29396984924623115, 0.2940741835377568, 0.29417848699763594, 0.29428275963953315, 0.2943870014771049, 0.2944912125239994, 0.29459539279385705, 0.29455189723903735, 0.2945084145261293, 0.2944649446494465, 0.2944214876033058, 0.29437804338202744, 0.2943346119799351, 0.294438707774008, 0.29454277286135694, 0.294646807255567, 0.29460336184016517, 0.29455992923485186, 0.29451650943396224, 0.29447310243183494, 0.2945770704391394, 0.2946810078090467, 0.29478491455509725, 0.2948887906908234, 0.2948453608247423, 0.29480194374907964, 0.2947585394581861, 0.29486235831002505, 0.29496614659994114, 0.29506990434142755, 0.2950264861683343, 0.29498308077092833, 0.29493968814357163, 0.2948963082806295, 0.2948529411764706, 0.2948095868254668, 0.2947662452219935, 0.29472291636042924, 0.29482657260435036, 0.2949301983835415, 0.29503379371143107, 0.2951373586014397, 0.29524089306698004, 0.2953443971214569, 0.29544787077826723, 0.29555131405080015, 0.2956547269524369, 0.29575810949655074, 0.2958614616965072, 0.29596478356566397, 0.29592136150234744, 0.29602464427167374, 0.29612789674391315, 0.29608446986361636, 0.29604105571847505, 0.29599765430288816, 0.2959542656112577, 0.29591088963798917, 0.2958675263774912, 0.2958241758241758, 0.29578083797245824, 0.295737512816757, 0.29569420035149385, 0.2956509005710939, 0.2956076134699854, 0.29556433904259993, 0.29552107728337235, 0.29547782818674084, 0.29543459174714665, 0.29539136795903437, 0.29534815681685195, 0.29530495831505044, 0.2952617724480842, 0.2952185992104109, 0.2951754385964912, 0.2951322906007894, 0.29508915521777257, 0.29504603244191147, 0.2950029222676797, 0.2949598246895544, 0.2950628104002337, 0.29516576602891775, 0.29526869158878505, 0.2952255803766973, 0.2951824817518248, 0.29513939570865566, 0.29509632224168125, 0.29505326134539617, 0.2950102130142982, 0.2949671772428884, 0.29492415402567096, 0.29502697972874437, 0.29512977544473606, 0.2952325411867619, 0.29533527696793005, 0.29529223145314093, 0.2952491984844069, 0.29535188692991404, 0.29545454545454547, 0.29555717407137655, 0.2956597727934751, 0.29576234163390125, 0.29586488060570765, 0.2958218081234532, 0.29577874818049493, 0.29573570077135786, 0.29583818393480793, 0.29594063727629855, 0.29589758510328773, 0.2958545454545455, 0.29581151832460734, 0.2959139159517231, 0.29601628380343126, 0.296118621892717, 0.29622093023255813, 0.29617788112192994, 0.2961348445219413, 0.29609182042713933, 0.29604880883207435, 0.2960058097312999, 0.29596282311937266, 0.29591984899085233, 0.295876887340302, 0.2958339381622877, 0.2957910014513788, 0.29574807720214774, 0.2957051654091701, 0.2956622660670245, 0.295619379170293, 0.29572153734590284, 0.2956786542923434, 0.2956357836740612, 0.29559292548564803, 0.2955500797216988, 0.2955072463768116, 0.2954644254455876, 0.29542161692263114, 0.2953788208025496, 0.29533603707995365, 0.2952932657494569, 0.2952505068056762, 0.29520776024323153, 0.2951650260567458, 0.2951223042408453, 0.2950795947901592, 0.2950368976993199, 0.29499421296296297, 0.29495154057572687, 0.2949088805322534, 0.29486623282718727, 0.2948235974551764, 0.29478097441087175, 0.2948829141370338, 0.29498482439658913, 0.2950867052023121, 0.29504406877618844, 0.2950014446691708, 0.29495883287592084, 0.29506065857885616, 0.29501805054151625, 0.29497545480797, 0.2949328713728887, 0.29489030023094687, 0.29484774137682207, 0.2948051948051948, 0.2947626605107488, 0.2947201384881708, 0.2948218664358863, 0.2949235650418229, 0.2950252343186734, 0.29498269896193774, 0.29494017586853105, 0.2948976650331508, 0.2948551664504972, 0.2948126801152738, 0.294770206022187, 0.2948717948717949, 0.2949733544577272, 0.2950748847926267, 0.29517638588912887, 0.29513389000863804, 0.2952353533899525, 0.29533678756476683, 0.29543819254569004, 0.2953956834532374, 0.2953531865918573, 0.29531070195627157, 0.29526822954120524, 0.2952257693413863, 0.2951833213515456, 0.2951408855664175, 0.2950984619807388, 0.2950560505892498, 0.2950136513866935, 0.29497126436781607, 0.29492888952736673, 0.2948865268600977, 0.29498779261812436, 0.29494543365881676, 0.29490308686288585, 0.2950043066322136, 0.2949619635424142, 0.29491963260619974, 0.29487731381833837, 0.29483500717360117, 0.2947927126667623, 0.29475043029259895, 0.2947081600458913, 0.29466590192142245, 0.2946236559139785, 0.29458142201834864, 0.29453920022932495, 0.2944969905417025, 0.29445479295027943, 0.29441260744985676, 0.2943704340352385, 0.29447149813806933, 0.2945725332951454, 0.29467353951890035, 0.2947745168217609, 0.2948754652161466, 0.29497638471446974, 0.29493417286777335, 0.2948919731005866, 0.29484978540772533, 0.294807609784008, 0.29476544622425627, 0.2947232947232947, 0.2946811552759508, 0.29463902787705504, 0.2945969125214408, 0.29455480920394456, 0.29451271791940553, 0.2944706386626661, 0.29442857142857143, 0.2945293529495786, 0.29463010568409026, 0.2947308296444381, 0.2948315248429469, 0.2949321912919343, 0.2950328290037111, 0.29513343799058084, 0.2952340182648402, 0.2951918961335426, 0.29529243937232524, 0.2953929539295393, 0.2954934398174558, 0.2954513047198061, 0.2954091816367265, 0.2953670705630791, 0.2953249714937286, 0.29528288442354284, 0.29524080934739244, 0.295198746260151, 0.2951566951566952, 0.2951146560319043, 0.29507262888066077, 0.29503061369784994, 0.2949886104783599, 0.2949466192170819, 0.29490463990890975, 0.29486267254874055, 0.29496300512236767, 0.2950633091478162, 0.2951635846372688, 0.2952638316029014, 0.2953640500568828, 0.29532205317787574, 0.29528006823997727, 0.29523809523809524, 0.2951961341671404, 0.29515418502202645, 0.2951122477976698, 0.2950703224889899, 0.2950284090909091, 0.2949865075983525, 0.2949446180062482, 0.2949027403095272, 0.2948608745031232, 0.294819020581973, 0.2947771785410162, 0.2947353483751951, 0.29469353007945515, 0.2946517236487445, 0.2946099290780142, 0.2945681463622181, 0.2945263754963131, 0.29448461647525875, 0.2944428692940176, 0.29454287739192064, 0.29464285714285715, 0.29460110528553207, 0.2945593652592802, 0.2945176370590735, 0.2944759206798867, 0.29443421611669734, 0.29439252336448596, 0.2943508424182359, 0.29430917327293316, 0.29426751592356687, 0.29422587036512876, 0.29418423659261356, 0.29414261460101865, 0.2941010043853445, 0.29405940594059404, 0.29401781926177345, 0.2939762443438914, 0.2939346811819596, 0.29389312977099236, 0.2938515901060071, 0.29381006218202377, 0.29376854599406527, 0.2937270415371574, 0.2936855488063286, 0.2936440677966102, 0.29360259850303627, 0.2935611409206439, 0.2935196950444727, 0.29347826086956524, 0.29357798165137616, 0.2936776742873271, 0.29363623536051925, 0.2935948081264108, 0.2935533925800536, 0.29351198871650214, 0.2936116203638415, 0.2937112239142696, 0.2938107993796701, 0.2937693825768255, 0.29372797744890766, 0.29368658399098085, 0.29364520219811185, 0.29360383206537055, 0.2935624735878293, 0.29352112676056336, 0.2934797915786509, 0.2934384680371726, 0.29339715613121214, 0.29335585585585583, 0.2933145672061928, 0.29341401632423303, 0.29351343745602926, 0.2936128306133934, 0.2937121958081305, 0.2936708860759494, 0.2936295879623119, 0.29358830146231724, 0.29354702657106707, 0.293505763283666, 0.29360505973295853, 0.2937043282743114, 0.29380356891948856, 0.29390278168024725, 0.29400196656833827, 0.2941011235955056, 0.2940598230585592, 0.29415894411682114, 0.2942580373438158, 0.2943571027512633, 0.2944561403508772, 0.2945551501543643, 0.294654132173425, 0.29475308641975306, 0.29485201290503577, 0.2949509116409537, 0.2949095498527556, 0.2948681996634885, 0.2949670545352587, 0.29506588169329967, 0.2951646811492642, 0.2952634529147982, 0.29536219700154126, 0.2953208181563463, 0.2952794509034879, 0.29523809523809524, 0.29519675115530036, 0.29515541865023803, 0.2952540949181016, 0.29535274356103025, 0.2954513645906228, 0.2955499580184719, 0.2956485238561634, 0.295747062115277, 0.29584557280738566, 0.29594405594405593, 0.296042511536848, 0.29600111856823264, 0.29595973717321405, 0.29591836734693877, 0.2958770090845563, 0.29583566238121856, 0.2957943272320805, 0.2957530036322995, 0.2957116915770359, 0.2956703910614525, 0.29562910208071497, 0.2955878246299916, 0.29554655870445345, 0.29550530429927413, 0.29546406140963016, 0.2954228300307005, 0.29538161015766706, 0.2953404017857143, 0.2952992049100293, 0.29525801952580194, 0.2952168456282248, 0.29517568321249305, 0.29513453227380454, 0.2950933928073599, 0.29519163763066203, 0.29528985507246375, 0.2952487111606521, 0.2953468932850376, 0.2953057528903747, 0.29526462395543174, 0.2952235064754212, 0.2951824004455583, 0.29514130586106085, 0.2951002227171492, 0.2950591510090466, 0.2950180907319788, 0.29497704188117435, 0.29493600445186424, 0.29489497843928225, 0.2948539638386648, 0.29481296064525103, 0.29477196885428253, 0.29473098846100376, 0.29469001946066165, 0.2946490618485059, 0.2946081156197888, 0.2945671807697652, 0.2945262572936927, 0.2944853451868315, 0.29444444444444445, 0.294403555061797, 0.2943626770341572, 0.2944606413994169, 0.29455857856746254, 0.29465648854961835, 0.2946155981126839, 0.2945747190231719, 0.2945338512763596, 0.2944929948675267, 0.2944521497919556, 0.29441131604493137, 0.29437049362174156, 0.29432968251767644, 0.29428888272802883, 0.2942480942480942, 0.2942073170731707, 0.29430511292780936, 0.2944028816846772, 0.2945006233550353, 0.2945983379501385, 0.2946960254812353, 0.29465522016062035, 0.2946144261387235, 0.29471207087486156, 0.2948096885813149, 0.29490727926930527, 0.2950048429500484, 0.2951023796347537, 0.2950615576151612, 0.2951590594744122, 0.2952565343659245, 0.2952157079646018, 0.29517489285220516, 0.2951340890240531, 0.2950932964754665, 0.29505251520176895, 0.2950117451982866, 0.29497098646034814, 0.29493023898328496, 0.2948895027624309, 0.2948487777931225, 0.2948080640706987, 0.29476736159050115, 0.2947266703478741, 0.2946859903381642, 0.29464532155672096, 0.2946046639988961, 0.29456401766004414, 0.2945233825355221, 0.2946206896551724, 0.2945800579230451, 0.29453943739658023, 0.29449882807114297, 0.29459608491866557, 0.2946933149552033, 0.2947905181918412, 0.29488769463965825, 0.2948470653072472, 0.29480644716903154, 0.29476584022038566, 0.29486296653353533, 0.2948223629854035, 0.2947817706182018, 0.29487885462555063, 0.29483826565726085, 0.2947976878612717, 0.294757121232971, 0.294716565767749, 0.29467602146099875, 0.29463548830811553, 0.29459496630449733, 0.29455445544554454, 0.2945139557266602, 0.29447346714324996, 0.2944329896907216, 0.29439252336448596, 0.294352068159956, 0.2943116240725474, 0.29427119109767824, 0.29423076923076924, 0.2941903584672435, 0.29414995880252676, 0.29410957023204726, 0.2940691927512356, 0.2940288263555251, 0.29398847104035136, 0.29408535748593384, 0.29404500548847423, 0.2940046645630402, 0.29396433470507544, 0.29392401591002604, 0.29388370817334064, 0.29384341149047033, 0.2938031258568687, 0.2937628512679918, 0.29372258771929827, 0.29368233520624915, 0.29364209372430805, 0.29360186326894094, 0.29356164383561645, 0.2935214354198055, 0.29348123801698167, 0.29344105162262085, 0.2934008762322015, 0.29336071184120466, 0.29345743224746784, 0.29341727110989463, 0.29337712096332785, 0.29333698180325624, 0.293296853625171, 0.29325673642456573, 0.29321663019693656, 0.29331327772460003, 0.29340989882417284, 0.2933697881066302, 0.29332968835429196, 0.2932895995626623, 0.2932495217272479, 0.29320945484355787, 0.2931693989071038, 0.2931293539133998, 0.2932258945643267, 0.2933224088488324, 0.2934188967777171, 0.2935153583617747, 0.2936117936117936, 0.2935717210318002, 0.2935316593886463, 0.2934916086778551, 0.2934515688949523, 0.2934115400354658, 0.29337152209492634, 0.2934678849038593, 0.29342787019361877, 0.2933878663940014, 0.29334787350054525, 0.2934441869974104, 0.2934041973289725, 0.2933642185583867, 0.2933242506811989, 0.2932842936929574, 0.29324434758921275, 0.2932044123655182, 0.29316448801742917, 0.2931245745405037, 0.2930846719303022, 0.2930447801823874, 0.29300489929232443, 0.292965029255681, 0.2929251700680272, 0.29288532172493537, 0.2928454842219804, 0.2928056575547396, 0.2927658417187925, 0.2927260367097213, 0.2926862425231104, 0.2926464591545467, 0.29260668659961947, 0.2925669248539204, 0.2925271739130435, 0.29248743377258524, 0.29244770442814455, 0.2924079858753226, 0.292368278109723, 0.2923285811269518, 0.29228889492261745, 0.2922492194923307, 0.2922095548317047, 0.292169900936355, 0.2921302578018996, 0.29209062542395875, 0.2920510037981552, 0.2921470229214702, 0.2922430160021698, 0.29233898305084743, 0.29229934924078094, 0.2923952826352176, 0.2923556519381946, 0.2923160319826535, 0.29227642276422766, 0.292236824278553, 0.29219723652126794, 0.292157659488013, 0.2921180931744312, 0.2920785375761679, 0.29203899268887085, 0.2919994585081901, 0.29209528965890635, 0.29219109487075384, 0.2922868741542625, 0.2923826275199567, 0.2923430735930736, 0.292303530366563, 0.2922639978360833, 0.29222447599729545, 0.29218496484586265, 0.2921454643774503, 0.2921059745877264, 0.29206649547236113, 0.29202702702702704, 0.291987569247399, 0.2919481221291543, 0.29190868566797246, 0.2918692598595354, 0.2919648885887914, 0.29206049149338376, 0.29215606858377213, 0.2922516198704104, 0.2923471453637468, 0.292442645074224, 0.29253811901227905, 0.29249865083648136, 0.2924591933090517, 0.29241974642568114, 0.2923803101820634, 0.2923408845738943, 0.29230146959687203, 0.29226206524669723, 0.29222267151907266, 0.2921832884097035, 0.2921439159142973, 0.2921045540285637, 0.292065202748215, 0.29216056034482757, 0.29225589225589227, 0.2923511984917856, 0.2924464790628787, 0.29254173397953687, 0.2926369632521201, 0.2927321668909825, 0.2928273449064729, 0.2929224973089343, 0.2930176241087044, 0.2929782082324455, 0.2930733019502354, 0.29316837009144703, 0.2932634126663977, 0.2933584296853993, 0.2934534211587579, 0.29354838709677417, 0.29350893697083724, 0.29360386992743887, 0.2936987773747145, 0.29379365932294466, 0.29375419744795167, 0.2937147461724416, 0.2938095877534578, 0.2939044038668099, 0.29399919452275475, 0.2940939597315436, 0.29418869950342236, 0.2942834138486312, 0.2942439286193479, 0.2943386101422055, 0.2944332662642522, 0.29452789699570814, 0.2946225023467883, 0.2947170823277018, 0.29481163694865264, 0.2949061662198391, 0.2950006701514542, 0.29509514875368537, 0.2950556076644781, 0.295016077170418, 0.29497655726724714, 0.2949370479507099, 0.2948975492165528, 0.2948580610605249, 0.29495247021020216, 0.29491298527443105, 0.295007361798956, 0.2951017130620985, 0.2951960390739997, 0.2952903398447953, 0.2953846153846154, 0.2954788657035848, 0.2954393473318176, 0.2955335651243648, 0.29562775772162053, 0.29572192513368983, 0.2956823954016843, 0.2956428762363005, 0.29560336763330214, 0.2955638695884554, 0.2955243820975284, 0.2954849051562917, 0.2954454387605182, 0.2954059829059829, 0.2953665375884631, 0.2953271028037383, 0.2952876785475904, 0.2953817405232248, 0.29534231949819834, 0.29530290899386175, 0.295263509006004, 0.2952241195304162, 0.29518474056289185, 0.2951453720992265, 0.29510601413521803, 0.29506666666666664, 0.29502732968937473, 0.2949880031991469, 0.29494868719178996, 0.294909381663113, 0.2950033311125916, 0.2950972555289102, 0.2951911549220727, 0.29515183803942463, 0.2951125316287122, 0.29507323568575233, 0.29516708827053656, 0.2952609158679446, 0.2953547184879542, 0.29531541123236627, 0.29527611443779106, 0.2952368281000532, 0.2953305840095783, 0.2954243149773876, 0.29551802101343266, 0.2954787234042553, 0.29543943624518015, 0.29540015953203935, 0.2953608932606673, 0.2953216374269006, 0.2952823920265781, 0.2952431570555408, 0.295203932509632, 0.29516471838469716, 0.2951255146765839, 0.2950863213811421, 0.29504713849422387, 0.2950079660116835, 0.2949688039293774, 0.2949296522431643, 0.2948905109489051, 0.29485138004246286, 0.2948122595197028, 0.29477314937649246, 0.2947340496087014, 0.2946949602122016, 0.294655881182867, 0.29461681251657384, 0.29457775420920057, 0.29453870625662776, 0.29449966865473826, 0.2944606413994169, 0.29442162448655096, 0.2943826179120297, 0.2943436216717446, 0.2943046357615894, 0.2942656601774599, 0.2942266949152542, 0.2943201376936317, 0.29441355573206246, 0.2945069490403706, 0.2946003176283748, 0.2946936615058886, 0.29465467054776395, 0.29461568990607223, 0.2945767195767196, 0.29453775955561434, 0.294498809838667, 0.2944598704217903, 0.294420941300899, 0.2943820224719101, 0.2943431139307428, 0.2943042156733184, 0.29426532769556024, 0.2942264499933941, 0.2941875825627477, 0.2941487253995509, 0.29410987849973586, 0.29407104185923677, 0.29403221547398994, 0.293993399339934, 0.2939545934530095, 0.2939157978091593, 0.29387701240432834, 0.2938382372344637, 0.2937994722955145, 0.29376071758343225, 0.2937219730941704, 0.2938151127522089, 0.2939082278481013, 0.2940013183915623, 0.2940943843923016, 0.2940556214577567, 0.294148655772272, 0.2942416655685861, 0.29433465085639, 0.2944276116453695, 0.2945205479452055, 0.29448175951534306, 0.29457466420858575, 0.2945358788676761, 0.2944971037388099, 0.29445833881795447, 0.2944195841010792, 0.2943808395841558, 0.29447368421052633, 0.2945665044073148, 0.2946593001841621, 0.29462054452189923, 0.2947133087848501, 0.29467455621301775, 0.2946358138311859, 0.2945970816353359, 0.2945583596214511, 0.29451964778551715, 0.29448094612352166, 0.29444225463145446, 0.2944035733053074, 0.29436490214107447, 0.29432624113475175, 0.2942875902823375, 0.29424894957983194, 0.2943416043061573, 0.29443423470727226, 0.29452684079275493, 0.2946194225721785, 0.2947119800551109, 0.2948045132511152, 0.29489702216974945, 0.2949895068205666, 0.29508196721311475, 0.2951744033569368, 0.2951357021109217, 0.2950970110120608, 0.2950583300563639, 0.29501965923984275, 0.29498099855851134, 0.29494234800838576, 0.29490370758548407, 0.29486507728582656, 0.2948264571054355, 0.2947878470403352, 0.2947492470865523, 0.2947106572401152, 0.2946720774970546, 0.29463350785340314, 0.29459494830519567, 0.2946872546453808, 0.2946486981551747, 0.2946101517530089, 0.29457161543492477, 0.29453308919696575, 0.2944945730351772, 0.2944560669456067, 0.29454830696823114, 0.294640522875817, 0.2947327146778199, 0.2946941975953999, 0.294655690578858, 0.2947478442644369, 0.2947093403004572, 0.29480146290491116, 0.29489356144704193, 0.2949856359362758, 0.2950776863820342, 0.29516971279373366, 0.2951311839185485, 0.295092665100496, 0.2950541563356388, 0.2950156576200417, 0.29497716894977166, 0.2949386903208975, 0.29490022172949004, 0.2948617631716223, 0.2948233146433694, 0.29478487614080834, 0.29474644766001823, 0.2947080291970803, 0.2947999478691516, 0.2948918425853531, 0.29498371335504886, 0.29507556018759773, 0.2951673830923538, 0.2952591820786663, 0.29535095715587967, 0.29544270833333336, 0.2955344356203619, 0.29562613902629525, 0.29571781856045815, 0.29580947423217074, 0.2959011060507482, 0.2959927140255009, 0.2959542084037986, 0.2959157127991675, 0.2958772272076993, 0.2958387516254877, 0.2958002860486283, 0.2957618304732189, 0.29572338489535943, 0.2956849493111515, 0.29564652371669914, 0.2956081081081081, 0.2955697024814863, 0.2955313068329436, 0.29549292115859205, 0.29545454545454547, 0.29541617971691986, 0.2953778239418333, 0.2953394781254057, 0.2953011422637591, 0.29526281635301754, 0.29522450038930703, 0.29518619436875565, 0.2951478982874935, 0.2951096121416526, 0.29507133592736706, 0.2950330696407729, 0.2949948132780083, 0.29495656683521326, 0.29491833030852993, 0.2948801036941024, 0.29484188698807673, 0.294803680186601, 0.29476548328582536, 0.2947272962819018, 0.29468911917098445, 0.29465095194922936, 0.2946127946127946, 0.2945746471578402, 0.29466597617814605, 0.29475728155339803, 0.29484856329277764, 0.2949398214054614, 0.2949016563146998, 0.2948635010997542, 0.2948253557567917, 0.2949165696546372, 0.29500775995861356, 0.2950989266778741, 0.2951900698215671, 0.29528118939883646, 0.2952430196483971, 0.2952048597647667, 0.2951667097441199, 0.2951285695826334, 0.29521963824289404, 0.29531068337424105, 0.29540170498579177, 0.2954927030866589, 0.29545454545454547, 0.29541639767591993, 0.2953782597469662, 0.2953401316638699, 0.295431078988126, 0.29552200283907604, 0.29561290322580647, 0.29570378015739907, 0.29579463364293085, 0.2957564813620534, 0.2957183389218468, 0.29568020631850417, 0.29564208354822075, 0.2956039706071935, 0.29556586749162156, 0.2955277741977059, 0.2954896907216495, 0.2954516170596573, 0.2955423859829941, 0.2956331315213191, 0.2957238536836682, 0.29568576947842884, 0.2957764614988411, 0.2958671301660873, 0.2959577754891864, 0.2960483974771528, 0.29613899613899614, 0.29622957148372153, 0.2961914565105507, 0.2961533513443973, 0.2961152559814767, 0.2960771704180064, 0.2960390946502058, 0.296001028674296, 0.2959629724865004, 0.2959249260830441, 0.29588688946015423, 0.2958488626140599, 0.29593934721151377, 0.29590132339714764, 0.295863309352518, 0.29582530507386, 0.29578731055741075, 0.29574932579940927, 0.29571135079609656, 0.2956733855437155, 0.2956354300385109, 0.29559748427672955, 0.2955595482546201, 0.29552162196843323, 0.29548370541442137, 0.295445798588839, 0.29540790148794255, 0.29537001410799024, 0.29533213644524237, 0.295294268495961, 0.29525641025641025, 0.29521856172285604, 0.29518072289156627, 0.2951428937588107, 0.2951050743208611, 0.295067264573991, 0.29502946451447604, 0.29499167413859356, 0.29495389344262296, 0.29491612242284543, 0.29487836107554416, 0.29484060939700424, 0.2948028673835125, 0.294765135031358, 0.2947274123368313, 0.2946896992962252, 0.2946519959058342, 0.2946143021619547, 0.29457661806088514, 0.2945389435989257, 0.2945012787723785, 0.29446362357754763, 0.29442597801073894, 0.29438834206826026, 0.29435071574642124, 0.2943130990415335, 0.29427549194991054, 0.29423789446786763, 0.294200306591722, 0.29416272831779283, 0.29412515964240105, 0.2940876005618695, 0.29405005107252297, 0.2940125111706881, 0.2939749808526934, 0.29393746011486915, 0.2938999489535477, 0.2938624473650632, 0.2938249553457515, 0.2937874728919505, 0.29375, 0.29371253666624153, 0.2936750828870186, 0.29363763865867654, 0.2936002039775625, 0.2935627788400255, 0.2935253632424165, 0.29348795718108833, 0.2934505606523955, 0.2934131736526946, 0.293375796178344, 0.2933384282257037, 0.293301069791136, 0.2932637208710047, 0.29322638146167557, 0.2933163590070019, 0.2934063136456212, 0.2934962453862798, 0.29345889539322983, 0.2934215549052042, 0.29338422391857505, 0.29334690242971634, 0.2933095904350038, 0.2932722879308152, 0.29323499491353, 0.29319771137952955, 0.29316043732519703, 0.2931231727469175, 0.29321301474326383, 0.2931757529546321, 0.29313850063532404, 0.2931012577817304, 0.2930640243902439, 0.293026800457259, 0.29298958597917196, 0.29295238095238096, 0.2929151853732859, 0.29287799923828867, 0.29284082254379284, 0.29280365528620383, 0.29276649746192895, 0.29272934906737724, 0.2926922100989597, 0.2926550805530889, 0.2926179604261796, 0.29258084971464804, 0.2925437484149125, 0.2925066565233929, 0.29246957403651114, 0.29243250095069084, 0.2923954372623574, 0.29235838296793815, 0.2924480486568677, 0.2924109970860256, 0.29237395490245754, 0.29246358454718174, 0.2925531914893617, 0.2926427757376219, 0.2927323373005824, 0.2926952778832764, 0.29278481012658225, 0.2927477534489305, 0.29271070615034167, 0.2926736682272555, 0.29263663967611336, 0.2927261227071474, 0.29281558310144196, 0.29277855065132163, 0.2928679817905918, 0.2929573903148312, 0.29304677623261693, 0.2931361395525218, 0.29309908998988876, 0.29306204979148237, 0.2930250189537528, 0.29311433986102337, 0.29307731177362306, 0.2931666035114311, 0.29325587269512504, 0.29334511933324914, 0.29343434343434344, 0.29352354500694355, 0.2936127240595809, 0.2937018806007825, 0.2937910146390712, 0.2938801261829653, 0.2939692152409791, 0.2939321306925697, 0.29389505549949546, 0.2938579896582167, 0.2938209331651955, 0.293909973521624, 0.2939989914271306, 0.2939619311735787, 0.29392488026216285, 0.293887838689351, 0.29397681451612906, 0.2940657679223888, 0.2941546989166037, 0.2942436075072427, 0.29433249370277076, 0.2944213575116484, 0.29438428607403677, 0.2944731209870326, 0.2945619335347432, 0.2945248584015104, 0.29461364208406743, 0.29470240342267523, 0.2947911424257675, 0.29487985910177383, 0.2949685534591195, 0.29505722550622565, 0.2950201207243461, 0.2949830252734817, 0.29494593915011313, 0.2950345694531741, 0.29512317747611866, 0.2950860877215031, 0.2950490072882634, 0.295011936172886, 0.2949748743718593, 0.29493782188167317, 0.29490077869881937, 0.29486374481979155, 0.29482672024108486, 0.2947897049591965, 0.29475269897062517, 0.2947157022718715, 0.29467871485943775, 0.2946417367298281, 0.2946047678795483, 0.294567808305106, 0.29453085800301054, 0.294493916969773, 0.2944569852019062, 0.29442006269592474, 0.29438314944834504, 0.2943462454556851, 0.2943093507144648, 0.29427246522120565, 0.2942355889724311, 0.29419872196466607, 0.29416186419443746, 0.2941250156582738, 0.2940881763527054, 0.29405134627426427, 0.2940145254194841, 0.29410291724051585, 0.29406609914872306, 0.29402929027412694, 0.2939924906132666, 0.293955700162683, 0.2939189189189189, 0.2938821468785187, 0.2939704778583938, 0.2939337085678549, 0.29389694847423714, 0.29386019757409026, 0.29382345586396597, 0.29378672334041755, 0.29375, 0.293838270216223, 0.2939265183704074, 0.29401474447082343, 0.29410294852573715, 0.2941911305434104, 0.29427929053210095, 0.2943674285000624, 0.29445554445554445, 0.294418778873767, 0.2943820224719101, 0.29434527524653603, 0.2943085371942087, 0.2942718083114938, 0.29423508859495884, 0.2941983780411728, 0.29416167664670656, 0.29412498440813273, 0.29408830132202546, 0.2940516273849607, 0.2940149625935162, 0.2939783069442713, 0.29394166043380704, 0.2939050230587062, 0.29399302093718843, 0.2940809968847352, 0.294168950909544, 0.2941323034757693, 0.29409566517189834, 0.2940590359945199, 0.29402241594022416, 0.2939858050056033, 0.293949203187251, 0.2939126104817627, 0.294000497883993, 0.2939639079029247, 0.2939273270283723, 0.29401517979345526, 0.2941030106991789, 0.2940664261724095, 0.29402985074626864, 0.293993284417361, 0.293956727182293, 0.29392017903767254, 0.2938836399801094, 0.29384711000621505, 0.29381058911260255, 0.29377407729588667, 0.2937375745526839, 0.2937010808796124, 0.29366459627329194, 0.29362812073034406, 0.293591654247392, 0.29355519682106046, 0.29351874844797615, 0.29348230912476725, 0.29344587884806356, 0.2934094576144967, 0.2933730454206999, 0.2933366422633081, 0.29330024813895783, 0.2932638630442873, 0.2932274869759365, 0.2933151432469304, 0.2934027777777778, 0.293366398016119, 0.2933300272749814, 0.2932936655510103, 0.29325731284085277, 0.29322096914115753, 0.29318463444857495, 0.29314830875975717, 0.2932358771060456, 0.29332342375820636, 0.29341094872430024, 0.2934984520123839, 0.29358593363051017, 0.29354958524204533, 0.29351324585293387, 0.2934769154598341, 0.2934405940594059, 0.29352802870931816, 0.29361544172234594, 0.29370283310651984, 0.2936665017318159, 0.29363017934446506, 0.29359386594113285, 0.29355756151848644, 0.29352126607319484, 0.29348497960192854, 0.2934487021013597, 0.29341243356816216, 0.2933761739990114, 0.293463486964043, 0.2935507783543366, 0.2936380481778876, 0.29372529644268774, 0.29381252315672474, 0.2938997283279822, 0.29398691196444005, 0.2940740740740741, 0.2941612146648562, 0.29412490743026415, 0.29408860915710233, 0.2940523198420533, 0.2940160394818014, 0.29397976807303233, 0.2939435056124337, 0.2939072520966946, 0.29387100752250583, 0.2938347718865598, 0.2937985451855505, 0.2937623274161736, 0.2937261185751263, 0.2936899186591077, 0.2937769562538509, 0.2938639724001971, 0.29395096710607366, 0.2940379403794038, 0.2941248922281069, 0.29421182266009854, 0.29429873168329024, 0.29438561930558976, 0.2943493783085067, 0.29431314623338256, 0.2942769230769231, 0.2942407088358356, 0.2942045035068291, 0.2941683070866142, 0.29413211957190305, 0.2940959409594096, 0.2940597712458492, 0.294023610427939, 0.2941104143612443, 0.2941971969510696, 0.2942839582052858, 0.2942477876106195, 0.2942116259063537, 0.29429835340378474, 0.2943850595896302, 0.29447174447174446, 0.2945584080579781, 0.29452223041021863, 0.29448606164804125, 0.2944499017681729, 0.29441375076734194, 0.2945003682789099, 0.2944642199582668, 0.29442808051055475, 0.29451466437599705, 0.29460122699386504, 0.2946877683719789, 0.29477428851815507, 0.29486078744020605, 0.29494726514594066, 0.2949110974862048, 0.2949975478175576, 0.2949613828613461, 0.2949252267712675, 0.2948890795440618, 0.2948529411764706, 0.2948168116652371, 0.2947806910071061, 0.29474457919882396, 0.29470847623713864, 0.29467238211879976, 0.2946362968405584, 0.2946002203991674, 0.294564152791381, 0.29465050801811726, 0.29461444308445534, 0.29457838697833805, 0.2945423396965247, 0.2945063012357763, 0.2944702715928554, 0.294434250764526, 0.29439823874755383, 0.2943622355387061, 0.29432624113475175, 0.2942902555324612, 0.2942542787286064, 0.2942183107199609, 0.2941823515032999, 0.29414640107540024, 0.2941104594330401, 0.2940745265729994, 0.2940386024920596, 0.2940026871870038, 0.2939667806546165, 0.29405299792404443, 0.294017094017094, 0.293981198876816, 0.2939453125, 0.29390943488343707, 0.29387356602391995, 0.2938377059182428, 0.29380185456320157, 0.2937660119555935, 0.29373017809221763, 0.2938163190633004, 0.2939024390243902, 0.29398853798317276, 0.2940746159473299, 0.2941606729245398, 0.29424670892247684, 0.2942108470444851, 0.2941749939068974, 0.2941391495065188, 0.2942251461988304, 0.2941893044219759, 0.29415347137637027, 0.29411764705882354, 0.2940818314661471, 0.294046024595154, 0.2940102264426589, 0.2940961655508217, 0.29418208373904575, 0.29414628209808935, 0.2941104891701144, 0.2940747049519406, 0.2940389294403893, 0.2941248023354823, 0.2940890294332279, 0.29405326523166725, 0.29413910505836577, 0.29422492401215805, 0.29431072210065645, 0.29427494834082896, 0.2942391832766164, 0.29432494835338435, 0.2942891859052248, 0.2943749240675495, 0.2944606413994169, 0.29454633790841733, 0.2945105659460772, 0.29459623557984216, 0.2945604662457504, 0.2946461090202744, 0.2947317310026705, 0.2946959582473601, 0.2946601941747573, 0.29462443878170125, 0.29458869206503274, 0.2945529540215941, 0.294517224648229, 0.2944815039417829, 0.2944457918991026, 0.2944100885170365, 0.2943743937924345, 0.29433870772214815, 0.2943030303030303, 0.2942673615319355, 0.2942317014057198, 0.29419604992124077, 0.2941604070753574, 0.29412477286493033, 0.29408914728682173, 0.2940535303378951, 0.29401792201501575, 0.2939823223150502, 0.2939467312348668, 0.2939111487713352, 0.29387557492132654, 0.29384000968171364, 0.29380445304937075, 0.29376890502117364, 0.29373336559399954, 0.2936978347647272, 0.2937832607643928, 0.29386866610230983, 0.2939540507859734, 0.2940394148228751, 0.2941247582205029, 0.2942100809863411, 0.29429538312787046, 0.29438066465256796, 0.2943450942484292, 0.2943095324392896, 0.2942739792220343, 0.2942384345935499, 0.2942028985507246, 0.2942881294529646, 0.2943733397730017, 0.29433780031389595, 0.29430226943505555, 0.2943874471937236, 0.294472604392952, 0.2945577410401834, 0.29464285714285715, 0.29472795270840874, 0.2948130277442702, 0.29477746954529005, 0.294862518089725, 0.2949475461232365, 0.2950325536532433, 0.29511754068716095, 0.29508196721311475, 0.2950464023140894, 0.2950108459869848, 0.2949752982287023, 0.29493975903614456, 0.2949042284062161, 0.2948687063358227, 0.2949536312176322, 0.29503853564547206, 0.2950030102347983, 0.29496749337828077, 0.29493198507283014, 0.29489648531535867, 0.2948609941027801, 0.29482551143200963, 0.2947900372999639, 0.2947545717035611, 0.2947191146397209, 0.29468366610536445, 0.2946482260974143, 0.2946127946127946, 0.29457737164843095, 0.2945419572012503, 0.29450655126818126, 0.29447115384615385, 0.2944357649320995, 0.2944003845229512, 0.2943650126156434, 0.29432964920711197, 0.29429429429429427, 0.2942589478741292, 0.2942236099435571, 0.29418828049951967, 0.29415295953896026, 0.29411764705882354, 0.2940823430560557, 0.2940470475276044, 0.2940117604704188, 0.2940964722822174, 0.29418116376724657, 0.2942658349328215, 0.29435048578625406, 0.29431518349724156, 0.294279889675021, 0.29424460431654675, 0.2943292171202494, 0.29429393430831935, 0.29425865995445283, 0.2942233940556088, 0.29418813660874776, 0.2941528876108315, 0.29411764705882354, 0.29408241494968856, 0.29404719128039286, 0.2940119760479042, 0.2939767692491917, 0.2939415708812261, 0.29390638094097926, 0.29387119942542494, 0.29395571514063434, 0.2940402106270943, 0.29412468589206653, 0.2942091409428093, 0.29429357578657733, 0.294377990430622, 0.2943427819638799, 0.2943075819182014, 0.29427239029056557, 0.29423720707795314, 0.2942020322773461, 0.29416686588572794, 0.29413170790008364, 0.2940965583173996, 0.29406141713466366, 0.294026284348865, 0.2939911599569944, 0.29395604395604397, 0.2939209363430073, 0.29388583711487937, 0.2938507462686567, 0.29381566380133717, 0.29378058970992, 0.2937455239914061, 0.2937104666427975, 0.29367541766109784, 0.29364037704331225, 0.2936053447864472, 0.29357032088751045, 0.29353530534351147, 0.29350029815146095, 0.2934652993083711, 0.29343030881125554, 0.29339532665712925, 0.2933603528430087, 0.2933253873659118, 0.2934096055297342, 0.2934938036224976, 0.2934588347432384, 0.2934238741958542, 0.2933889219773675, 0.2933539780848023, 0.2934381326664285, 0.2935222672064777, 0.293487319919038, 0.29345238095238096, 0.2934174503035353, 0.29338252796953107, 0.2933476139473997, 0.2934316991908615, 0.29351576442593696, 0.29359980965976684, 0.293564886404187, 0.29352997145575643, 0.2934950648115115, 0.2934601664684899, 0.29342527642373084, 0.29339039467427486, 0.2933555212171639, 0.2933206560494414, 0.2932857991681521, 0.29325095057034223, 0.29321611025305927, 0.2931812782133523, 0.29314645444827175, 0.29311163895486936, 0.29307683173019833, 0.29304203277131324, 0.29300724207527007, 0.2929724596391263, 0.29293768545994064, 0.2929029195347733, 0.29286816186068587, 0.2928334124347413, 0.29279867125400405, 0.29276393831553976, 0.29272921361641563, 0.2926944971537002, 0.2926597889244634, 0.2926250889257766, 0.2925903971547125, 0.2925557136083452, 0.29252103828375015, 0.29248637117800425, 0.2924517122881858, 0.29241706161137443, 0.29238241914465113, 0.2923477848850983, 0.29231315882979986, 0.29227854097584083, 0.29224393132030785, 0.2922093298602889, 0.2921747365928732, 0.2921401515151515, 0.2921055746242159, 0.2920710059171598, 0.292036445391078, 0.29200189304306673, 0.2919673488702236, 0.2919328128696475, 0.2918982850384388, 0.2918637653736991, 0.2919474991131607, 0.29203121305273116, 0.29211490719943256, 0.292080378250591, 0.2920458574636568, 0.2920113448357362, 0.2919768403639371, 0.2919423440453686, 0.2919078558771412, 0.29187337585636663, 0.29183890398015827, 0.2918044402456306, 0.2917699846498996, 0.29173553719008266, 0.2917010978632983, 0.2916666666666667, 0.2916322435973091, 0.29159782865234835, 0.29156342182890854, 0.291647003303445, 0.2917305650583933, 0.2918141071007313, 0.29189762943743364, 0.2919811320754717, 0.29206461502181347, 0.2921480782834237, 0.2922315218672639, 0.2923149457802923, 0.29239835002946374, 0.2924817346217299, 0.29256509956403914, 0.2925306314797361, 0.29249617151607965, 0.29246171967020024, 0.2925450476975621, 0.2926283560998587, 0.29259390085953135, 0.29255945373204617, 0.292642731018246, 0.292608286252354, 0.2926915381899494, 0.2926570957872441, 0.292622661489587, 0.29258823529411765, 0.2925538171979767, 0.29251940719830627, 0.2924850052922498, 0.292450611476952, 0.29253380364491477, 0.29261697625205735, 0.292700129305278, 0.2926657263751763, 0.29274885415442475, 0.2928319623971798, 0.2927975561038656, 0.29276315789473684, 0.2927287677669447, 0.29269438571764156, 0.2926600117439812, 0.29262564584311884, 0.29259128801221085, 0.2925569382484151, 0.29252259654889073, 0.2924882629107981, 0.29245393733129915, 0.29241961980755693, 0.29238531033673587, 0.29246832473017365, 0.2924340175953079, 0.2923997185080929, 0.2923654274656972, 0.2923311444652908, 0.29229686950404504, 0.29226260257913245, 0.2923455632399484, 0.2924285044538209, 0.292511426227587, 0.2925943285680806, 0.2926772114821324, 0.2927600749765698, 0.2928429190582172, 0.2929257437338955, 0.29289143927860406, 0.2929742388758782, 0.2929399367755532, 0.29290564270662606, 0.2928713566662765, 0.2928370786516854, 0.2928028086600351, 0.29276854668850927, 0.29273429273429274, 0.292817033224146, 0.29289975435723475, 0.2929824561403509, 0.293065138580283, 0.29314780168381666, 0.2931135274172805, 0.29307926116436755, 0.2930450029222677, 0.29301075268817206, 0.2929765104592731, 0.2930591259640103, 0.29302488608482297, 0.2929906542056075, 0.29295643032356034, 0.29292221443587946, 0.2928880065397641, 0.2928538066324148, 0.2928196147110333, 0.29278543077282276, 0.29275125481498776, 0.2928338001867414, 0.2929163262924495, 0.2929988331388565, 0.29296464823241164, 0.2929304713019132, 0.29289630234457015, 0.2928621413575927, 0.2928279883381924, 0.2927938432835821, 0.29275970619097585, 0.29272557705758917, 0.2926914558806388, 0.29265734265734267, 0.2926232373849202, 0.29258914006059195, 0.29267156006058487, 0.2927539608574091, 0.2928363424577752, 0.2929187048683904, 0.293001048095959, 0.2930833721471821, 0.29316567702875773, 0.2931315483119907, 0.2930974275404493, 0.2930633147113594, 0.2930292098219481, 0.2929951128694438, 0.2929610238510762, 0.2929269427640763, 0.2928928696056764, 0.29285880437311, 0.29282474706361206, 0.2927906976744186, 0.29275665620276714, 0.2928388746803069, 0.29292107404393813, 0.2928870292887029, 0.2928529924462522, 0.2929351615152219, 0.29301731149064714, 0.2929832713754647, 0.2930653966778952, 0.2930313588850174, 0.2929973289977935, 0.29296330701346956, 0.29292929292929293, 0.2928952867425122, 0.29286128845037723, 0.2928272980501393, 0.2927933155390507, 0.2927593409143653, 0.292725374173338, 0.29269141531322507, 0.2926574643312841, 0.2926235212247738, 0.2925895859909544, 0.2925556586270872, 0.2925217391304348, 0.2924878274982611, 0.29245392372783124, 0.29253592953175706, 0.29250202804496467, 0.2925840092699884, 0.29266597149808826, 0.29274791473586653, 0.2928298389899224, 0.29279592309474173, 0.2927620150550087, 0.29272811486799444, 0.2926942225309714, 0.2926603380412132, 0.2926264613959949, 0.29259259259259257, 0.2925587316282838, 0.29252487850034714, 0.29249103320606273, 0.29245719574271173, 0.29242336610757663, 0.29238954429794123, 0.2923557303110906, 0.2923219241443108, 0.2922881257948896, 0.2922543352601156, 0.2922205525372789, 0.29218677762367085, 0.2921530105165838, 0.2921192512133118, 0.2920854997111496, 0.2920517560073937, 0.2920180200993416, 0.2920997920997921, 0.2921815452130731, 0.2922632794457275, 0.2923449948042951, 0.292311244516278, 0.2922775020200854, 0.2922437673130194, 0.29232544720138487, 0.2924071082390953, 0.2924887504326757, 0.2925703737886479, 0.29265197831353096, 0.2927335640138408, 0.2928151308960904, 0.29289667896678967, 0.2928629078750144, 0.29282914456997927, 0.29279538904899133, 0.29276164130935917, 0.2927279013483923, 0.2926941691634017, 0.2926604447516995, 0.2926267281105991, 0.29259301923741504, 0.29255931812946323, 0.2925256247840608, 0.292491939198526, 0.2924582613701785, 0.2924245912963389, 0.29239092897432944, 0.2923572744014733, 0.29232362757509495, 0.29228998849252014, 0.29225635715107584, 0.2922227335480902, 0.2921891176808927, 0.2922705314009662, 0.2923519263944796, 0.2924333026678933, 0.2925146602276647, 0.2924810301218671, 0.29244740774801703, 0.2924137931034483, 0.29238018618549594, 0.2923465869914962, 0.29231299551878664, 0.2922794117647059, 0.2922458357265939, 0.29221226740179185, 0.29217870678764213, 0.29214515388148826, 0.29211160868067515, 0.2920780711825488, 0.29204454138445646, 0.29201101928374656, 0.29209227590956044, 0.2920587560247877, 0.29202524383247275, 0.29199173932996786, 0.29207296088103707, 0.29215416379903647, 0.2922353480903773, 0.2923165137614679, 0.2922829950693728, 0.2922494840632882, 0.2922159807405709, 0.2922971114167813, 0.2922636103151863, 0.29223011689204675, 0.2921966311447233, 0.29216315307057744, 0.29212968266697215, 0.2920962199312715, 0.2920627648608407, 0.29214383875400823, 0.2921103858925913, 0.29219143576826195, 0.2922724670864339, 0.292239010989011, 0.2922055625500744, 0.29217212176699475, 0.2921386886371438, 0.2922196796338673, 0.2921862487129619, 0.29215282544040266, 0.29211940981356516, 0.2920860018298262, 0.29205260148656376, 0.2920192087811571, 0.29198582371098664, 0.2919524462734339, 0.29191907646588183, 0.2918857142857143, 0.29185235973031654, 0.29181901279707495, 0.29178567348337714, 0.29175234178661186, 0.291719017704169, 0.29168570123343995, 0.29165239237181684, 0.2916190911166933, 0.2915857974654641, 0.29155251141552513, 0.2915192329642735, 0.2914859621091075, 0.291566815017688, 0.2916476494751255, 0.2916143753565317, 0.2915811088295688, 0.2915478498916391, 0.2916286496350365, 0.2917094309499373, 0.29167616875712654, 0.29164291414889976, 0.291609667122663, 0.2916904137695201, 0.2916571689081377, 0.29162393162393163, 0.29159070191431175, 0.29155747977668905, 0.29152426520847574, 0.2914910582070851, 0.2914578587699317, 0.29142466689443114, 0.29139148257800046, 0.2913583058180576, 0.29132513661202186, 0.2912919749573136, 0.2912588208513544, 0.2912256742915671, 0.29119253527537553, 0.2911594038002048, 0.2911262798634812, 0.29109316346263225, 0.29106005459508644, 0.2910269532582736, 0.29099385944962475, 0.29096077316657193, 0.2909276944065484, 0.2908946231669887, 0.2908615594453285, 0.29082850323900444, 0.2907954545454545, 0.29076241336211794, 0.2907293796864349, 0.2906963535158469, 0.29066333484779644, 0.2906303236797274, 0.2905973200090847, 0.29056432383331443, 0.29064486830154407, 0.2906118742195482, 0.2905788876276958, 0.2906594030189536, 0.29073990013617795, 0.2908203789855895, 0.29090083957340596, 0.2909812819058423, 0.2910617059891107, 0.2910286945673131, 0.29099569063279657, 0.29096269418301396, 0.2909297052154195, 0.29089672372746855, 0.29086374971661755, 0.2909441233140655, 0.29091115140525836, 0.29087818696883855, 0.2909585316111489, 0.29103885804916735, 0.2911191662890802, 0.291199456337071, 0.2912797281993205, 0.29135998188200657, 0.29132699275362317, 0.2912940110947583, 0.29126103690287525, 0.29134125636672326, 0.29142145767315525, 0.2915016408283354, 0.29158180583842497, 0.2916619527095825, 0.2916289592760181, 0.2915959733061871, 0.2915629947975571, 0.29153002374759696, 0.2914970601537766, 0.291464104013567, 0.2914311553244404, 0.2915112467503108, 0.29159132007233274, 0.29167137529664366, 0.291638418079096, 0.2916054683086657, 0.29168549480343425, 0.2917655032192477, 0.2918454935622318, 0.2919254658385093, 0.2918925022583559, 0.29185954612171167, 0.29182659742605555, 0.2917936561688678, 0.2917607223476298, 0.29172779595982395, 0.29180771834800273, 0.2917747940877807, 0.2918546931407942, 0.2919345741680767, 0.2920144371757275, 0.29209428216984323, 0.2920613441587731, 0.2920284135753749, 0.2919954904171364, 0.292075301544358, 0.2921550946798918, 0.29223486982982083, 0.29231462700022537, 0.2922816901408451, 0.29224876070301936, 0.29221583868424017, 0.2922955620635278, 0.29226264218943576, 0.2922297297297297, 0.29219682468190517, 0.29216392704345867, 0.2921310368118879, 0.2920981539846916, 0.2920652785593697, 0.2920324105334234, 0.29199954990435467, 0.29196669666966696, 0.2919338508268647, 0.29190101237345334, 0.2918681813069396, 0.2918353576248313, 0.29180254132463734, 0.2917697324038678, 0.2917369308600337, 0.2917041366906475, 0.2916713498932224, 0.2916385704652731, 0.2916057984043151, 0.2915730337078652, 0.2915402763734412, 0.29150752639856214, 0.29147478378074804, 0.2914420485175202, 0.2914093206064009, 0.29137660004491356, 0.2913438868305827, 0.291311180960934, 0.29127848243349425, 0.29124579124579125, 0.29121310739535405, 0.29129263913824055, 0.29137215303489283, 0.29145164909131704, 0.29153112731351655, 0.2914984297891431, 0.2914657395985197, 0.2914330567391792, 0.2914003812086557, 0.29136771300448433, 0.2913350521242013, 0.29130239856534407, 0.2912697523254511, 0.2912371134020619, 0.2912044817927171, 0.29117185749495855, 0.2911392405063291, 0.29110663082437277, 0.29107402844663455, 0.2910414333706607, 0.2910088455939984, 0.29097626511419616, 0.2909436919288033, 0.2909111260353705, 0.29087856743144935, 0.29084601611459265, 0.29081347208235425, 0.2907809353322891, 0.2907484058619532, 0.29071588366890383, 0.290683368750699, 0.29065086110489824, 0.29061836072906183, 0.29069767441860467, 0.2907769703745109, 0.29085624860272746, 0.29093550910919863, 0.29090299508270007, 0.2908704883227176, 0.29083798882681566, 0.2908054965925595, 0.2907730116175156, 0.29074053389925164, 0.2907080634353362, 0.29067560022333894, 0.2906431442608307, 0.2906106955453835, 0.2905782540745702, 0.29054581984596495, 0.29051339285714284, 0.29048097310568016, 0.2904485605891542, 0.29041615530514336, 0.29049531459170014, 0.290574456218628, 0.29065358019183585, 0.29073268651722983, 0.29070026761819806, 0.2906678559482663, 0.29063545150501674, 0.2906030542860328, 0.2905706642888988, 0.29053828151120026, 0.2905059059505237, 0.2904735376044568, 0.29044117647058826, 0.29040882254650774, 0.2903764758298062, 0.2903441363180755, 0.29031180400890866, 0.2902794788998998, 0.29024716098864395, 0.2902148502727374, 0.2901825467497774, 0.29015025041736225, 0.2901179612730915, 0.29008567931456547, 0.29005340453938583, 0.2900211369451552, 0.2899888765294772, 0.28995662328995664, 0.2900355871886121, 0.29011453352607586, 0.2901934623082055, 0.29016120066703727, 0.29012894619831037, 0.29020784706013114, 0.2902867303845299, 0.290254472719191, 0.29033333333333333, 0.2904121764248417, 0.2903799155743168, 0.2904587359768966, 0.2905375388716126, 0.2906163242642976, 0.2906950921607817, 0.2907738425668924, 0.29074156305506216, 0.2907092907092907, 0.290677025527192, 0.29075574298080126, 0.29083444296493566, 0.29091312548541, 0.29099179054803637, 0.2910704381586245, 0.2911490683229814, 0.2912276810469114, 0.2913062763362165, 0.2912739771593303, 0.2912416851441242, 0.2913202527435983, 0.2912879627577034, 0.29125567992907014, 0.2912234042553192, 0.29130193905817175, 0.2913804564591181, 0.2913481776891548, 0.2913159060700044, 0.2913943958356407, 0.29147286821705426, 0.2915513232200199, 0.29162976085031, 0.29170818111369423, 0.29178658401593977, 0.29186496956281127, 0.2918326693227092, 0.29180037623105015, 0.2917680902854614, 0.2917358114835712, 0.29170353982300884, 0.2916712753014047, 0.2916390179163902, 0.2916067676655977, 0.2915745245466608, 0.2915422885572139, 0.2915100596948928, 0.2914778379573339, 0.29144562334217505, 0.2915239252956128, 0.2916022099447514, 0.29156999226604796, 0.29164825452938575, 0.29172649950292723, 0.2916942787718136, 0.29166206515737164, 0.29162985865724383, 0.29159765926907366, 0.2915654669905056, 0.2916436692791699, 0.29172185430463576, 0.2916896589780377, 0.29176782167291987, 0.2918459671190555, 0.2919240953221536, 0.29200220628792056, 0.2920803000220604, 0.2921583765302746, 0.29212615791795327, 0.2920939464108501, 0.2921719955898567, 0.2921397861316283, 0.29210758377425045, 0.29218560564311696, 0.2922636103151863, 0.29223140495867767, 0.29219920669898636, 0.29216701553376667, 0.29213483146067415, 0.29210265447736533, 0.2920704845814978, 0.2921484418015637, 0.2922263818542171, 0.29219420896179676, 0.29227212681638043, 0.29235002751788663, 0.29242791107197885, 0.2925057774843183, 0.2925836267605634, 0.29266145890637035, 0.29273927392739274, 0.2928170718292817, 0.2928948526176859, 0.2929726162982514, 0.29305036287662195, 0.29312809235843873, 0.2930958663148637, 0.2930636473562713, 0.29303143548032534, 0.29299923068469064, 0.29296703296703297, 0.2929348423250192, 0.29290265875631727, 0.2928704822585961, 0.2928383128295255, 0.2928061504667765, 0.2927739951680211, 0.29274184693093225, 0.292709705753184, 0.2926775716324514, 0.29264544456641056, 0.2926133245527385, 0.29258121158911327, 0.29254910567321407, 0.2925170068027211, 0.2924849149753154, 0.29245283018867924, 0.29242075244049576, 0.29238868172844923, 0.2923566180502248, 0.29232456140350876, 0.29229251178598836, 0.2922604691953519, 0.29233804669516605, 0.292415607189829, 0.2923835616438356, 0.2923515231207539, 0.2923194916182755, 0.2922874671340929, 0.2922554496658999, 0.29222343921139105, 0.29219143576826195, 0.29215943933420935, 0.2921274499069309, 0.29209546748412524, 0.2920634920634921, 0.29203152364273205, 0.29199956221954687, 0.29207704092799297, 0.2921545026808185, 0.2921225382932166, 0.29209058089924517, 0.2920586304966091, 0.2920266870830143, 0.291994750656168, 0.29196282121377803, 0.2919308987535535, 0.29189898327320435, 0.2919763882815916, 0.2920537763690021, 0.2921311475409836, 0.2920992241285105, 0.2920673076923077, 0.2920353982300885, 0.2921127376010487, 0.292190060076461, 0.29226736566186107, 0.29234465436278256, 0.2924219261847565, 0.29249918113331147, 0.2925764192139738, 0.2926536404322672, 0.29273084479371314, 0.2928080323038306, 0.29277608031427327, 0.2927441352973268, 0.2927121972507091, 0.2927893531144322, 0.2928664921465969, 0.2929436143527102, 0.2929116684841876, 0.29287972958237923, 0.29284779764500657, 0.29281587266979175, 0.2927839546544583, 0.29275204359673024, 0.29272013949433306, 0.2926882423449929, 0.29265635214643715, 0.29262446889639393, 0.2927015250544662, 0.29277856442653305, 0.29274667828359835, 0.29271479908526626, 0.2926829268292683, 0.292651061513337, 0.29261920313520573, 0.29258735169260913, 0.29255550718328255, 0.29252366960496246, 0.2924918389553863, 0.2924600152322925, 0.2924281984334204, 0.2923963885565104, 0.2923645855993039, 0.2923327895595432, 0.2924097433666812, 0.29248668043927367, 0.2925636007827789, 0.29264050440265243, 0.2927173913043478, 0.29268557765460274, 0.29265377091936534, 0.2926219710963816, 0.2925901781833985, 0.29255839217816404, 0.2925266130784271, 0.29249484088193767, 0.2924630755864466, 0.2924313171897057, 0.29239956568946796, 0.29236782108348713, 0.292336083369518, 0.2923043525453164, 0.292272628608639, 0.29224091155724363, 0.2922092013888889, 0.29228599327329935, 0.29225428509438056, 0.29233105542900534, 0.2924078091106291, 0.29237609803708925, 0.29234439384081545, 0.29231269651957065, 0.29228100607111884, 0.29224932249322494, 0.29232603511814437, 0.29240273111520537, 0.29237104464672736, 0.2924477191461697, 0.29252437703141926, 0.29260101830787566, 0.29267764298093585, 0.2926459438968916, 0.2926142516785792, 0.2925825663237683, 0.29255088783022953, 0.29251921619573457, 0.2924875514180559, 0.292455893494967, 0.2924242424242424, 0.2923925982036576, 0.29236096083098895, 0.29232933030401387, 0.2922977066205106, 0.2922660897782585, 0.29223447977503786, 0.2922028766086298, 0.2921712802768166, 0.29213969077738133, 0.2921081081081081, 0.292076532266782, 0.29204496325118895, 0.29201340105911594, 0.29208990706721416, 0.2921663965424095, 0.29213483146067415, 0.2922112995570919, 0.2921797364441564, 0.2921481801490442, 0.29211663066954646, 0.29208508800345534, 0.29205355214856404, 0.2920220231026665, 0.2920984455958549, 0.29206691851052347, 0.2920353982300885, 0.29200388475234706, 0.2919723780750971, 0.2920487646995361, 0.29201725997842504, 0.2919857620537159, 0.2919542709232097, 0.29192278658470827, 0.2919991373733017, 0.2920754716981132, 0.2920439844760673, 0.29212029750997087, 0.29219659409355464, 0.2922728742321371, 0.29224137931034483, 0.29231763818554035, 0.29239388062917476, 0.29236238285037164, 0.29243860404997846, 0.2925148088314486, 0.29259099720008613, 0.29255949176267904, 0.2925279931093885, 0.29249650123802345, 0.292465016146394, 0.29243353783231085, 0.2924020662935859, 0.29237060152803185, 0.29244673983214975, 0.29241527703066167, 0.29249139414802067, 0.292459933311821, 0.2924284792428479, 0.29239703193891814, 0.29236559139784946, 0.2923341576174605, 0.2923027305955708, 0.2922713103300011, 0.29223989681857265, 0.292208490059108, 0.2921770900494305, 0.29214569678736435, 0.29211431027073487, 0.29208293049736817, 0.2921589688506982, 0.2922349908710128, 0.2922036082474227, 0.29217223236336304, 0.2921408632166631, 0.2922168545356951, 0.29229282954057534, 0.2923687882365568, 0.29233741146168707, 0.2923060414207533, 0.29227467811158797, 0.2922433215320245, 0.29221197167989704, 0.2921806285530409, 0.29214929214929214, 0.2921179624664879, 0.2920866395024662, 0.29205532325506595, 0.29202401372212694, 0.29199271090149, 0.2919614147909968, 0.29193012538849, 0.2920060008572653, 0.29208186006643094, 0.29215770302121274, 0.2922335297268345, 0.29230934018851756, 0.2922780336296455, 0.29224673377596916, 0.2922154406253346, 0.29218415417558885, 0.2921528744245798, 0.2921216013701563, 0.29209033501016807, 0.2920590753424658, 0.292027822364901, 0.29210357372137813, 0.2921793088691559, 0.29225502781343604, 0.2923307305594181, 0.2924064171122995, 0.292375147043097, 0.2923438836612489, 0.2923126269646103, 0.292281376951037, 0.2923570283270978, 0.29232578024796924, 0.29229453884792134, 0.292263304124813, 0.29233892509883536, 0.29241452991452993, 0.2924901185770751, 0.2925656910916471, 0.29264124746341985, 0.29260999572832125, 0.29257875066737854, 0.292547512278454, 0.2925162805594107, 0.2924850555081127, 0.292453837122425, 0.29242262540021347, 0.29249813253654894, 0.29257362355953903, 0.2925424090472634, 0.2925112011947941, 0.29258666666666666, 0.29255546075085326, 0.29263090540684655, 0.2927063339731286, 0.29278174645484595, 0.29285714285714287, 0.2929325231851615, 0.29300788744404177, 0.29297665991687094, 0.2929454390451833, 0.29291422482685137, 0.29298955891753675, 0.29295834664962184, 0.2929271410311035, 0.2928959420598573, 0.2928647497337593, 0.2929400489830689, 0.293015332197615, 0.2930905993825189, 0.29316585054289973, 0.2932410856838744, 0.2932098765432099, 0.29317867404490794, 0.2932538838050649, 0.2933290775614427, 0.29340425531914893, 0.293479417083289, 0.2935545628589662, 0.2936296926512815, 0.2937048064653339, 0.2937799043062201, 0.29385498617903466, 0.29393005208886996, 0.29389880952380953, 0.2938675735997449, 0.29383634431455896, 0.29380512166613537, 0.29377390565235867, 0.29374269627111443, 0.2937114935202889, 0.2937865108868826, 0.29386151231945623, 0.29383030689179146, 0.2939052877468677, 0.2939802526807517, 0.2940552016985138, 0.2940239889608322, 0.2939927828486521, 0.29396158335986416, 0.2939303904923599, 0.2938992042440318, 0.29386802461277317, 0.2938368515964782, 0.293805685193042, 0.2937745254003606, 0.29374337221633084, 0.2937122256388506, 0.29368108566581846, 0.29364995229513413, 0.2936188255246979, 0.29358770535241124, 0.2935565917761763, 0.29352548479389634, 0.2934943844034753, 0.2934632906028181, 0.2934322033898305, 0.29340112276241925, 0.29337004871849187, 0.2933389812559568, 0.2933079203727234, 0.29327686606670195, 0.2932458183358035, 0.2932147771779401, 0.29318374259102453, 0.29325854587787065, 0.2932275132275132, 0.29319648714421753, 0.29327126534066866, 0.293346027716069, 0.29342077427543894, 0.29349550502379695, 0.29357021996615906, 0.29364491910753937, 0.29371960245294987, 0.2937942700074004, 0.2938689217758985, 0.29383786069125883, 0.2939124920735574, 0.2938814329493818, 0.29395604395604397, 0.29403063919704175, 0.29410521867737166, 0.2940741523185803, 0.29404309252217997, 0.29411764705882354, 0.2941921858500528, 0.29426670890085527, 0.29434121621621623, 0.294415707801119, 0.29449018366054464, 0.29445910290237465, 0.29442802870409457, 0.2943969610636277, 0.2943658999788985, 0.2944403418082076, 0.29451476793248943, 0.29458917835671344, 0.29466357308584684, 0.294737952124855, 0.29481231547870096, 0.2948866631523458, 0.2948555766392579, 0.2948244966796669, 0.2947934232715008, 0.2947623564126884, 0.2947312961011591, 0.29470024233484354, 0.294669195111673, 0.2946381544295797, 0.2946071202864967, 0.29457609268035806, 0.29454507160909854, 0.29451405707065387, 0.29448304906296063, 0.2944520475839562, 0.2945263157894737, 0.2944953162824966, 0.2944643233003578, 0.2944333368409976, 0.2944023569023569, 0.2943713834823777, 0.29434041657900273, 0.2943094561901757, 0.29427850231384095, 0.2942475549479441, 0.29421661409043115, 0.2941856797392493, 0.2941547518923465, 0.2941238305476716, 0.29409291570317425, 0.29416710457172884, 0.2942412778478352, 0.29431543553640854, 0.29438957764236184, 0.294358651118815, 0.294327731092437, 0.29429681756118053, 0.2943709304767906, 0.2944450278273653, 0.29451910961780764, 0.29459317585301836, 0.2946672265378963, 0.2947412616773381, 0.29481528127623846, 0.29488928533949, 0.29485834207764955, 0.2948274053089917, 0.29479647503147294, 0.2947655512430505, 0.2947346339416824, 0.2947037231253277, 0.2946728187919463, 0.2946419209394988, 0.29461102956594676, 0.29458014466925253, 0.2945492662473795, 0.2945183942982916, 0.2944875288199539, 0.2944566698103322, 0.29442581726739314, 0.29439497118910424, 0.2943641315734339, 0.2943332984183513, 0.29430247172182655, 0.29427165148183054, 0.2942408376963351, 0.2942100303633127, 0.294179229480737, 0.2941484350465822, 0.29411764705882354, 0.29408686551543695, 0.29405609041439934, 0.2940253217536884, 0.2939945595312827, 0.2939638037451616, 0.2939330543933054, 0.2940069030436147, 0.2940807362476469, 0.29404998431454565, 0.29412379757423673, 0.29419759539989543, 0.29416684089483586, 0.29413609281906555, 0.2941053511705686, 0.2940746159473299, 0.2941483803552769, 0.2942221293490753, 0.2942958629335562, 0.2943695811135485, 0.29444328389387925, 0.2945169712793734, 0.2945906432748538, 0.2946642998851415, 0.2946335351847985, 0.29460277690781916, 0.29457202505219204, 0.2945412796159065, 0.29451054059695264, 0.2944798079933215, 0.294449081803005, 0.29441836202399585, 0.2943876486542875, 0.29435694169187443, 0.29432624113475175, 0.29429554698091565, 0.2942648592283629, 0.2942341778750912, 0.29420350291909925, 0.2941728343583863, 0.2941421721909527, 0.2941115164147994, 0.2940808670279283, 0.2940502240283422, 0.2940195874140446, 0.2939889571830399, 0.2939583333333333, 0.2939277158629309, 0.2938971047698396, 0.29386650005206705, 0.2938359017076218, 0.2938053097345133, 0.2937747241307516, 0.29374414489434786, 0.2937135720233139, 0.2936830055156624, 0.2936524453694069, 0.29362189158256163, 0.2935913441531419, 0.2936648288775616, 0.2936342833368005, 0.293603744149766, 0.29367720465890185, 0.29364666735988354, 0.29361613641089623, 0.29358561180995946, 0.29365904365904366, 0.293732460243218, 0.29380586156724176, 0.29377532993868855, 0.2937448046550291, 0.2937142857142857, 0.2936837731144816, 0.2936532668536408, 0.2936227669297881, 0.29359227334094923, 0.29356178608515054, 0.2935313051604195, 0.29350083056478404, 0.2934703622962732, 0.2934399003529167, 0.2934094447327452, 0.29337899543379, 0.2933485524540832, 0.293318115791658, 0.2932876854445482, 0.2932572614107884, 0.29322684368841406, 0.29319643227546155, 0.29316602716996787, 0.293135628369971, 0.2931052358735096, 0.29307484967862324, 0.29304446978335236, 0.293014096185738, 0.2929837288838222, 0.2929533678756477, 0.29302662936483265, 0.29309987567343554, 0.29317310680617426, 0.29324632276776463, 0.2933195235629208, 0.29328914664457334, 0.2932587760173967, 0.29322841167943675, 0.29330158401490836, 0.2933747412008282, 0.2934478832419004, 0.29352101014282755, 0.2934906343785574, 0.29346026490066224, 0.2934299017071909, 0.29350300020691084, 0.2935760835833247, 0.29354571783202316, 0.2935153583617747, 0.2934850051706308, 0.2934546582566436, 0.293424317617866, 0.2933939832523519, 0.2933636551581559, 0.29333333333333333, 0.2933030177759405, 0.2932727084840343, 0.29324240545567265, 0.2932121086889141, 0.29318181818181815, 0.293151533932445, 0.29312125593885563, 0.29309098419911184, 0.29316398182569187, 0.29313371192565824, 0.29310344827586204, 0.29307319087436773, 0.2930429397192403, 0.29301269480854575, 0.2929824561403509, 0.29295222371272317, 0.29292199752373094, 0.2929949448055298, 0.2929647204456365, 0.2929345023207839, 0.29300742574257427, 0.29308033412395584, 0.29315322746958133, 0.29322610578410147, 0.2931958762886598, 0.29316565302546127, 0.2932385075242218, 0.2933113470060806, 0.29338417147568013, 0.293456980937661, 0.29342674634246857, 0.29339651797671784, 0.2934693036670787, 0.29354207436399216, 0.29351184346035014, 0.29358459478941407, 0.29365733113673803, 0.29373005250694945, 0.2936998147004324, 0.2936695831188883, 0.29363935776039524, 0.2936091386230318, 0.29357892570487754, 0.29354871900401275, 0.2935185185185185, 0.2934883242464767, 0.29345813618596994, 0.2934279543350818, 0.2933977786918963, 0.29336760925449873, 0.2933374460209747, 0.29330728898941094, 0.29327713815789475, 0.2933497790112036, 0.2933196300102775, 0.29328948720583703, 0.2933621043978627, 0.2933319634234049, 0.2933018286418738, 0.2933744221879815, 0.29344700082169267, 0.2935195645476019, 0.2935921133703019, 0.2936646472943834, 0.2936344969199179, 0.2936043527358587, 0.2935742147402997, 0.29364672072257003, 0.2937192118226601, 0.2937916880451514, 0.2938641493946234, 0.29393659587565407, 0.29400902749281904, 0.2940814442506924, 0.29405128205128206, 0.29402112603835506, 0.2940935192780968, 0.294165897672511, 0.29413573918392455, 0.29410558687852384, 0.29407544075440756, 0.294147791329302, 0.29422012707522033, 0.294292447996721, 0.29436475409836066, 0.2943345968650753, 0.29430444581028475, 0.29427430093209056, 0.29424416222859484, 0.29421402969790067, 0.29418390333811184, 0.29415378314733287, 0.2942260442260442, 0.2942982905107995, 0.2943705220061412, 0.2943403950465664, 0.2943102742529677, 0.2943824823493298, 0.29445467567014527, 0.29452685421994884, 0.2945990180032733, 0.2945688861613992, 0.2945387604827163, 0.29450864096533386, 0.2945807770961145, 0.2945506594417749, 0.2945205479452055, 0.29459266073801493, 0.294664758789861, 0.29473684210526313, 0.294808910688739, 0.2947787881884132, 0.29485083776052307, 0.29492287261211564, 0.29499489274770174, 0.29506689817179044, 0.2951388888888889, 0.2951087511487797, 0.29518072289156627, 0.2951505870342011, 0.29512045732952225, 0.2950903337756456, 0.2950602163706879, 0.2951321563424839, 0.29520408163265305, 0.29527599224568923, 0.2953478881860845, 0.2953177598694277, 0.29528763769889843, 0.29535951045385006, 0.2954313685498674, 0.29540124400938106, 0.2953711256117455, 0.29534101335508206, 0.29531090723751274, 0.2952808072571603, 0.29525071341214837, 0.29522062570060126, 0.295190544120644, 0.29516046867040246, 0.2952322738386308, 0.29530406437811957, 0.29527398655530657, 0.29534575822385173, 0.2954175152749491, 0.29548925771306384, 0.29556098554265936, 0.2956326987681971, 0.2957043973941368, 0.2957760814249364, 0.2957459800529208, 0.29571588480716393, 0.29568579568579567, 0.2956557126869468, 0.29562563580874873, 0.29559556504933376, 0.2955655004068348, 0.29553544187938574, 0.295505389465121, 0.2954753431621759, 0.2954453029686865, 0.29541526888278946, 0.29538524090262247, 0.29535521902632383, 0.29532520325203254, 0.2952951935778884, 0.2952651900020321, 0.2952351925226049, 0.2952052011377489, 0.2951752158456069, 0.2951452366443226, 0.2951152635320402, 0.29508529650690496, 0.29505533556706265, 0.2951269035532995, 0.29519845700944064, 0.29526999593991066, 0.29534152034913225, 0.29541303024152626, 0.2954845256215119, 0.2955560064935065, 0.29562747286192553, 0.29559748427672955, 0.29566893194035904, 0.2957403651115619, 0.29571037420139945, 0.2956803893733523, 0.2956504106255703, 0.2956204379562044, 0.295590471363406, 0.29556051084532736, 0.2955305564001216, 0.2955006080259424, 0.2954706657209444, 0.29544072948328265, 0.29541079931111336, 0.2953808752025932, 0.29535095715587967, 0.29532104516913105, 0.2952911392405063, 0.29526123936816523, 0.2952313455502683, 0.2953026928528042, 0.2953740257111044, 0.2953441295546559, 0.2954154437809938, 0.29548674357417526, 0.2955580289385814, 0.29562929987859166, 0.2957005563985837, 0.2956706453570706, 0.29564074036613736, 0.2956108414239482, 0.29568207098796645, 0.29575328614762386, 0.29572338489535943, 0.2956934896886373, 0.2956636005256242, 0.2956337174044876, 0.29560384032339565, 0.2955739692805174, 0.29554410427402245, 0.2955142453020812, 0.29548439236286494, 0.29545454545454547, 0.2954247045752954, 0.2953948697232882, 0.29536504089669796, 0.2953352180936995, 0.29530540131246846, 0.2952755905511811, 0.2952457858080145, 0.29521598708114655, 0.29518619436875565, 0.2951564076690212, 0.2951266269801231, 0.29509685230024213, 0.2950670836275598, 0.2950373209602582, 0.2950075642965204, 0.2949778136345301, 0.2949480689724715, 0.2950191570881226, 0.2950902308700474, 0.29516129032258065, 0.29523233545005545, 0.2952025801249748, 0.29517283079713796, 0.2952438532849657, 0.29521410579345087, 0.2951843642957888, 0.29515462879016824, 0.2951248992747784, 0.29509517574780947, 0.29506545820745217, 0.2950357466518981, 0.29500604107933953, 0.2949763414879694, 0.29494664787598146, 0.2949169602415702, 0.29488727858293073, 0.294857602898259, 0.2948279331857517, 0.294798269443606, 0.2947686116700201, 0.2947389598631928, 0.29470931402132367, 0.29467967414261287, 0.2946500402252615, 0.2946204122674711, 0.2945907902674442, 0.29456117422338396, 0.2945315641334942, 0.2945019599959795, 0.29447236180904524, 0.2944427695708974, 0.2945136655948553, 0.2944840751532201, 0.2944544906570223, 0.29442491210447014, 0.2943953394937726, 0.2943657728231395, 0.29433621209078126, 0.2943066572949091, 0.29427710843373495, 0.2942475655054713, 0.2942180285083317, 0.29418849744052994, 0.294158972300281, 0.2941294530858003, 0.294099939795304, 0.29407043242700914, 0.29404093097913325, 0.29411174641388305, 0.2941825476429288, 0.2942533346705446, 0.29422382671480146, 0.2941943246766269, 0.29416482855424103, 0.29413533834586464, 0.29420609462710506, 0.29427683672446625, 0.2942473441571457, 0.2942178575007516, 0.294188376753507, 0.2941589019136359, 0.2942296133039471, 0.2943003105278974, 0.2943709935897436, 0.2944416624937406, 0.2945123172441418, 0.2945829578451988, 0.2946535843011614, 0.2947241966162779, 0.29469469469469467, 0.2947652887598839, 0.294835868694956, 0.2949064345041529, 0.29487692615569344, 0.2948474237118559, 0.29481792717086835, 0.294888466539962, 0.2948589717943589, 0.2948294829482948, 0.2949], [0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.1, 0.18181818181818182, 0.25, 0.3076923076923077, 0.35714285714285715, 0.4, 0.375, 0.35294117647058826, 0.3333333333333333, 0.3157894736842105, 0.3, 0.2857142857142857, 0.2727272727272727, 0.30434782608695654, 0.3333333333333333, 0.36, 0.38461538461538464, 0.37037037037037035, 0.35714285714285715, 0.3448275862068966, 0.3333333333333333, 0.3225806451612903, 0.3125, 0.30303030303030304, 0.29411764705882354, 0.2857142857142857, 0.2777777777777778, 0.2702702702702703, 0.2631578947368421, 0.2564102564102564, 0.25, 0.24390243902439024, 0.23809523809523808, 0.23255813953488372, 0.22727272727272727, 0.2222222222222222, 0.21739130434782608, 0.2127659574468085, 0.20833333333333334, 0.20408163265306123, 0.2, 0.21568627450980393, 0.21153846153846154, 0.20754716981132076, 0.2222222222222222, 0.23636363636363636, 0.25, 0.2631578947368421, 0.27586206896551724, 0.288135593220339, 0.2833333333333333, 0.29508196721311475, 0.3064516129032258, 0.31746031746031744, 0.328125, 0.3384615384615385, 0.3484848484848485, 0.34328358208955223, 0.3382352941176471, 0.3333333333333333, 0.32857142857142857, 0.323943661971831, 0.3194444444444444, 0.3150684931506849, 0.3108108108108108, 0.30666666666666664, 0.3026315789473684, 0.2987012987012987, 0.2948717948717949, 0.2911392405063291, 0.2875, 0.2839506172839506, 0.2926829268292683, 0.2891566265060241, 0.2857142857142857, 0.2823529411764706, 0.27906976744186046, 0.27586206896551724, 0.2727272727272727, 0.2696629213483146, 0.26666666666666666, 0.26373626373626374, 0.2717391304347826, 0.27956989247311825, 0.2872340425531915, 0.28421052631578947, 0.28125, 0.27835051546391754, 0.2755102040816326, 0.2828282828282828, 0.29, 0.297029702970297, 0.30392156862745096, 0.3106796116504854, 0.3173076923076923, 0.3238095238095238, 0.330188679245283, 0.3364485981308411, 0.3425925925925926, 0.3486238532110092, 0.35454545454545455, 0.36036036036036034, 0.36607142857142855, 0.36283185840707965, 0.35964912280701755, 0.3565217391304348, 0.3620689655172414, 0.36752136752136755, 0.3728813559322034, 0.37815126050420167, 0.38333333333333336, 0.3884297520661157, 0.38524590163934425, 0.3821138211382114, 0.3790322580645161, 0.376, 0.373015873015873, 0.3700787401574803, 0.3671875, 0.3643410852713178, 0.36153846153846153, 0.35877862595419846, 0.3560606060606061, 0.3533834586466165, 0.35074626865671643, 0.34814814814814815, 0.34558823529411764, 0.34306569343065696, 0.34057971014492755, 0.3381294964028777, 0.3357142857142857, 0.3333333333333333, 0.33098591549295775, 0.32867132867132864, 0.3333333333333333, 0.33793103448275863, 0.3424657534246575, 0.3469387755102041, 0.35135135135135137, 0.35570469798657717, 0.36, 0.36423841059602646, 0.3684210526315789, 0.37254901960784315, 0.37662337662337664, 0.38064516129032255, 0.3782051282051282, 0.37579617834394907, 0.37341772151898733, 0.3710691823899371, 0.36875, 0.36645962732919257, 0.36419753086419754, 0.3619631901840491, 0.3597560975609756, 0.3575757575757576, 0.35542168674698793, 0.3532934131736527, 0.35119047619047616, 0.34911242603550297, 0.34705882352941175, 0.34502923976608185, 0.3430232558139535, 0.34104046242774566, 0.3390804597701149, 0.33714285714285713, 0.3352272727272727, 0.3389830508474576, 0.34269662921348315, 0.3463687150837989, 0.35, 0.35359116022099446, 0.3516483516483517, 0.34972677595628415, 0.34782608695652173, 0.34594594594594597, 0.34946236559139787, 0.35294117647058826, 0.35638297872340424, 0.3544973544973545, 0.3526315789473684, 0.3507853403141361, 0.3489583333333333, 0.3471502590673575, 0.34536082474226804, 0.3435897435897436, 0.34183673469387754, 0.34517766497461927, 0.3484848484848485, 0.34673366834170855, 0.345, 0.34328358208955223, 0.3415841584158416, 0.3399014778325123, 0.3382352941176471, 0.33658536585365856, 0.33495145631067963, 0.3333333333333333, 0.3317307692307692, 0.33014354066985646, 0.32857142857142857, 0.32701421800947866, 0.32547169811320753, 0.323943661971831, 0.32242990654205606, 0.3209302325581395, 0.3194444444444444, 0.31797235023041476, 0.3211009174311927, 0.3242009132420091, 0.32727272727272727, 0.33031674208144796, 0.32882882882882886, 0.3273542600896861, 0.33035714285714285, 0.3333333333333333, 0.336283185840708, 0.3392070484581498, 0.34210526315789475, 0.34497816593886466, 0.34782608695652173, 0.35064935064935066, 0.35344827586206895, 0.3562231759656652, 0.358974358974359, 0.3617021276595745, 0.3644067796610169, 0.3670886075949367, 0.3697478991596639, 0.3682008368200837, 0.36666666666666664, 0.3651452282157676, 0.36363636363636365, 0.3662551440329218, 0.36885245901639346, 0.37142857142857144, 0.37398373983739835, 0.3765182186234818, 0.3790322580645161, 0.37751004016064255, 0.376, 0.3745019920318725, 0.373015873015873, 0.3715415019762846, 0.3700787401574803, 0.3686274509803922, 0.3671875, 0.3657587548638132, 0.3682170542635659, 0.37065637065637064, 0.3730769230769231, 0.37547892720306514, 0.37404580152671757, 0.3726235741444867, 0.3712121212121212, 0.36981132075471695, 0.3684210526315789, 0.36704119850187267, 0.3656716417910448, 0.3680297397769517, 0.37037037037037035, 0.3726937269372694, 0.375, 0.3772893772893773, 0.3795620437956204, 0.38181818181818183, 0.38405797101449274, 0.3862815884476534, 0.38848920863309355, 0.3906810035842294, 0.39285714285714285, 0.39501779359430605, 0.3971631205673759, 0.3992932862190813, 0.4014084507042254, 0.40350877192982454, 0.40559440559440557, 0.40418118466898956, 0.4027777777777778, 0.4013840830449827, 0.40344827586206894, 0.4054982817869416, 0.4075342465753425, 0.40955631399317405, 0.41156462585034015, 0.4135593220338983, 0.4155405405405405, 0.4175084175084175, 0.41946308724832215, 0.4214046822742475, 0.42333333333333334, 0.42524916943521596, 0.4271523178807947, 0.429042904290429, 0.4309210526315789, 0.43278688524590164, 0.434640522875817, 0.4364820846905538, 0.4383116883116883, 0.4401294498381877, 0.43870967741935485, 0.43729903536977494, 0.4358974358974359, 0.43450479233226835, 0.43312101910828027, 0.43492063492063493, 0.43670886075949367, 0.4384858044164038, 0.44025157232704404, 0.44200626959247646, 0.44375, 0.4454828660436137, 0.4472049689440994, 0.44891640866873067, 0.4506172839506173, 0.4523076923076923, 0.450920245398773, 0.44954128440366975, 0.45121951219512196, 0.45288753799392095, 0.45454545454545453, 0.45317220543806647, 0.45180722891566266, 0.45045045045045046, 0.4491017964071856, 0.44776119402985076, 0.44642857142857145, 0.44510385756676557, 0.4437869822485207, 0.4424778761061947, 0.4411764705882353, 0.4398826979472141, 0.43859649122807015, 0.43731778425655976, 0.436046511627907, 0.43478260869565216, 0.43352601156069365, 0.4322766570605187, 0.43103448275862066, 0.4297994269340974, 0.42857142857142855, 0.4301994301994302, 0.4318181818181818, 0.43342776203966005, 0.4350282485875706, 0.43661971830985913, 0.43820224719101125, 0.43977591036414565, 0.441340782122905, 0.4428969359331476, 0.4444444444444444, 0.44598337950138506, 0.44751381215469616, 0.4490358126721763, 0.45054945054945056, 0.4520547945205479, 0.453551912568306, 0.4550408719346049, 0.45652173913043476, 0.45799457994579945, 0.4594594594594595, 0.4609164420485175, 0.46236559139784944, 0.46380697050938335, 0.46524064171123, 0.4666666666666667, 0.46808510638297873, 0.46949602122015915, 0.4708994708994709, 0.47229551451187335, 0.47368421052631576, 0.47506561679790027, 0.47643979057591623, 0.4751958224543081, 0.4739583333333333, 0.4727272727272727, 0.4740932642487047, 0.4754521963824289, 0.47680412371134023, 0.4781491002570694, 0.47692307692307695, 0.47570332480818417, 0.4744897959183674, 0.4732824427480916, 0.4720812182741117, 0.4708860759493671, 0.4696969696969697, 0.46851385390428213, 0.46733668341708545, 0.46616541353383456, 0.465, 0.46384039900249374, 0.4626865671641791, 0.46153846153846156, 0.4603960396039604, 0.45925925925925926, 0.458128078817734, 0.457002457002457, 0.4583333333333333, 0.45965770171149145, 0.4585365853658537, 0.45742092457420924, 0.4563106796116505, 0.4552058111380145, 0.45410628019323673, 0.4530120481927711, 0.4519230769230769, 0.45083932853717024, 0.44976076555023925, 0.4486873508353222, 0.44761904761904764, 0.44655581947743467, 0.44549763033175355, 0.4444444444444444, 0.44339622641509435, 0.4423529411764706, 0.4413145539906103, 0.4426229508196721, 0.4439252336448598, 0.44522144522144524, 0.44651162790697674, 0.44779582366589327, 0.44907407407407407, 0.4503464203233256, 0.45161290322580644, 0.4528735632183908, 0.4541284403669725, 0.45308924485125857, 0.4520547945205479, 0.4510250569476082, 0.45227272727272727, 0.45351473922902497, 0.45475113122171945, 0.45598194130925507, 0.4572072072072072, 0.4584269662921348, 0.45739910313901344, 0.4563758389261745, 0.45535714285714285, 0.45434298440979953, 0.4533333333333333, 0.4523281596452328, 0.45132743362831856, 0.4503311258278146, 0.44933920704845814, 0.44835164835164837, 0.44956140350877194, 0.45076586433260396, 0.4519650655021834, 0.4531590413943355, 0.4543478260869565, 0.455531453362256, 0.45670995670995673, 0.45788336933045354, 0.45905172413793105, 0.46021505376344085, 0.4613733905579399, 0.4625267665952891, 0.4636752136752137, 0.464818763326226, 0.46595744680851064, 0.46709129511677283, 0.4682203389830508, 0.4693446088794926, 0.4704641350210971, 0.47157894736842104, 0.4726890756302521, 0.47379454926624737, 0.47489539748953974, 0.4759916492693111, 0.47708333333333336, 0.4781704781704782, 0.47925311203319504, 0.4803312629399586, 0.48140495867768596, 0.4824742268041237, 0.4835390946502058, 0.48459958932238195, 0.48565573770491804, 0.4867075664621677, 0.48775510204081635, 0.48879837067209775, 0.4898373983739837, 0.48884381338742394, 0.48785425101214575, 0.4868686868686869, 0.48588709677419356, 0.48490945674044267, 0.4839357429718876, 0.48296593186372744, 0.482, 0.4810379241516966, 0.4800796812749004, 0.47912524850894633, 0.4781746031746032, 0.4772277227722772, 0.4762845849802372, 0.47534516765285995, 0.4744094488188976, 0.47347740667976423, 0.4725490196078431, 0.47162426614481406, 0.470703125, 0.4697855750487329, 0.4688715953307393, 0.4679611650485437, 0.46705426356589147, 0.4661508704061896, 0.46525096525096526, 0.464354527938343, 0.4634615384615385, 0.46257197696737046, 0.4616858237547893, 0.4608030592734226, 0.4599236641221374, 0.45904761904761904, 0.45817490494296575, 0.45920303605313095, 0.4583333333333333, 0.45746691871455575, 0.45660377358490567, 0.455743879472693, 0.4567669172932331, 0.45778611632270166, 0.45880149812734083, 0.45981308411214955, 0.4608208955223881, 0.4618249534450652, 0.4628252788104089, 0.46382189239332094, 0.4648148148148148, 0.4658040665434381, 0.466789667896679, 0.4677716390423573, 0.46875, 0.46972477064220186, 0.4706959706959707, 0.4716636197440585, 0.4726277372262774, 0.47358834244080145, 0.47454545454545455, 0.47368421052631576, 0.47282608695652173, 0.4719710669077758, 0.4711191335740072, 0.4702702702702703, 0.4694244604316547, 0.46858168761220825, 0.46774193548387094, 0.4669051878354204, 0.4660714285714286, 0.46524064171123, 0.46441281138790036, 0.4635879218472469, 0.4627659574468085, 0.46371681415929206, 0.4628975265017668, 0.4620811287477954, 0.4612676056338028, 0.46045694200351495, 0.45964912280701753, 0.45884413309982486, 0.458041958041958, 0.4572425828970332, 0.4564459930313589, 0.45565217391304347, 0.4548611111111111, 0.4540727902946274, 0.4532871972318339, 0.4525043177892919, 0.4517241379310345, 0.4509466437177281, 0.45017182130584193, 0.451114922813036, 0.4520547945205479, 0.452991452991453, 0.4539249146757679, 0.454855195911414, 0.4557823129251701, 0.4567062818336163, 0.4576271186440678, 0.45854483925549916, 0.4594594594594595, 0.46037099494097805, 0.4612794612794613, 0.46218487394957986, 0.46308724832214765, 0.4639865996649916, 0.46488294314381273, 0.4657762938230384, 0.4666666666666667, 0.46755407653910147, 0.46677740863787376, 0.4660033167495854, 0.4652317880794702, 0.4644628099173554, 0.4636963696369637, 0.4645799011532125, 0.4654605263157895, 0.46469622331691296, 0.4639344262295082, 0.46317512274959083, 0.4624183006535948, 0.46166394779771613, 0.4609120521172638, 0.46178861788617886, 0.46266233766233766, 0.46353322528363045, 0.46440129449838186, 0.46526655896607433, 0.4661290322580645, 0.4669887278582931, 0.4678456591639871, 0.46709470304975925, 0.46634615384615385, 0.4656, 0.46485623003194887, 0.46570972886762363, 0.46656050955414013, 0.465818759936407, 0.4650793650793651, 0.4643423137876387, 0.46360759493670883, 0.4628751974723539, 0.46214511041009465, 0.46141732283464565, 0.4606918238993711, 0.4599686028257457, 0.4592476489028213, 0.458528951486698, 0.4578125, 0.45709828393135726, 0.45638629283489096, 0.4556765163297045, 0.4549689440993789, 0.4542635658914729, 0.4535603715170279, 0.4528593508500773, 0.4521604938271605, 0.4514637904468413, 0.45076923076923076, 0.45161290322580644, 0.45245398773006135, 0.45329249617151607, 0.4541284403669725, 0.4549618320610687, 0.4557926829268293, 0.45662100456621, 0.4574468085106383, 0.4582701062215478, 0.4590909090909091, 0.4599092284417549, 0.4607250755287009, 0.46153846153846156, 0.4608433734939759, 0.46015037593984964, 0.4594594594594595, 0.4587706146926537, 0.45808383233532934, 0.45739910313901344, 0.45671641791044776, 0.45603576751117736, 0.45535714285714285, 0.45468053491827637, 0.4540059347181009, 0.4533333333333333, 0.4526627218934911, 0.4519940915805022, 0.45132743362831856, 0.45066273932253315, 0.45, 0.44933920704845814, 0.44868035190615835, 0.4494875549048316, 0.4502923976608187, 0.4510948905109489, 0.4518950437317784, 0.45269286754002913, 0.45348837209302323, 0.45428156748911463, 0.45507246376811594, 0.4558610709117221, 0.4552023121387283, 0.45454545454545453, 0.4538904899135447, 0.45323741007194246, 0.4525862068965517, 0.4519368723098996, 0.4512893982808023, 0.45064377682403434, 0.45, 0.44935805991440797, 0.44871794871794873, 0.4480796586059744, 0.4474431818181818, 0.44680851063829785, 0.4461756373937677, 0.44554455445544555, 0.4449152542372881, 0.44428772919605075, 0.44366197183098594, 0.4444444444444444, 0.4452247191011236, 0.44600280504908835, 0.44677871148459386, 0.44755244755244755, 0.4483240223463687, 0.4490934449093445, 0.44986072423398327, 0.4506258692628651, 0.4513888888888889, 0.4521497919556172, 0.45290858725761773, 0.4536652835408022, 0.4544198895027624, 0.45379310344827584, 0.453168044077135, 0.45254470426409904, 0.4519230769230769, 0.4513031550068587, 0.4506849315068493, 0.45006839945280436, 0.4494535519125683, 0.4488403819918145, 0.4482288828337875, 0.44761904761904764, 0.4483695652173913, 0.4491180461329715, 0.44986449864498645, 0.4506089309878214, 0.45, 0.4493927125506073, 0.44878706199460916, 0.44818304172274565, 0.4475806451612903, 0.4469798657718121, 0.44638069705093836, 0.4457831325301205, 0.4451871657754011, 0.4445927903871829, 0.444, 0.4434087882822903, 0.4428191489361702, 0.44223107569721115, 0.4416445623342175, 0.4410596026490066, 0.44047619047619047, 0.43989431968295906, 0.44063324538258575, 0.4413702239789196, 0.4421052631578947, 0.442838370565046, 0.4435695538057743, 0.4442988204456094, 0.44502617801047123, 0.44575163398692813, 0.4464751958224543, 0.4471968709256845, 0.4479166666666667, 0.4486345903771131, 0.44935064935064933, 0.45006485084306097, 0.45077720207253885, 0.4514877102199224, 0.45219638242894056, 0.4529032258064516, 0.4536082474226804, 0.4543114543114543, 0.455012853470437, 0.4557124518613607, 0.4564102564102564, 0.45710627400768244, 0.45652173913043476, 0.4559386973180077, 0.45663265306122447, 0.45605095541401275, 0.455470737913486, 0.4548919949174079, 0.4543147208121827, 0.4550063371356147, 0.45569620253164556, 0.4563843236409608, 0.45707070707070707, 0.45775535939470363, 0.45843828715365237, 0.4578616352201258, 0.457286432160804, 0.45671267252195735, 0.45614035087719296, 0.4555694618272841, 0.455, 0.4544319600499376, 0.4538653366583541, 0.4533001245330012, 0.4527363184079602, 0.45217391304347826, 0.45161290322580644, 0.4510532837670384, 0.4504950495049505, 0.449938195302843, 0.44938271604938274, 0.45006165228113443, 0.45073891625615764, 0.45141451414514144, 0.4520884520884521, 0.452760736196319, 0.4522058823529412, 0.45165238678090575, 0.4511002444987775, 0.45054945054945056, 0.45, 0.44945188794153473, 0.4489051094890511, 0.44835965978128794, 0.44781553398058255, 0.44727272727272727, 0.4467312348668281, 0.44619105199516323, 0.44565217391304346, 0.4451145958986731, 0.44457831325301206, 0.44404332129963897, 0.44350961538461536, 0.4429771908763505, 0.44244604316546765, 0.4419161676646707, 0.44138755980861244, 0.44086021505376344, 0.4403341288782816, 0.4398092967818832, 0.44047619047619047, 0.441141498216409, 0.4418052256532066, 0.4424673784104389, 0.4431279620853081, 0.44260355029585796, 0.44208037825059104, 0.44155844155844154, 0.4410377358490566, 0.44051825677267376, 0.44, 0.4394829612220917, 0.43896713615023475, 0.4384525205158265, 0.4379391100702576, 0.43742690058479533, 0.4380841121495327, 0.4387397899649942, 0.4393939393939394, 0.440046565774156, 0.44069767441860463, 0.4413472706155633, 0.4419953596287703, 0.4426419466975666, 0.44328703703703703, 0.4439306358381503, 0.4445727482678984, 0.44521337946943484, 0.44585253456221197, 0.44649021864211735, 0.4471264367816092, 0.44661308840413316, 0.4461009174311927, 0.44558991981672397, 0.4450800915331808, 0.44457142857142856, 0.4440639269406393, 0.443557582668187, 0.44419134396355353, 0.4448236632536974, 0.44545454545454544, 0.4460839954597049, 0.4467120181405896, 0.44733861834654587, 0.4468325791855204, 0.4463276836158192, 0.445823927765237, 0.44532130777903045, 0.44481981981981983, 0.44431946006749157, 0.4438202247191011, 0.44332210998877664, 0.4428251121076233, 0.4423292273236282, 0.441834451901566, 0.441340782122905, 0.4408482142857143, 0.4403567447045708, 0.4398663697104677, 0.43937708565072303, 0.4388888888888889, 0.4384017758046615, 0.4379157427937916, 0.4374307862679956, 0.43694690265486724, 0.43646408839779005, 0.4359823399558499, 0.4355016538037486, 0.43502202643171806, 0.43454345434543457, 0.4340659340659341, 0.433589462129528, 0.4331140350877193, 0.43263964950711936, 0.43216630196936545, 0.43169398907103823, 0.43122270742358076, 0.430752453653217, 0.43028322440087147, 0.42981501632208924, 0.42934782608695654, 0.42996742671009774, 0.43058568329718006, 0.4312026002166847, 0.4318181818181818, 0.43243243243243246, 0.4330453563714903, 0.4325782092772384, 0.43211206896551724, 0.4327233584499462, 0.43333333333333335, 0.4339419978517723, 0.434549356223176, 0.43515541264737406, 0.43576017130620986, 0.43636363636363634, 0.4358974358974359, 0.43543223052294555, 0.4349680170575693, 0.43450479233226835, 0.4340425531914894, 0.43358129649309246, 0.43312101910828027, 0.432661717921527, 0.4322033898305085, 0.43174603174603177, 0.4312896405919662, 0.43083421330517424, 0.43037974683544306, 0.42992623814541625, 0.42947368421052634, 0.42902208201892744, 0.42857142857142855, 0.4281217208814271, 0.4276729559748428, 0.4272251308900524, 0.42677824267782427, 0.4263322884012539, 0.42588726513569936, 0.4254431699687174, 0.425, 0.4255983350676379, 0.4261954261954262, 0.42679127725856697, 0.42738589211618255, 0.42797927461139895, 0.42857142857142855, 0.42916235780765255, 0.4297520661157025, 0.43034055727554177, 0.4309278350515464, 0.431513903192585, 0.43209876543209874, 0.43268242548818087, 0.433264887063655, 0.4338461538461538, 0.4344262295081967, 0.43500511770726713, 0.43558282208588955, 0.43615934627170583, 0.43673469387755104, 0.43730886850152906, 0.4378818737270876, 0.43845371312309256, 0.43902439024390244, 0.43959390862944164, 0.44016227180527384, 0.44072948328267475, 0.44129554655870445, 0.4418604651162791, 0.44242424242424244, 0.4429868819374369, 0.4435483870967742, 0.44410876132930516, 0.44466800804828976, 0.4452261306532663, 0.4457831325301205, 0.4463390170511535, 0.4468937875751503, 0.44744744744744747, 0.448, 0.4485514485514486, 0.4491017964071856, 0.44965104685942175, 0.450199203187251, 0.4507462686567164, 0.45129224652087474, 0.45183714001986097, 0.4523809523809524, 0.4529236868186323, 0.4534653465346535, 0.4530168150346192, 0.4525691699604743, 0.4521224086870681, 0.4516765285996055, 0.45123152709359604, 0.4507874015748031, 0.4503441494591937, 0.449901768172888, 0.4494602551521099, 0.44901960784313727, 0.4485798237022527, 0.4481409001956947, 0.447702834799609, 0.4482421875, 0.44878048780487806, 0.449317738791423, 0.4498539435248296, 0.45038910505836577, 0.4509232264334305, 0.45145631067961167, 0.451988360814743, 0.45155038759689925, 0.45111326234269117, 0.4506769825918762, 0.4502415458937198, 0.4498069498069498, 0.4493731918997107, 0.4489402697495183, 0.44850818094321465, 0.4480769230769231, 0.44764649375600385, 0.4472168905950096, 0.4467881112176414, 0.446360153256705, 0.44593301435406696, 0.4464627151051625, 0.4469914040114613, 0.44751908396946566, 0.44804575786463297, 0.44857142857142857, 0.4490960989533777, 0.44961977186311786, 0.45014245014245013, 0.4506641366223909, 0.45023696682464454, 0.4498106060606061, 0.44938505203405865, 0.44896030245746693, 0.4485363550519358, 0.4481132075471698, 0.44769085768143263, 0.4472693032015066, 0.4468485418626529, 0.44642857142857145, 0.4460093896713615, 0.4455909943714822, 0.4451733833177132, 0.4447565543071161, 0.4452759588400374, 0.44485981308411215, 0.4444444444444444, 0.4449626865671642, 0.44547996272134205, 0.44599627560521415, 0.44651162790697674, 0.44702602230483274, 0.44753946146703805, 0.44805194805194803, 0.448563484708063, 0.44907407407407407, 0.4495837187789084, 0.45009242144177447, 0.44967682363804246, 0.4492619926199262, 0.4488479262672811, 0.44843462246777166, 0.44802207911683534, 0.4476102941176471, 0.44719926538108357, 0.44678899082568807, 0.4463794683776352, 0.445970695970696, 0.4455626715462031, 0.44515539305301643, 0.44474885844748857, 0.4443430656934307, 0.4439380127620784, 0.4435336976320583, 0.44313011828935395, 0.44272727272727275, 0.44232515894641233, 0.4419237749546279, 0.44152311876699907, 0.4411231884057971, 0.4407239819004525, 0.4403254972875226, 0.4399277326106594, 0.4395306859205776, 0.4400360685302074, 0.44054054054054054, 0.44104410441044106, 0.44064748201438847, 0.44025157232704404, 0.4398563734290844, 0.43946188340807174, 0.4390681003584229, 0.4386750223813787, 0.43828264758497315, 0.43789097408400357, 0.4375, 0.43710972346119537, 0.43672014260249553, 0.4363312555654497, 0.4359430604982206, 0.43555555555555553, 0.4351687388987567, 0.43478260869565216, 0.43439716312056736, 0.43401240035429584, 0.4336283185840708, 0.4332449160035367, 0.43286219081272087, 0.4324801412180053, 0.43209876543209874, 0.43171806167400884, 0.43133802816901406, 0.4309586631486368, 0.4305799648506151, 0.4302019315188762, 0.4298245614035088, 0.4294478527607362, 0.4290718038528897, 0.42869641294838146, 0.42832167832167833, 0.4279475982532751, 0.42844677137870857, 0.42894507410636445, 0.4294425087108014, 0.4299390774586597, 0.43043478260869567, 0.4309296264118158, 0.4314236111111111, 0.4319167389418907, 0.4324090121317158, 0.4329004329004329, 0.4333910034602076, 0.4338807260155575, 0.43436960276338515, 0.43485763589301124, 0.4353448275862069, 0.43583118001722654, 0.43631669535283996, 0.43680137575236455, 0.4372852233676976, 0.43776824034334766, 0.43825042881646653, 0.4387317909168809, 0.4383561643835616, 0.43798118049615054, 0.4376068376068376, 0.4380871050384287, 0.43856655290102387, 0.4381926683716965, 0.43781942078364566, 0.4374468085106383, 0.4370748299319728, 0.4367034834324554, 0.4363327674023769, 0.4359626802374894, 0.43559322033898307, 0.43522438611346315, 0.4357021996615905, 0.4353338968723584, 0.43496621621621623, 0.4345991561181435, 0.4342327150084317, 0.43386689132266215, 0.4335016835016835, 0.43313708999158956, 0.4327731092436975, 0.4324097397145256, 0.4320469798657718, 0.4316848281642917, 0.43132328308207707, 0.4309623430962343, 0.4306020066889632, 0.4302422723475355, 0.4298831385642738, 0.42952460383653046, 0.42916666666666664, 0.42880932556203166, 0.42845257903494177, 0.42809642560266004, 0.4277408637873754, 0.42821576763485475, 0.4286898839137645, 0.4291632145816073, 0.4288079470198676, 0.4284532671629446, 0.428099173553719, 0.4277456647398844, 0.4273927392739274, 0.427040395713108, 0.42668863261943984, 0.42633744855967076, 0.42598684210526316, 0.4256368118323747, 0.42528735632183906, 0.4249384741591468, 0.4245901639344262, 0.42424242424242425, 0.4238952536824877, 0.42354865085854454, 0.42401960784313725, 0.42448979591836733, 0.42414355628058725, 0.42379788101059496, 0.4234527687296417, 0.4231082180634662, 0.42276422764227645, 0.42242079610073113, 0.42207792207792205, 0.42173560421735606, 0.4213938411669368, 0.42105263157894735, 0.42071197411003236, 0.42037186742118027, 0.420032310177706, 0.41969330104923325, 0.41935483870967744, 0.41901692183722805, 0.41867954911433175, 0.41914722445695896, 0.4188102893890675, 0.41847389558232934, 0.41813804173354735, 0.41780272654370487, 0.41746794871794873, 0.41713370696557245, 0.4168, 0.416466826538769, 0.41613418530351437, 0.4166001596169194, 0.41706539074960125, 0.41752988047808764, 0.4179936305732484, 0.4184566428003182, 0.4189189189189189, 0.4193804606830818, 0.41904761904761906, 0.41871530531324347, 0.4183835182250396, 0.4180522565320665, 0.4177215189873418, 0.41739130434782606, 0.41706161137440756, 0.4167324388318863, 0.416403785488959, 0.4160756501182033, 0.415748031496063, 0.4154209284028324, 0.41509433962264153, 0.4147682639434407, 0.41444270015698587, 0.41411764705882353, 0.41379310344827586, 0.413469068128426, 0.4131455399061033, 0.41282251759186867, 0.4125, 0.41217798594847777, 0.4118564742589704, 0.41153546375681993, 0.411214953271028, 0.41089494163424123, 0.4105754276827372, 0.41025641025641024, 0.40993788819875776, 0.40961986035686576, 0.40930232558139534, 0.40898528272656853, 0.4086687306501548, 0.40835266821345706, 0.4080370942812983, 0.40772200772200773, 0.408179012345679, 0.40863531225905936, 0.4083204930662558, 0.4080061585835258, 0.4076923076923077, 0.40737893927747887, 0.40706605222734255, 0.40752110514198003, 0.40797546012269936, 0.4084291187739464, 0.40888208269525267, 0.4093343534812548, 0.40978593272171254, 0.4102368220015279, 0.41068702290076337, 0.4111365369946606, 0.4115853658536585, 0.412033511043412, 0.4124809741248097, 0.4129277566539924, 0.4133738601823708, 0.4138192862566439, 0.4142640364188164, 0.41470811220621684, 0.41515151515151516, 0.4155942467827404, 0.41603630862329805, 0.41647770219198793, 0.4169184290030212, 0.41735849056603774, 0.4177978883861237, 0.41823662396382816, 0.4186746987951807, 0.418359668924003, 0.4180451127819549, 0.41773102930127726, 0.4174174174174174, 0.41710427606901723, 0.41679160419790107, 0.41647940074906364, 0.4161676646706587, 0.41660433807030667, 0.4170403587443946, 0.4174757281553398, 0.417910447761194, 0.41759880686055184, 0.4172876304023845, 0.41697691734921816, 0.4174107142857143, 0.4178438661710037, 0.4182763744427935, 0.41870824053452116, 0.41913946587537093, 0.4195700518902891, 0.42, 0.4204293116210215, 0.42011834319526625, 0.4198078344419808, 0.4194977843426883, 0.4191881918819188, 0.41887905604719766, 0.4185703758290346, 0.4182621502209131, 0.4179543782192789, 0.4176470588235294, 0.41734019103600295, 0.4170337738619677, 0.41672780630961115, 0.41642228739002934, 0.41684981684981687, 0.4172767203513909, 0.4177029992684711, 0.41812865497076024, 0.4185536888239591, 0.41897810218978104, 0.4194018964259664, 0.4198250728862974, 0.4202476329206118, 0.42066957787481807, 0.42109090909090907, 0.42151162790697677, 0.42193173565722586, 0.4223512336719884, 0.4227701232777375, 0.42318840579710143, 0.4236060825488776, 0.4240231548480463, 0.4244396240057845, 0.42485549132947975, 0.4252707581227437, 0.42568542568542567, 0.4260994953136265, 0.4265129682997118, 0.4269258459323254, 0.4273381294964029, 0.4270309130122214, 0.4267241379310345, 0.4264178033022254, 0.4261119081779053, 0.4258064516129032, 0.42550143266475643, 0.4251968503937008, 0.4248927038626609, 0.4253037884203002, 0.4257142857142857, 0.4261241970021413, 0.42653352353780316, 0.4269422665716322, 0.42735042735042733, 0.4277580071174377, 0.4274537695590327, 0.4271499644633973, 0.4268465909090909, 0.42654364797728883, 0.42624113475177305, 0.42593905031892276, 0.4256373937677054, 0.42533616418966735, 0.42503536067892506, 0.42473498233215545, 0.4244350282485876, 0.42413549752999297, 0.423836389280677, 0.42353770260747003, 0.4232394366197183, 0.42294159042927515, 0.42264416315049225, 0.4223471539002108, 0.4220505617977528, 0.42175438596491227, 0.4221598877980365, 0.42256482130343376, 0.42296918767507, 0.42337298810356894, 0.42377622377622376, 0.42348008385744235, 0.4231843575418994, 0.4235868806699232, 0.42398884239888424, 0.424390243902439, 0.42479108635097496, 0.42519137091162146, 0.42489568845618914, 0.4246004169562196, 0.42430555555555555, 0.42401110340041637, 0.42441054091539526, 0.4248094248094248, 0.425207756232687, 0.42560553633217996, 0.4260027662517289, 0.4257083621285418, 0.425414364640884, 0.4251207729468599, 0.42482758620689653, 0.42453480358373535, 0.42424242424242425, 0.4239504473503097, 0.4236588720770289, 0.4233676975945017, 0.4230769230769231, 0.42278654770075497, 0.4224965706447188, 0.42220699108978754, 0.42191780821917807, 0.4216290212183436, 0.4213406292749658, 0.42105263157894735, 0.4207650273224044, 0.4204778156996587, 0.4201909959072306, 0.41990456714383095, 0.4196185286103542, 0.41933287950987064, 0.41904761904761906, 0.4187627464309993, 0.41847826086956524, 0.418194161575017, 0.417910447761194, 0.4176271186440678, 0.4173441734417344, 0.41706161137440756, 0.4167794316644114, 0.4164976335361731, 0.41621621621621624, 0.4159351789331533, 0.4156545209176788, 0.41537424140256235, 0.41509433962264153, 0.4148148148148148, 0.414535666218035, 0.41425689307330194, 0.41397849462365593, 0.4137004701141706, 0.4134228187919463, 0.4131455399061033, 0.4128686327077748, 0.4125920964501005, 0.41231593038821956, 0.41204013377926424, 0.4117647058823529, 0.4121576486305945, 0.41255006675567424, 0.41294196130753835, 0.41333333333333333, 0.41372418387741505, 0.4141145139813582, 0.4145043246839654, 0.4148936170212766, 0.4152823920265781, 0.4156706507304117, 0.41605839416058393, 0.41644562334217505, 0.41683233929754804, 0.41721854304635764, 0.41760423560555926, 0.41798941798941797, 0.4183740912095175, 0.4187582562747688, 0.41914191419141916, 0.41952506596306066, 0.4199077125906394, 0.419631093544137, 0.41935483870967744, 0.41973684210526313, 0.42011834319526625, 0.4204993429697766, 0.4208798424162837, 0.421259842519685, 0.4216393442622951, 0.42201834862385323, 0.4223968565815324, 0.42277486910994766, 0.42315238718116416, 0.4235294117647059, 0.4239059438275637, 0.42428198433420367, 0.4246575342465753, 0.42503259452411996, 0.4254071661237785, 0.42578125, 0.4261548471047495, 0.4265279583875163, 0.4269005847953216, 0.42727272727272725, 0.42764438676184297, 0.4280155642023346, 0.42838626053143225, 0.42875647668393785, 0.429126213592233, 0.4294954721862872, 0.4298642533936652, 0.42958656330749356, 0.42930923176242736, 0.4290322580645161, 0.42875564152159895, 0.42847938144329895, 0.42884739214423695, 0.4292149292149292, 0.42958199356913185, 0.42994858611825193, 0.43031470777135516, 0.4306803594351733, 0.4310455420141116, 0.43141025641025643, 0.4317745035233824, 0.4321382842509603, 0.4325015994881638, 0.4328644501278772, 0.43322683706070286, 0.4335887611749681, 0.4333120612635609, 0.4330357142857143, 0.4327597195666029, 0.43248407643312103, 0.4322087842138765, 0.43193384223918574, 0.431659249841068, 0.4313850063532402, 0.4311111111111111, 0.43083756345177665, 0.43056436271401394, 0.4302915082382763, 0.4300189993666878, 0.429746835443038, 0.42947501581277675, 0.42920353982300885, 0.42893240682248895, 0.4286616161616162, 0.42839116719242903, 0.4281210592686003, 0.42785129174543163, 0.4275818639798489, 0.42731277533039647, 0.4276729559748428, 0.42803268384663734, 0.42839195979899497, 0.42875078468298805, 0.42910915934755334, 0.42946708463949845, 0.4298245614035088, 0.43018159048215404, 0.42991239048811014, 0.42964352720450283, 0.429375, 0.4297314178638351, 0.43008739076154806, 0.430442919525889, 0.4307980049875312, 0.4305295950155763, 0.4302615193026152, 0.4299937772246422, 0.42972636815920395, 0.42945929148539463, 0.4291925465838509, 0.42954686530105524, 0.4299007444168734, 0.4302541847489151, 0.4306071871127633, 0.4309597523219814, 0.4313118811881188, 0.43166357452071735, 0.4320148331273177, 0.4323656578134651, 0.4327160493827161, 0.4330660086366441, 0.43341553637484587, 0.43376463339494764, 0.4341133004926108, 0.4338461538461538, 0.43357933579335795, 0.43331284572833434, 0.43304668304668303, 0.43278084714548803, 0.4325153374233129, 0.4322501532801962, 0.4319852941176471, 0.4317207593386405, 0.4314565483476132, 0.43119266055045874, 0.43092909535452323, 0.4306658521686011, 0.43101343101343104, 0.43136058572300184, 0.4317073170731707, 0.43205362583790374, 0.43239951278928135, 0.43274497869750456, 0.43309002433090027, 0.43343465045592705, 0.43377885783718106, 0.43412264723740135, 0.4344660194174757, 0.43480897513644634, 0.4351515151515152, 0.43549364021804965, 0.43523002421307505, 0.43496672716273443, 0.4347037484885127, 0.43444108761329303, 0.43478260869565216, 0.4351237175618588, 0.43486127864897467, 0.4345991561181435, 0.4343373493975904, 0.4340758579169175, 0.43381468110709986, 0.4335538184004811, 0.4332932692307692, 0.4336336336336336, 0.4339735894357743, 0.43431313737252547, 0.43465227817745805, 0.43499101258238465, 0.4353293413173653, 0.43566726511071213, 0.43600478468899523, 0.4363419007770472, 0.43667861409796893, 0.43701492537313436, 0.4373508353221957, 0.43768634466308887, 0.43802145411203813, 0.4383561643835616, 0.4386904761904762, 0.43902439024390244, 0.4393579072532699, 0.43969102792632203, 0.43942992874109266, 0.4391691394658754, 0.4389086595492289, 0.43864848844101956, 0.43838862559241704, 0.43812907045589106, 0.4378698224852071, 0.43761088113542285, 0.4373522458628842, 0.4370939161252215, 0.43683589138134593, 0.4365781710914454, 0.4363207547169811, 0.43606364172068357, 0.43580683156654887, 0.4355503237198352, 0.43529411764705883, 0.4350382128159906, 0.43478260869565216, 0.4345273047563124, 0.43427230046948356, 0.4340175953079179, 0.43376318874560377, 0.43350908025776214, 0.4332552693208431, 0.43300175541252195, 0.4327485380116959, 0.4324956165984804, 0.4328271028037383, 0.43315820198482197, 0.43348891481913654, 0.43381924198250726, 0.43414918414918413, 0.43389633080955153, 0.43364377182770664, 0.43339150668993603, 0.4331395348837209, 0.4328878558977339, 0.4326364692218351, 0.4323853743470691, 0.43213457076566125, 0.4318840579710145, 0.4316338354577057, 0.43138390272148236, 0.43113425925925924, 0.4308849045691151, 0.430635838150289, 0.43038705950317735, 0.43013856812933027, 0.4298903635314484, 0.42964244521337946, 0.42939481268011526, 0.42914746543778803, 0.4289004029936672, 0.4286536248561565, 0.4284071305347901, 0.4281609195402299, 0.4279149913842619, 0.42766934557979336, 0.4274239816408491, 0.4271788990825688, 0.4269340974212034, 0.42668957617411224, 0.4264453348597596, 0.42620137299771166, 0.4259576901086335, 0.4257142857142857, 0.42547115933752144, 0.4252283105022831, 0.4249857387335995, 0.42474344355758265, 0.42450142450142453, 0.42425968109339407, 0.42401821286283436, 0.42377701934015927, 0.42410460488914153, 0.4244318181818182, 0.4247586598523566, 0.4250851305334847, 0.4254112308564946, 0.4257369614512472, 0.42606232294617563, 0.42638731596828994, 0.4267119411431805, 0.4264705882352941, 0.4262295081967213, 0.42598870056497173, 0.4257481648785997, 0.4255079006772009, 0.42526790750141, 0.42559188275084553, 0.4259154929577465, 0.42623873873873874, 0.42656162070906023, 0.4268841394825647, 0.4272062956717257, 0.42752808988764046, 0.4278495227400337, 0.4281705948372615, 0.4284913067863152, 0.4288116591928251, 0.42857142857142855, 0.42833146696528557, 0.4280917739227756, 0.4278523489932886, 0.4276131917272219, 0.4273743016759777, 0.4271356783919598, 0.42689732142857145, 0.4266592303402119, 0.42642140468227424, 0.42618384401114207, 0.42594654788418707, 0.4257095158597663, 0.42547274749721914, 0.4252362423568649, 0.425, 0.42476401998889507, 0.42452830188679247, 0.4242928452579035, 0.4240576496674058, 0.42382271468144045, 0.42358803986710963, 0.42335362479247374, 0.4231194690265487, 0.4228855721393035, 0.42265193370165743, 0.4224185532854776, 0.4227373068432671, 0.4230557087699945, 0.42282249173098124, 0.4225895316804408, 0.4223568281938326, 0.4221243808475509, 0.4218921892189219, 0.42166025288620124, 0.42142857142857143, 0.4211971444261395, 0.42096597145993414, 0.42073505211190343, 0.4205043859649123, 0.42027397260273974, 0.42004381161007665, 0.41981390257252327, 0.4195842450765864, 0.41935483870967744, 0.4191256830601093, 0.4188967777170945, 0.41866812227074235, 0.41843971631205673, 0.4182115594329335, 0.41798365122615805, 0.417755991285403, 0.4175285792052259, 0.4173014145810664, 0.4176182707993475, 0.41793478260869565, 0.41825095057034223, 0.4185667752442997, 0.41888225718936517, 0.41919739696312364, 0.4195121951219512, 0.4198266522210184, 0.41959935029778017, 0.4193722943722944, 0.41914548404542995, 0.4189189189189189, 0.41869259859535385, 0.41846652267818574, 0.41824069077172155, 0.4180151024811219, 0.41778975741239893, 0.4175646551724138, 0.41733979536887456, 0.4171151776103337, 0.4168908015061861, 0.4166666666666667, 0.4164427727028479, 0.416219119226638, 0.41599570585077833, 0.4157725321888412, 0.4155495978552279, 0.4153269024651661, 0.4156400642742367, 0.4159528907922912, 0.4162653825575174, 0.41657754010695186, 0.4168893639764832, 0.4172008547008547, 0.41697810998398294, 0.4167556029882604, 0.4165333333333333, 0.4163113006396588, 0.4160895045285029, 0.4158679446219382, 0.41564662054284196, 0.41595744680851066, 0.41626794258373206, 0.4165781083953241, 0.41688794476898566, 0.4171974522292994, 0.41750663129973475, 0.41728525980911985, 0.4170641229464759, 0.4168432203389831, 0.4166225516146109, 0.4164021164021164, 0.4167107350608144, 0.41701902748414377, 0.4173269941891178, 0.4176346356916579, 0.4179419525065963, 0.41824894514767935, 0.41855561412756986, 0.41886195995785036, 0.4191679831490258, 0.41947368421052633, 0.41977906365071016, 0.42008412197686645, 0.42038885969521805, 0.4206932773109244, 0.420997375328084, 0.4213011542497377, 0.421604614577871, 0.4219077568134172, 0.42221058145625984, 0.4225130890052356, 0.4228152799581371, 0.42311715481171547, 0.42289597490852066, 0.422675026123302, 0.42245430809399476, 0.4222338204592902, 0.4220135628586333, 0.42179353493222105, 0.42157373632100054, 0.42135416666666664, 0.4211348256116606, 0.4209157127991675, 0.4206968278731149, 0.4204781704781705, 0.4202597402597403, 0.4200415368639668, 0.419823559937727, 0.4196058091286307, 0.41938828408501816, 0.41968911917098445, 0.4199896426721906, 0.42028985507246375, 0.4205897568546301, 0.42088934850051707, 0.42118863049095606, 0.4209710743801653, 0.4207537429013939, 0.42053663570691435, 0.42031975244971637, 0.42010309278350516, 0.4198866563626996, 0.4196704428424305, 0.41945445187853836, 0.419238683127572, 0.4190231362467866, 0.4188078108941418, 0.41859270672829996, 0.4183778234086242, 0.418163160595177, 0.41794871794871796, 0.4177344951307022, 0.4175204918032787, 0.4173067076292883, 0.417093142272262, 0.41687979539641945, 0.4166666666666667, 0.4164537557485948, 0.4167517875383044, 0.4170495150587034, 0.4173469387755102, 0.4176440591534931, 0.417940876656473, 0.41823739174732555, 0.4185336048879837, 0.4188295165394402, 0.41912512716174977, 0.4194204372140315, 0.41971544715447157, 0.42001015744032505, 0.4203045685279188, 0.4200913242009132, 0.4198782961460446, 0.4196654840344653, 0.4199594731509625, 0.42025316455696204, 0.42054655870445345, 0.4208396560445119, 0.4211324570273003, 0.42142496210207175, 0.4217171717171717, 0.42200908632004036, 0.42230070635721495, 0.42259203227433184, 0.42288306451612906, 0.42317380352644834, 0.42346424974823765, 0.4237544036235531, 0.42404426559356134, 0.42433383609854197, 0.42462311557788945, 0.4249121044701155, 0.4252008032128514, 0.42548921224284997, 0.42577733199598794, 0.42606516290726815, 0.42635270541082165, 0.4266399599399099, 0.4269269269269269, 0.42671335667833915, 0.4265, 0.42628685657171417, 0.4260739260739261, 0.42586120818771844, 0.42564870259481036, 0.42543640897755614, 0.4252243270189432, 0.42501245640259094, 0.424800796812749, 0.42458934793429565, 0.4243781094527363, 0.42416708105420187, 0.4239562624254473, 0.42374565325385, 0.42353525322740815, 0.42332506203473946, 0.4236111111111111, 0.42389687654933067, 0.4241823587710605, 0.4244675581971273, 0.42475247524752474, 0.4250371103414151, 0.42532146389713155, 0.42560553633217996, 0.4258893280632411, 0.425679012345679, 0.42546890424481737, 0.42525900345337936, 0.4250493096646943, 0.4248398225726959, 0.4246305418719212, 0.4244214672575086, 0.4242125984251969, 0.4244958189867191, 0.4247787610619469, 0.4250614250614251, 0.42534381139489197, 0.4256259204712813, 0.4259077526987242, 0.4261893084845513, 0.4264705882352941, 0.4267515923566879, 0.42703232125367285, 0.42731277533039647, 0.42759295499021527, 0.4273838630806846, 0.42717497556207235, 0.42745481191988277, 0.427734375, 0.4280136652025378, 0.42829268292682926, 0.42857142857142855, 0.42884990253411304, 0.42912810521188505, 0.4294060370009737, 0.429683698296837, 0.42996108949416345, 0.4297520661157025, 0.4295432458697765, 0.4293346284604177, 0.429126213592233, 0.4289180009704027, 0.42919495635305527, 0.4294716432380029, 0.42974806201550386, 0.43002421307506056, 0.4303000968054211, 0.4305757135945815, 0.4308510638297872, 0.43112614789753506, 0.4314009661835749, 0.43167551907291163, 0.43194980694980695, 0.432223830197781, 0.4324975891996143, 0.4327710843373494, 0.4325626204238921, 0.43235435724602794, 0.43214629451395575, 0.43193843193843195, 0.43173076923076925, 0.4315233061028352, 0.4313160422670509, 0.4311089774363898, 0.4309021113243762, 0.43069544364508394, 0.4304889741131352, 0.4302827024436991, 0.43007662835249044, 0.4298707515557683, 0.43014354066985644, 0.430416068866571, 0.4306883365200765, 0.43096034400382227, 0.43123209169054444, 0.4315035799522673, 0.43177480916030536, 0.43204577968526464, 0.4323164918970448, 0.4325869461648404, 0.4328571428571429, 0.433127082341742, 0.4333967649857279, 0.43366619115549215, 0.43346007604562736, 0.4332541567695962, 0.43304843304843305, 0.43284290460370195, 0.43263757115749524, 0.43243243243243246, 0.4322274881516588, 0.43202273803884417, 0.4318181818181818, 0.43208707998106954, 0.4323557237464522, 0.4326241134751773, 0.43289224952741023, 0.43316013226263583, 0.43342776203966005, 0.4336951392166116, 0.4339622641509434, 0.43422913719943423, 0.4344957587181904, 0.4347621290626472, 0.4350282485875706, 0.43529411764705883, 0.4355597365945437, 0.43582510578279265, 0.43609022556390975, 0.4363550962893377, 0.43661971830985913, 0.4368840919755983, 0.4371482176360225, 0.43741209563994377, 0.43767572633552015, 0.4379391100702576, 0.43820224719101125, 0.4384651380439869, 0.43872778297474274, 0.43899018232819076, 0.4392523364485981, 0.43951424567958897, 0.43977591036414565, 0.4400373308446104, 0.44029850746268656, 0.4405594405594406, 0.4408201304753029, 0.44108057755006985, 0.441340782122905, 0.4416007445323406, 0.4418604651162791, 0.4421199442119944, 0.4423791821561338, 0.442638179284719, 0.4428969359331476, 0.44269141531322503, 0.4424860853432282, 0.4427445526193788, 0.44300278035217794, 0.4432607688744789, 0.44351851851851853, 0.44377602961591855, 0.4440333024976873, 0.444290337494221, 0.444547134935305, 0.4448036951501155, 0.4450600184672207, 0.44531610521458237, 0.44511070110701106, 0.4449054863992623, 0.4447004608294931, 0.4444956241363427, 0.4447513812154696, 0.4450069028992177, 0.4452621895124195, 0.44551724137931037, 0.44577205882352944, 0.44602664216812127, 0.445821854912764, 0.44607618173474073, 0.4463302752293578, 0.4465841357175607, 0.44683776351970667, 0.4470911589555657, 0.44734432234432236, 0.4475972540045767, 0.4473924977127173, 0.44718792866941015, 0.4469835466179159, 0.4467793513019644, 0.4465753424657534, 0.44637151985394796, 0.44616788321167883, 0.4464204286365709, 0.44667274384685507, 0.4469248291571754, 0.4471766848816029, 0.44742831133363675, 0.44767970882620567, 0.44793087767166895, 0.4481818181818182, 0.44843253066787825, 0.44868301544050865, 0.44893327280980483, 0.44918330308529947, 0.4494331065759637, 0.4496826835902085, 0.4499320344358858, 0.45018115942028986, 0.45043005885015847, 0.4506787330316742, 0.45047489823609227, 0.45027124773960214, 0.4500677812923633, 0.44986449864498645, 0.44966139954853274, 0.44945848375451264, 0.44925575101488496, 0.44905320108205593, 0.44885083370887785, 0.4486486486486487, 0.44844664565511033, 0.44824482448244823, 0.44804318488529016, 0.447841726618705, 0.44764044943820225, 0.4474393530997305, 0.4472384373596767, 0.44703770197486536, 0.4468371467025572, 0.44663677130044843, 0.44643657552666965, 0.44623655913978494, 0.44603672189879084, 0.4458370635631155, 0.44563758389261743, 0.44543828264758495, 0.4452391595887349, 0.4450402144772118, 0.4448414470745869, 0.4446428571428571, 0.4444444444444444, 0.44424620874219445, 0.44404814979937585, 0.44385026737967914, 0.443652561247216, 0.44345503116651824, 0.4432576769025367, 0.4430604982206406, 0.44286349488661625, 0.44266666666666665, 0.44247001332741004, 0.4422735346358792, 0.4420772303595206, 0.4418811002661934, 0.44168514412416854, 0.44148936170212766, 0.44173681878599913, 0.4419840566873339, 0.44223107569721115, 0.4424778761061947, 0.44272445820433437, 0.44297082228116713, 0.4432169686257181, 0.44346289752650175, 0.44370860927152317, 0.4439541041482789, 0.4441993824437583, 0.4444444444444444, 0.44468929043631555, 0.44493392070484583, 0.44517833553500663, 0.4449823943661972, 0.44478662560492743, 0.4445910290237467, 0.4443956043956044, 0.44420035149384884, 0.4444444444444444, 0.4446883230904302, 0.4449319877139096, 0.4451754385964912, 0.4454186760192898, 0.44522348816827345, 0.44502847130968026, 0.4448336252189142, 0.4446389496717724, 0.4444444444444444, 0.44425010931351117, 0.44405594405594406, 0.4438619484491044, 0.44366812227074237, 0.4434744652989961, 0.4432809773123909, 0.44308765808983863, 0.44289450741063646, 0.44270152505446625, 0.4425087108013937, 0.44231606443186766, 0.4421235857267189, 0.44193127446715963, 0.44173913043478263, 0.4415471534115602, 0.4413553431798436, 0.4415979157620495, 0.4418402777777778, 0.4420824295010846, 0.44232437120555074, 0.44256610316428263, 0.44280762564991333, 0.4426158510177566, 0.44242424242424244, 0.4422327996538295, 0.4420415224913495, 0.44185041072200604, 0.44165946413137425, 0.44146868250539956, 0.4417098445595855, 0.4419507984462667, 0.44219154443485764, 0.4424320827943079, 0.44267241379310346, 0.4429125376992676, 0.44315245478036175, 0.44339216530348685, 0.443631669535284, 0.44387096774193546, 0.44411006018916593, 0.4443489471422432, 0.44458762886597936, 0.4448261056247316, 0.4450643776824034, 0.4453024453024453, 0.4451114922813036, 0.44492070295756536, 0.44473007712082263, 0.44453961456102786, 0.4443493150684932, 0.4441591784338896, 0.4439692044482464, 0.44377939290295, 0.44358974358974357, 0.44340025630072616, 0.44321093082835183, 0.44302176696542894, 0.44283276450511944, 0.44264392324093815, 0.4424552429667519, 0.44226672347677887, 0.44207836456558774, 0.4423158790974883, 0.4425531914893617, 0.4427903019991493, 0.44302721088435376, 0.44326391840203994, 0.443500424808836, 0.4437367303609342, 0.4435483870967742, 0.443360203648706, 0.4431721798134012, 0.4429843153878762, 0.4427966101694915, 0.44260906395595084, 0.44242167654530057, 0.44265763859500634, 0.44289340101522845, 0.4431289640591966, 0.4433643279797126, 0.4435994930291508, 0.44341216216216217, 0.44322498944702404, 0.4430379746835443, 0.4428511176718684, 0.4426644182124789, 0.4424778761061947, 0.44229149115417016, 0.4421052631578947, 0.44191919191919193, 0.44173327724021877, 0.4415475189234651, 0.44136191677175285, 0.4411764705882353, 0.4409911801763965, 0.44080604534005036, 0.4406210658833403, 0.44043624161073824, 0.44025157232704404, 0.44006705783738476, 0.4398826979472141, 0.4396984924623116, 0.4395144411887819, 0.4393305439330544, 0.43914680050188204, 0.4389632107023411, 0.43877977434183035, 0.43859649122807015, 0.4384133611691023, 0.43823038397328884, 0.4380475594493116, 0.4378648874061718, 0.43768236765318885, 0.4375, 0.43731778425655976, 0.43713572023313907, 0.4369538077403246, 0.4367720465890183, 0.4365904365904366, 0.43640897755610975, 0.4362276692978812, 0.436046511627907, 0.43586550435865506, 0.43568464730290457, 0.43550394027374534, 0.43532338308457713, 0.43514297554910897, 0.43496271748135873, 0.43478260869565216, 0.43460264900662254, 0.43442283822920974, 0.43424317617866004, 0.434063662670525, 0.43388429752066116, 0.43370508054522927, 0.43352601156069365, 0.4333470903838217, 0.43316831683168316, 0.4329896907216495, 0.43322341302555645, 0.4334569427276473, 0.4332784184514003, 0.4331000411692054, 0.43292181069958846, 0.4327437268613739, 0.43256578947368424, 0.43238799835593916, 0.4322103533278554, 0.4320328542094456, 0.4318555008210181, 0.43167829298317606, 0.43191140278917145, 0.4321443214432144, 0.4323770491803279, 0.4326095862351495, 0.43284193284193284, 0.4326647564469914, 0.43248772504091654, 0.43231083844580775, 0.4321340964840556, 0.43195749897834085, 0.431781045751634, 0.4316047366271948, 0.43142857142857144, 0.43125254997960016, 0.4310766721044046, 0.430900937627395, 0.43072534637326815, 0.4305498981670061, 0.43037459283387625, 0.4301994301994302, 0.43002441008950365, 0.42984953233021556, 0.4296747967479675, 0.4295002031694433, 0.42932575142160845, 0.4291514413317093, 0.4289772727272727, 0.4288032454361055, 0.4286293592862936, 0.42845561410620187, 0.4282820097244733, 0.42810854597002834, 0.4279352226720648, 0.42776203966005666, 0.42758899676375406, 0.42741609381318235, 0.4272433306386419, 0.42707070707070705, 0.42689822294022617, 0.4267258780783206, 0.4265536723163842, 0.4263816054860831, 0.42620967741935484, 0.4260378879484079, 0.4258662369057212, 0.4256947241240435, 0.4255233494363929, 0.4253521126760563, 0.4251810136765889, 0.42501005227181343, 0.42483922829581994, 0.424668541582965, 0.42449799196787147, 0.4243275792854275, 0.4245585874799358, 0.42478941034897716, 0.42502004811547717, 0.4248496993987976, 0.42467948717948717, 0.42450941129355224, 0.4243394715772618, 0.4241696678671469, 0.424, 0.42383046781287487, 0.42366107114308554, 0.42349180982820617, 0.4233226837060703, 0.4231536926147705, 0.4229848363926576, 0.42281611487834064, 0.4226475279106858, 0.42247907532881623, 0.42231075697211157, 0.42254082039028273, 0.42277070063694266, 0.42300039793076005, 0.4232299124900557, 0.4234592445328032, 0.4232909379968203, 0.4231227651966627, 0.42295472597299444, 0.42278682016673286, 0.423015873015873, 0.42324474414914715, 0.4234734337827121, 0.4237019421323821, 0.42393026941362916, 0.42415841584158415, 0.4243863816310372, 0.42461416699643845, 0.4248417721518987, 0.4250691973111902, 0.424901185770751, 0.42473330699328327, 0.42496050552922593, 0.42518752467429927, 0.425414364640884, 0.4256410256410256, 0.42586750788643535, 0.42609381158849036, 0.42631993695823484, 0.42654588420638045, 0.4267716535433071, 0.42699724517906334, 0.42722265932336745, 0.4274478961856075, 0.4276729559748428, 0.42789783889980354, 0.42812254516889237, 0.4279544562230075, 0.42778649921507067, 0.4280109846998823, 0.42823529411764705, 0.4284594276754214, 0.4286833855799373, 0.4289071680376028, 0.4291307752545027, 0.42935420743639924, 0.4291862284820031, 0.42901838091513494, 0.42885066458170445, 0.4286830793278624, 0.428515625, 0.42834830144474817, 0.42818110850897734, 0.4280140460397971, 0.4278471138845554, 0.4276803118908382, 0.42751363990646923, 0.42734709777950913, 0.42718068535825543, 0.42701440249124173, 0.42684824902723734, 0.426682224815247, 0.4265163297045101, 0.42635056354450057, 0.42657342657342656, 0.4267961165048544, 0.42701863354037267, 0.42724097788125726, 0.42746314972847166, 0.4276851492826677, 0.42790697674418604, 0.428128632313057, 0.42835011618900076, 0.42857142857142855, 0.42879256965944273, 0.4290135396518375, 0.42923433874709976, 0.42945496714340936, 0.42967542503863987, 0.4298957126303592, 0.4301158301158301, 0.4303357776920108, 0.4305555555555556, 0.4307751639028153, 0.43060909791827295, 0.4304431599229287, 0.4302773497688752, 0.4301116673084328, 0.42994611239414937, 0.42978068487879956, 0.4296153846153846, 0.42945021145713186, 0.4292851652574942, 0.42912024587014985, 0.4289554531490015, 0.42879078694817657, 0.42862624712202607, 0.4284618335251247, 0.42868098159509205, 0.4285166730548103, 0.42835249042145596, 0.42857142857142855, 0.42879019908116384, 0.4290088021431305, 0.4292272379495027, 0.42906309751434035, 0.4288990825688073, 0.42873519296904855, 0.42857142857142855, 0.42878961435662466, 0.42900763358778626, 0.4292254864555513, 0.429443173150267, 0.4296606938619901, 0.4298780487804878, 0.4300952380952381, 0.4303122619954303, 0.43052912066996574, 0.4307458143074581, 0.4309623430962343, 0.43079847908745245, 0.4306347396427214, 0.4308510638297872, 0.4310672236992024, 0.43090356871678054, 0.4307400379506641, 0.4305766312594841, 0.4304133485020857, 0.4302501895375284, 0.4304660856384994, 0.43068181818181817, 0.43089738735327526, 0.43111279333838004, 0.43132803632236094, 0.4315431164901664, 0.431758034026465, 0.43197278911564624, 0.43218738194182094, 0.4324018126888218, 0.43261608154020387, 0.4328301886792453, 0.43304413428894756, 0.4332579185520362, 0.4334715416509612, 0.43368500376789754, 0.43389830508474575, 0.43411144578313254, 0.434324426044411, 0.4345372460496614, 0.4347499059796916, 0.4349624060150376, 0.4351747463359639, 0.4353869271224643, 0.43522343221930154, 0.43506006006006004, 0.4348968105065666, 0.4351087771942986, 0.43532058492688414, 0.43553223388305845, 0.4357437242412889, 0.43595505617977526, 0.43616622987645076, 0.43637724550898205, 0.43658810325476993, 0.4367988032909499, 0.43700934579439255, 0.437219730941704, 0.43742995890922676, 0.43764002987303957, 0.43784994400895855, 0.4380597014925373, 0.43826930249906754, 0.4381058911260254, 0.4383153186731271, 0.4385245901639344, 0.4387337057728119, 0.4389426656738645, 0.43915147004093785, 0.43936011904761907, 0.4395686128672369, 0.43977695167286246, 0.4396135265700483, 0.4398216939078752, 0.44002970664686225, 0.44023756495916855, 0.4404452690166976, 0.4406528189910979, 0.44086021505376344, 0.4406968124536694, 0.4409040385327899, 0.4411111111111111, 0.44131803035912626, 0.44152479644707626, 0.44173140954495005, 0.44193786982248523, 0.44214417744916823, 0.44198078344419806, 0.44181751015884746, 0.44202363367799113, 0.4422296050203027, 0.44243542435424354, 0.44227222427148655, 0.44210914454277284, 0.4419461850350166, 0.44178334561532795, 0.4416206261510129, 0.4414580265095729, 0.44129554655870445, 0.44113318616629876, 0.44097094520044133, 0.4411764705882353, 0.4413818449099596, 0.44158706833210876, 0.4417921410209328, 0.44162995594713655, 0.44146788990825686, 0.4413059427732942, 0.44114411441144114, 0.4409824046920821, 0.44082081348479296, 0.441025641025641, 0.44123031856462835, 0.44143484626647145, 0.44163922429564584, 0.44184345281638626, 0.44204753199268737, 0.4422514619883041, 0.4424552429667519, 0.4426588750913075, 0.4428623585250091, 0.44306569343065694, 0.44290404961692814, 0.4427425237053246, 0.44258111556689755, 0.4424198250728863, 0.44225865209471765, 0.4420975965040058, 0.4419366581725519, 0.4417758369723435, 0.44161513277555475, 0.44145454545454543, 0.4412940748818611, 0.44113372093023256, 0.44097348347257537, 0.4408133623819898, 0.44065335753176044, 0.4404934687953556, 0.44069640914036995, 0.4408992023205221, 0.44110184849583184, 0.44130434782608696, 0.4415067004708439, 0.44170890658942796, 0.44191096634093374, 0.44211287988422576, 0.4423146473779385, 0.44251626898047725, 0.44235634260932416, 0.4421965317919075, 0.4420368364030336, 0.44187725631768954, 0.44171779141104295, 0.44155844155844154, 0.44139920663541293, 0.441240086517664, 0.4410810810810811, 0.4409221902017291, 0.44076341375585165, 0.4406047516198704, 0.440446203670385, 0.44028776978417267, 0.4401294498381877, 0.44033069734004315, 0.4405318002155947, 0.44073275862068967, 0.44057450628366246, 0.44041636755204594, 0.4402583423035522, 0.4401004304160689, 0.43994263176765863, 0.4397849462365591, 0.4396273737011824, 0.4394699140401146, 0.439312567132116, 0.43915533285612024, 0.4389982110912343, 0.4388412017167382, 0.43868430461208435, 0.4385275196568978, 0.43872811718470883, 0.43892857142857145, 0.4391288825419493, 0.4393290506780871, 0.4395290759900107, 0.4397289586305278, 0.4399286987522282, 0.440128296507484, 0.4403277520484503, 0.44052706552706555, 0.44037023851904594, 0.4402135231316726, 0.44005691924581997, 0.439900426742532, 0.4397440455030217, 0.43958777540867094, 0.4394316163410302, 0.4392755681818182, 0.43911963081292155, 0.43896380411639463, 0.438808087974459, 0.43865248226950354, 0.4384969868840837, 0.43834160170092135, 0.4381863266029047, 0.4380311614730878, 0.43787610619469025, 0.43772116065109695, 0.4375663247258578, 0.4374115983026874, 0.4372569812654648, 0.4371024734982332, 0.43730130695867186, 0.4375, 0.43769855277091424, 0.4378969654199012, 0.4380952380952381, 0.43829337094499293, 0.43849136411702505, 0.43868921775898523, 0.43853469531525185, 0.43838028169014087, 0.4382259767687434, 0.43807178043631245, 0.4379176925782624, 0.43776371308016876, 0.437609841827768, 0.4378074490513001, 0.43800491745697223, 0.43820224719101125, 0.4383994383994384, 0.43859649122807015, 0.4384426517011575, 0.438288920056101, 0.43813529617946023, 0.4383321653819201, 0.4385288966725044, 0.4387254901960784, 0.43892194609730484, 0.4391182645206438, 0.43931444561035327, 0.4395104895104895, 0.4397063963649074, 0.4395527603074773, 0.4393992315752707, 0.43924581005586594, 0.43909249563699826, 0.43893928820655964, 0.4387861876525985, 0.4386331938633194, 0.4384803067270826, 0.43832752613240417, 0.4381748519679554, 0.43802228412256267, 0.4382178907065785, 0.4384133611691023, 0.4386086956521739, 0.4388038942976356, 0.43899895724713245, 0.43919388464211256, 0.43938867662382775, 0.4392361111111111, 0.4390836515098924, 0.4389312977099237, 0.43877904960110997, 0.43862690707350904, 0.43847487001733104, 0.43832293832293834, 0.4381711118808452, 0.43801939058171746, 0.43786777431637247, 0.43771626297577854, 0.437564856451055, 0.43741355463347165, 0.4376080193570688, 0.43780234968901177, 0.4376511226252159, 0.43784530386740333, 0.4380393510528133, 0.43823326432022086, 0.43842704380820974, 0.4386206896551724, 0.4388142019993106, 0.4386629910406616, 0.43851188425766446, 0.4383608815426997, 0.43820998278829604, 0.43840330350997936, 0.43859649122807015, 0.43878954607977994, 0.4389824682021313, 0.43917525773195876, 0.43936791480590864, 0.43956043956043955, 0.43975283213182287, 0.43994509265614273, 0.4401372212692967, 0.4403292181069959, 0.4405210833047652, 0.4407128169979438, 0.4409044193216855, 0.4410958904109589, 0.44128723040054774, 0.4414784394250513, 0.44166951761888473, 0.4418604651162791, 0.442051282051282, 0.44224196855775805, 0.44243252476938844, 0.4426229508196721, 0.4428132468419256, 0.4426621160409556, 0.4425110883657455, 0.44236016371077763, 0.44220934197067846, 0.44205862304021815, 0.44190800681431003, 0.4417574931880109, 0.4416070820565203, 0.4414567733151804, 0.441306566859476, 0.4414965986394558, 0.4416865011900714, 0.4415363698164514, 0.4413863404689093, 0.44123641304347827, 0.44142614601018676, 0.44161575016972165, 0.4418052256532066, 0.44199457259158753, 0.44218379111563244, 0.44203389830508477, 0.441884107082345, 0.44173441734417346, 0.44158482898747037, 0.4414353419092756, 0.4412859560067682, 0.44113667117726657, 0.44098748731822796, 0.44083840432724813, 0.4406894221020615, 0.44054054054054054, 0.4403917595406957, 0.4402430790006752, 0.4404319946000675, 0.4406207827260459, 0.44080944350758855, 0.44099797707349964, 0.44118638355240986, 0.4413746630727763, 0.44156281576288314, 0.4417508417508417, 0.44193874116459103, 0.4421265141318977, 0.44231416078035657, 0.4425016812373907, 0.4426890756302521, 0.4428763440860215, 0.443063486731609, 0.4432505036937542, 0.4434373950990265, 0.4436241610738255, 0.4438108017443811, 0.44399731723675384, 0.4438484746899095, 0.4436997319034853, 0.44355108877721944, 0.4434025452109846, 0.4432541011047874, 0.4431057563587684, 0.44295751087320173, 0.442809364548495, 0.4426613172851889, 0.4425133689839572, 0.44236551954560643, 0.4425517702070808, 0.4427378964941569, 0.44292389853137515, 0.4431097764431098, 0.44329553035356906, 0.4434811603867956, 0.44366666666666665, 0.44385204931689437, 0.44403730846102596, 0.4442224442224442, 0.4444074567243675, 0.44459234608985027, 0.4447771124417831, 0.4449617559028933, 0.4451462765957447, 0.44533067464273846, 0.445514950166113, 0.4456991032879442, 0.4458831341301461, 0.4457351476933289, 0.4455872594558726, 0.44543946932006634, 0.4452917771883289, 0.4451441829632085, 0.4449966865473824, 0.44484928784365685, 0.44470198675496686, 0.444554783184376, 0.4444076770350761, 0.44459146543169037, 0.44477513227513227, 0.44495867768595043, 0.44514210178453406, 0.4453254046911133, 0.4455085865257596, 0.4456916474083856, 0.44587458745874586, 0.4460574067964368, 0.4462401055408971, 0.44642268381140787, 0.4466051417270929, 0.44678747940691926, 0.44696969696969696, 0.44715179453407966, 0.44733377221856485, 0.4475156301414939, 0.4476973684210526, 0.4478789871752713, 0.44806048652202496, 0.44824186657903387, 0.4484231274638633, 0.44860426929392444, 0.44878529218647406, 0.44896619625861506, 0.4491469816272966, 0.4489996720236143, 0.4488524590163934, 0.44870534251065225, 0.44855832241153343, 0.44841139862430396, 0.44826457105435497, 0.4481178396072013, 0.4479712041884817, 0.44782466470395815, 0.44767822105951605, 0.4475318731611638, 0.4473856209150327, 0.44723946422737665, 0.4470934030045722, 0.44694743715311785, 0.4471279373368146, 0.4473083197389886, 0.4474885844748858, 0.4476687316596022, 0.44752281616688394, 0.4473769957640925, 0.4472312703583062, 0.44708563985672417, 0.4469401041666667, 0.44679466319557437, 0.44664931685100845, 0.44650406504065043, 0.4463589076723017, 0.44621384465388364, 0.4460688758934373, 0.4459240012991231, 0.4457792207792208, 0.4456345342421292, 0.445489941596366, 0.44534544275056764, 0.44520103761348895, 0.44505672609400326, 0.4449125081011017, 0.44476838354389375, 0.44462435233160624, 0.4444804143735837, 0.444336569579288, 0.4441928178582983, 0.44404915912031045, 0.4439055932751374, 0.44376212023270845, 0.4436187399030695, 0.4434754521963824, 0.4433322570229254, 0.4431891542930923, 0.44336882865440463, 0.4435483870967742, 0.4437278297323444, 0.44390715667311414, 0.4440863680309378, 0.44394329896907214, 0.44380032206119163, 0.4436574372182872, 0.4435146443514644, 0.44337194337194336, 0.4432293341910582, 0.44308681672025724, 0.44294439087110254, 0.44280205655526994, 0.44265981368454865, 0.4425176621708414, 0.4423756019261637, 0.44223363286264444, 0.4420917548925249, 0.44194996792815905, 0.4418082718820135, 0.44166666666666665, 0.4418455623197693, 0.44170403587443946, 0.44156260006404097, 0.4414212548015365, 0.44128, 0.44113883557261674, 0.4409977614326831, 0.44085677749360613, 0.4407158836689038, 0.44057507987220446, 0.4404343660172469, 0.44029374201787996, 0.44015320778806255, 0.44001276324186345, 0.4398724082934609, 0.43973214285714285, 0.43959196684730634, 0.4394518801784576, 0.4393118827652118, 0.4394904458598726, 0.43966889525628783, 0.4398472310630172, 0.44002545338848237, 0.4402035623409669, 0.44038155802861684, 0.4405594405594406, 0.44073721004130917, 0.4409148665819568, 0.4410924102889806, 0.44126984126984126, 0.4414471596318629, 0.4416243654822335, 0.4418014589280051, 0.4419784400760938, 0.4421553090332805, 0.44201520912547526, 0.4418751979727589, 0.441735275490817, 0.4415954415954416, 0.44145569620253167, 0.44131603922809237, 0.4411764705882353, 0.44103699019917797, 0.440897597977244, 0.44075829383886256, 0.4406190777005685, 0.4404799494790022, 0.44065656565656564, 0.44083307036920166, 0.44100946372239747, 0.44118574582150744, 0.44136191677175285, 0.4415379766782225, 0.4417139256458727, 0.44188976377952754, 0.4420654911838791, 0.44192634560906513, 0.4417872876022656, 0.441648317080843, 0.44150943396226416, 0.4413706381640993, 0.44123192960402263, 0.4414074772227458, 0.4415829145728643, 0.44175824175824174, 0.4416195856873823, 0.4414810166300596, 0.4413425345043915, 0.4412041392285983, 0.44106583072100314, 0.44092760890003135, 0.4407894736842105, 0.44065142499217036, 0.44051346274264247, 0.4403755868544601, 0.4402377972465582, 0.4401000938379731, 0.4399624765478424, 0.43982494529540483, 0.44, 0.4401749453295845, 0.44003747657713926, 0.4399000936621917, 0.43976279650436956, 0.43962558502340093, 0.43948845913911416, 0.43935141877143746, 0.439214463840399, 0.4390775942661265, 0.4392523364485981, 0.43942696979134227, 0.4396014943960149, 0.4394646747587924, 0.4393279402613566, 0.4391912908242613, 0.43905472636815923, 0.4389182468138017, 0.4387818520820385, 0.43864554209381795, 0.43850931677018634, 0.4383731760322881, 0.4382371198013656, 0.43810114799875893, 0.43796526054590573, 0.4378294573643411, 0.4380037197768134, 0.43817787418655096, 0.43835192069392814, 0.4385258593991948, 0.4386996904024768, 0.4388734138037759, 0.43904702970297027, 0.43922053819981444, 0.4393939393939394, 0.43956723338485315, 0.43974042027194066, 0.439913500154464, 0.4400864731315627, 0.43995060203766595, 0.4398148148148148, 0.4396791113853749, 0.4395434916718075, 0.43940795559666973, 0.43927250308261406, 0.4391371340523883, 0.4390018484288355, 0.43886664613489373, 0.4387315270935961, 0.43859649122807015, 0.43846153846153846, 0.43832666871731774, 0.4381918819188192, 0.43805717798954813, 0.4379225568531039, 0.4377880184331797, 0.43765356265356264, 0.4375191894381332, 0.43738489871086556, 0.4375575329855784, 0.4377300613496933, 0.43790248390064396, 0.43776824034334766, 0.437634079068342, 0.4375, 0.4373660030627871, 0.43723208818126147, 0.43709825528007346, 0.4369645042839657, 0.43683083511777304, 0.43669724770642204, 0.4365637419749312, 0.43643031784841074, 0.43629697525206235, 0.436163714111179, 0.436030534351145, 0.4358974358974359, 0.43576441867561794, 0.4356314826113484, 0.4354986276303751, 0.4353658536585366, 0.43523316062176165, 0.4351005484460695, 0.4349680170575693, 0.4348355663824604, 0.434703196347032, 0.4345709068776628, 0.4344386979008214, 0.4343065693430657, 0.4341745211310429, 0.4340425531914894, 0.43391066545123064, 0.4340826245443499, 0.4342544791982994, 0.43412264723740135, 0.4339908952959029, 0.4338592233009709, 0.43372763117986046, 0.4335961188599151, 0.4334646862685662, 0.43333333333333335, 0.4332020599818237, 0.4330708661417323, 0.43293975174084165, 0.4328087167070218, 0.43267776096822996, 0.4325468844525106, 0.43241608708799517, 0.4322853688029021, 0.4321547295255364, 0.43202416918429004, 0.4318936877076412, 0.43176328502415456, 0.4316329610624811, 0.4315027157513579, 0.43137254901960786, 0.4312424607961399, 0.43111245100994877, 0.4309825195901145, 0.43085266646580295, 0.4307228915662651, 0.4305931948208371, 0.4304635761589404, 0.43033403551008126, 0.43020457280385077, 0.43007518796992483, 0.42994588093806374, 0.4298166516381124, 0.4296875, 0.4295584259537399, 0.4294294294294294, 0.42960072050435305, 0.4297719087635054, 0.42994299429942995, 0.4301139772045591, 0.42998500749625185, 0.42985611510791366, 0.42972729997003295, 0.42959856201318153, 0.42946990116801437, 0.4293413173652695, 0.4292128105357677, 0.42908438061041293, 0.42895602752019146, 0.4288277511961722, 0.42869955156950673, 0.42857142857142855, 0.42844338213325367, 0.4283154121863799, 0.42848611525828606, 0.4286567164179104, 0.4288272157564906, 0.42899761336515513, 0.42916790933492394, 0.4293381037567084, 0.42950819672131146, 0.4296781883194279, 0.4298480786416443, 0.43001786777843953, 0.4301875558201846, 0.4303571428571429, 0.4305266289794704, 0.43069601427721593, 0.43086529884032115, 0.43103448275862066, 0.4312035661218425, 0.43137254901960786, 0.43154143154143154, 0.4317102137767221, 0.43187889581478184, 0.4320474777448071, 0.43221595965588844, 0.43238434163701067, 0.4322561517936555, 0.4321280379371666, 0.4322962962962963, 0.4324644549763033, 0.4326325140657388, 0.43280047365304913, 0.4329683338265759, 0.4331360946745562, 0.43330375628512274, 0.43347131874630396, 0.43363878214602425, 0.43351063829787234, 0.43338257016248155, 0.43325457767277026, 0.43312666076173606, 0.4329988193624557, 0.43287105340808496, 0.4327433628318584, 0.43261574756708937, 0.4324882075471698, 0.4323607427055703, 0.4322333529758397, 0.4321060382916053, 0.43197879858657245, 0.43185163379452457, 0.43172454384932313, 0.4315975286849073, 0.4314705882352941, 0.4313437224345781, 0.4312169312169312, 0.431090214516603, 0.4309635722679201, 0.43083700440528633, 0.4307105108631826, 0.4305840915761667, 0.43045774647887325, 0.43033147550601347, 0.43020527859237534, 0.43007915567282323, 0.42995310668229775, 0.429827131555816, 0.429701230228471, 0.4295754026354319, 0.4294496487119438, 0.4293239683933275, 0.42919836161497954, 0.42907282831237203, 0.42894736842105263, 0.4288219818766443, 0.4286966686148451, 0.42857142857142855, 0.428446261682243, 0.4283211678832117, 0.42819614711033277, 0.428071199299679, 0.4279463243873979, 0.42782152230971127, 0.42769679300291547, 0.42757213640338093, 0.42744755244755245, 0.42732304107194874, 0.42719860221316247, 0.42707423580786025, 0.4269499417927823, 0.4268257201047425, 0.42670157068062825, 0.4265774934574004, 0.426453488372093, 0.42632955536181344, 0.426205694363742, 0.4260819053151321, 0.4259581881533101, 0.4258345428156749, 0.4257109692396982, 0.4255874673629243, 0.4254640371229698, 0.42534067845752394, 0.4252173913043478, 0.425094175601275, 0.4249710312862109, 0.42484795829713295, 0.4247249565720903, 0.42460202604920405, 0.4244791666666667, 0.42435637836274226, 0.4242336610757663, 0.4244001156403585, 0.42456647398843933, 0.4247327362034094, 0.4248989023685731, 0.4250649725671383, 0.4252309468822171, 0.4253968253968254, 0.4255626081938834, 0.42572829535621576, 0.42589388696655134, 0.4260593831075238, 0.42622478386167145, 0.4263900893114376, 0.4265552995391705, 0.4264324791246761, 0.42630972941853773, 0.4261870503597122, 0.42635212888377444, 0.4265171124532643, 0.42639447958596893, 0.4262719172175913, 0.42614942528735633, 0.42602700373455904, 0.425904652498564, 0.4257823715188056, 0.425947187141217, 0.4261119081779053, 0.42627653471026966, 0.4264410668196157, 0.42660550458715596, 0.42648323301805674, 0.42636103151862464, 0.42623890002864506, 0.4261168384879725, 0.4259948468365302, 0.4261591299370349, 0.4263233190271817, 0.426487414187643, 0.42665141549899915, 0.42681532304173814, 0.42697913689625605, 0.42714285714285716, 0.4273064838617538, 0.4274700171330668, 0.4276334570368256, 0.427796803652968, 0.42796005706134094, 0.42812321734169995, 0.4282862845737097, 0.4284492588369441, 0.4286121402108863, 0.4287749287749288, 0.4289376246083737, 0.4291002277904328, 0.4292627384002277, 0.42942515651679, 0.4295874822190612, 0.42974971558589303, 0.42991185669604776, 0.43007390562819786, 0.4302358624609264, 0.4303977272727273, 0.4305595001420051, 0.4307211811470755, 0.4308827703661652, 0.431044267877412, 0.43120567375886526, 0.43136698808848556, 0.4315282109441452, 0.4316893424036281, 0.43156701615188436, 0.43144475920679887, 0.4313225715094874, 0.4312004530011325, 0.4310784036229833, 0.4309564233163554, 0.4311173974540311, 0.43127828054298645, 0.43143907266044673, 0.43159977388355003, 0.43176038428934727, 0.43192090395480226, 0.43208133295679185, 0.4322416713721062, 0.4324019192774485, 0.43256207674943564, 0.432722143864598, 0.4328821206993796, 0.43304200733013815, 0.43320180383314544, 0.4333615102845872, 0.43352112676056337, 0.4333990425232329, 0.43327702702702703, 0.43343653250773995, 0.4335959482273495, 0.4337552742616034, 0.4339145106861642, 0.4340736575766095, 0.4342327150084317, 0.4343916830570385, 0.4345505617977528, 0.43470935130581295, 0.4348680516563728, 0.43474600056132473, 0.43490460157126826, 0.43506311360448807, 0.43522153673583847, 0.43537987104008974, 0.43553811659192826, 0.43569627346595685, 0.43557422969187676, 0.4354522542705125, 0.4353303471444569, 0.4352085082563672, 0.43508673754896476, 0.43496503496503497, 0.43512304250559286, 0.4352809616997484, 0.4354387926215763, 0.4355965353450685, 0.43575418994413406, 0.43591175649259983, 0.4360692350642099, 0.43622662573262627, 0.43638392857142855, 0.43654114365411434, 0.43669827105409925, 0.436855310844717, 0.43701226309921964, 0.4371691278907774, 0.4373259052924791, 0.4374825953773322, 0.4376391982182628, 0.43751739493459507, 0.4373956594323873, 0.4372739916550765, 0.4371523915461624, 0.4370308590492077, 0.43718732629238466, 0.43734370658516253, 0.4375, 0.4376562066092752, 0.43781232648528595, 0.4379683597002498, 0.4381243063263041, 0.43828016643550627, 0.4384359400998336, 0.4385916273911838, 0.4387472283813747, 0.43862565807702963, 0.43850415512465374, 0.43865965106618665, 0.43881506090808414, 0.4386936064212566, 0.43857221914775874, 0.4387275242047026, 0.43888274336283184, 0.43903787669339234, 0.43919292426755113, 0.4393478861563968, 0.4395027624309392, 0.43938138635735985, 0.43926007730535616, 0.4391388352194314, 0.4390176600441501, 0.43889655172413794, 0.43905129619415334, 0.4392059553349876, 0.43936052921719954, 0.43951501791127034, 0.4393939393939394, 0.43927292756816305, 0.4391519823788546, 0.4393063583815029, 0.4391854705558613, 0.4390646492434663, 0.4389438943894389, 0.4388232059389607, 0.43870258383727323, 0.4385820280296785, 0.43846153846153846, 0.4383411150782752, 0.4382207578253707, 0.4381004666483667, 0.43798024149286496, 0.4378600823045268, 0.43773998902907296, 0.43761996161228406, 0.4375, 0.43738010413812, 0.43726027397260275, 0.4371405094494659, 0.4370208105147864, 0.4371749247194087, 0.4373289545703339, 0.4374829001367989, 0.437636761487965, 0.4375170905113481, 0.43739748496446146, 0.43727794479365945, 0.4371584699453552, 0.4370390603660202, 0.4369197160021846, 0.4368004368004368, 0.4366812227074236, 0.43656207366984995, 0.436442989634479, 0.436323970548132, 0.4362050163576881, 0.4360861270100845, 0.4359673024523161, 0.4361209479705802, 0.4362745098039216, 0.43642798802069155, 0.43658138268916713, 0.43673469387755104, 0.4368879216539717, 0.4370410660864835, 0.4371941272430669, 0.43734710519162817, 0.43722826086956523, 0.43710948111926107, 0.4369907658881043, 0.43687211512354057, 0.4367535287730728, 0.43663500678426054, 0.43651654910472054, 0.43639815568212637, 0.43627982646420826, 0.43616156139875306, 0.4360433604336043, 0.43592522351666213, 0.435807150595883, 0.43568914161927974, 0.4355711965349215, 0.4354533152909337, 0.43533549783549785, 0.4352177441168515, 0.4351000540832883, 0.4349824276831576, 0.43486486486486486, 0.4347473655768711, 0.43462992976769316, 0.43451255738590333, 0.4343952483801296, 0.4342780026990553, 0.43416082029141934, 0.43404370110601564, 0.43392664509169365, 0.4338096521973578, 0.43369272237196765, 0.43384532471032067, 0.4339978448275862, 0.43415028279019663, 0.43430263866451263, 0.43445491251682367, 0.4346071044133477, 0.43475921442023135, 0.4349112426035503, 0.43506318902930896, 0.4352150537634409, 0.43536683687180866, 0.4355185384202042, 0.43567015847434865, 0.4358216970998926, 0.4359731543624161, 0.43612453032742887, 0.43627582506037027, 0.4364270386266094, 0.4365781710914454, 0.43672922252010726, 0.43688019297775393, 0.4370310825294748, 0.43718189124028933, 0.4373326191751473, 0.43748326639892904, 0.43763383297644537, 0.4377843189724378, 0.4379347244515784, 0.43808504947847016, 0.4379679144385027, 0.43785084202085006, 0.4377338321753073, 0.43761688485172323, 0.4375, 0.4373831775700935, 0.43726641751201284, 0.4371497197758207, 0.43703308431163285, 0.43691651106961854, 0.4368, 0.4366835510530525, 0.43656716417910446, 0.4364508393285372, 0.43633457645178475, 0.43621837549933423, 0.43610223642172524, 0.4359861591695502, 0.43587014369345395, 0.43575418994413406, 0.43563829787234043, 0.4355224674288753, 0.4354066985645933, 0.43529099123040127, 0.4351753453772582, 0.4353253652058433, 0.4354753053637812, 0.43562516591452083, 0.4355095541401274, 0.43539400371451314, 0.4352785145888594, 0.43516308671439935, 0.4350477200424178, 0.43519745560561884, 0.4353471118177, 0.43549668874172187, 0.4353813559322034, 0.4352660841938046, 0.4351508734780307, 0.43503572373643823, 0.43492063492063493, 0.4348056069822798, 0.43469063987308304, 0.4345757335448057, 0.43446088794926, 0.4343461030383091, 0.43423137876386686, 0.43411671507789806, 0.43400211193241817, 0.4338875692794933, 0.4337730870712401, 0.4336586652598259, 0.43354430379746833, 0.43343000263643555, 0.43331576172904585, 0.433201581027668, 0.4333508956796628, 0.4335001316829076, 0.43364928909952605, 0.4337983679915767, 0.43394736842105264, 0.4340962904498816, 0.4342451341399264, 0.43439389955298446, 0.43454258675078866, 0.4346911957950066, 0.4345769837099317, 0.4344628316259522, 0.43434873949579833, 0.4344972433709635, 0.4346456692913386, 0.43479401731828915, 0.4349422875131165, 0.43509047993705746, 0.4352385946512847, 0.43538663171690695, 0.43553459119496857, 0.4356824731464501, 0.4358302776322682, 0.43597800471327575, 0.4361256544502618, 0.4360115153101282, 0.4358974358974359, 0.4357834161653152, 0.4356694560669456, 0.43555555555555553, 0.4354417145844224, 0.43532793310687223, 0.43521421107628006, 0.4351005484460695, 0.4349869451697128, 0.43487340120073087, 0.43475991649269313, 0.4346464909992173, 0.4347939488784559, 0.43494132985658407, 0.4350886339937435, 0.4349752410737555, 0.43486190724335594, 0.43474863245636886, 0.43463541666666666, 0.4345222598281697, 0.4344091618948464, 0.434296122820713, 0.4341831425598335, 0.4340702210663199, 0.4339573582943318, 0.43384455419807644, 0.4337318087318087, 0.43361912184983115, 0.43376623376623374, 0.43391326928070634, 0.43406022845275183, 0.43420711134181156, 0.4343539180072652, 0.4345006485084306, 0.4346473029045643, 0.4347938812548613, 0.43494038361845516, 0.43508681005441824, 0.43523316062176165, 0.43537943537943535, 0.43552563438632835, 0.4356717577012684, 0.4358178053830228, 0.4359637774902975, 0.43610967408173823, 0.43625549521592966, 0.4364012409513961, 0.4365469113466012, 0.43669250645994834, 0.4368380263497804, 0.4369834710743802, 0.43687064291247096, 0.43675787299948376, 0.4366451612903226, 0.43653250773993807, 0.43641991230332733, 0.4363073749355338, 0.4361948955916473, 0.43608247422680413, 0.4359701107961865, 0.43585780525502316, 0.43574555755858874, 0.4356333676622039, 0.4355212355212355, 0.43540916109109623, 0.43529714432724465, 0.4351851851851852, 0.435073283620468, 0.43496143958868894, 0.4348496530454896, 0.434737923946557, 0.43462625224762397, 0.4345146379044684, 0.434403080872914, 0.4342915811088296, 0.4341801385681293, 0.4340687532067727, 0.4339574249807643, 0.4338461538461538, 0.43373493975903615, 0.43388006150691955, 0.434025108890597, 0.4339139344262295, 0.43405889884763127, 0.43420378904249873, 0.43434860506782696, 0.4342374616171955, 0.4341263750319775, 0.4340153452685422, 0.43390437228330353, 0.4340490797546012, 0.4341937132634807, 0.4343382728666326, 0.43448275862068964, 0.4346271705822268, 0.43477150880776105, 0.4349157733537519, 0.4348047971421281, 0.4346938775510204, 0.4345830145371079, 0.43447220805711373, 0.4346163650267652, 0.4347604485219164, 0.4349044585987261, 0.435048395313296, 0.4351922587216705, 0.435081466395112, 0.4349707304657674, 0.4348600508905852, 0.4347494276265581, 0.4348931841302136, 0.43503686753114673, 0.4351804778851042, 0.43532401524777636, 0.43546747967479676, 0.43561087122174247, 0.43575418994413406, 0.4358974358974359, 0.43604060913705583, 0.4361837097183456, 0.4363267376966007, 0.43646969312706063, 0.4366125760649087, 0.4367553865652725, 0.43689812468322353, 0.43704079047377753, 0.4371833839918946, 0.4373259052924791, 0.43746835443037974, 0.43761073146038976, 0.4375, 0.43764229698962814, 0.4377845220030349, 0.4379266750948167, 0.43806875631951464, 0.4382107657316149, 0.43835270338554827, 0.4384945693356908, 0.43863636363636366, 0.43877808634183285, 0.43891973750630997, 0.4390613171839515, 0.43920282542885974, 0.43934426229508194, 0.4394856278366112, 0.4396269221073859, 0.4397681451612903, 0.4399092970521542, 0.44005037783375317, 0.44019138755980863, 0.44033232628398794, 0.44047319405990437, 0.44061399094111725, 0.44075471698113206, 0.4408953722334004, 0.4407845109378929, 0.4406737053795877, 0.4405629555164614, 0.44045226130653264, 0.44034162270786237, 0.4402310396785535, 0.4401205121767512, 0.44001004016064255, 0.4398996235884567, 0.4397892624184646, 0.4396789566089792, 0.4395687061183551, 0.4394585109049887, 0.4393483709273183, 0.4392382861438236, 0.43912825651302606, 0.4390182819934886, 0.4389083625438157, 0.4387984981226533, 0.4386886886886887, 0.43857893420065047, 0.43846923461730863, 0.43835958989747437, 0.43825, 0.43814046488377906, 0.43803098450774614, 0.43792155883087686, 0.43806193806193805, 0.43820224719101125, 0.43834248627059413, 0.438482655353132, 0.43862275449101795, 0.43876278373659267, 0.4389027431421446, 0.43904263275991023, 0.4391824526420738, 0.4393222028407675, 0.43946188340807174, 0.4396014943960149, 0.4397410358565737, 0.4398805078416729, 0.44001991040318567, 0.44015924359293357, 0.44029850746268656, 0.440189007709525, 0.4400795624067628, 0.4399701715137957, 0.4398608349900596, 0.43975155279503103, 0.4396423248882265, 0.43978147504345666, 0.4399205561072492, 0.4400595681310499, 0.4401985111662531, 0.4403373852642024, 0.4402281746031746, 0.4401190181006695, 0.4400099157164105, 0.4399008674101611, 0.43979187314172447, 0.4396829328709438, 0.4395740465577018, 0.43946521416192125, 0.43935643564356436, 0.439247710962633, 0.4391390400791687, 0.4390304229532525, 0.43892185954500496, 0.4388133498145859, 0.43895205140879884, 0.43909068445762295, 0.4392292490118577, 0.4393677451222524, 0.43950617283950616, 0.4396445322142681, 0.4397828232971372, 0.43992104613866273, 0.44005920078934385, 0.4399506781750925, 0.43984220907297833, 0.4397337934434311, 0.43962543124691966, 0.4395171224439517, 0.43940886699507387, 0.4393006648608717, 0.43919251600196946, 0.4390844203790303, 0.4389763779527559, 0.43886838868388683, 0.43876045253320217, 0.43865256946151954, 0.4385447394296952, 0.43868272302777095, 0.4388206388206388, 0.4389584868582658, 0.43909626719056977, 0.4392339798674196, 0.43937162493863524, 0.4392638036809816, 0.4391560353287537, 0.43904831984302184, 0.43894065718489456, 0.43883304731551853, 0.4387254901960784, 0.4386179857877971, 0.43875551200391966, 0.43889297085476364, 0.4390303623898139, 0.43916768665850675, 0.43930494371023004, 0.4394421335943235, 0.4395792563600783, 0.4397163120567376, 0.4398533007334963, 0.43999022243950137, 0.4401270772238514, 0.44026386513559734, 0.44040058622374206, 0.4405372405372405, 0.440673828125, 0.4408103490358799, 0.44094680331869207, 0.44108319102220056, 0.44121951219512195, 0.4413557668861253, 0.44124817162359825, 0.4411406288081891, 0.44103313840155944, 0.440925700365408, 0.44081831466147103, 0.4407109812515218, 0.440603700097371, 0.4404964711608664, 0.44038929440389296, 0.4405254196059353, 0.4406614785992218, 0.44079747143204473, 0.4409333981526495, 0.4408262454434994, 0.44071914480077745, 0.4406120961865436, 0.44050509956289463, 0.44039815489196404, 0.44029126213592235, 0.4401844212569765, 0.44007763221737023, 0.43997089497938396, 0.4398642095053346, 0.43975757575757574, 0.43965099369849736, 0.4395444632905258, 0.43943798449612403, 0.4393315572777912, 0.43922518159806295, 0.439360929557008, 0.4394966118102614, 0.4393902734091459, 0.4392839864537978, 0.4391777509068924, 0.43907156673114117, 0.43896543388929177, 0.4388593523441276, 0.43875332205846823, 0.4386473429951691, 0.43854141511712147, 0.4384355383872525, 0.4383297127685252, 0.43846525096525096, 0.43860072376357057, 0.43873613121080557, 0.438871473354232, 0.43900675024108005, 0.4391419619185346, 0.43927710843373496, 0.439412189833775, 0.43954720616570325, 0.439682157476523, 0.4398170438131921, 0.43995186522262336, 0.44008662175168434, 0.4402213134471975, 0.44035594035594033, 0.44049050252464533, 0.440625, 0.44075943282864694, 0.44089380105718406, 0.4410281047321643, 0.44116234390009607, 0.44129651860744296, 0.4414306289006241, 0.4415646748260139, 0.44145873320537427, 0.4413528424082514, 0.4412470023980815, 0.44114121313833615, 0.44103547459252157, 0.44092978672417926, 0.4408241494968855, 0.4407185628742515, 0.44061302681992337, 0.440507541297582, 0.44040210627094306, 0.4402967217037569, 0.44019138755980863, 0.44008610380291796, 0.4399808703969393, 0.43987568730576143, 0.4397705544933078, 0.43966547192353644, 0.4397993311036789, 0.439933126343444, 0.43982808022922637, 0.4397230842683218, 0.439618138424821, 0.43951324266284897, 0.43940839694656486, 0.43930360124016216, 0.43919885550786836, 0.43909415971394516, 0.43898951382268825, 0.4388849177984274, 0.43901858027632207, 0.4391521790902596, 0.4392857142857143, 0.4394191859081171, 0.4395525940028558, 0.43968593861527483, 0.43981921979067556, 0.4399524375743163, 0.4400855920114123, 0.44021868314713575, 0.44035171102661597, 0.44048467569493943, 0.44061757719714967, 0.44075041557824746, 0.4408831908831909, 0.4410159031568953, 0.4411485524442335, 0.4412811387900356, 0.4414136622390892, 0.4415461228361394, 0.441678520625889, 0.4418108556529983, 0.4419431279620853, 0.4418384269130538, 0.44173377546186643, 0.4416291735732891, 0.4415246212121212, 0.4414201183431953, 0.4413156649313772, 0.4412112609415661, 0.4413434247871334, 0.4414755261291085, 0.44160756501182036, 0.4417395414795557, 0.44187145557655955, 0.4420033073470352, 0.44213509683514407, 0.4422668240850059, 0.4423984891406988, 0.44253009204625915, 0.44266163284568194, 0.4427931115829205, 0.4429245283018868, 0.4430558830464513, 0.4431871758604432, 0.443082724487391, 0.4429783223374175, 0.44287396937573614, 0.4430051813471503, 0.44313633152813753, 0.4432674199623352, 0.4433984466933396, 0.4435294117647059, 0.44366031521994825, 0.44379115710253997, 0.44392193745591346, 0.44381758345086975, 0.4437132784958872, 0.44360902255639095, 0.44350481559783883, 0.443400657585721, 0.44329654848556, 0.4431924882629108, 0.4430884768833607, 0.44298451431252933, 0.4428806005160685, 0.4427767354596623, 0.44267291910902695, 0.44256915142991093, 0.44246543238809466, 0.4423617619493908, 0.4422581400796439, 0.4421545667447307, 0.4420510419105596, 0.4419475655430712, 0.44184413760823776, 0.44174075807206364, 0.4416374269005848, 0.44176800748362954, 0.44189852700491, 0.4420289855072464, 0.442159383033419, 0.4422897196261682, 0.44241999532819437, 0.44255021018215784, 0.4426803642306794, 0.44281045751633985, 0.4429404900816803, 0.4430704619692021, 0.4429671098670399, 0.44286380597014924, 0.4427605502448123, 0.4428904428904429, 0.44302027499417385, 0.44315004659832247, 0.44327975774516654, 0.4434094084769446, 0.4435389988358556, 0.4436685288640596, 0.44379799860367697, 0.4439274080967892, 0.4438241451500349, 0.44395348837209303, 0.44408277144850034, 0.44421199442119946, 0.4443411573320939, 0.4444702602230483, 0.4445993031358885, 0.4447282861124013, 0.4448572091943348, 0.4449860724233983, 0.44511487584126247, 0.44524361948955915, 0.4453723034098817, 0.4455009276437848, 0.4456294922327846, 0.44575799721835885, 0.4458864426419467, 0.446014828544949, 0.4461431549687283, 0.4462714219546086, 0.4463996295438759, 0.4465277777777778, 0.4466558666975237, 0.44678389634428506, 0.44691186675919503, 0.44703977798334876, 0.44716763005780347, 0.4472954230235784, 0.44742315692165474, 0.44755083179297594, 0.44767844767844767, 0.44757505773672057, 0.44747171553913645, 0.4473684210526316, 0.4472651742441726, 0.4471619750807568, 0.4470588235294118, 0.4469557195571956, 0.4468526631311967, 0.4467496542185339, 0.4466466927863563, 0.4467741935483871, 0.4469016355678415, 0.44702901888530633, 0.4471563435413309, 0.44728360957642727, 0.4474108170310702, 0.44753796594569717, 0.4476650563607085, 0.44779208831646733, 0.44768912393653715, 0.4475862068965517, 0.4474833371638704, 0.44738051470588236, 0.4472777394900069, 0.44717501148369315, 0.4470723306544202, 0.44696969696969696, 0.4468671103970622, 0.44676457090408445, 0.44666207845836203, 0.44655963302752294, 0.4464572345792249, 0.44635488308115545, 0.4462525785010314, 0.44615032080659944, 0.44604810996563576, 0.44594594594594594, 0.44584382871536526, 0.44574175824175827, 0.445639734493019, 0.4455377574370709, 0.44543582704186685, 0.4455626715462031, 0.44568945803796023, 0.4458161865569273, 0.44594285714285714, 0.44584095063985374, 0.44573909070139367, 0.44563727729556873, 0.4455355103905001, 0.4454337899543379, 0.44533211595526134, 0.44523048836147877, 0.4451289071412275, 0.4450273722627737, 0.44492588369441277, 0.44505243958048335, 0.4451789377706861, 0.4453053783044667, 0.4454317612212349, 0.44555808656036444, 0.44568435436119336, 0.44581056466302366, 0.44593671750512176, 0.44606281292671823, 0.4459613196814562, 0.445859872611465, 0.4457584716852399, 0.44565711687130516, 0.4455558081382132, 0.4456818181818182, 0.4458077709611452, 0.4459336665152204, 0.4460595048830343, 0.44618528610354224, 0.446311010215664, 0.4464366772582842, 0.4465622872702519, 0.4466878402903811, 0.4468133363574507, 0.4467120181405896, 0.4466107458626162, 0.44673617407071625, 0.4468615454339452, 0.4469868599909379, 0.44711211778029447, 0.4472373188405797, 0.44736246321032375, 0.4474875509280217, 0.44761258203213394, 0.447737556561086, 0.4478624745532685, 0.44798733604703755, 0.44788605019217725, 0.4477848101265823, 0.447683615819209, 0.44758246723904205, 0.4474813643550937, 0.4473803071364047, 0.4472792955520434, 0.4471783295711061, 0.4470774091627172, 0.4469765342960289, 0.44687570494022105, 0.44677492106450156, 0.446674182638106, 0.4465734896302976, 0.44647284201036735, 0.44637223974763407, 0.446271682811444, 0.44617117117117117, 0.4460707047962171, 0.4459702836560108, 0.445869907720009, 0.44576957695769576, 0.4456692913385827, 0.4455690508322087, 0.4454688554081403, 0.4453687050359712, 0.44526859968532256, 0.4451685393258427, 0.44506852392720736, 0.4449685534591195, 0.4448686278913092, 0.4447687471935339, 0.444668911335578, 0.44456912028725315, 0.44446937401839803, 0.44436967249887843, 0.44427001569858715, 0.444170403587444, 0.44407083613539566, 0.44397131331241596, 0.4440958996190903, 0.4442204301075269, 0.44434490481522954, 0.44446932377966863, 0.4445936870382807, 0.4447179946284691, 0.4448422465876035, 0.4449664429530201, 0.44509058376202193, 0.44521466905187834, 0.44533869885982563, 0.4454626732230666, 0.44558659217877095, 0.4457104557640751, 0.44583426401608217, 0.44595801697186244, 0.44608171466845276, 0.4459821428571429, 0.4458826154876144, 0.4457831325301205, 0.4456836939549409, 0.4455842997323818, 0.4454849498327759, 0.4453856442264824, 0.4452863828838868, 0.4451871657754011, 0.44508799287146356, 0.44498886414253896, 0.44488977955911824, 0.4447907390917186, 0.4446917427108836, 0.4445927903871829, 0.44449388209121243, 0.4443950177935943, 0.4445185679341783, 0.444642063139173, 0.4445432318292954, 0.4444444444444444, 0.44434570095534326, 0.44424700133274103, 0.44414834554741284, 0.44404973357015987, 0.4439511653718091, 0.44385264092321347, 0.4437541601952518, 0.44365572315882873, 0.4435573297848747, 0.4434589800443459, 0.44336067390822437, 0.4432624113475177, 0.4431641923332595, 0.4432875498449269, 0.4434108527131783, 0.44353410097431356, 0.4436572946646004, 0.44378043382027443, 0.4439035184775393, 0.44402654867256636, 0.44414952444149525, 0.44427244582043346, 0.4443953128454566, 0.44451812555260833, 0.4446408839779005, 0.4447635881573133, 0.4448862381267948, 0.4447879858657244, 0.4449105762861559, 0.44503311258278144, 0.4451555947914368, 0.4450573698146514, 0.44495918817560115, 0.4448610498456109, 0.4447629547960309, 0.44466490299823636, 0.44478730438615827, 0.44490965182899955, 0.4448116325181758, 0.4447136563876652, 0.444835939220436, 0.44495816820783796, 0.4450803433854281, 0.4452024647887324, 0.4453245324532453, 0.44544654641443027, 0.44556850670771936, 0.4456904133685136, 0.4458122664321829, 0.4459340659340659, 0.44605581190947047, 0.4461775043936731, 0.44607950801669227, 0.44598155467720685, 0.44588364434687155, 0.4457857769973661, 0.445687952600395, 0.4458095655989469, 0.44593112524676465, 0.44605263157894737, 0.44617408463056346, 0.44629548443665057, 0.44641683103221563, 0.4465381244522349, 0.4466593647316539, 0.4467805519053876, 0.4469016860083206, 0.44702276707530647, 0.44714379514116875, 0.4472647702407002, 0.4473856924086633, 0.44750656167979, 0.447627378088782, 0.44774814167031046, 0.4478688524590164, 0.44798951048951047, 0.44811011579637317, 0.44823066841415465, 0.448351168377375, 0.448471615720524, 0.4485920104780616, 0.4487123526844173, 0.44883264237399084, 0.4489528795811518, 0.4490730643402399, 0.4491931966855648, 0.44931327665140613, 0.44943330427201394, 0.4495532795816082, 0.4496732026143791, 0.44957525593552605, 0.44947735191637633, 0.44937949052906595, 0.44928167174575534, 0.4491838955386289, 0.4490861618798956, 0.4489884707417881, 0.4488908220965637, 0.44879321591650356, 0.44869565217391305, 0.4485981308411215, 0.4485006518904824, 0.4484032152943732, 0.4483058210251955, 0.4482084690553746, 0.44811115935735996, 0.4480138919036249, 0.4479166666666667, 0.4478194836190063, 0.4477223427331887, 0.4476252439817827, 0.44752818733738076, 0.4474311727725992, 0.44733420026007803, 0.447453954496208, 0.4475736568457539, 0.4476933073424301, 0.447812906019922, 0.4479324529118857, 0.44805194805194803, 0.448171391473707, 0.4482907832107313, 0.44841012329656066, 0.44831314878892736, 0.4482162162162162, 0.4481193255512322, 0.44802247676680357, 0.4479256698357822, 0.4478289047310434, 0.447732181425486, 0.44763549989203194, 0.4475388601036269, 0.4474422620332398, 0.4473457056538628, 0.44724919093851134, 0.4471527178602243, 0.44705628639206385, 0.44695989650711515, 0.4468635481784867, 0.44676724137931034, 0.4466709760827408, 0.44679017664799653, 0.4466939478785268, 0.44659776055124895, 0.44671689989235736, 0.44683598794662077, 0.4469550247471487, 0.4468588640275387, 0.44676274467627447, 0.44666666666666666, 0.44657062997204905, 0.4464746345657782, 0.44637868042123363, 0.4462827675118178, 0.44618689581095594, 0.44609106529209624, 0.44599527592870947, 0.4458995276942894, 0.44580382056235246, 0.44570815450643775, 0.44561252950010727, 0.44573144573144574, 0.44585031095861033, 0.44596912521440824, 0.44608788853161846, 0.44620660094299186, 0.44611099207199484, 0.44601542416452444, 0.44591989719426, 0.44603854389721626, 0.4461571397987583, 0.4462756849315068, 0.4463941793280548, 0.44651262302096706, 0.44663101604278077, 0.4467493584260051, 0.44686765020312164, 0.446985891406584, 0.44710408206881813, 0.44722222222222224, 0.44734031189916684, 0.4474583511319949, 0.44757633995302154, 0.4476942783945346, 0.44759871931696904, 0.4475032010243278, 0.44740772349050567, 0.4473122866894198, 0.4472168905950096, 0.44712153518123665, 0.44702622042208484, 0.4469309462915601, 0.4468357127636906, 0.4467405198125266, 0.44664536741214056, 0.4465502555366269, 0.4464551841601022, 0.446360153256705, 0.44626516280059586, 0.4461702127659574, 0.4460753031269943, 0.4459804338579328, 0.4458856049330215, 0.4457908163265306, 0.4459086078639745, 0.44581385465363366, 0.44571914170384536, 0.44583687340696687, 0.4457421957952856, 0.445859872611465, 0.44597749946932713, 0.44609507640067914, 0.44621260343730107, 0.44633008061094614, 0.44644750795334043, 0.44656488549618323, 0.44668221327114693, 0.44679949130987706, 0.4469167196439924, 0.4470338983050847, 0.44715102732471934, 0.44726810673443457, 0.44738513656574214, 0.44750211685012703, 0.44761904761904764, 0.44773592890393565, 0.44785276073619634, 0.4479695431472081, 0.44808627616832314, 0.44820295983086683, 0.44831959416613826, 0.44843617920540996, 0.44834143249524616, 0.44824672581326575, 0.4481520591341077, 0.44805743243243246, 0.44796284568292166, 0.4478682988602786, 0.44777379193922767, 0.44789029535864977, 0.44800674963087955, 0.4481231547870097, 0.44802867383512546, 0.44793423271500843, 0.44783983140147526, 0.4477454698693637, 0.44765114809353274, 0.4475568660488627, 0.4474626237102548, 0.4473684210526316, 0.4472742580509366, 0.4471801346801347, 0.4470860509152114, 0.44699200673117373, 0.4468980021030494, 0.4468040370058873, 0.4469203279377759, 0.4468263976460698, 0.44673250682916577, 0.44684873949579834, 0.44696492333543375, 0.44708105837883244, 0.44719714465672894, 0.44731318219983207, 0.4472193074501574, 0.44712547209399917, 0.44703167610656597, 0.44693791946308725, 0.44684420213881315, 0.44675052410901467, 0.44665688534898346, 0.4465632858340319, 0.446469725539493, 0.446585672392124, 0.44670157068062827, 0.44681742043551087, 0.4469332216872514, 0.4470489744663039, 0.4471646788030969, 0.44728033472803347, 0.4473959422714913, 0.4475115014638227, 0.4476270123353544, 0.44774247491638797, 0.4478578892371996, 0.4479732553280401, 0.44808857321913514, 0.44820384294068505, 0.4481102526623512, 0.4482254697286013, 0.4483406386975579, 0.4484557595993322, 0.44857083246401, 0.44847726324572385, 0.4483837330552659, 0.4482902418682235, 0.4481967896602043, 0.4481033764068362, 0.44801000208376746, 0.4479166666666667, 0.44782337013122264, 0.44773011245314454, 0.44763689360816156, 0.4475437135720233, 0.4474505723204995, 0.44756554307116103, 0.44768046598710215, 0.4477953410981697, 0.4479101684341859, 0.448024948024948, 0.4481396799002286, 0.44825436408977554, 0.44836900062331186, 0.44848358953053596, 0.4485981308411215, 0.4485049833887043, 0.4484118746107536, 0.44831880448318806, 0.44822577298194644, 0.44813278008298757, 0.44803982576228996, 0.44794690999585235, 0.44785403275969315, 0.44776119402985076, 0.44766839378238343, 0.44757563199336925, 0.44748290863890616, 0.44739022369511183, 0.44729757713812385, 0.4472049689440994, 0.44711239908921546, 0.447226821192053, 0.4473411959445479, 0.4474555233760861, 0.44756980351602893, 0.4476840363937138, 0.4477982220384536, 0.447912360479537, 0.44802645174622857, 0.4481404958677686, 0.44825449287337327, 0.4483684427922346, 0.4484823456535205, 0.4485962014863749, 0.4487100103199174, 0.44882377218324393, 0.448937487105426, 0.4490511551155115, 0.4491647762425242, 0.44927835051546394, 0.44939187796330654, 0.4495053586150041, 0.44961879249948483, 0.4497321796456531, 0.4498455200823893, 0.44995881383855024, 0.4500720609429689, 0.45018526142445453, 0.45029841531179254, 0.45041152263374484, 0.45052458341904955, 0.4506375976964212, 0.45075056549455067, 0.45086348684210525, 0.45097636176772865, 0.4510891903000411, 0.4512019724676392, 0.45131470829909615, 0.4514273978229616, 0.4515400410677618, 0.45165263806199957, 0.45176518883415434, 0.45187769341268214, 0.4519901518260156, 0.4521025641025641, 0.4522149302707137, 0.45232725035882715, 0.45243952439524393, 0.4525517524082804, 0.4526639344262295, 0.4527760704773612, 0.45288816058992215, 0.453000204792136, 0.45290745290745293, 0.45281473899692937, 0.45272206303724927, 0.4526294250051156, 0.4525368248772504, 0.4524442626303948, 0.4525562372188139, 0.452668166019219, 0.45278004905968927, 0.4528918863682812, 0.4530036779730282, 0.45311542390194076, 0.45302287581699346, 0.4531345721870533, 0.4532462229481421, 0.4533578281281894, 0.45346938775510204, 0.4535809018567639, 0.45369237046103633, 0.4538037935957577, 0.45391517128874387, 0.45402650356778795, 0.45413779046066044, 0.454249031995109, 0.454360228198859, 0.4542676716235486, 0.45417515274949083, 0.45408267155365506, 0.4539902280130293, 0.4538978221046204, 0.454008954008954, 0.45412004069175993, 0.4542310821806347, 0.4541387024608501, 0.45404636030906875, 0.4541573490546859, 0.45426829268292684, 0.4543791912212965, 0.45449004469727755, 0.45460085313833026, 0.4545085296506905, 0.45441624365482236, 0.4543239951278928, 0.4542317840470875, 0.45413961038961037, 0.4540474741326841, 0.4539553752535497, 0.45386331372946664, 0.4537712895377129, 0.4536793026555848, 0.45358735306039727, 0.4534954407294833, 0.4536061588330632, 0.4537168320842617, 0.4538274605103281, 0.4539380441384896, 0.4540485829959514, 0.4541590771098968, 0.45406717927964385, 0.4539753186324095, 0.4538834951456311, 0.4537917087967644, 0.45369995956328346, 0.4536082474226804, 0.4535165723524656, 0.45342493433016773, 0.4533333333333333, 0.45324176933952737, 0.4531502423263328, 0.4530587522713507, 0.45296729915220024, 0.45287588294651865, 0.45278450363196127, 0.45269316118620134, 0.4526018555869302, 0.45251058681185724, 0.45241935483870965, 0.4523281596452328, 0.45223700120918986, 0.4521458795083619, 0.4520547945205479, 0.45196374622356494, 0.4518727345952477, 0.45198308838332996, 0.45209339774557167, 0.45200241497283156, 0.45191146881287725, 0.451820559243613, 0.45193081255028156, 0.4520410215161874, 0.452151186168074, 0.45226130653266333, 0.45237138263665594, 0.45248141450673096, 0.452591402169546, 0.4525005021088572, 0.45240963855421684, 0.45231881148363784, 0.4522280208751505, 0.45213726670680315, 0.4520465489566613, 0.4519558676028084, 0.4518652226233454, 0.45177461399639063, 0.4516840417000802, 0.4515935057125676, 0.45150300601202403, 0.45141254257663793, 0.4515224358974359, 0.451632285199279, 0.4517420905086103, 0.45165165165165166, 0.45156124899919936, 0.4514708825295177, 0.45138055222088835, 0.4512902580516103, 0.4512, 0.4511097780443911, 0.45101959216313475, 0.45092944233459925, 0.45083932853717024, 0.45074925074925076, 0.45065920894926087, 0.4505692031156381, 0.4504792332268371, 0.4503892992613296, 0.4502994011976048, 0.4502095390141688, 0.4501197126895451, 0.4500299222022741, 0.4499401675309134, 0.4498504486540379, 0.44976076555023925, 0.4496711181981264, 0.44958150657632523, 0.44949193066347876, 0.44940239043824703, 0.4493128858793069, 0.44922341696535245, 0.44913398367509455, 0.44904458598726116, 0.448955223880597, 0.4488658973338639, 0.4487766063258405, 0.4486873508353222, 0.4487969775303241, 0.4487077534791252, 0.4486185648976347, 0.4485294117647059, 0.4484402940592092, 0.4483512117600318, 0.44826216484607745, 0.4481731532962669, 0.4480841770895374, 0.4479952362048432, 0.447906330621155, 0.44781746031746034, 0.44772862527276336, 0.4476398254660849, 0.4475510608764624, 0.44746233148295006, 0.44737363726461843, 0.4472849782005549, 0.44719635426986326, 0.44710776545166403, 0.44701921172509407, 0.44693069306930694, 0.4468422094634726, 0.44675376088677754, 0.4466653473184247, 0.44677483181638306, 0.44688427299703265, 0.44699367088607594, 0.4471030255091952, 0.4472123368920522, 0.4473216050602886, 0.4474308300395257, 0.4475400118553646, 0.447649150533386, 0.4477582460991507, 0.44786729857819907, 0.4479763079960513, 0.44808527437820767, 0.448194197750148, 0.4483030781373323, 0.4484119155652002, 0.4485207100591716, 0.448629461644646, 0.44873817034700314, 0.4488468361916026, 0.448955459203784, 0.4488669950738916, 0.4487785657998424, 0.44869017136104, 0.4486018117369043, 0.44851348690687143, 0.4484251968503937, 0.4483369415469396, 0.4482487209759937, 0.44816053511705684, 0.44807238394964594, 0.447984267453294, 0.4478961856075501, 0.4478081383919796, 0.44772012578616355, 0.44763214776969934, 0.4475442043222004, 0.447456295423296, 0.4473684210526316, 0.44728058118986846, 0.4471927758146839, 0.44710500490677135, 0.4470172684458399, 0.4471257602511281, 0.4472342094939192, 0.44734261619925475, 0.44745098039215686, 0.4475593020976279, 0.4476675813406507, 0.4477758181461885, 0.447884012539185, 0.44799216454456414, 0.4481002741872307, 0.44820834149206973, 0.44831636648394674, 0.44842434918770796, 0.44853228962818004, 0.44864018783017023, 0.44874804381846634, 0.44885585761783686, 0.4489636292530309, 0.4490713587487781, 0.4491790461297889, 0.44928669142075434, 0.4493942946463462, 0.44950185583121705, 0.449609375, 0.4497168521773091, 0.44982428738773916, 0.4497364825297677, 0.4498438719750195, 0.44995121951219513, 0.4500585251658213, 0.4501657889604057, 0.4502730109204368, 0.4503801910703841, 0.4504873294346979, 0.4505944260378094, 0.4507014809041309, 0.45080849405805573, 0.45091546552395795, 0.4510223953261928, 0.4511292834890966, 0.4512361300369866, 0.45134293499416117, 0.4514496983848998, 0.45136186770428016, 0.451274071192375, 0.4511863088292493, 0.4512930196383434, 0.4513996889580093, 0.45150631681243925, 0.45161290322580644, 0.4517194482222654, 0.4518259518259518, 0.4519324140609827, 0.4520388349514563, 0.4521452145214521, 0.45225155279503104, 0.4521637880846109, 0.45207605743112145, 0.451988360814743, 0.4519006982156711, 0.4518130696141167, 0.4517254749903063, 0.45163791432448147, 0.45155038759689925, 0.4514628947878318, 0.4515691592406044, 0.4516753825295371, 0.45178156467854375, 0.45188770571151987, 0.45199380565234226, 0.4520998645248694, 0.4522058823529412, 0.4523118591603792, 0.45241779497098644, 0.4525236898085477, 0.45262954369682906, 0.4525420452348734, 0.4524545805952841, 0.4523671497584541, 0.45227975270479137, 0.45219238941471895, 0.45210505986867516, 0.45201776404711336, 0.45193050193050194, 0.45184327349932446, 0.4517560787340795, 0.4516689176152807, 0.4515817901234568, 0.45168756027000967, 0.4517932896259159, 0.4518989782147677, 0.4520046260601388, 0.4521102331855849, 0.45221579961464353, 0.45232132537083414, 0.4524268104776579, 0.4525322549585981, 0.45263765883711976, 0.4527430221366699, 0.45265588914549654, 0.4525687896863575, 0.4524817237399, 0.45239469128678594, 0.4523076923076923, 0.4522207267833109, 0.45213379469434833, 0.45204689602152603, 0.45196003074558033, 0.45187319884726224, 0.45197848636189014, 0.4520837334357595, 0.4521889400921659, 0.45229410635438666, 0.45220729366602685, 0.4521205142966801, 0.45203376822716806, 0.45194705543832725, 0.4518603759110088, 0.45177372962607865, 0.4516871165644172, 0.45179221774966455, 0.4518972786508241, 0.4520022992910519, 0.4521072796934866, 0.4522122198812488, 0.4523171198774416, 0.4524219797051503, 0.45252679938744256, 0.45263157894736844, 0.4527363184079602, 0.4528410177922326, 0.45294567712318284, 0.4530502964237904, 0.45315487571701724, 0.4532594150258077, 0.4533639143730887, 0.4534683737817695, 0.4535727932747421, 0.45367717287488063, 0.453781512605042, 0.4538858124880657, 0.4539900725467736, 0.45409429280397023, 0.4541984732824427, 0.45430261400496086, 0.454406714994277, 0.4545107762731261, 0.45461479786422576, 0.45452812202097237, 0.4544414792222646, 0.45454545454545453, 0.45445884146341464, 0.4543722613831206, 0.4542857142857143, 0.45419920015235193, 0.45411271896420413, 0.4540262707024557, 0.45393985534830605, 0.4540437678401522, 0.4539573820395738, 0.45387102910405175, 0.45378470901483453, 0.45369842175318503, 0.45361216730038023, 0.4535259456377115, 0.45343975674648423, 0.4533536006080182, 0.4532674772036474, 0.45318138651471984, 0.4530953285225978, 0.4530093032086577, 0.45292331055429, 0.4528373505408996, 0.45275142314990513, 0.45266552836273954, 0.45257966616084977, 0.45249383652569697, 0.4524080394387562, 0.4523222748815166, 0.4522365428354814, 0.4521508432821679, 0.4520651762031072, 0.45197954157984466, 0.4518939393939394, 0.4518083696269646, 0.45172283226050736, 0.45182661366647736, 0.4519303557910674, 0.4520340586565752, 0.4521377222852819, 0.4520522035180632, 0.4519667170953101, 0.4518812629986765, 0.45179584120982985, 0.4517104517104517, 0.45162509448223737, 0.4515397695068959, 0.45145447676615036, 0.4513692162417375, 0.45128398791540786, 0.4511987917689258, 0.45111362778406944, 0.45102849594263067, 0.4509433962264151, 0.450858328617242, 0.4507732930969445, 0.4506882896473694, 0.4506033182503771, 0.4505183788878417, 0.450433471541651, 0.45034859619370643, 0.45045214770158254, 0.450555660199661, 0.4506591337099812, 0.450762568254566, 0.4508659638554217, 0.4509693205345379, 0.45107263831388783, 0.45117591721542805, 0.4512791572610986, 0.45138235847282304, 0.4514855208725085, 0.4514006392178981, 0.4513157894736842, 0.4512309716218756, 0.45114618564449455, 0.4512492955100507, 0.4513523666416228, 0.4514553990610329, 0.45137063462260607, 0.4512859020086353, 0.4512012012012012, 0.4511165321823982, 0.45103189493433393, 0.4509472894391296, 0.4508627156789197, 0.45077817363585226, 0.4506936632920885, 0.4506091846298032, 0.4505247376311844, 0.45044032227843356, 0.45035593855376543, 0.4504588874321034, 0.45056179775280897, 0.4506646695375398, 0.4507675028079371, 0.4508702975856261, 0.4509730538922156, 0.45088868101029, 0.4508043396932286, 0.4507200299233215, 0.4506357516828721, 0.45055150495419705, 0.4504672897196262, 0.450569986918333, 0.45067264573991034, 0.4507752662058659, 0.4506910720956294, 0.45060690943043885, 0.4505227781926811, 0.45062535000933357, 0.4507278835386338, 0.4508303788020153, 0.45093283582089555, 0.451035254616676, 0.45113763521074224, 0.45123997762446394, 0.4513422818791946, 0.45144454799627215, 0.45154677599701826, 0.45164896590273895, 0.4517511177347243, 0.4516669770907059, 0.4515828677839851, 0.45149878979705826, 0.45141474311243485, 0.45133072771263727, 0.45124674358020095, 0.4511627906976744, 0.45107886904761907, 0.4509949786126093, 0.4509111193752324, 0.45082729131808885, 0.4507434944237918, 0.45065972867496745, 0.4505759940542549, 0.4504922905443062, 0.45040861812778604, 0.4503249767873723, 0.45024136650575564, 0.4501577872656395, 0.45007423904974014, 0.4499907218407868, 0.44990723562152135, 0.44982378037469856, 0.44974035608308605, 0.4496569627294641, 0.4495736002966259, 0.4494902687673772, 0.4494069681245367, 0.4493236983509357, 0.4492404594294183, 0.4491572513428413, 0.44907407407407407, 0.4489909276059989, 0.4489078119215105, 0.44882472700351655, 0.4487416728349371, 0.4486586493987049, 0.44857565667776544, 0.44849269465507674, 0.4484097633136095, 0.44832686263634686, 0.44824399260628467, 0.44816115320643135, 0.4480783444198078, 0.44799556622944764, 0.44791281861839677, 0.44783010156971376, 0.4477474150664697, 0.4476647590917482, 0.44758213362864524, 0.4474995386602694, 0.4474169741697417, 0.4473344401401955, 0.44725193655477685, 0.44716946339664393, 0.44708702064896755, 0.4470046082949309, 0.44692222631772943, 0.44683987470057124, 0.4467575534266765, 0.4468594584638055, 0.44696132596685084, 0.4470631559565458, 0.44716494845360827, 0.44726670347874103, 0.4473684210526316, 0.44747010119595215, 0.44757174392935983, 0.44748942431487954, 0.44740713497609413, 0.4473248758963045, 0.44724264705882355, 0.44716044844697667, 0.44707828004410144, 0.4469961418335477, 0.44691403379867745, 0.446831955922865, 0.4467499081894969, 0.4466678905819717, 0.44658590308370044, 0.4465039456781061, 0.44642201834862383, 0.44634012107870114, 0.4462582538517975, 0.4461764166513846, 0.4460946094609461, 0.446012832263978, 0.44593108504398826, 0.44584936778449696, 0.44576768046903625, 0.4456860230811504, 0.44560439560439563, 0.44552279802234024, 0.44544123031856464, 0.4453596924766612, 0.44527818448023426, 0.44519670631290026, 0.4451152579582876, 0.4450338394000366, 0.44495245062179956, 0.4448710916072408, 0.4447897623400366, 0.444708462803875, 0.4446271929824561, 0.44454595285949206, 0.4444647424187066, 0.44438356164383563, 0.44430241051862673, 0.4442212890268395, 0.4443227455275648, 0.444424164993612, 0.44452554744525546, 0.4444444444444444, 0.4443633710324699, 0.4442823271931424, 0.4442013129102845, 0.44412032816773017, 0.44403937294932555, 0.44395844723892836, 0.44387755102040816, 0.4437966842776462, 0.44371584699453553, 0.44363503915498087, 0.4435542607428988, 0.4434735117422174, 0.4433927921368766, 0.44331210191082804, 0.4432314410480349, 0.44315080953247227, 0.4430702073481266, 0.4429896344789962, 0.4429090909090909, 0.4428285766224323, 0.44274809160305345, 0.4426676358349991, 0.4425872093023256, 0.4425068119891008, 0.4426080639302579, 0.4427092790993281, 0.44281045751633985, 0.44291159920130696, 0.44301270417422867, 0.4431137724550898, 0.44321480406386066, 0.443315799020497, 0.4434167573449401, 0.443517679057117, 0.44343727338651195, 0.4433568968642378, 0.4432765494744473, 0.4431962312013046, 0.4431159420289855, 0.44303568194167725, 0.4429554509235784, 0.4428752489588991, 0.44297610427226647, 0.4430769230769231, 0.4431777053926891, 0.4432784512393704, 0.4433791606367583, 0.4434798336046301, 0.44358047016274865, 0.4436810703308624, 0.4437816341287057, 0.4438821615759986, 0.4439826526924467, 0.44408310749774166, 0.4441835260115607, 0.4442839082535669, 0.44438425424340916, 0.44448456400072217, 0.44458483754512634, 0.4446850748962281, 0.4447852760736196, 0.44488544109687894, 0.4448051948051948, 0.4447249774571686, 0.4448250991705734, 0.4449251847845682, 0.4450252343186734, 0.44512524779239504, 0.44522522522522523, 0.44532516663664207, 0.4452449567723343, 0.4451647757968666, 0.4450846236946345, 0.445004500450045, 0.4449244060475162, 0.4448443404714774, 0.4447643037063692, 0.44468429573664325, 0.4446043165467626, 0.4445243661212012, 0.4444444444444444, 0.4443645515009887, 0.4444644140905823, 0.4445642407906559, 0.44466403162055335, 0.4447637865996048, 0.444683908045977, 0.44460405817920634, 0.444524236983842, 0.4444444444444444, 0.4443646805455851, 0.4442849452718464, 0.444205238607822, 0.4441255605381166, 0.44404591104734575, 0.4439662901201363, 0.4438866977411258, 0.44380713389496323, 0.4437275985663082, 0.44364809173983155, 0.443568613400215, 0.4434891635321512, 0.44340974212034384, 0.4433303491495076, 0.44325098460436807, 0.4431716484696617, 0.443092340730136, 0.4430130613705493, 0.44293381037567087, 0.4428545877302808, 0.4427753934191702, 0.44269622742714104, 0.4426170897390061, 0.4425379803395889, 0.4424588992137241, 0.44237984634625693, 0.4423008217220436, 0.44222182532595106, 0.4421428571428571, 0.44224245670415996, 0.4423420207068904, 0.44244154917008743, 0.4423625981441827, 0.44228367528991974, 0.4422047805922226, 0.4421259140360264, 0.44204707560627676, 0.4419682652879301, 0.44188948306595366, 0.44181072892532525, 0.4417320028510335, 0.4416533048280777, 0.44157463484146775, 0.4414959928762244, 0.4414173789173789, 0.4413387929499733, 0.44126023495906014, 0.44118170492970277, 0.4411032028469751, 0.4412026329834549, 0.4413020277481323, 0.4414013871598791, 0.44132290184921763, 0.44124444444444444, 0.441166014930679, 0.44108761329305135, 0.4410092395167022, 0.4409308935867827, 0.4408525754884547, 0.44095187355709464, 0.44105113636363635, 0.4411503639268596, 0.4412495562655307, 0.4411712511091393, 0.4410929737402413, 0.44101472414404824, 0.4409365023057822, 0.4408583082106757, 0.44078014184397163, 0.4407020031909236, 0.44080113434952145, 0.44090023037391457, 0.44099929128277815, 0.44109831709477415, 0.4411973078285512, 0.4412962635027448, 0.44139518413597734, 0.44149406974685784, 0.4415929203539823, 0.4416917359759335, 0.44179051663128094, 0.4418892623385813, 0.4419879731163778, 0.4420866489832007, 0.442008486562942, 0.44193035177656004, 0.4418522446094026, 0.44177416504682804, 0.4416961130742049, 0.4416180886769122, 0.4415400918403391, 0.4414621225498852, 0.4413841807909605, 0.44130626654898497, 0.44122837980938934, 0.4411505205576143, 0.4410726887791108, 0.44099488445934026, 0.4409171075837742, 0.44083935813789454, 0.4407616361071932, 0.44068394147717255, 0.4406062742333451, 0.44052863436123346, 0.4404510218463707, 0.4403734366742998, 0.44029587883057414, 0.4402183483007572, 0.44014084507042256, 0.44006336912515404, 0.4399859204505456, 0.4399084990322013, 0.4398311048557354, 0.4397537379067722, 0.43967639817094617, 0.4397749252681554, 0.439873417721519, 0.43997187554930567, 0.44007029876977155, 0.4401686874011597, 0.44026704146170065, 0.4403653609696118, 0.440463645943098, 0.44038630377524146, 0.44030898876404495, 0.440231700895208, 0.44015444015444016, 0.44007720652746096, 0.44, 0.43992282055779686, 0.4398456681866012, 0.43976854287217254, 0.4396914446002805, 0.43961437335670467, 0.4395373291272345, 0.43946031189766954, 0.4393833216538192, 0.4393063583815029, 0.4392294220665499, 0.4391525126947995, 0.43907563025210083, 0.438998774724313, 0.43892194609730484, 0.4388451443569554, 0.43876836948915326, 0.4386916214797971, 0.4386149003147954, 0.43853820598006643, 0.43846153846153846, 0.43838489774514944, 0.4383082838168473, 0.43823169666258954, 0.4381551362683438, 0.43807860262008735, 0.4380020957038072, 0.43792561550550024, 0.4380237430167598, 0.4381218362716006, 0.4382198952879581, 0.43831792008375503, 0.4384159106769016, 0.43851386708529566, 0.4386117893268225, 0.43870967741935485, 0.4388075313807531, 0.43890535122886526, 0.43900313698152665, 0.4389266422721729, 0.4388501742160279, 0.4389479184811009, 0.4390456287008011, 0.4389691798711475, 0.4388927576601671, 0.43881636205395996, 0.4387399930386356, 0.4386636506003132, 0.4385873347251218, 0.4385110453991999, 0.4384347826086957, 0.438358546339767, 0.43828233657858134, 0.43820615331131585, 0.43812999652415713, 0.4380538662033015, 0.43797776233495483, 0.43790168490533266, 0.4378256339006599, 0.43792325056433407, 0.43802083333333336, 0.43811838222530813, 0.43821589725789656, 0.43831337844872464, 0.43841082581540597, 0.43850823937554206, 0.4386056191467222, 0.43870296514652335, 0.43880027739251043, 0.4388975559022361, 0.4389948006932409, 0.4390920117830532, 0.4391891891891892, 0.439113112766326, 0.43903706269483894, 0.43896103896103894, 0.4388850415512465, 0.43880907045179157, 0.4387331256490135, 0.4386572071292611, 0.43858131487889274, 0.43850544888427606, 0.4384296091317883, 0.438353795607816, 0.4382780082987552, 0.43820224719101125, 0.43812651227099897, 0.4380508035251426, 0.4379751209398756, 0.437899464501641, 0.4378238341968912, 0.43774823001208774, 0.43767265193370164, 0.4375970999482134, 0.4375215740421125, 0.4374460742018982, 0.43737060041407866, 0.43729515266517166, 0.437219730941704, 0.4371443352302121, 0.4370689655172414, 0.43699362178934664, 0.43691830403309206, 0.4370153368947096, 0.43711233631977947, 0.4372093023255814, 0.4373062349293834, 0.43740313414844156, 0.4375, 0.4375968325012911, 0.43752151462994837, 0.437446222681122, 0.4373709566414315, 0.4372957164975056, 0.43722050223598213, 0.4371453138435082, 0.43707015130674004, 0.43699501461234314, 0.43709178411825367, 0.4370166695308472, 0.43711340206185567, 0.4372101013571551, 0.43730676743387153, 0.437403400309119, 0.4375, 0.4375965665236051, 0.4375214555441126, 0.43744637034494593, 0.4373713109128346, 0.4372962772345171, 0.437221269296741, 0.4371462870862631, 0.4370713305898491, 0.43699639979427396, 0.4369214946863216, 0.4368466152527849, 0.4367717614804661, 0.4366969333561761, 0.4366221308667352, 0.43654735399897243, 0.43647260273972605, 0.43639787707584315, 0.43632317699418005, 0.4362485024816019, 0.4361738535249829, 0.43609923011120616, 0.43602463222716387, 0.4361210877373012, 0.436046511627907, 0.4359719610189776, 0.4358974358974359, 0.4358229362502136, 0.43574846206425155, 0.43567401332649924, 0.4355995900239153, 0.43552519214346713, 0.4354508196721312, 0.4353764725968926, 0.43530215090474567, 0.4352278545826933, 0.4351535836177474, 0.4350793379969288, 0.43500511770726713, 0.4349309227358008, 0.4348567530695771, 0.43478260869565216, 0.43470848960109104, 0.4346343957729674, 0.434560327198364, 0.4344862838643721, 0.434412265758092, 0.4343382728666326, 0.43426430517711173, 0.4341903626766559, 0.4341164453524004, 0.4340425531914894, 0.43396868618107554, 0.4338948443083206, 0.4338210275603947, 0.43374723592447695, 0.4336734693877551, 0.4335997279374256, 0.43352601156069365, 0.4334523202447731, 0.43337865397688646, 0.4333050127442651, 0.4332313965341488, 0.4331578053337863, 0.43308423913043476, 0.43301069791136015, 0.432937181663837, 0.43286369037514855, 0.4329599456890699, 0.4330561683353131, 0.4331523583305056, 0.43324851569126377, 0.4333446404341927, 0.43344073257588606, 0.4335367921329264, 0.43363281912188506, 0.433728813559322, 0.43382477546178616, 0.43392070484581496, 0.43401660172793494, 0.43411246612466126, 0.4342082980524979, 0.4341347781916695, 0.4340612832232944, 0.43398781313473256, 0.43391436791335253, 0.4338409475465313, 0.43376755202165457, 0.43369418132611637, 0.43362083544731944, 0.433547514372675, 0.4334742180896027, 0.43356997971602435, 0.4336657089741423, 0.433761405880365, 0.43385707045108973, 0.4339527027027027, 0.43387941226144233, 0.43380614657210403, 0.43373290562215094, 0.4336596893990547, 0.43358649789029535, 0.43351333108336143, 0.43344018896575, 0.4333670715249663, 0.4332939787485242, 0.433220910623946, 0.4331478671387624, 0.43307484828051246, 0.4330018540367436, 0.4329288843950118, 0.43302443133951135, 0.4329514824797844, 0.43287855819437426, 0.43297406534186594, 0.43306954032665435, 0.43316498316498314, 0.43326039387308535, 0.43335577246718276, 0.4334511189634865, 0.4335464333781965, 0.4336417157275021, 0.43373696602758155, 0.4338321842946023, 0.4339273705447209, 0.43402252479408304, 0.43411764705882355, 0.4342127373550664, 0.43430779569892475, 0.43440282210650094, 0.4344978165938865, 0.43459277917716205, 0.4346877098723976, 0.43461473896256503, 0.43454179254783487, 0.43446887061587514, 0.4343959731543624, 0.43432310015098136, 0.434250251593425, 0.4341774274693946, 0.4341046277665996, 0.4340318524727578, 0.43395910157559503, 0.43388637506284566, 0.43381367292225204, 0.4337409951415648, 0.43366834170854274, 0.43376318874560377, 0.4338580040187542, 0.43378536748702495, 0.433712755272849, 0.4336401673640167, 0.43356760374832665, 0.43349506441358543, 0.4335898293743727, 0.4336845626358923, 0.43377926421404683, 0.4338739341247283, 0.43396857238381814, 0.43406317900718705, 0.4341577540106952, 0.43425229741019217, 0.43434680922151686, 0.43444128946049776, 0.4345357381429526, 0.43463015528468857, 0.43472454090150253, 0.4348188950091804, 0.434913217623498, 0.43500750876022026, 0.4351017684351018, 0.4351959966638866, 0.43512341561040696, 0.4350508587627147, 0.4349783261087029, 0.43490581763627273, 0.43483333333333335, 0.43476087318780204, 0.43468843718760414, 0.434616025320673, 0.43454363757495, 0.4344712739383847, 0.4343989343989344, 0.4343266189445647, 0.434254327563249, 0.4341820602429689, 0.43427620632279534, 0.43437032107802365, 0.4342980705256154, 0.4342258440046566, 0.43415364150315927, 0.4340814630091438, 0.4340093085106383, 0.43393717799567894, 0.43386507145230974, 0.4337929888685828, 0.43372093023255814, 0.4336488955323036, 0.43357688475589506, 0.4335048978914162, 0.43343293492695883, 0.4335269709543568, 0.43362097577165615, 0.4337149493943919, 0.43364299933642997, 0.43373693813236025, 0.4338308457711443, 0.43392472226828055, 0.4338527851458886, 0.4337808718713741, 0.43370898243288036, 0.43363711681855843, 0.4335652750165673, 0.4334934570150737, 0.4334216628022524, 0.4333498923662858, 0.4332781456953642, 0.43320642277768584, 0.4331347236014565, 0.43306304815488994, 0.4329913964262078, 0.43308519437551696, 0.43301356268607344, 0.4329419546882752, 0.4330357142857143, 0.43312944288312116, 0.43322314049586774, 0.4333168071393158, 0.4334104428288169, 0.43350404757971256, 0.433597621407334, 0.4336911643270025, 0.43361955085865256, 0.4335479610368169, 0.4334763948497854, 0.43340485228585574, 0.43333333333333335, 0.43326183798053125, 0.4331903662157704, 0.4331189180273792, 0.4330474934036939, 0.43297609233305856, 0.4329047148038246, 0.4328333608043514, 0.4327620303230059, 0.4326907233481628, 0.4326194398682043, 0.43254817987152033, 0.43247694334650855, 0.4324057302815742, 0.43233454066513005, 0.4322633744855967, 0.43219223173140225, 0.4321211123909824, 0.4320500164527805, 0.43197894390524755, 0.4320723684210526, 0.4321657622101628, 0.4322591252877343, 0.4321880650994575, 0.43211702827087445, 0.4320460147904684, 0.4319750246467302, 0.4319040578281584, 0.4319973718791064, 0.4320906552800131, 0.432183908045977, 0.4322771301920867, 0.4323703217334209, 0.4324634826850484, 0.43255661306202825, 0.43264971287940934, 0.432742782152231, 0.43283582089552236, 0.432928829124303, 0.43302180685358255, 0.43311475409836064, 0.43320767087362727, 0.4331366764995084, 0.4330657053907914, 0.43299475753604194, 0.4329238329238329, 0.43285293154274485, 0.4329457999017521, 0.43303863785199737, 0.4331314454084138, 0.4332242225859247, 0.43331696939944364, 0.43324607329842935, 0.43317520039260593, 0.4331043506705921, 0.4330335241210139, 0.4329627207325049, 0.43289194049370605, 0.43282118339326575, 0.43275044941983987, 0.4326797385620915, 0.4326090508086914, 0.4325383861483175, 0.4324677445696554, 0.4323971260613978, 0.4323265306122449, 0.43225595821090435, 0.4321854088460911, 0.43227806788511747, 0.4323706966878773, 0.43246329526916805, 0.4325558636437775, 0.432648401826484, 0.4327409098320561, 0.4328333876752527, 0.43292583537082313, 0.43301825293350715, 0.4331106403780349, 0.43320299771912674, 0.43329532497149376, 0.4333876221498371, 0.43347988926884873, 0.4335721263432107, 0.43366433338759564, 0.4337565104166667, 0.4338486574450773, 0.43394077448747154, 0.4340328615584838, 0.4341249186727391, 0.4342169458448528, 0.4343089430894309, 0.43440091042106976, 0.4344928478543563, 0.43458475540386804, 0.43467663308417287, 0.4347684809098294, 0.43486029889538663, 0.43495208705538413, 0.43504384540435204, 0.4351355739568112, 0.43522727272727274, 0.4353189417302386, 0.43541058098020125, 0.4355021904916437, 0.43559377027903956, 0.4356853203568532, 0.43577684073953943, 0.4358683314415437, 0.4359597924773022, 0.4358891230345275, 0.43581847649918964, 0.43574785286015233, 0.43567725210628644, 0.4356066742264701, 0.4355361192095886, 0.4354655870445344, 0.43539507772020725, 0.435324591225514, 0.4352541275493687, 0.4351836866806927, 0.43511326860841426, 0.435042873321469, 0.43497250080879973, 0.4349021510593563, 0.43483182406209575, 0.4347615198059822, 0.43469123827998707, 0.43462097947308875, 0.4345507433742728, 0.4344805299725319, 0.4344103392568659, 0.4345016960103376, 0.43459302325581395, 0.4346843210075892, 0.43477558927994836, 0.4348668280871671, 0.43479664299548093, 0.4347264805551073, 0.4346563407550823, 0.43474753992579446, 0.43483870967741933, 0.43492985002418966, 0.43502096098032894, 0.4351120425600516, 0.43520309477756286, 0.43529411764705883, 0.4353851111827264, 0.43547607539874333, 0.43556701030927836, 0.4356579159284909, 0.4357487922705314, 0.4358396393495411, 0.4359304571796523, 0.4360212457749879, 0.43611200514966203, 0.4362027353177796, 0.43613256113256116, 0.43606240952227765, 0.43599228047603733, 0.43608297153883263, 0.43617363344051446, 0.43626426619514547, 0.4363548698167792, 0.4364454443194601, 0.4365359897172236, 0.43662650602409636, 0.43671699325409574, 0.4368074514212301, 0.436897880539499, 0.4369882806228929, 0.4370786516853933, 0.43716899374097257, 0.43725930680359437, 0.4373495908872132, 0.4374398460057748, 0.4375300721732157, 0.43762026940346377, 0.4377104377104377, 0.43780057710804743, 0.43789068761019395, 0.43798076923076923, 0.4380708219836565, 0.4381608458827299, 0.4382508409418549, 0.4383408071748879, 0.43843074459567655, 0.4383605507524816, 0.4382903793821034, 0.4382202304737516, 0.43815010401664267, 0.43808, 0.4380099184130539, 0.4379398592450416, 0.4378698224852071, 0.4377998081228014, 0.43772981614708234, 0.4376598465473146, 0.4375898993127697, 0.4375199744327261, 0.43745007189646906, 0.43738019169329073, 0.43731033381249, 0.43724049824337274, 0.43717068497525147, 0.4371008939974457, 0.43703112529928173, 0.43696137887009256, 0.43689165469921815, 0.4368219527760051, 0.43675227308980696, 0.4368421052631579, 0.4367724445861904, 0.436702806122449, 0.4366331898613104, 0.4365635957921581, 0.43649402390438247, 0.4364244741873805, 0.436354946630556, 0.4362854412233195, 0.4362159579550884, 0.43630573248407645, 0.4362362681101735, 0.43616682585163963, 0.436097405697915, 0.43618714194780395, 0.43627684964200475, 0.4363665287941457, 0.43645617941784637, 0.43654580152671757, 0.43663539513436156, 0.436724960254372, 0.4368144969003338, 0.4369040050858233, 0.4369934848244081, 0.43708293612964727, 0.4371723590150913, 0.4372617534942821, 0.43735111958075273, 0.43744045728802794, 0.43752976662962373, 0.43746031746031744, 0.4373908903348675, 0.4373214852427801, 0.43725210217356814, 0.43718274111675126, 0.43711340206185567, 0.4370440849984142, 0.4369747899159664, 0.4369055168040583, 0.4368362656522428, 0.43676703645007925, 0.43669782918713357, 0.43662864385297845, 0.4367178837319816, 0.43680709534368073, 0.4368962787015044, 0.4369854338188727, 0.4370745607091974, 0.4371636593858816, 0.4370944769742048, 0.4370253164556962, 0.4369561778199652, 0.43688706105662767, 0.4369761189308872, 0.4370651486401012, 0.43715415019762843, 0.4372431236168195, 0.4373320689110163, 0.43742098609355246, 0.4375098751777532, 0.43759873617693523, 0.43768756910440687, 0.4376184459886292, 0.43754934470235274, 0.4374802652352384, 0.43741120757695345, 0.4373421717171717, 0.4372731576455736, 0.43720416535184603, 0.4371351948256823, 0.43706624605678235, 0.43699731903485256, 0.4369284137496058, 0.43685953019076146, 0.4367906683480454, 0.43672182821118993, 0.4366530097699338, 0.4365842130140224, 0.4365154379332073, 0.43644668451724683, 0.4363779527559055, 0.4363092426389545, 0.4362405541561713, 0.43617188729733986, 0.43610324205225054, 0.43603461841070024, 0.43596601636249216, 0.4358974358974359, 0.4358288770053476, 0.4357603396760497, 0.43569182389937106, 0.435623329665147, 0.4355548569632191, 0.4354864057834355, 0.43541797611565053, 0.43534956794972507, 0.43528118127552623, 0.4352128160829276, 0.43514447236180903, 0.43507615010205686, 0.43500784929356356, 0.43493956992622823, 0.43487131198995604, 0.43480307547465874, 0.43473486037025416, 0.43466666666666665, 0.43459849435382686, 0.4345303434216716, 0.4344622138601442, 0.43439410565919423, 0.4343260188087774, 0.43425795329885597, 0.4341899091193983, 0.4342785524048253, 0.4343671679197995, 0.4344557556773688, 0.4345443156905731, 0.434632847972444, 0.434721352536005, 0.43480982939427143, 0.4348982785602504, 0.434986700046941, 0.4350750938673342, 0.43516346003441264, 0.4352517985611511, 0.43534010946051604, 0.4354283927454659, 0.43551664842895105, 0.43544857768052514, 0.4353805282075324, 0.4353125, 0.43524449304796126, 0.4351765073414558, 0.4351085428705294, 0.4350405996252342, 0.4349726775956284, 0.43490477677177647, 0.434836897143749, 0.434769038701623, 0.43470120143548135, 0.4346333853354134, 0.4345655903915146, 0.4344978165938865, 0.43443006393263683, 0.43436233239787964, 0.434294621979735, 0.4342269326683292, 0.4341592644537946, 0.4340916173262699, 0.4340239912758997, 0.4339563862928349, 0.43388880236723254, 0.43382123948925566, 0.4337536976490736, 0.4336861768368618, 0.43361867704280155, 0.4335511982570806, 0.43348374046989263, 0.43341630367143746, 0.433348887851921, 0.4332814930015552, 0.43321411911055824, 0.4331467661691542, 0.43307943416757344, 0.43301212309605225, 0.43294483294483294, 0.4328775637041641, 0.43281031536430015, 0.4327430879155017, 0.4326758813480354, 0.4326086956521739, 0.4325415308181959, 0.4324743868363862, 0.4324072636970355, 0.43234016139044074, 0.43227307990690456, 0.43220601923673596, 0.43213897937024975, 0.43207196029776673, 0.4320049620096139, 0.43209302325581395, 0.43218105720043404, 0.43226906385616864, 0.43235704323570434, 0.4324449953517199, 0.4325329202168861, 0.4326208178438662, 0.43270868824531517, 0.43279653143388047, 0.43288434742220155, 0.4329721362229102, 0.43305989784863025, 0.4331476323119777, 0.4332353396255609, 0.4333230198019802, 0.4334106728538283, 0.43349829879369006, 0.43358589763414257, 0.4336734693877551, 0.43376101406708917, 0.4338485316846986, 0.4339360222531293, 0.43402348578491967, 0.4341109222926, 0.4341983317886932, 0.4342857142857143, 0.43437306979617046, 0.4344603983325614, 0.43454769990737885, 0.43463497453310695, 0.43472222222222223, 0.4348094429871933, 0.43489663684048135, 0.43498380379453955, 0.4350709438618137, 0.4351580570547417, 0.43524514338575393, 0.43533220286727303, 0.4354192355117139, 0.435506241331484, 0.43559322033898307, 0.43568017254660296, 0.4357670979667283, 0.43585399661173574, 0.43594086849399444, 0.4358737490377213, 0.43580665024630544, 0.4357395721102047, 0.43567251461988304, 0.4356054777658101, 0.43553846153846154, 0.4354714659283187, 0.43555828975699784, 0.4356450868829771, 0.43573185731857317, 0.4358186010760953, 0.4357516138948663, 0.43583832795451055, 0.43592501536570377, 0.4360116761407282, 0.4360983102918587, 0.4361849178313623, 0.4362714987714988, 0.4363580531245202, 0.4364445809026712, 0.4365310821181888, 0.43661755678330266, 0.43670400491023476, 0.43679042651119976, 0.4368768215984047, 0.43696319018404906, 0.4370495322803251, 0.43713584789941734, 0.437222137053503, 0.43730839975475166, 0.4373946360153257, 0.43748084584737973, 0.4375670292630611, 0.43765318627450983, 0.43773931689385814, 0.43782542113323125, 0.4379114990047466, 0.43799755052051437, 0.4380835756926374, 0.43816957453321087, 0.4382555470543229, 0.43834149326805383, 0.438427413186477, 0.43836035484857755, 0.4382933170209512, 0.4382262996941896, 0.4381593028588901, 0.43809232650565577, 0.4380253706250955, 0.43795843520782396, 0.43789152024446143, 0.43782462572563396, 0.43791049335573545, 0.437996334758705, 0.43808214994655675, 0.4381679389312977, 0.4382537017249275, 0.43833943833943834, 0.4384251487868152, 0.4385108330790357, 0.43844393592677344, 0.4383770591824283, 0.4383102028366631, 0.43824336688014637, 0.4381765513035524, 0.4382621951219512, 0.43834781283340957, 0.43843340444986284, 0.43851896998323936, 0.4386045094454601, 0.43869002284843867, 0.4387755102040816, 0.4388609715242881, 0.43879415347137635, 0.438727355761912, 0.43866057838660577, 0.4387460051742505, 0.4388314059646987, 0.43891678076981594, 0.4390021296014603, 0.4390874524714829, 0.4391727493917275, 0.4392580203740307, 0.43934326543022195, 0.4394284845721234, 0.43951367781155015, 0.43959884516031, 0.4396839866302036, 0.43976910223302446, 0.4398541919805589, 0.43993925588458616, 0.44002429395687825, 0.4401093062091999, 0.44019429265330906, 0.4401274852026104, 0.44021244309559937, 0.44029737520861784, 0.44038228155339804, 0.4404671621416654, 0.44040036396724297, 0.4404852160727824, 0.44057004244996967, 0.4406548431105048, 0.44073961806608064, 0.4408243673283831, 0.4409090909090909, 0.440842296621724, 0.4407755225689185, 0.4407087687414811, 0.44079345850999396, 0.44087812263436793, 0.4409627611262489, 0.4410473739972756, 0.4411319612590799, 0.44121652292328645, 0.44114977307110437, 0.4410830434124943, 0.44101633393829404, 0.4409496446393467, 0.44088297550650135, 0.44096749811035524, 0.4410519951632406, 0.4411364666767417, 0.4412209126624358, 0.441305333131893, 0.44138972809667676, 0.44147409756834316, 0.44155844155844154, 0.4416427600785143, 0.44172705314009664, 0.44181132075471696, 0.44189556293389676, 0.4419797796891504, 0.4420639710319855, 0.44214813697390254, 0.44223227752639516, 0.4423163927009501, 0.44240048250904707, 0.4424845469621589, 0.4425685860717516, 0.4426525998492841, 0.44273658830620854, 0.44282055145397015, 0.4429044893040072, 0.4429884018677512, 0.44292168674698795, 0.44285499171811477, 0.4427883167720566, 0.4427216618997441, 0.4426550270921132, 0.4425884123401053, 0.44252181763466747, 0.4424552429667519, 0.4423886883273165, 0.4423221537073244, 0.44225563909774435, 0.44218914448955043, 0.4421226698737222, 0.44205621524124455, 0.4419897805831079, 0.44192336589030806, 0.44185697115384615, 0.44179059636472884, 0.44172424151396816, 0.4418080792911849, 0.4418918918918919, 0.4419756793274283, 0.4420594416091264, 0.4419930962029116, 0.4419267707082833, 0.4418604651162791, 0.4417941794179418, 0.4417279136043198, 0.4416616676664667, 0.4415954415954416, 0.44152923538230887, 0.4414630490181382, 0.44154676258992803, 0.4416304510714821, 0.4417141144740785, 0.4416479400749064, 0.4415817855002996, 0.4415156507413509, 0.4414495357891584, 0.4413834406348256, 0.4413173652694611, 0.441251309684179, 0.4413349296617779, 0.4412688912165195, 0.4412028725314183, 0.44113687359760656, 0.44122046066407417, 0.44130402273067143, 0.44138755980861244, 0.44132157273135, 0.4412556053811659, 0.44118965774921537, 0.4411237298266587, 0.44120723143582846, 0.4412907080968031, 0.4413741598207618, 0.4413082437275986, 0.44124234731969536, 0.4411764705882353, 0.4411106135244066, 0.44104477611940296, 0.44097895836442325, 0.44091316025067145, 0.440847381769357, 0.44078162291169454, 0.4407158836689038, 0.44065016403220997, 0.4405844639928433, 0.4405187835420394, 0.4404531226710389, 0.4403874813710879, 0.4403218596334376, 0.4404052443384982, 0.44048860420080443, 0.44057193923145666, 0.44065524944154877, 0.44073853484216796, 0.4408217954443948, 0.44090503125930336, 0.440988242297961, 0.44107142857142856, 0.4411545900907603, 0.44123772686700385, 0.44132083891120033, 0.4414039262343843, 0.44148698884758364, 0.4415700267618198, 0.4416530399881076, 0.4417360285374554, 0.4418189924208649, 0.44190193164933134, 0.44198484623384343, 0.44191919191919193, 0.4418535571067875, 0.4417879417879418, 0.4417223459539718, 0.44165676959619954, 0.4415912127059522, 0.44152567527456216, 0.44146015729336696, 0.4413946587537092, 0.44132917964693663, 0.4412637199644023, 0.4413465816402195, 0.441429418742586, 0.44151223128243144, 0.4415950192706789, 0.44167778271824515, 0.44161232957913454, 0.4415468958364202, 0.4414814814814815, 0.44141608650570285, 0.44135071090047395, 0.4412853546571894, 0.44122001776724906, 0.4411547002220577, 0.44108940201302543, 0.44102412313156725, 0.4409588635691033, 0.4408936233170587, 0.4408284023668639, 0.4407632007099542, 0.4406980183377699, 0.4406328552417566, 0.44056771141336487, 0.44050258684405025, 0.4404374815252734, 0.4403723954485001, 0.44030732860520094, 0.4402422809868518, 0.4401772525849335, 0.4401122433909319, 0.4400472533963379, 0.43998228259264727, 0.4399173309713611, 0.4398523985239852, 0.43993506493506496, 0.4400177069499779, 0.440100324579522, 0.44003540345183656, 0.4399705014749263, 0.4399056186403185, 0.43984075493954583, 0.43977591036414565, 0.43971108490566035, 0.4396462785556374, 0.43958149130562924, 0.43951672314719314, 0.43945197407189157, 0.4393872440712918, 0.4393225331369661, 0.43925784126049183, 0.43919316843345113, 0.4391285146474312, 0.4390638798940241, 0.4389992641648271, 0.43893466745144205, 0.4388700897454759, 0.43880553103854075, 0.43888807177526107, 0.4389705882352941, 0.43905308042934865, 0.439135548368127, 0.4392179920623254, 0.43915343915343913, 0.43908890521675237, 0.43902439024390244, 0.43895989422653153, 0.4388954171562867, 0.4388309590248201, 0.43876651982378856, 0.4387020995448539, 0.4386376981796829, 0.4385733157199472, 0.43850895215732316, 0.4384446074834923, 0.43838028169014087, 0.43831597476895995, 0.43825168671164566, 0.43833406657867724, 0.43841642228739003, 0.4384987538484093, 0.43858106127235413, 0.4386633445698373, 0.43874560375146543, 0.4388278388278388, 0.43891004980955173, 0.438992236707192, 0.43907439953134153, 0.4391565382925758, 0.43923865300146414, 0.43932074366856977, 0.43940281030444966, 0.4394848529196546, 0.4395668715247293, 0.43964886613021215, 0.43973083674663543, 0.4398127833845254, 0.4398947060544019, 0.43997660476677874, 0.44005847953216376, 0.4401403303610583, 0.4402221572639579, 0.44030396025135177, 0.440385739333723, 0.4404674945215486, 0.4404031551270815, 0.4403388345260698, 0.4402745327102804, 0.44035625638779385, 0.4404379562043796, 0.44051963217048606, 0.44060128429655576, 0.44068291259302494, 0.4407645170703239, 0.44084609773887673, 0.44078179696616104, 0.4407175149482281, 0.44065325167687375, 0.44058900714389854, 0.4405247813411079, 0.44046057426031193, 0.4403963858933256, 0.44033221623196855, 0.4402680652680653, 0.440203932993445, 0.44013981939994173, 0.4400757244793942, 0.4400116482236459, 0.4399475906245451, 0.43988355167394466, 0.4398195313637025, 0.43975552968568105, 0.4396915466317474, 0.4396275821937736, 0.4395636363636364, 0.439499709133217, 0.4394358004944016, 0.43937191043908114, 0.43930803895915105, 0.4392441860465116, 0.43918035169306785, 0.43926184248764893, 0.43934330960337065, 0.439424753050552, 0.43950617283950616, 0.43958756898054024, 0.4396689414839553, 0.4397502903600465, 0.43983161561910294, 0.43991291727140786, 0.43999419532723844, 0.4400754497968659, 0.44001160597707817, 0.43994778067885115, 0.4398839738941262, 0.4398201856148492, 0.43990140640858344, 0.43998260365323283, 0.44006377735903757, 0.4401449275362319, 0.4402260541950442, 0.4403071573456969, 0.4403882369984065, 0.44046929316338357, 0.4405503258508327, 0.4406313350709528, 0.4407123208339366, 0.44079328314997107, 0.4408742220292372, 0.4409551374819103, 0.44103602951815946, 0.44111689814814814, 0.4411977433820338, 0.44127856522996817, 0.44121475054229936, 0.44115095430884904, 0.4410871765216134, 0.44102341717259325, 0.4409596762537939, 0.44089595375722546, 0.4408322496749025, 0.4407685639988443, 0.44070489672107466, 0.4406412478336222, 0.44057761732851985, 0.44051400519780537, 0.44059477407247005, 0.440675519630485, 0.44075624188194545, 0.44083694083694086, 0.4409176165055548, 0.440998268897865, 0.4409346603202077, 0.44087107008941445, 0.44080749819754866, 0.4407439446366782, 0.4406804093988756, 0.44061689247621794, 0.44055339386078685, 0.4404899135446686, 0.4404264515199539, 0.4403630077787381, 0.4402995823131211, 0.44023617511520735, 0.4401727861771058, 0.44010941549093, 0.44004606304879806, 0.43998272884283246, 0.43991941286516045, 0.44, 0.44008056394763345, 0.44016110471806674, 0.44024162232130015, 0.44032211676732813, 0.44040258806613947, 0.44048303622771706, 0.4405634612620382, 0.44064386317907445, 0.4407242419887915, 0.44080459770114944, 0.44074127280563136, 0.4406779661016949, 0.44061467758150225, 0.44055140723721997, 0.4404881550610194, 0.4404249210450761, 0.4405052389837807, 0.440585533869116, 0.4406658057110059, 0.4407460545193687, 0.4408262803041171, 0.4409064830751578, 0.4409866628423921, 0.44106681961571553, 0.4411469534050179, 0.4412270642201835, 0.4413071520710907, 0.4413872169676125, 0.44146725891961597, 0.44154727793696275, 0.4416272740295087, 0.4415640217702664, 0.4415007876270944, 0.44143757159221075, 0.4413743736578382, 0.4413111938162038, 0.44124803205953916, 0.4413279908414425, 0.44140792674202317, 0.44148783977110156, 0.44156772993849236, 0.4416475972540046, 0.4417274417274417, 0.44180726336860165, 0.44188706218727664, 0.4419668381932533, 0.44190367300271544, 0.4418405258645327, 0.4417773967709673, 0.4417142857142857, 0.441651192686759, 0.4415881176806627, 0.44152506068827646, 0.44146202170188464, 0.44139900071377586, 0.4413359977162432, 0.44127301270158414, 0.4412100456621005, 0.44128977029533456, 0.4412268188302425, 0.4411638853230638, 0.44110096976611524, 0.44103807215171825, 0.44097519247219846, 0.44091233071988595, 0.44084948688711517, 0.4407866609662249, 0.4408663436876603, 0.44094600370423137, 0.441025641025641, 0.44110525566158665, 0.4411848476217602, 0.44126441691584795, 0.4413439635535307, 0.44142348754448396, 0.44150298889837747, 0.44158246762487546, 0.44151963574274333, 0.44145682173851186, 0.44139402560455193, 0.44133124733323853, 0.4412684869169511, 0.44120574434807336, 0.44114301961899344, 0.44108031272210374, 0.4411597498578738, 0.44123916441665484, 0.4413185564080705, 0.44139792584173887, 0.4414772727272727, 0.44155659707427924, 0.4416358988923601, 0.4417151781911117, 0.44179443498012494, 0.4418736692689851, 0.4419528810672722, 0.4420320703845608, 0.44211123723041995, 0.4421903816144134, 0.4422695035460993, 0.4423486030350305, 0.4424276800907544, 0.44236495108464485, 0.442302239863907, 0.442239546420978, 0.4421768707482993, 0.4421142128383166, 0.44219325587985264, 0.44227227652642015, 0.4423512747875354, 0.44243025067270925, 0.4425092041914472, 0.4425881353532493, 0.44266704416761044, 0.4427459306440198, 0.4428247947919615, 0.4429036366209141, 0.44298245614035087, 0.4430612533597397, 0.44314002828854315, 0.44321878093621836, 0.4432975113122172, 0.44337621942598615, 0.44345490528696635, 0.44353356890459367, 0.44361221028829845, 0.443690829447506, 0.4437694263916361, 0.44384800113010314, 0.44392655367231637, 0.4440050840276797, 0.4440835922055916, 0.44416207821544545, 0.444240542066629, 0.44417784050811576, 0.4441151566469094, 0.44405249047551854, 0.44398984198645597, 0.44392721117223866, 0.44386459802538786, 0.443802002538429, 0.4437394247038917, 0.4436768645143099, 0.4436143219622216, 0.4435517970401691, 0.443489289740699, 0.4435677046639425, 0.4436460974922513, 0.4435836033244119, 0.4435211267605634, 0.44345866779326854, 0.44339622641509435, 0.4433338026186118, 0.4432713963963964, 0.44320900774102745, 0.44314663664508863, 0.4430842831011679, 0.44302194710185705, 0.4429596286397524, 0.44289732770745427, 0.44283504429756715, 0.4427727784026997, 0.4427105300154646, 0.442788867022772, 0.4427266338721012, 0.4426644182124789, 0.44260222003653227, 0.4425400393368924, 0.4424778761061947, 0.44241573033707865, 0.4423536020221879, 0.44229149115417016, 0.4422293977256774, 0.4421673217293655, 0.4421052631578947, 0.44204322200392926, 0.4419811982601375, 0.44191919191919193, 0.4418572029737691, 0.4417952314165498, 0.44173327724021877, 0.4416713404374649, 0.44160942100098133, 0.4415475189234651, 0.4414856341976174, 0.4414237668161435, 0.44136191677175285, 0.44130008405715887, 0.44123826866507915, 0.4411764705882353, 0.44111468981935303, 0.44105292635116217, 0.4409911801763965, 0.4409294512877939, 0.44086773967809656, 0.44080604534005036, 0.4407443682664055, 0.4406827084499161, 0.4406210658833403, 0.4405594405594406, 0.44049783247098306, 0.44043624161073824, 0.4403746679714805, 0.44031311154598823, 0.4403913347309574, 0.44046953605366124, 0.44054771552326394, 0.44062587314892426, 0.44070400893979605, 0.44078212290502794, 0.4407205697528278, 0.44065903378944427, 0.44059751500767835, 0.440536013400335, 0.4406140963014655, 0.4406921574099916, 0.4407701967350356, 0.4408482142857143, 0.44092621007113963, 0.4410041841004184, 0.44108213638265237, 0.4411600669269381, 0.4412379757423672, 0.4413158628380262, 0.44125435540069685, 0.4411928651059086, 0.44113139194649575, 0.44106993591529675, 0.44100849700515393, 0.44094707520891363, 0.4408856705194263, 0.44082428292954606, 0.44076291243213145, 0.44084075723830735, 0.4407794015309673, 0.4407180629000835, 0.4406567413385279, 0.4405954368391764, 0.44053414939490887, 0.44061196105702366, 0.44068975107773606, 0.4407675194660734, 0.44084526623105796, 0.440922991381707, 0.44100069492703264, 0.44107837687604223, 0.44115603723773794, 0.44123367602111696, 0.44131129323517154, 0.44125, 0.4411887237883627, 0.44112746459316854, 0.4410662224073303, 0.44100499722376457, 0.4409437890353921, 0.4408825978351374, 0.44082142361592896, 0.4407602663706992, 0.44069912609238454, 0.4407766990291262, 0.4408542504507003, 0.44093178036605657, 0.44100928878413975, 0.44108677571388966, 0.4411642411642412, 0.44124168514412415, 0.44118054593321326, 0.44111942366306456, 0.44105831832663805, 0.4409972299168975, 0.44093615842681066, 0.4408751038493492, 0.4408140661774886, 0.4407530454042082, 0.44069204152249136, 0.4406310545253252, 0.44057008440570083, 0.44050913115661317, 0.440448194771061, 0.440387275242047, 0.4403263725625778, 0.44026548672566373, 0.4403428729434536, 0.4404202377661045, 0.4404975812024879, 0.4405749032614704, 0.4406522039519138, 0.44072948328267475, 0.44080674126260533, 0.4408839779005525, 0.44096119320535837, 0.44103838718586025, 0.4411155598508905, 0.44119271120927667, 0.44126984126984126, 0.4413469500414022, 0.4414240375327722, 0.44150110375275936, 0.44144019864808937, 0.4413793103448276, 0.4413184388360226, 0.441257584114727, 0.44119674617399696, 0.44113592500689275, 0.4410751206064783, 0.4410143329658214, 0.4409535620779937, 0.44089280793607055, 0.4408320705331313, 0.44077134986225897, 0.4407106459165404, 0.44064995868906637, 0.4405892881729313, 0.44052863436123346, 0.440467997247075, 0.4404073768235618, 0.4403467730838035, 0.4402861860209136, 0.4402256156280094, 0.440302613480055, 0.44037959015266126, 0.44045654565456543, 0.4405334799945002, 0.44061039318119327, 0.4406872852233677, 0.4407641561297416, 0.44084100590902847, 0.4409178345699368, 0.4408572606127215, 0.4407967032967033, 0.4407361626150254, 0.4408129634715737, 0.44088974323767677, 0.44096650192202086, 0.44104323953328756, 0.440982706560527, 0.4409221902017291, 0.4408616904500549, 0.44080120729866923, 0.440877914951989, 0.4409546015635715, 0.4410312671420735, 0.441107911696147, 0.4411845352344393, 0.4412611377655929, 0.4413377192982456, 0.44141427984103054, 0.44149081940257606, 0.44156733799150566, 0.44164383561643833, 0.44172031228598824, 0.4417967680087647, 0.4418732027933726, 0.4419496166484118, 0.44202600958247773, 0.4419655078018067, 0.4419050225810866, 0.44184455391351946, 0.44178410179231087, 0.44172366621067033, 0.441663247161811, 0.44173960612691465, 0.44167920142212497, 0.441618813234892, 0.44169514695830486, 0.4417714598141061, 0.44184775181085145, 0.4419240229570921, 0.44186364257412214, 0.4418032786885246, 0.44174293129353914, 0.4416826003824092, 0.4416222859483818, 0.4415619879847078, 0.44150170648464165, 0.44144144144144143, 0.441381192848369, 0.44132096069869, 0.44126074498567336, 0.4412005457025921, 0.44127676988132586, 0.4413529732678669, 0.4412927860357289, 0.44123261521679846, 0.44130879345603274, 0.44138495092693564, 0.44132479214937986, 0.4414009266830199, 0.4414770404687287, 0.4415531335149864, 0.4416292058302684, 0.4417052574230455, 0.44178128830178404, 0.44185729847494554, 0.4419332879509871, 0.442009256738361, 0.44208520484551517, 0.44216113228089277, 0.4422370390529324, 0.44231292517006804, 0.44238879064072917, 0.4424646354733406, 0.4425404596763226, 0.44261626325809084, 0.44269204622705643, 0.4427678085916259, 0.4428435503602012, 0.44291927154117966, 0.4429949721429542, 0.44307065217391306, 0.4431463116424399, 0.4432219505569139, 0.44329756892570965, 0.4433731667571972, 0.44344874405974205, 0.44352430084170513, 0.4435998371114429, 0.44367535287730725, 0.44375084814764554, 0.44382632293080054, 0.4439017772351106, 0.44397721106890936, 0.44391699443916993, 0.4438567941415785, 0.4437966101694915, 0.443736442516269, 0.4436762911752745, 0.4436161561398753, 0.4435560374034422, 0.4434959349593496, 0.44357133179785935, 0.4436467082091574, 0.4437220642015441, 0.4437973997833153, 0.44387271496276237, 0.4439480097481722, 0.44402328414782727, 0.4439631835408771, 0.44390309920151577, 0.4438430311231394, 0.4437829792991476, 0.44372294372294374, 0.44366292438793453, 0.4436029212875304, 0.44354293441514536, 0.4434829637641969, 0.44342300932810597, 0.4433630711002974, 0.4433031490741992, 0.4433783783783784, 0.4434535873530604, 0.4435287760064847, 0.4436039443468864, 0.4436790923824959, 0.4436191762322755, 0.44355927626248987, 0.44349939246658565, 0.44343952483801297, 0.4433796733702254, 0.4433198380566802, 0.44326001889083794, 0.443200215866163, 0.44327532712801837, 0.4433504181278662, 0.44342548887390426, 0.44350053937432576, 0.44357556963731964, 0.44365057967107036, 0.4437255694837579, 0.44380053908355793, 0.44387548847864167, 0.44395041767717597, 0.4440253266873232, 0.44396551724137934, 0.4439057239057239, 0.44384594667384863, 0.4437861855392487, 0.4437264404954227, 0.44366671153587295, 0.44360699865410497, 0.44354730184362806, 0.4434876210979548, 0.4434279564106014, 0.44336830777508746, 0.4433086751849361, 0.44324905863367403, 0.44318945811483124, 0.4431298736219414, 0.44307030514854145, 0.443010752688172, 0.4429512162343771, 0.4428916957807041, 0.442832191320704, 0.44277270284793124, 0.44271323035594357, 0.4427880741337631, 0.44272861554988585, 0.4426691729323308, 0.44260974627466776, 0.4425503355704698, 0.44249094081331364, 0.4424315619967794, 0.4423721991144506, 0.4423128521599141, 0.4422535211267606, 0.44219420600858367, 0.4421349067989808, 0.4420756234915527, 0.44201635607990347, 0.44195710455764076, 0.44189786891837557, 0.44183864915572235, 0.4419134396355353, 0.4419882100750268, 0.4420629604822505, 0.44200375033485134, 0.44194455604660504, 0.4418853776111409, 0.4418262150220913, 0.44176706827309237, 0.4417079373577834, 0.4416488222698073, 0.44158972300281013, 0.44153063955044153, 0.4414715719063545, 0.44141252006420545, 0.4413534840176541, 0.44129446376036374, 0.4412354592860008, 0.4411764705882353, 0.44125116962972866, 0.4413258487035552, 0.44140050781772017, 0.4414751469802245, 0.4415497661990648, 0.4416243654822335, 0.4416989448377187, 0.44163995726495725, 0.4415809854453198, 0.4415220293724967, 0.44146308904018156, 0.44140416444207153, 0.4413452555718671, 0.44128636242327196, 0.44136090727151434, 0.44143543223052295, 0.44150993730825666, 0.44158442251267005, 0.4416588878517136, 0.4417333333333333, 0.44180775896547125, 0.44188216475606507, 0.4419565507130481, 0.4420309168443497, 0.4419720186542305, 0.44191313615774047, 0.44185426934860794, 0.44179541822056473, 0.44173658276734584, 0.44167776298268974, 0.4416189588603382, 0.4415601703940362, 0.44150139757753226, 0.44144264040457815, 0.4413838988689288, 0.44145822245875466, 0.44139949447918053, 0.441340782122905, 0.4412820853836946, 0.44122340425531914, 0.44116473873155165, 0.4411060888061686, 0.4411803801674864, 0.44125465178096757, 0.44132890365448507, 0.4414031357959075, 0.44147734821309953, 0.44155154091392135, 0.44162571390622923, 0.4416998671978752, 0.44164121630593545, 0.4417153478491768, 0.4417894597106067, 0.44186355189806215, 0.44193762441937623, 0.44201167728237795, 0.44208571049489187, 0.44215972406473864, 0.4422337179997347, 0.4423076923076923, 0.4423816469964196, 0.4424555820737205, 0.44252949754739496, 0.4426033934252386, 0.44267726971504306, 0.4427511264245958, 0.44282496356168016, 0.44289878113407527, 0.44297257914955623, 0.44304635761589406, 0.44312011654085554, 0.4431938559322034, 0.44313517807493713, 0.4430765157532433, 0.443017868960953, 0.4429592376919005, 0.44290062193992324, 0.44297433183381846, 0.44304802222516204, 0.44312169312169314, 0.4431953445311467, 0.4432689764612536, 0.4433425889197408, 0.443416181914331, 0.4434897554527429, 0.44356330954269096, 0.4436368441918858, 0.4437103594080338, 0.44378385519883734, 0.4438573315719947, 0.4439307885352001, 0.4440042260961437, 0.44407764426251156, 0.4441510430419857, 0.44422442244224425, 0.4442977824709609, 0.44437112313580573, 0.4444444444444444, 0.44451774640453884, 0.44445910290237467, 0.444400474871389, 0.4443418623054603, 0.4442832651984703, 0.4442246835443038, 0.444166117336849, 0.44410756656999734, 0.44404903123764333, 0.4439905113336848, 0.44393200685202266, 0.44387351778656126, 0.44381504413120804, 0.44375658587987354, 0.44369814302647176, 0.44363971556491966, 0.4435813034891376, 0.44352290679304895, 0.4434645254705805, 0.44340615951566204, 0.4433478089222266, 0.4432894736842105, 0.4432311537955532, 0.44317284925019734, 0.44311456004208866, 0.4430562861651762, 0.4429980276134122, 0.4430712595319485, 0.443144472196661, 0.443217665615142, 0.44329083979497963, 0.4433639947437582, 0.4434371304690579, 0.4435102469784551, 0.4435833442795219, 0.443525085369057, 0.4434668417596848, 0.44340861344537813, 0.4433504004201129, 0.44329220267786823, 0.4432340202126263, 0.4431758530183727, 0.44311770108909593, 0.44305956441878774, 0.443001443001443, 0.4429433368310598, 0.44288524590163936, 0.4428271702071859, 0.4427691097417071, 0.44271106449921344, 0.44265303447371873, 0.44259501965923986, 0.44266806447385665, 0.4427410901467505, 0.4428140966854448, 0.44288708409745875, 0.4429600523903078, 0.4430330015715034, 0.4431059316485531, 0.44317884262896046, 0.44325173452022515, 0.4433246073298429, 0.4433974610653056, 0.4433394399371892, 0.443281433991888, 0.4432234432234432, 0.44316546762589926, 0.44310750719330366, 0.44304956191970707, 0.4429916317991632, 0.44293371682572885, 0.44287581699346407, 0.44281793229643185, 0.4427600627286984, 0.44270220828433293, 0.4426443689574079, 0.4425865447419987, 0.4425287356321839, 0.4424709416220452, 0.4424131627056673, 0.442355398877138, 0.4422976501305483, 0.4423704477222295, 0.442443226311668, 0.44251598590630303, 0.44258872651356995, 0.4426614481409002, 0.44273415079572137, 0.44280683448545716, 0.4428794992175274, 0.44295214499934804, 0.44302477183833117, 0.443097379741885, 0.443169968717414, 0.44311221165124465, 0.4430544696377378, 0.44299674267100975, 0.44293903074517976, 0.4428813338543702, 0.44282365199270646, 0.442765985154317, 0.4427083333333333, 0.4426506965238901, 0.442593074720125, 0.4425354679161786, 0.4424778761061947, 0.4424202992843201, 0.44236273744470467, 0.44230519058150125, 0.4422476586888658, 0.4421901417609572, 0.44213263979193757, 0.44220517487972955, 0.4422776911076443, 0.44235018848303653, 0.4424226670132571, 0.442495126705653, 0.44256756756756754, 0.44263998960634016, 0.4427123928293063, 0.4427847772437979, 0.44285714285714284, 0.44292948967666534, 0.4430018177096858, 0.4430741269635207, 0.4431464174454829, 0.44321868916288126, 0.443290942123021, 0.4433631763332036, 0.4434353918007265, 0.44350758853288363, 0.44357976653696496, 0.44365192582025675, 0.44372406639004147, 0.44379618825359785, 0.44386829141820067, 0.4439403758911212, 0.4440124416796267, 0.44408448879098095, 0.44415651723244365, 0.4442285270112709, 0.44430051813471505, 0.4443724906100246, 0.4444444444444444, 0.44451637964521556, 0.44445882962195754, 0.4444012944983819, 0.4443437742687031, 0.44428626892713863, 0.4442287784679089, 0.44417130288523743, 0.4441138421733506, 0.4440563963264778, 0.4439989653388515, 0.4439415492047071, 0.4438841479182829, 0.4438267614738203, 0.4437693898655636, 0.44371203308776014, 0.443783923494443, 0.44385579532239305, 0.4437984496124031, 0.4437411187185118, 0.44368380263497803, 0.4436265013560635, 0.44356921487603307, 0.44351194318915427, 0.4434546862896979, 0.44339744417193755, 0.44334021683014974, 0.443283004258614, 0.4432258064516129, 0.4431686234034318, 0.44311145510835914, 0.4431832838901071, 0.44325509414495745, 0.44332688588007735, 0.4433986591026302, 0.4434704138197757, 0.44354215003866976, 0.4436138677664648, 0.44368556701030926, 0.44375724777734826, 0.44370007729966504, 0.4436429215509468, 0.4435857805255023, 0.44352865421764326, 0.44347154262168426, 0.44341444573194283, 0.44335736354273947, 0.4433002960483975, 0.44324324324324327, 0.44318620512160595, 0.4431291816778178, 0.4430721729062138, 0.4431438127090301, 0.4432154340836013, 0.44328703703703703, 0.44335862157644335, 0.4434301877089226, 0.44350173544157345, 0.443573264781491, 0.4436447757357666, 0.44358776664096633, 0.4435307721958114, 0.44347379239465573, 0.44341682723185616, 0.4433598767017724, 0.4433029407987672, 0.44324601951720594, 0.4431891128514572, 0.44313222079589215, 0.44307534334488513, 0.44314681724845995, 0.4432182728089311, 0.443289710033359, 0.44336112892880053, 0.4434325295023089, 0.4435039117609337, 0.44357527571172095, 0.44364662136171307, 0.44371794871794873, 0.44378925778746314, 0.44386054857728785, 0.44393182109445084, 0.44400307534597644, 0.4440743113388853, 0.4441455290801947, 0.44421672857691813, 0.4442879098360656, 0.4443590728646434, 0.4444302176696543, 0.44450134425809756, 0.44457245263696876, 0.44464354281325996, 0.4447146147939596, 0.44478566858605245, 0.44485670419651996, 0.4449277216323398, 0.44499872090048603, 0.4450697020079294, 0.44514066496163684, 0.44521160976857177, 0.4452825364356942, 0.4453534449699604, 0.4454243353783231, 0.44549520766773165, 0.4455660618451316, 0.4456368979174652, 0.4457077158916709, 0.44577851577468386, 0.4458492975734355, 0.4459200612948538, 0.4459908069458631, 0.4460615345333844, 0.44613224406433494, 0.44620293554562857, 0.4462736089841756, 0.44634426438688274, 0.44641490176065324, 0.44648552111238676, 0.4465561224489796, 0.44662670577732433, 0.4466972711043101, 0.4467678184368226, 0.446838347781744, 0.44690885914595285, 0.44697935253632426, 0.4470498279597298, 0.4471202854230377, 0.4471907249331125, 0.4472611464968153, 0.4473315501210037, 0.44740193581253185, 0.44747230357825035, 0.4475426534250064, 0.4474856779121579, 0.447428716904277, 0.4473717703958254, 0.4473148383812675, 0.4472579208550706, 0.44720101781170485, 0.44727133952423354, 0.4473416433477487, 0.4474119292890754, 0.44735503560528994, 0.4472981563890655, 0.4472412916348843, 0.44718444133723145, 0.4471276054905948, 0.447070784089465, 0.44701397712833546, 0.4469571846017025, 0.44702743902439024, 0.4470976756001524, 0.4471678943357887, 0.4472380952380952, 0.4473082783138649, 0.447378443569887, 0.4474485910129474, 0.44751872064982867, 0.44758883248730963, 0.447658926532166, 0.44772900279116973, 0.4477990612710897, 0.447869101978691, 0.44793912492073557, 0.44800913010398175, 0.4480791175351845, 0.4481490872210953, 0.4482190391684624, 0.4482889733840304, 0.4483588898745406, 0.4483020780537253, 0.4482452806284049, 0.4481884975931087, 0.4481317289423686, 0.44807497467071933, 0.4480182347726985, 0.4479615092428463, 0.44790479807570577, 0.4478481012658228, 0.44779141880774587, 0.4477347506960263, 0.44767809692521826, 0.4476214574898785, 0.44756483238456674, 0.4475082216038452, 0.447451625142279, 0.447395042994436, 0.44733847515488684, 0.4472819216182048, 0.447225382378966, 0.4471688574317492, 0.4471123467711361, 0.4470558503917109, 0.44699936828806064, 0.44694290045477514, 0.4468864468864469, 0.4468300075776711, 0.44677358252304583, 0.44671717171717173, 0.4466607751546522, 0.4466043928300934, 0.44654802473810423, 0.44649167087329633, 0.4464353312302839, 0.44637900580368406, 0.4463226945881166, 0.44626639757820386, 0.4462101147685711, 0.4461538461538462, 0.4460975917286597, 0.44604135148764495, 0.44598512542543806, 0.4459289135366776, 0.445872715816005, 0.4458165322580645, 0.4457603628575028, 0.4457042076089695, 0.44564806650711675, 0.4455919395465995, 0.4455358267220753, 0.44547972802820446, 0.44542364345965, 0.44536757301107754, 0.44531151667715546, 0.44525547445255476, 0.4451994463319492, 0.4451434323100151, 0.4450874323814316, 0.4450314465408805, 0.44497547478304617, 0.4449195171026157, 0.4448635734942789, 0.4448076439527282, 0.4447517284726587, 0.4446958270487682, 0.4447656151816011, 0.44483538577532045, 0.44490513883653726, 0.4448492462311558, 0.4449189800276347, 0.44498869630746046, 0.4450583950772322, 0.44512807634354595, 0.44519774011299434, 0.44526738639216673, 0.44533701518764907, 0.4454066265060241, 0.44547622035387124, 0.4455457967377666, 0.445615355664283, 0.44568489713999, 0.44575442117145364, 0.445823927765237, 0.4458934169278997, 0.445962888665998, 0.446032342986085, 0.44610177989471045, 0.44617119939842087, 0.4462406015037594, 0.44630998621726603, 0.4463793535454773, 0.4464487034949267, 0.4465180360721443, 0.44658735128365684, 0.44665664913598796, 0.4466007261800426, 0.44667000500751125, 0.4467392664914257, 0.44680851063829785, 0.4468777374546365, 0.4469469469469469, 0.44689102965094457, 0.4468351263447586, 0.4467792370231395, 0.4467233616808404, 0.4466675003126172, 0.4466116529132283, 0.44668083510438805, 0.446625, 0.4465691788526434, 0.4465133716570857, 0.44645757840809697, 0.44640179910044975, 0.4463460337289194, 0.44629028228828377, 0.44623454477332336, 0.4461788211788212, 0.44624797103258834, 0.4463171036204744, 0.4463862189489452, 0.4464553170244633, 0.4465243978534881, 0.4465934614424757, 0.44666250779787897, 0.4467315369261477, 0.44680054883372833, 0.4468695435270641, 0.44693852101259507, 0.4470074812967581, 0.44707642438598677, 0.44714535028671154, 0.4472142590053596, 0.44715852442671983, 0.44710280373831773, 0.44704709693496136, 0.4469914040114613, 0.4469357249626308, 0.4468800597832856, 0.44682440846824406, 0.44676877101232726, 0.44671314741035856, 0.4466575376571642, 0.44660194174757284, 0.4465463596764157, 0.44649079143852666, 0.44643523702874205, 0.44637969644190095, 0.4463241696728449, 0.4462686567164179, 0.4462131575674667, 0.44628201939815965, 0.4463508641054333, 0.4464196916956738, 0.44648850217526415, 0.44655729555058415, 0.44662607182801045, 0.4466948310139165, 0.44676357311467263, 0.446832298136646, 0.4469010060862005, 0.44696969696969696, 0.4470383707934931, 0.4471070275639434, 0.4471756672873991, 0.44724428997020854, 0.4473128956187166, 0.4473814842392653, 0.44732597096413945, 0.4472704714640198, 0.44721498573377994, 0.4471595137682957, 0.44710405556244576, 0.4470486111111111, 0.44699318040917546, 0.4469377634515249, 0.4470063220528077, 0.44707486365889937, 0.4471433882761185, 0.44721189591078064, 0.4472803865691984, 0.44722497522299304, 0.4471695776043602, 0.44711419370819916, 0.4470588235294118, 0.44700346706290245, 0.44694812430357805, 0.4468927952463481, 0.44683747988612454, 0.4467821782178218, 0.44672689023635687, 0.44667161593664934, 0.4466163553136212, 0.4466848095002474, 0.44675324675324674, 0.4468216670789018, 0.446890070483492, 0.4469584569732938, 0.4470268265545803, 0.44709517923362174, 0.4471635150166852, 0.4472318339100346, 0.44717657234647223, 0.4471213244378552, 0.4470660901791229, 0.4470108695652174, 0.4469556625910831, 0.4469004692516671, 0.44684528954191877, 0.44679012345679014, 0.44673497099123566, 0.4466798321402123, 0.4466247068986795, 0.44656959526159923, 0.44663787785317705, 0.4467061435973353, 0.44677439250030837, 0.4468426245683276, 0.44691083980762114, 0.4469790382244143, 0.4470472198249291, 0.44711538461538464, 0.4471835326019968, 0.4472516637909786, 0.4471965495995071, 0.4471414489896501, 0.44708636195638785, 0.44703128849470314, 0.44697622859958125, 0.44692118226600985, 0.4468661494889792, 0.4468111302634819, 0.44675612458451314, 0.4467011324470704, 0.44664615384615386, 0.44659118877676596, 0.44653623723391167, 0.44648129921259844, 0.44642637470783614, 0.44637146371463715, 0.44631656622801624, 0.4462616822429907, 0.4462068117545801, 0.4461519547578067, 0.44609711124769513, 0.44604228121927236, 0.4459874646675679, 0.4459326615876137, 0.44587787197444406, 0.4458230958230958, 0.44576833312860825, 0.4457135838860231, 0.44565884809038436, 0.4456041257367387, 0.44554941682013505, 0.44549472133562484, 0.4454400392782619, 0.44538537064310263, 0.4453307154252055, 0.4452760736196319, 0.44522144522144524, 0.44516683022571146, 0.4451122286274991, 0.44505764042187884, 0.445003065603924, 0.4449485041687102, 0.44489395611131544, 0.44496200049031626, 0.44490746415001836, 0.44485294117647056, 0.44479843156475923, 0.444743935309973, 0.4448119563885826, 0.4448799608035277, 0.4449479485609308, 0.44501591966691156, 0.44508387412758665, 0.44515181194906955, 0.44509731913330886, 0.44504283965728275, 0.4451107575572145, 0.4451786588350465, 0.44524654349688, 0.4453144115488133, 0.4453822629969419, 0.4454500978473581, 0.4455179161061514, 0.44558571777940814, 0.44565350287321187, 0.44572127139364304, 0.4457890233467791, 0.4458567587386947, 0.44592447757546133, 0.4459921798631476, 0.4460598656078192, 0.44612753481553874, 0.4461951874923659, 0.4462628236443576, 0.446208328245207, 0.4461538461538462, 0.44609937736540106, 0.446044921875, 0.4461125350909313, 0.4461801318037589, 0.4462477120195241, 0.4463152757442655, 0.44638282298401855, 0.4464503537448158, 0.4463959019392609, 0.44634146341463415, 0.4462870381660773, 0.44623262618873444, 0.44617822747775204, 0.44612384202827887, 0.4460694698354662, 0.44601511089446744, 0.44596076520043865, 0.44590643274853803, 0.4458521135339262, 0.4457978075517661, 0.44574351479722324, 0.44568923526546517, 0.44575672713990017, 0.44582420258095934, 0.44576993304930007, 0.44571567672833495, 0.44566143361324084, 0.4456072036991969, 0.44555298698138457, 0.44549878345498783, 0.4454445931151928, 0.44539041595718804, 0.44533625197616444, 0.44528210116731515, 0.4452279635258359, 0.44517383904692437, 0.44511972772578096, 0.4451871657754011, 0.44513306598614655, 0.4450789793438639, 0.44502490584376136, 0.44497084548104954, 0.4449167982509413, 0.44486276414865195, 0.4448087431693989, 0.44475473530840215, 0.4447007405608838, 0.44464675892206845, 0.44471416434033256, 0.44478155339805825, 0.4448489261012013, 0.44491628245571463, 0.44498362246754825, 0.4450509461426492, 0.44511825348696177, 0.44518554450642733, 0.44525281920698434, 0.4453200775945684, 0.44538731967511214, 0.44545454545454544, 0.4455217549387953, 0.44558894813378574, 0.445656125045438, 0.44572328567967046, 0.44579043004239854, 0.44585755813953487, 0.4459246699769892, 0.44599176556066844, 0.44605884489647657, 0.44612590799031476, 0.44619295484808136, 0.44625998547567175, 0.44632699987897856, 0.4463939980638916, 0.44646098003629764, 0.44652794580208083, 0.44659489536712227, 0.44654088050314467, 0.4464868787035917, 0.4464328899637243, 0.44637891427880544, 0.4463249516441006, 0.4462710020548773, 0.4462170655064056, 0.4461631419939577, 0.4461092315128081, 0.44605533405823367, 0.4460014496255134, 0.44594757820992875, 0.4458937198067633, 0.44583987441130296, 0.44578604201883604, 0.4457322226246529, 0.44567841622404636, 0.4456246228123114, 0.44557084238474537, 0.4455170749366478, 0.4454633204633205, 0.44540957896006755, 0.44535585042219544, 0.4453021348450127, 0.4452484322238302, 0.4451947425539612, 0.445141065830721, 0.44508740204942737, 0.4451542912246866, 0.4452211642762444, 0.4452880212099301, 0.44535486203157004, 0.44542168674698795, 0.4454884953620046, 0.445555287882438, 0.44550162591834275, 0.4454479768786127, 0.44539434075857914, 0.44534071755357574, 0.4452871072589382, 0.4452335098700048, 0.44517992538211576, 0.4452466907340554, 0.4453134400192516, 0.4453801732435034, 0.44544689041260677, 0.4455135915323551, 0.4455802766085388, 0.4456469456469456, 0.4457135986533606, 0.4457802356335658, 0.44584685659334056, 0.44591346153846156, 0.44598005047470257, 0.44604662340783463, 0.44611318034362607, 0.4461797212878424, 0.44624624624624626, 0.4463127552245976, 0.44637924822865377, 0.4464457252641691, 0.4465121863368952, 0.44645858343337336, 0.4464049933981515, 0.44635141622659624, 0.44629785191407656, 0.4462443004559635, 0.44619076184763046, 0.446137236084453, 0.44608372316180883, 0.44603022307507795, 0.44597673581964264, 0.4459232613908873, 0.44586979978419855, 0.4459362263246224, 0.4460026369411483, 0.44606903163950146, 0.44613541042540444, 0.44620177330457705, 0.4462681202827363, 0.4463344513655966, 0.44640076655886934, 0.44646706586826346, 0.44653334929948507, 0.44647988505747127, 0.4464264336166647, 0.44649269810869047, 0.4464392579293836, 0.4463858305409287, 0.446332415938734, 0.4462790141182101, 0.4462256250747697, 0.4461722488038278, 0.44611888530080135, 0.4461851231762736, 0.44625134521104864, 0.4463175514108082, 0.4463837417812313, 0.44644991632799425, 0.44651607505677066, 0.44658221797323133, 0.4465288564942048, 0.44647550776583034, 0.4464221717835384, 0.4463688485427616, 0.44631553803893464, 0.4462622402674946, 0.4463283582089552, 0.4463944603629417, 0.44646054673510804, 0.44652661733110527, 0.44659267215658194, 0.44665871121718376, 0.4467247345185539, 0.4467907420663326, 0.4468567338661577, 0.4469227099236641, 0.4469886702444842, 0.4470546148342476, 0.4471205436985811, 0.4471864568431092, 0.44725235427345333, 0.4471990464839094, 0.4471457514003099, 0.4470924690181125, 0.4470391993327773, 0.4469859423397665, 0.4469326980345444, 0.4468794664125774, 0.4468262474693343, 0.44677304120028577, 0.4467198476009049, 0.44666666666666666, 0.4466134983930484, 0.44656034277552964, 0.4466262049268119, 0.446573060447406, 0.44651992861392026, 0.4464668094218415, 0.4464137028666587, 0.446360608943863, 0.44630752764894754, 0.44625445897740784, 0.4462014029247414, 0.44626723728007606, 0.44633305598478545, 0.4463988590444497, 0.44646464646464645, 0.4465304182509506, 0.4465961744089343, 0.44666191494416724, 0.4467276398622164, 0.4467933491686461, 0.44685904286901795, 0.446924720968891, 0.4469903834738217, 0.4470560303893637, 0.44712166172106826, 0.4471872774744837, 0.44725287765515603, 0.44731846226862837, 0.44738403132044136, 0.44744958481613284, 0.4475151227612383, 0.4475806451612903, 0.44764615202181907, 0.4477116433483519, 0.44765856550088917, 0.4476055002370792, 0.4476709730947019, 0.44773643043375205, 0.44780187225974644, 0.44786729857819907, 0.4479327093946215, 0.4479981047145226, 0.4480634845434087, 0.4481288488867835, 0.448194197750148, 0.4482595311390007, 0.44832484905883746, 0.4483901515151515, 0.44845543851343356, 0.4485207100591716, 0.4485859661578511, 0.448651206814955, 0.44871643203596356, 0.4487816418263544, 0.4488468361916026, 0.4489120151371807, 0.44885893342792954, 0.4488058642705131, 0.44875280766048, 0.4488179669030733, 0.4488831107434109, 0.4489482391869534, 0.44901335223915867, 0.44907844990548207, 0.44914353219137626, 0.4492085991022915, 0.44927365064367547, 0.44933868682097305, 0.4494037076396269, 0.44946871310507674, 0.44953370322276, 0.44959867799811143, 0.4496636374365632, 0.44972858154354495, 0.4497935103244838, 0.44974044360547427, 0.4496873894066297, 0.4496343477235197, 0.449581318551716, 0.44952830188679244, 0.449475297724325, 0.44942230605989153, 0.4493693268890723, 0.4493163602074493, 0.44926340601060694, 0.44921046429413153, 0.4491575350536114, 0.44910461828463716, 0.44905171398280125, 0.44899882214369846, 0.44894594276292543, 0.448893075836081, 0.44884022135876606, 0.44878737932658347, 0.4487345497351383, 0.4486817325800377, 0.4486289278568907, 0.44857613556130854, 0.44852335568890456, 0.4484705882352941, 0.4484178331960946, 0.4483650905669254, 0.4483123603434082, 0.4482596425211665, 0.448206937095826, 0.44815424406301435, 0.4481015634183613, 0.44804889515749885, 0.44799623927606064, 0.44794359576968273, 0.4478909646340031, 0.44783834586466165, 0.4477857394573006, 0.4478505990133897, 0.44791544333529065, 0.44798027242837013, 0.4480450862979922, 0.44810988494951864, 0.4481746683883085, 0.4482394366197183, 0.44830418964910224, 0.4482515841351795, 0.44819899096562243, 0.44814641013608636, 0.44809384164222876, 0.4481585737743373, 0.4482232907235839, 0.4481707317073171, 0.44811818501582834, 0.4480656506447831, 0.44801312858984876, 0.4479606188466948, 0.4479081214109926, 0.44785563627841574, 0.4478031634446397, 0.4477507029053421, 0.4476982546562024, 0.4476458186929023, 0.44759339501112544, 0.44754098360655736, 0.4474885844748858, 0.4475532662140014, 0.4476179328104881, 0.4476825842696629, 0.44774722059684025, 0.4478118417973321, 0.44775944775944776, 0.44770706598034626, 0.4476546964557258, 0.44760233918128656, 0.44754999415273067, 0.4474976613657624, 0.44756225885654155, 0.44762684124386254, 0.44769140853302164, 0.4477559607293128, 0.44782049783802735, 0.4477681701332087, 0.44771585465591773, 0.4477803738317757, 0.4478448779348207, 0.447909366970334, 0.44797384094359455, 0.4480382998598786, 0.4479859894921191, 0.44793369133784733, 0.44788140539278626, 0.4478291316526611, 0.4477768701131987, 0.44772462077012837, 0.44767238361918094, 0.4476201586560896, 0.4476845911582876, 0.4477490086307441, 0.4478134110787172, 0.4478777985074627, 0.4479421709222339, 0.44788995103753787, 0.44783774332672804, 0.4477855477855478, 0.44773336440974243, 0.44768119319505945, 0.447629034137248, 0.44757688723205963, 0.44752475247524753, 0.447472629862567, 0.44742051938977523, 0.4473684210526316, 0.4473163348468972, 0.44726426076833525, 0.4473285996973577, 0.4473929236499069, 0.44745723263121145, 0.4475215266464976, 0.44758580570098894, 0.44765006979990696, 0.4477143189484704, 0.4477785531518958, 0.44784277241539716, 0.44790697674418606, 0.4479711661434717, 0.4479190885840502, 0.44786702313146576, 0.447814969781497, 0.44776292852992444, 0.4477108993725308, 0.4476588823051005, 0.4476068773234201, 0.44755488442327795, 0.44761904761904764, 0.44768319591220535, 0.4477473293079424, 0.4478114478114478, 0.4478755514279081, 0.44793964016250726, 0.4480037140204271, 0.4480677730068469, 0.4481318171269436, 0.44819584638589166, 0.4482598607888631, 0.4483238603410277, 0.44838784504755275, 0.44845181491360314, 0.4485157699443414, 0.44857971014492753, 0.4485277069325296, 0.44847571577605194, 0.44842373667130275, 0.44837176961409203, 0.44831981460023174, 0.4482678716255359, 0.4482159406858202, 0.44816402177690257, 0.44811211489460273, 0.44806022003474233, 0.448008337193145, 0.44795646636563624, 0.4479046075480435, 0.44785276073619634, 0.4479166666666667, 0.44798055780580953, 0.44804443415875955, 0.4481082957306491, 0.44817214252660803, 0.448235974551764, 0.4482997918112422, 0.44836359431016537, 0.448427382053654, 0.44849115504682624, 0.4485549132947977, 0.44861865680268176, 0.4486823855755895, 0.4487460996186294, 0.4488097989369078, 0.4488734835355286, 0.44893715341959334, 0.4490008085942012, 0.44894894894894893, 0.44889710128190324, 0.4488452655889146, 0.44879344186583536, 0.44874163010852, 0.44868983031282467, 0.4486380424746076, 0.4485862665897288, 0.4485345026540503, 0.448482750663436, 0.44843101061375173, 0.4483792825008652, 0.4483275663206459, 0.4482758620689655, 0.44822416974169743, 0.44817248933471693, 0.4481208208439013, 0.44806916426512966, 0.4480175195942831, 0.4479658868272444, 0.4479142659598986, 0.44786265698813227, 0.447926267281106, 0.44798986291901854, 0.4480534439069339, 0.4481170102499136, 0.44818056195301703, 0.4482440990213011, 0.4483076214598204, 0.44837112927362727, 0.44843462246777166, 0.4484981010473012, 0.44856156501726124, 0.44862501438269475, 0.4486884491486424, 0.4486368342344415, 0.44858523119392685, 0.4485336400230017, 0.4484820607175713, 0.4484304932735426, 0.4483789376868246, 0.448327393953328, 0.4482758620689655, 0.4482243420296518, 0.44817283383130313, 0.44823624037688153, 0.4482996323529412, 0.44836300976450316, 0.44842637261658624, 0.44848972091420697, 0.44855305466237944, 0.4486163738661155, 0.4486796785304248, 0.44874296866031455, 0.4488062442607897, 0.4487547343050614, 0.44870323617167773, 0.44865174985656914, 0.4486002753556677, 0.44854881266490765, 0.4484973617802248, 0.44844592269755706, 0.44839449541284404, 0.448457745671368, 0.4485209814262784, 0.4484695632236616, 0.4484181568088033, 0.4483667621776504, 0.44831537932615173, 0.4482640082502578, 0.44821264894592117, 0.4481613014090961, 0.44810996563573885, 0.44805864162180736, 0.44800732936326154, 0.4479560288560632, 0.44790474009617587, 0.447853463079565, 0.4478021978021978, 0.44775094426004347, 0.44769970244907303, 0.4476484723652592, 0.4475972540045767, 0.4476604507493422, 0.44772363303591856, 0.44778680086926687, 0.4478499542543458, 0.44791309319611206, 0.4479762176995198, 0.448039327769521, 0.4481024234110654, 0.4481655046291005, 0.4482285714285714, 0.4482916238144212, 0.4483546617915905, 0.4484176853650177, 0.448480694539639, 0.44854368932038835, 0.44860666971219737, 0.4486696357199954, 0.44873258734870974, 0.4487955246032652, 0.4488584474885845, 0.44892135600958794, 0.4489842501711938, 0.4489330138080566, 0.4488817891373802, 0.4488305761551626, 0.4487793748574036, 0.44872818524010494, 0.44867700729927007, 0.4486258410309043, 0.44857468643101484, 0.4485235434956105, 0.4484724122207022, 0.4484212926023025, 0.44848415773877365, 0.4485470085470086, 0.4486098450319052, 0.44867266719835935, 0.44873547505126454, 0.44879826859551203, 0.4488610478359909, 0.44892381277758797, 0.4489865634251879, 0.44904929978367303, 0.4491120218579235, 0.4491747296528173, 0.4492374231732301, 0.4493001024240355, 0.44936276741010467, 0.44942541813630676, 0.4494880546075085, 0.4495506768285747, 0.44961328480436763, 0.44967587853974755, 0.4497384580395724, 0.44980102330869814, 0.44986357435197816, 0.44992611117426395, 0.44998863378040466, 0.45005114217524717, 0.4501136363636364, 0.4501761163504147, 0.4502385821404226, 0.4503010337384982, 0.4503634711494775, 0.4504258943781942, 0.4504883034294799, 0.45055069830816397, 0.45049954586739327, 0.4504484050402997, 0.4503972758229285, 0.45034615821132673, 0.45029505220154337, 0.45024395778962895, 0.450192874971636, 0.45014180374361884, 0.4500907441016334, 0.45003969604173755, 0.4499886595599909, 0.44993763465245495, 0.44988662131519275, 0.44983561954426937, 0.44978462933575153, 0.4497336506857078, 0.4496826835902085, 0.44963172804532575, 0.4495807840471335, 0.4495298515917073, 0.4494789306751246, 0.4494280212934647, 0.4493771234428086, 0.449326237119239, 0.4492753623188406, 0.4492244990376995, 0.449173647271904, 0.44912280701754387, 0.4490719782707107, 0.449021161027498, 0.4489703552840009, 0.4489195610363163, 0.4489819004524887, 0.44904422576631603, 0.4491065369825831, 0.4491688341060726, 0.4492311171415649, 0.4491803278688525, 0.4491295500791318, 0.4490787837685091, 0.44902802893309224, 0.44897728556899086, 0.4489265536723164, 0.448875833239182, 0.44882512426570265, 0.448774426747995, 0.4487237406821776, 0.4486730660643704, 0.44862240289069555, 0.4485717511572767, 0.4485211108602393, 0.4484704819957106, 0.4484198645598194, 0.4483692585486965, 0.44831866395847436, 0.4482680807852871, 0.44821750902527074, 0.4481669486745629, 0.44811639972930295, 0.4480658621856321, 0.448128101037438, 0.44819032585409857, 0.44825253664036074, 0.44820200653815806, 0.44815148782687103, 0.44810098050264846, 0.44805048456164076, 0.44811267605633803, 0.4480621901757548, 0.4480117156697082, 0.4479612525343546, 0.447910800765852, 0.44786036036036037, 0.44780993131404123, 0.4478721008781806, 0.44793425644489476, 0.4479963980189104, 0.4480585256049522, 0.44812063920774253, 0.4481827388320018, 0.44824482448244823, 0.44830689616379793, 0.4483689538807649, 0.44843099763806094, 0.4484930274403959, 0.44855504329247725, 0.4486170451990106, 0.44867903316469926, 0.4487410071942446, 0.44880296729234576, 0.4488649134636997, 0.44892684571300145, 0.4489887640449438, 0.4490506684642175, 0.4491125589755111, 0.44917443558351117, 0.44923629829290207, 0.4492981471083661, 0.44935998203458344, 0.4494218030762322, 0.44948361023798833, 0.44954540352452577, 0.44960718294051627, 0.44966894849062955, 0.4496184919210054, 0.4495680466733984, 0.4495176127439982, 0.44946719012899605, 0.44952893674293404, 0.44959066950768195, 0.4496523884278986, 0.4497140935082408, 0.4497757847533632, 0.44983746216791837, 0.44989912575655683, 0.44996077552392694, 0.45002241147467503, 0.4500840336134454, 0.4501456419448801, 0.4502072364736194, 0.45026881720430106, 0.4503303841415612, 0.4503919372900336, 0.45045347665435004, 0.45051500223914015, 0.4505765140490317, 0.4506380120886501, 0.4506994963626189, 0.45076096687555955, 0.4508224236320913, 0.4508838666368315, 0.45094529589439536, 0.45100671140939597, 0.45106811318644446, 0.4510176694251845, 0.4509672369450967, 0.4509168157423971, 0.4508664058133035, 0.4508160071540353, 0.4507656197608137, 0.45071524362986143, 0.4507766230863784, 0.45083798882681564, 0.4508993408557703, 0.45096067917783733, 0.45102200379760976, 0.45108331471967833, 0.45114461194863203, 0.4512058954890576, 0.4512671653455398, 0.4513284215226613, 0.4513896640250028, 0.45145089285714285, 0.4515121080236581, 0.45157330952912295, 0.4515229275912083, 0.45147255689424365, 0.4514221974344674, 0.45137184920811957, 0.45132151221144196, 0.451271186440678, 0.4512208718920727, 0.45117056856187293, 0.4511202764463271, 0.45106999554168525, 0.45113117129165275, 0.451192333407622, 0.45125348189415043, 0.4513146167557932, 0.45137573799710373, 0.4514368456226331, 0.45149793963693063, 0.4515590200445434, 0.4516200868500167, 0.45168114005789356, 0.4517421796727151, 0.4518032056990205, 0.4518642181413467, 0.4519252170042288, 0.4519862022921998, 0.45204717400979083, 0.4521081321615308, 0.4521690767519466, 0.4521187854521188, 0.4520685053380783, 0.4520182364060936, 0.45196797865243493, 0.4519177320733741, 0.45186749666518455, 0.4518172724241414, 0.45176705934652145, 0.4517168574286032, 0.45166666666666666, 0.45161648705699364, 0.4515663185958676, 0.4515161612795735, 0.45146601510439804, 0.45141588006662964, 0.4513657561625583, 0.45131564338847563, 0.45126554174067496, 0.4512154512154512, 0.451165371809101, 0.45111530351792256, 0.4510652463382157, 0.45101520026628206, 0.4509651652984247, 0.4509151414309484, 0.4508651286601597, 0.45081512698236664, 0.4507651363938789, 0.4507151568910079, 0.45066518847006654, 0.45061523112736945, 0.450565284859233, 0.45051534966197493, 0.4504654255319149, 0.450415512465374, 0.45036561045867496, 0.45031571950814225, 0.4502658396101019, 0.4502159707608816, 0.45016611295681064, 0.4501162661942199, 0.450066430469442, 0.45001660577881103, 0.4499667921186628, 0.4499169894853348, 0.449867197875166, 0.4498174172844971, 0.44987829165744636, 0.44993915256112404, 0.45, 0.4500608339785422, 0.45012165450121655, 0.450182461572487, 0.4502432551968156, 0.4501934770591487, 0.45014370992703956, 0.45009395379683875, 0.4500442086648983, 0.44999447452757213, 0.4499447513812155, 0.45000552425146395, 0.44995581087052583, 0.4499061084723296, 0.44985641705323615, 0.44980673660960796, 0.4498674911660777, 0.44992823230650325, 0.44987856038860674, 0.449828899437024, 0.44977924944812364, 0.44972961041827614, 0.4496799823438535, 0.4496303652212292, 0.44958075904677847, 0.4495311638168781, 0.44948157952790646, 0.4494320061762435, 0.44938244375827086, 0.4493328922703716, 0.4492833517089305, 0.449233822070334, 0.44918430335097004, 0.449134795547228, 0.44908529865549923, 0.4490358126721763, 0.4489863375936536, 0.448936873416327, 0.44888742013659394, 0.4488379777508536, 0.4487885462555066, 0.4487391256469552, 0.44868971592160317, 0.448640317075856, 0.44859092910612064, 0.44854155200880574, 0.44849218578032135, 0.44844283041707933, 0.44839348591549294, 0.4483441522719771, 0.4482948294829483, 0.44824551754482456, 0.4481962164540255, 0.4481469262069724, 0.44809764680008796, 0.4480483782297966, 0.44799912049252416, 0.44794987358469823, 0.4480105517696197, 0.44807121661721067, 0.448021978021978, 0.4479727502472256, 0.44792353328938694, 0.4478743271448973, 0.44782513181019334, 0.4477759472817133, 0.4477267735558972, 0.44778741627319646, 0.4478480456741326, 0.44790866176309146, 0.4479692645444566, 0.44802985402261003, 0.4480904302019315, 0.44815099308679907, 0.44821154268158875, 0.4482720789906747, 0.4483326020184291, 0.4483931117692223, 0.4484536082474227, 0.4485140914573966, 0.44857456140350876, 0.4486350180901217, 0.4486954615215961, 0.4486462786364135, 0.44859710653222273, 0.44865753424657534, 0.44871794871794873, 0.44877834995069577, 0.4488387379491674, 0.44889911271771277, 0.44895947426067906, 0.44891030555251343, 0.44886114761279017, 0.4489214934851637, 0.44898182614407706, 0.44904214559386973, 0.44910245183887915, 0.4490532997701653, 0.44900415845918146, 0.44895502790239633, 0.4489059080962801, 0.44885679903730447, 0.4488077007219427, 0.4488679864377119, 0.44892825896762906, 0.44898851831601966, 0.448939427071944, 0.4488903465617142, 0.44884127678181024, 0.4487922177287135, 0.4487431693989071, 0.4486941317888755, 0.4487543706293706, 0.4488145963072217, 0.4487655669652611, 0.44871654833424357, 0.4486675404106597, 0.4486185431910014, 0.4485695566717624, 0.4485205808494377, 0.448471615720524, 0.4484226612815195, 0.4483737175289238, 0.44832478445923823, 0.4482758620689655, 0.4482269503546099, 0.4481780493126773, 0.4481291589396749, 0.4480802792321117, 0.448031410186498, 0.4479825517993457, 0.44804274343037837, 0.44810292193632795, 0.44816308732148696, 0.44822323959014604, 0.448283378746594, 0.4483435047951177, 0.4484036177400022, 0.4484637175855306, 0.4485238043359843, 0.44847494553376904, 0.4484260973750136, 0.4483772598562405, 0.4484373298486333, 0.4484973867595819, 0.44855743059335873, 0.4486174613542347, 0.4486774790464787, 0.44873748367435784, 0.4487974752421373, 0.44885745375408054, 0.44891741921444894, 0.4489773716275022, 0.4490373109974981, 0.4490972373286926, 0.44915715062533984, 0.4491083079599826, 0.4490594759160596, 0.4490106544901065, 0.4489618436786607, 0.4489130434782609, 0.4489729377241604, 0.44903281895240166, 0.44909268716722806, 0.4491525423728814, 0.4492123845736013, 0.4492722137736259, 0.4493320299771913, 0.4493918331885317, 0.44945162341187966, 0.4495114006514658, 0.44957116491151883, 0.4496309161962657, 0.4496906545099316, 0.44975037985673977, 0.44981009224091156, 0.4498697916666667, 0.449820982966258, 0.44977218485571707, 0.4497233973315978, 0.4496746203904555, 0.4496258540288472, 0.44957709824333114, 0.4495283530304673, 0.449479618386817, 0.44943089430894306, 0.4493821807934099, 0.44933347783678335, 0.44928478543563066, 0.4492361035865208, 0.4491874322860238, 0.44913877153071174, 0.4490901213171577, 0.44914978880103973, 0.44920944336149016, 0.44926908500270707, 0.44932871372888694, 0.4493883295442243, 0.44933968391426715, 0.4492910488148068, 0.44935064935064933, 0.449410236987339, 0.44936161004111663, 0.4493129936167911, 0.4492643877109476, 0.44921579232017306, 0.4491672074410556, 0.4491186330701849, 0.44907006920415227, 0.44902151583955024, 0.44897297297297295, 0.4489244406010161, 0.4488759187202767, 0.44882740732735327, 0.4487789064188459, 0.44873041599135605, 0.4486819360414866, 0.4486334665658421, 0.4485850075610283, 0.44853655902365264, 0.448488120950324, 0.44843969333765255, 0.44839127618225005, 0.44834286948072977, 0.4482944732297064, 0.448246087425796, 0.4481977120656162, 0.44825725693320384, 0.44831678895123006, 0.44826842162045527, 0.4482200647249191, 0.44817171826124474, 0.44812338222605697, 0.4480750566159819, 0.4480267414276472, 0.44797843665768194, 0.44793014230271666, 0.44788185835938343, 0.44783358482431557, 0.4477853216941481, 0.44773706896551724, 0.4476888266350609, 0.44764059469941825, 0.44759237315523, 0.4475441619991383, 0.44749596122778673, 0.4474477708378204, 0.44739959082588565, 0.44735142118863047, 0.44730326192270425, 0.4472551130247578, 0.4472069744914433, 0.44715884631941455, 0.44711072850532657, 0.44706262104583605, 0.4470145239376009, 0.4469664371772806, 0.44691836076153596, 0.4468702946870295, 0.4468222389504248, 0.4467741935483871, 0.44672615847758307, 0.44667813373468074, 0.44663011931634955, 0.44658211521926056, 0.446534121440086, 0.4464861379754997, 0.44643816482217685, 0.44639020197679413, 0.4463422494360296, 0.4462943071965628, 0.44624637525507466, 0.44619845360824745, 0.446257919037904, 0.4463173716985184, 0.44626945786366073, 0.4462215543151567, 0.4461736610496941, 0.4462330972311655, 0.4462925206567228, 0.44635193133047213, 0.44641132925651755, 0.4464707144389616, 0.446530086881905, 0.4465894465894466, 0.44664879356568365, 0.4467081278147116, 0.446767449340624, 0.4468267581475129, 0.4468860542394683, 0.44694533762057875, 0.4470046082949309, 0.4469567081011573, 0.44690881817207756, 0.44686093850439257, 0.4468130690948045, 0.4467652099400171, 0.4468244618185713, 0.44688370100663954, 0.44694292750829856, 0.4470021413276231, 0.44706134246868645, 0.4471205309355598, 0.44717970673231294, 0.4471318493150685, 0.4470840021401819, 0.4470361652043655, 0.44698833850433295, 0.4469405220367993, 0.4468927157984811, 0.44684491978609625, 0.446797133996364, 0.4467493584260051, 0.4467015930717417, 0.4466538379302972, 0.4466060929983966, 0.44655835827276613, 0.4465106337501336, 0.44646291942722804, 0.44641521530078, 0.4463675213675214, 0.4463198376241854, 0.4462721640675069, 0.4462245006942219, 0.4461768475010679, 0.44612920448478377, 0.4461883408071749, 0.4462474645030426, 0.4463065755764304, 0.4463656740313801, 0.44631803628601924, 0.4462704087077153, 0.44622279129321385, 0.4461751840392617, 0.44612758694260723, 0.44608, 0.44603242320819114, 0.44598485656393305, 0.4459373000639795, 0.4458897537050858, 0.44584221748400854, 0.4457946913975056, 0.4457471754423364, 0.44569966961526164, 0.44565217391304346, 0.4456046883324454, 0.44555721287023226, 0.4456162778310429, 0.44567533020877714, 0.4457343700074555, 0.4457933972310969, 0.4457459269513364, 0.4456984667802385, 0.4456510167145747, 0.4456035767511177, 0.44555614688664186, 0.4455087271179225, 0.4454613174417367, 0.44541391785486273, 0.44536652835408025, 0.4453191489361702, 0.44527177959791514, 0.4452244203360987, 0.4451770711475061, 0.44512973202892386, 0.4450824029771398, 0.4450350839889432, 0.4449877750611247, 0.44494047619047616, 0.44499946859389944, 0.4450584484590861, 0.44511741579003294, 0.4451763705907352, 0.4452353128651864, 0.4452942426173784, 0.445246946362188, 0.44519966015293116, 0.44515238398640755, 0.44510511785941814, 0.4450578617687653, 0.44501061571125267, 0.4449633796836854, 0.44491615368286985, 0.4448689377056139, 0.44482173174872663, 0.44488063660477456, 0.4449395289624443, 0.4449984088257134, 0.4450572761985575, 0.44501007529960757, 0.4449628844114528, 0.4449157035309087, 0.4448685326547922, 0.44482137177992154, 0.4447742209031164, 0.4448330683624801, 0.4448919033488766, 0.44495072586627105, 0.44500953591862685, 0.4450683335099057, 0.4451271186440678, 0.44518589132507147, 0.44524465155687354, 0.445303399343429, 0.44536213468869124, 0.445420857596612, 0.4454795680711412, 0.4455382661162274, 0.4455969517358171, 0.44554979362895547, 0.4455026455026455, 0.4454555073537192, 0.4454083791790097, 0.4453612609753517, 0.44531415273958114, 0.44526705446853515, 0.44521996615905246, 0.44517288780797293, 0.44512581941213786, 0.4450787609683899, 0.4450317124735729, 0.4450903709967234, 0.4450433312196153, 0.444996301384339, 0.44494928148774304, 0.4449022715266772, 0.4448552714979928, 0.4448082813985423, 0.44476130122517954, 0.44471433097475976, 0.4446673706441394, 0.44462042023017634, 0.4445734797297297, 0.4445265491396601, 0.4444796284568292, 0.4444327176781003, 0.4443858168003377, 0.4443389258204073, 0.4442920447351762, 0.44424517354151283, 0.4441983122362869, 0.4441514608163696, 0.4441046192786332, 0.4440577876199515, 0.4440109658371995, 0.4439641539272536, 0.44391735188699133, 0.44387055971329187, 0.4438237774030354, 0.4438823901359469, 0.4438356164383562, 0.44378885259719736, 0.44374209860935526, 0.443695354471716, 0.4436486201811671, 0.44360189573459713, 0.44355518112889636, 0.4435084763609561, 0.4435670667508949, 0.4436256448047163, 0.4435789473684211, 0.44363751184085887, 0.44369606398652917, 0.44375460380932336, 0.4438131313131313, 0.44387164650184113, 0.4439301493793394, 0.4439886399495109, 0.44404711821623893, 0.4441055841834052, 0.4441640378548896, 0.4442224792345705, 0.44428090832632466, 0.44433932513402713, 0.4443977296615514, 0.4443510246978455, 0.4443043295502312, 0.44425764421561414, 0.44421096869090143, 0.44416430297300136, 0.4441176470588235, 0.44407100094527885, 0.4440243646292796, 0.44397773810773916, 0.44393112137757246, 0.44388451443569554, 0.44383791727902583, 0.443791329904482, 0.443744752308984, 0.44369818448945325, 0.4436516264428122, 0.44360507816598466, 0.4435585396558959, 0.44351201090947234, 0.4434654919236417, 0.443418982695333, 0.4434773489932886, 0.443535703051274, 0.443594044873139, 0.4436523744627319, 0.4437106918238994, 0.44376899696048633, 0.4438272898763362, 0.44388557057529077, 0.4439438390611903, 0.4440020953378732, 0.4440603394091766, 0.4441185712789358, 0.4441767909509845, 0.44423499842915487, 0.4442931937172775, 0.44435137681918124, 0.44440954773869346, 0.4444677064796399, 0.4445258530458447, 0.4445839874411303, 0.4446421096693177, 0.44470021973422624, 0.44475831763967355, 0.44481640338947587, 0.44476987447698746, 0.444723355297563, 0.4446768458481489, 0.4446303461256928, 0.44458385612714346, 0.44453737584945113, 0.4445954421910935, 0.4446534963938539, 0.44471153846153844, 0.44476956839795173, 0.44472309299895507, 0.4446766273116707, 0.44463017133305477, 0.44458372506006477, 0.4445372884896595, 0.44449086161879897, 0.4444444444444444, 0.4443980369635585, 0.4444560451033619, 0.4445140411316421, 0.44457202505219207, 0.44462999686880283, 0.44468795658526405, 0.44474590420536364, 0.4448038397328882, 0.44486176317162235, 0.4449196745253495, 0.44497757379785124, 0.4450354609929078, 0.44509333611429763, 0.4451511991657977, 0.4452090501511834, 0.4452668890742285, 0.4453247159387053, 0.4453825307483844, 0.44544033350703494, 0.44549812421842433, 0.44555590288631863, 0.44561366951448217, 0.44567142410667776, 0.4457291666666667, 0.4457868971982085, 0.44584461570506145, 0.44590232219098197, 0.4459600166597251, 0.44601769911504424, 0.4460753695606912, 0.4461330280004164, 0.44619067443796834, 0.4462483088770944, 0.44630593132154006, 0.44636354177504944, 0.4463171036204744, 0.4462706751274316, 0.4462242562929062, 0.44617784711388453, 0.4461314475873544, 0.44618904024123945, 0.44624662091911, 0.4463041896247011, 0.44625779625779627, 0.4462114125350795, 0.44616503845354394, 0.4462225917073678, 0.44628013300083125, 0.4463376623376623, 0.4463951797215874, 0.44645268515633113, 0.44651017864561693, 0.44656766019316646, 0.4466251298026999, 0.4466825874779358, 0.44674003322259137, 0.44679746704038203, 0.4468548889350218, 0.44691229891022316, 0.44696969696969696, 0.44702708311715267, 0.447084457356298, 0.4471418196908393, 0.44719917012448135, 0.4472565086609273, 0.44731383530387886, 0.4473711500570362, 0.4474284529240979, 0.447485743908761, 0.44754302301472115, 0.4476002902456722, 0.4476575456053068, 0.44771478909731577, 0.4477720207253886, 0.44772562428763857, 0.4476792374637381, 0.44763286025069926, 0.4475864926455355, 0.44754013464526154, 0.4475973487986744, 0.447654551102827, 0.44771174156139987, 0.4476653897919039, 0.44761904761904764, 0.44757271503985097, 0.44752639205133515, 0.44748007865052264, 0.4474337748344371, 0.44738748060010347, 0.4473411959445479, 0.4472949208647978, 0.44735208936698384, 0.44740924604405835, 0.44746639089968976, 0.44752352393754524, 0.4475806451612903, 0.44763775457458904, 0.447694852181104, 0.44775193798449614, 0.447809011988425, 0.4478660741965485, 0.44792312461252326, 0.4479801632400041, 0.4479338842975207, 0.44788761491581447, 0.44784135509192313, 0.44789837860167303, 0.44785212722015694, 0.447805885389778, 0.4477596531075779, 0.44781666150510996, 0.4478736581337737, 0.44793064299721336, 0.44798761609907123, 0.44794138891755236, 0.44789517127527856, 0.44784896316929745, 0.44780276459665774, 0.4477565755544095, 0.44771039603960394, 0.4476642260492936, 0.4476180655805321, 0.44757191463037427, 0.4475257731958763, 0.44747964127409545, 0.4474335188620903, 0.44738740595692056, 0.44734130255564714, 0.4472952086553323, 0.44724912425303937, 0.44730606778613374, 0.4472599917593737, 0.4472139252240189, 0.447167868177137, 0.44712182061579653, 0.44707578253706753, 0.4470297539380212, 0.4469837348157299, 0.4470406587750901, 0.44709757101687936, 0.44715447154471544, 0.4472113603622144, 0.44726823747299105, 0.4473251028806584, 0.44727908651373316, 0.4473359391071796, 0.44739278000617094, 0.4474496092143151, 0.4475064267352185, 0.44756323257248615, 0.4476200267297214, 0.4476768092105263, 0.4476307945318121, 0.447584789311408, 0.4475387935463981, 0.44749280723386764, 0.4474468303709031, 0.44740086295459214, 0.4473549049820236, 0.44730895645028756, 0.4472630173564753, 0.4472170876976792, 0.4471711674709929, 0.4471252566735113, 0.44707935530233034, 0.4470334633545473, 0.4469875808272606, 0.4469417077175698, 0.4468958440225757, 0.4468499897393803, 0.4468041448650867, 0.44675830939679934, 0.4467124833316238, 0.44666666666666666, 0.446620859399036, 0.44657506152584087, 0.44652927304419154, 0.4465860159934386, 0.4466427473090723, 0.44669946699466995, 0.4466536845341806, 0.44660791145726586, 0.4465621477610411, 0.44651639344262295, 0.4464706484991292, 0.4464249129276788, 0.4463791867253918, 0.4463334698893896, 0.4462877624167947, 0.4462420643047307, 0.4461963755503225, 0.44615069615069614, 0.4461050261029788, 0.44605936540429886, 0.4460137140517859, 0.4459680720425706, 0.4459224393737849, 0.4458768160425619, 0.4458312020460358, 0.44578559738134205, 0.44574000204561726, 0.4456944160359992, 0.44564883934962674, 0.4456032719836401, 0.44555771393518045, 0.4455121652013903, 0.44546662577941326, 0.4454210956663941, 0.4453755748594788, 0.44533006335581443, 0.4452845611525493, 0.44523906824683285, 0.4451935846358157, 0.44514811031664964, 0.4451026452864876, 0.44505718954248363, 0.44501174308179314, 0.4449663059015724, 0.4450229709035222, 0.44507962433646386, 0.4450341941410636, 0.4449887732190243, 0.4449433615675069, 0.4448979591836735, 0.44485256606468726, 0.4448071822077127, 0.44476180760991535, 0.44471644226846185, 0.44467108618052015, 0.4446257393432592, 0.4445804017538493, 0.4445350734094617, 0.44448975430726884, 0.44454638124362894, 0.4446029966364285, 0.4446596004891969, 0.44471619280546215, 0.4446708783370695, 0.4446255731023943, 0.44458027709861453, 0.4445349903229092, 0.44448971277245874, 0.4444444444444444, 0.4443991853360489, 0.4443539354444558, 0.4443086947668499, 0.4442634633004174, 0.44421824104234525, 0.4441730279898219, 0.44412782414003665, 0.4440826294901801, 0.44403744403744405, 0.4439922677790213, 0.4439471007121058, 0.4439019428338928, 0.4439585028478438, 0.44401505135767316, 0.44407158836689037, 0.4441281138790036, 0.44418462789751934, 0.4442411304259429, 0.444297621467778, 0.44435410102652706, 0.44441056910569104, 0.44446702570876945, 0.4445234708392603, 0.4445799045006604, 0.44463632669646486, 0.4446927374301676, 0.44464757261832216, 0.4446024169797908, 0.44455727051177907, 0.4445121332114936, 0.4444670050761421, 0.4444218861029337, 0.44437677628907835, 0.44433167563178727, 0.44428658412827277, 0.44424150177574834, 0.44419642857142855, 0.4441513645125292, 0.444106309596267, 0.44406126381986005, 0.44401622718052736, 0.4439711996754893, 0.44392618130196715, 0.4438811720571834, 0.4438361719383617, 0.4438925494171313, 0.4439489154672613, 0.4440052700922266, 0.4440616132955006, 0.4441179450805553, 0.4441742654508612, 0.44423057440988756, 0.4442868719611021, 0.44434315810797126, 0.4443994328539599, 0.44445569620253167, 0.4445119481571486, 0.44456818872127163, 0.4445231828305325, 0.44447818605121975, 0.4444331983805668, 0.4443882198158081, 0.4443432503541793, 0.44429828999291715, 0.44425333872925943, 0.44420839656044514, 0.44426461662957717, 0.4442196824112471, 0.4441747572815534, 0.4441298412377389, 0.44408493427704754, 0.4441411384086543, 0.44419733117670845, 0.44425351258465584, 0.44430968263594095, 0.4443658413340071, 0.4444219886822959, 0.44447812468424774, 0.44453424934330166, 0.44459036266289526, 0.4446464646464646, 0.4447025552974447, 0.44475863461926884, 0.4448147026153691, 0.4448707592891761, 0.44492680464411916, 0.4449828386836261, 0.4450388614111234, 0.44509487283003635, 0.44515087294378847, 0.4452068617558022, 0.44526283926949856, 0.445318805488297, 0.44537476041561586, 0.4454307040548719, 0.4454866364094806, 0.445542557482856, 0.4455984672784108, 0.4455535390199637, 0.4455086198205464, 0.44546370967741933, 0.44541880858784394, 0.44537391654908287, 0.4453290335583997, 0.4452841596130592, 0.44523929471032747, 0.44529518436429577, 0.4453510627581344, 0.4454069298952458, 0.44546278577903115, 0.44551863041289025, 0.44557446380022153, 0.44563028594442206, 0.44568609684888755, 0.4457418965170123, 0.44579768495218924, 0.44585346215780997, 0.44590922813726475, 0.44596498289394243, 0.44602072643123053, 0.4460764587525151, 0.446132179861181, 0.4461878897606115, 0.4462435884541889, 0.44629927594529367, 0.4463549522373052, 0.44641061733360143, 0.44646627123755905, 0.44652191395255325, 0.446577545481958, 0.44663316582914575, 0.4466887749974877, 0.4466438906752412, 0.44659901537224955, 0.44655414908579466, 0.44650929181315924, 0.4464644435516272, 0.44652003615546854, 0.44657561759389436, 0.4466311878702681, 0.4466867469879518, 0.4467422949503062, 0.4467978317606906, 0.4468533574224631, 0.4469088719389803, 0.4469643753135976, 0.4470198675496689, 0.4470753486505468, 0.44713081861958265, 0.447085966496138, 0.4470411233701103, 0.4469962892387925, 0.44695146409947856, 0.44690664794946355, 0.44686184078604374, 0.4468170426065163, 0.4467722534081796, 0.44672747318833317, 0.4466827019442774, 0.446738150115242, 0.4467935871743487, 0.4467488227632502, 0.4467040673211781, 0.44665932084543725, 0.4466145833333333, 0.44656985478217326, 0.44652513518926495, 0.4464804245519175, 0.44643572286744093, 0.44639103013314646, 0.44634634634634635, 0.4463016715043539, 0.4462570056044836, 0.44621234864405085, 0.4461677006203722, 0.44612306153076536, 0.44607843137254904, 0.4460338101430429, 0.4459891978395679, 0.44594459445944595, 0.4459]],\"toyplot\"); (function(axis, axis_id, projection)         {             axis.show_coordinates(axis_id, projection);         })(modules[\"toyplot.coordinates.Axis\"],\"t566a01cbc76a491f85860089e17a11c9\",[{\"domain\": {\"bounds\": {\"max\": Infinity, \"min\": -Infinity}, \"max\": 10286.720000000001, \"min\": 0.0}, \"range\": {\"bounds\": {\"max\": Infinity, \"min\": -Infinity}, \"max\": 500.0, \"min\": 0.0}, \"scale\": \"linear\"}]); (function(axis, axis_id, projection)         {             axis.show_coordinates(axis_id, projection);         })(modules[\"toyplot.coordinates.Axis\"],\"tde9c55c2a5fc4383af7da9996b19a552\",[{\"domain\": {\"bounds\": {\"max\": Infinity, \"min\": -Infinity}, \"max\": 0.75, \"min\": 0.0}, \"range\": {\"bounds\": {\"max\": Infinity, \"min\": -Infinity}, \"max\": 500.0, \"min\": 0.0}, \"scale\": \"linear\"}]); })(); <p>We can find these stationary distributions using different approaches. One of them is using a Monte Carlo approach in which we do a random walk long enough to get the distribution from the actual sequence of events. This method is easy to understand but it is not very efficient.</p> <pre><code>def get_stationary_dist_monte_carlo(states, steps, initial_state, transition_matrix):\n    # Create empty array to put the frequency of a given state\n    frequencies = np.zeros(len(states)) \n\n    # do first step\n    initial_idx = states.index(initial_state)\n    frequencies[initial_idx] = 1\n    previous_idx = initial_idx\n\n    # do other steps\n    step = 1\n    while step &lt; steps:\n        current_state = np.random.choice(list(states), p=transition_matrix[previous_idx])\n        current_idx = states.index(current_state)\n        frequencies[current_idx] += 1\n        previous_idx = current_idx\n        step += 1\n\n    stationary_distribution = frequencies / steps   # \u03c0\n    return stationary_distribution\n</code></pre> <p>Using this method we can get the stationary distribution of our Markov chain:</p> <pre><code>get_stationary_dist_monte_carlo(states=\"ACGT\", \n                          steps=1e6, \n                          initial_state=\"A\", \n                          transition_matrix=transition_matrix)\n</code></pre> <pre><code>array([0.066472, 0.186481, 0.286193, 0.460854])\n</code></pre> <p>With this, we can see that the frequency of T's will be 0.46 in any sequence produced by a random walk in this Markov chain. </p> <p>As we mentioned before, there are other methods to find this distribution; some are more efficient than the previous one. The following apply a repeated multiplication matrix method over the substitution matrix. Notice that it is still an iterative operation, but the iterations needed to reach the stationary distribution are fewer.</p> <pre><code>def get_stationary_dist_matrix_multiplication(states, iterations, transition_matrix):\n\"\"\"Repeated matrix multiplication method\"\"\"\n    current_matrix = transition_matrix\n\n    iteration = 1\n    while iteration &lt; iterations:\n        # Calculate the Matrix product of two arrays\n        current_matrix = np.matmul(current_matrix, transition_matrix)\n        iteration += 1\n\n    stationary_distribution = current_matrix[0]\n    return stationary_distribution\n</code></pre> <pre><code>get_stationary_dist_matrix_multiplication(\"ACGT\", iterations=100, transition_matrix=transition_matrix)\n</code></pre> <pre><code>array([0.06593407, 0.18681319, 0.28571429, 0.46153846])\n</code></pre>"},{"location":"chapter-3/3.2-markov-models/#rate-matrices","title":"Rate matrices","text":"<p>Here we can introduce another concept, a rate matrix (commonly called Q matrix) in which each element describes the rate (the expected number of events per some time) of one state change into other states. Different of transition matrix, in a rate matrix every row will sum 0.</p> <pre><code># Example of a rate matrix\n#                         A     C     G     T\nrate_matrix = np.array([[-1.00, 0.333, 0.333, 0.333],  # A\n                        [0.333, -1.00, 0.333, 0.333],  # C\n                        [0.333, 0.333, -1.00, 0.333],  # G\n                        [0.333, 0.333, 0.333, -1.00]   # T\n                       ])\n</code></pre> <p>The library <code>scipy</code> includes a library with lineal algebra operation in which we can use matrix exponentiation en order to get the probabilities of change at a given a time. Take into account that if <code>time</code>is large enough you will end getting the stationary distribution (this is another way to get this vector other than Monte Carlo or repeated matrix multiplication approaches). </p> <p>Because this method works well with real numbers (previous approaches only worked well with integers [steps or iterations]), we can calculate the probability of transition given a branch length.</p> <pre><code>from scipy.linalg import expm\n\ntime = 0.2\nexpm(rate_matrix * time)\n</code></pre> <pre><code>array([[0.82443456, 0.05845515, 0.05845515, 0.05845515],\n       [0.05845515, 0.82443456, 0.05845515, 0.05845515],\n       [0.05845515, 0.05845515, 0.82443456, 0.05845515],\n       [0.05845515, 0.05845515, 0.05845515, 0.82443456]])\n</code></pre> <p>A Q matrix cannot be passed in a Markov chain because some probs are negative. It is not inteded to be the transition matrix in a Markov process. Instead the transition matrix can be used in a Markov chain without issue. Let explore this with an example simulating two sequences evolution.</p>"},{"location":"chapter-3/3.2-markov-models/#simulation-of-evolution-under-a-markov-model","title":"Simulation of evolution under a markov model","text":"<p>In previous examples we were considering the generation of independent sequences using markov process. However, to translate this concept into sequence evolution, we need to follow the markov model among generations in the same sequence (time).</p> <pre><code>import copy\nimport numpy as np\n\nSTATES = [0,1,2,3]\nBASES = \"ACGT\"\n\nclass lineage:\n\"\"\" Create a lineage object that can evolve a given amount of generations\n    and split it in two child lineages.\n    \"\"\" \n    def __init__(self, transition_matrix, length=1000, tips=4, parent=None, states=STATES):\n        if not parent:\n            self._sequence = np.random.choice(states, size=length)\n        else:\n            self._sequence = parent._sequence.copy()\n\n#         self.ancestral_sequence = self.sequence\n        self.length = length\n        self.transition_matrix = transition_matrix\n        self.parent = parent\n        self.generations = 0\n        self.right = None\n        self.left = None\n        self.real_changes = np.zeros(length)\n        self.sequence = self._translate_sequence()\n\n    def evolve(self, generations=1):\n        for gen in range(int(generations)):          \n            for index, base in enumerate(self._sequence):\n                new_base = np.random.choice(STATES, p=self.transition_matrix[base])\n                if new_base != base:\n                    self._sequence[index] = new_base\n                    self.real_changes[index] += 1\n\n            self.generations += 1\n            self.sequence = self._translate_sequence()\n\n    def cladogenesis(self):\n        self.right = lineage(self.transition_matrix, length=self.length, parent=self)\n        self.left = lineage(self.transition_matrix, length=self.length, parent=self)\n        return self.left, self.right\n\n    def _translate_sequence(self):\n        return \"\".join([BASES[b] for b in self._sequence])\n</code></pre> <pre><code># As mentioend above, there are two different matrices when we are considering models of substitution. One is Q matrices or instant rate matrices that help to give \n# the probability of a change in a given time\n# for Jukes-Cantor the rate matrix (Q) is\nsubstitutions_site_year = 1e-2\nalpha = substitutions_site_year/3\n#                  A     C    G     T\nQ_jc = np.array([[-3*alpha, alpha,    alpha,    alpha   ],  # A\n                  [alpha,   -3*alpha, alpha,    alpha   ],  # C\n                  [alpha,   alpha,    -3*alpha, alpha   ],  # G\n                  [alpha,   alpha,    alpha,    -3*alpha]   # T\n                 ])\n</code></pre> <pre><code>Q_jc\n</code></pre> <pre><code>array([[-0.01      ,  0.00333333,  0.00333333,  0.00333333],\n       [ 0.00333333, -0.01      ,  0.00333333,  0.00333333],\n       [ 0.00333333,  0.00333333, -0.01      ,  0.00333333],\n       [ 0.00333333,  0.00333333,  0.00333333, -0.01      ]])\n</code></pre> <pre><code>#given a time, we can use Q matrix to get the probability of X change to Z, \n#for example, having substitutions_site_year = 1e-2 in 5 units of time (years here) the \n#probability that a base maintain in the same state (A&gt;A&gt;A&gt;A&gt;A) is 0.95\n# this can be done using  matrix exponential\nfrom scipy.linalg import expm\ntime = 5\nexpm(Q_jc * time)\n</code></pre> <pre><code>array([[0.95163024, 0.01612325, 0.01612325, 0.01612325],\n       [0.01612325, 0.95163024, 0.01612325, 0.01612325],\n       [0.01612325, 0.01612325, 0.95163024, 0.01612325],\n       [0.01612325, 0.01612325, 0.01612325, 0.95163024]])\n</code></pre> <pre><code># Using this property we can calculate the transition probability matrix for this Q matrix using \n#matrix exponenciation\nexpm(Q_jc)\n</code></pre> <pre><code>array([[0.99006637, 0.00331121, 0.00331121, 0.00331121],\n       [0.00331121, 0.99006637, 0.00331121, 0.00331121],\n       [0.00331121, 0.00331121, 0.99006637, 0.00331121],\n       [0.00331121, 0.00331121, 0.00331121, 0.99006637]])\n</code></pre> <pre><code># For simple models like jukes cantor, the trainsion matrix is also noted in the following way (this is an approximation)\n\nsubstitutions_site_year = 1e-4\nalpha = substitutions_site_year/3\n#                              A      C      G      T\ntransition_matrix_jc = np.array([[1-3*alpha, alpha,     alpha,     alpha    ],  # A\n                                  [alpha,     1-3*alpha, alpha,     alpha    ],  # C\n                                  [alpha,     alpha,     1-3*alpha, alpha    ],  # G\n                                  [alpha,     alpha,     alpha,     1-3*alpha]   # T\n                                 ])\ntransition_matrix_jc\n\n# you can see the similarities of this defined matrix with the result of matrix exponenciallity using Q matrix\n</code></pre> <pre><code>array([[9.99900000e-01, 3.33333333e-05, 3.33333333e-05, 3.33333333e-05],\n       [3.33333333e-05, 9.99900000e-01, 3.33333333e-05, 3.33333333e-05],\n       [3.33333333e-05, 3.33333333e-05, 9.99900000e-01, 3.33333333e-05],\n       [3.33333333e-05, 3.33333333e-05, 3.33333333e-05, 9.99900000e-01]])\n</code></pre> <pre><code># To fully apply a Markov chain in a simulated evolution using a  \n# Jukes-Cantor model, we need to use transition matrix for controling Markov chain\n# and not Q matrix\n</code></pre> <pre><code># Create a original lineage\nol = lineage(transition_matrix_jc, length=100)\n# ol.sequence\n</code></pre> <pre><code># evolve a little before split it\nol.evolve(1000)\n# ol.sequence\n\n# split it in two child lineages\nch1, ch2 = ol.cladogenesis()\n# ch1.sequence, ch2.sequence\n</code></pre> <pre><code># evolve child lineage\nch1.evolve(1000)\nch2.evolve(1000)\nch1.sequence, ch2.sequence\n</code></pre> <pre><code>('GATATTTTGACATTCCTAAATAATGGATTTTACCCTTTGAGTTCGTCGCTACCTAAGCCTGCGGGGATCGCTTGAGCAGTTGAAGCTAGCTCTTCACGAT',\n 'TATAATTTGACATACCTTAATAATGGGTTTCACTCTTTCACTTCGTCACTCTCTTAGCCTGCGGCCATCGCATGTGCAGTTGATGCTAGCTCCCCACGAT')\n</code></pre> <pre><code># check the real changes from the ancestral state to the current state\nch1.real_changes, ch2.real_changes\n</code></pre> <pre><code>(array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 2., 0., 0., 0.,\n        1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 1., 0., 0., 1.,\n        0., 0., 0., 0., 0., 0., 1., 0., 0., 0., 0., 0., 0., 1., 0., 1., 1.,\n        0., 0., 0., 1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 1., 0., 0., 0.,\n        0., 0., 0., 1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 1., 0.,\n        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.]),\n array([1., 0., 0., 0., 1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 2.,\n        0., 0., 0., 0., 0., 0., 0., 0., 0., 1., 0., 0., 0., 0., 0., 0., 0.,\n        0., 0., 0., 0., 1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 1., 0.,\n        1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 1., 1., 0., 0.,\n        0., 0., 0., 0., 0., 0., 1., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n        0., 0., 0., 0., 0., 0., 0., 2., 1., 0., 0., 0., 0., 0., 0.]))\n</code></pre> <p>The real changes in this sequences were stored in our lineage object, so we can know exactly  how different they are</p> <pre><code>(ch1.real_changes.sum() + ch2.real_changes.sum()) / ch1.length\n</code></pre> <pre><code>0.25\n</code></pre> <p>p-distance is just the number of different sites over the number of total sites in the compared sequence</p> <pre><code>p_distance = np.not_equal(ch1._sequence, ch2._sequence).sum() / ch1.length\np_distance\n</code></pre> <pre><code>0.19\n</code></pre> <p>let's correct that number using jc model</p> <pre><code>corrected_distance_jc = -3/4 * np.log(1 - 4/3 * p_distance)\ncorrected_distance_jc\n</code></pre> <pre><code>0.21910231710087086\n</code></pre> <p>In this small scale example is not very impressive the result, but one think is that p-distance alone underestimate notoriously the real differences between two sequences.</p> <p>Let's simulate a big sequence (1000 bp) and run it for a longer time, tracking in each generation (say years) real changes, p-distance and the corrected distance</p>"},{"location":"chapter-3/3.2-markov-models/#tracking-distances-along-time","title":"Tracking distances along time","text":"<pre><code>generations = 10000\nresults = np.zeros((generations, 3))\nol = lineage(transition_matrix_jc, length=1000)\nol.evolve(100)\nch1, ch2 = ol.cladogenesis()\n\nfor g in range(generations):\n    ch1.evolve()\n    ch2.evolve()\n    p_distance = np.not_equal(ch1._sequence, ch2._sequence).sum() / ch1.length\n    real_distance = (ch1.real_changes.sum() + ch2.real_changes.sum()) / ch1.length\n    # if distances is greater than 3/4 the equation does not exist\n    if p_distance &lt; 3/4:\n        # correct distance using jc model\n        corrected_distance_jc = -3/4 * np.log(1 - 4/3 * p_distance)\n    else:\n        corrected_distance_jc = np.inf\n\n    results[g] = [corrected_distance_jc, p_distance, real_distance]\n</code></pre> <pre><code>import toyplot\ncanvas, axes, mark = toyplot.plot(results, ylabel=\"Distance\", xlabel=\"Generations\");\naxes.text(generations, results[-1][0], \"With model\", style={\"text-anchor\":\"start\", \"-toyplot-anchor-shift\":\"5px\"});\naxes.text(generations, results[-1][1], \"Without model\", style={\"text-anchor\":\"start\", \"-toyplot-anchor-shift\":\"5px\"});\naxes.text(generations, results[-1][2], \"Real distance\", style={\"text-anchor\":\"start\", \"-toyplot-anchor-shift\":\"5px\"});\n</code></pre> With modelWithout modelReal distance04000800012000Generations012Distance(function() { var modules={}; modules[\"toyplot/tables\"] = (function()     {         var tables = [];          var module = {};          module.set = function(owner, key, names, columns)         {             tables.push({owner: owner, key: key, names: names, columns: columns});         }          module.get = function(owner, key)         {             for(var i = 0; i != tables.length; ++i)             {                 var table = tables[i];                 if(table.owner != owner)                     continue;                 if(table.key != key)                     continue;                 return {names: table.names, columns: table.columns};             }         }          module.get_csv = function(owner, key)         {             var table = module.get(owner, key);             if(table != undefined)             {                 var csv = \"\";                 csv += table.names.join(\",\") + \"\\n\";                 for(var i = 0; i != table.columns[0].length; ++i)                 {                   for(var j = 0; j != table.columns.length; ++j)                   {                     if(j)                       csv += \",\";                     csv += table.columns[j][i];                   }                   csv += \"\\n\";                 }                 return csv;             }         }          return module;     })(); modules[\"toyplot/root/id\"] = \"td3e6bccafc6a49bcbd510f0595e34f6e\"; modules[\"toyplot/root\"] = (function(root_id)     {         return document.querySelector(\"#\" + root_id);     })(modules[\"toyplot/root/id\"]); modules[\"toyplot/canvas/id\"] = \"tb30fb033c44d42429230bf65dec88e87\"; modules[\"toyplot/canvas\"] = (function(canvas_id)     {         return document.querySelector(\"#\" + canvas_id);     })(modules[\"toyplot/canvas/id\"]); modules[\"toyplot/menus/context\"] = (function(root, canvas)     {         var wrapper = document.createElement(\"div\");         wrapper.innerHTML = \"&lt;ul class='toyplot-context-menu' style='background:#eee; border:1px solid #b8b8b8; border-radius:5px; box-shadow: 0px 0px 8px rgba(0%,0%,0%,0.25); margin:0; padding:3px 0; position:fixed; visibility:hidden;'&gt;&lt;/ul&gt;\"         var menu = wrapper.firstChild;          root.appendChild(menu);          var items = [];          var ignore_mouseup = null;         function open_menu(e)         {             var show_menu = false;             for(var index=0; index != items.length; ++index)             {                 var item = items[index];                 if(item.show(e))                 {                     item.item.style.display = \"block\";                     show_menu = true;                 }                 else                 {                     item.item.style.display = \"none\";                 }             }              if(show_menu)             {                 ignore_mouseup = true;                 menu.style.left = (e.clientX + 1) + \"px\";                 menu.style.top = (e.clientY - 5) + \"px\";                 menu.style.visibility = \"visible\";                 e.stopPropagation();                 e.preventDefault();             }         }          function close_menu()         {             menu.style.visibility = \"hidden\";         }          function contextmenu(e)         {             open_menu(e);         }          function mousemove(e)         {             ignore_mouseup = false;         }          function mouseup(e)         {             if(ignore_mouseup)             {                 ignore_mouseup = false;                 return;             }             close_menu();         }          function keydown(e)         {             if(e.key == \"Escape\" || e.key == \"Esc\" || e.keyCode == 27)             {                 close_menu();             }         }          canvas.addEventListener(\"contextmenu\", contextmenu);         canvas.addEventListener(\"mousemove\", mousemove);         document.addEventListener(\"mouseup\", mouseup);         document.addEventListener(\"keydown\", keydown);          var module = {};         module.add_item = function(label, show, activate)         {             var wrapper = document.createElement(\"div\");             wrapper.innerHTML = \"&lt;li class='toyplot-context-menu-item' style='background:#eee; color:#333; padding:2px 20px; list-style:none; margin:0; text-align:left;'&gt;\" + label + \"&lt;/li&gt;\"             var item = wrapper.firstChild;              items.push({item: item, show: show});              function mouseover()             {                 this.style.background = \"steelblue\";                 this.style.color = \"white\";             }              function mouseout()             {                 this.style.background = \"#eee\";                 this.style.color = \"#333\";             }              function choose_item(e)             {                 close_menu();                 activate();                  e.stopPropagation();                 e.preventDefault();             }              item.addEventListener(\"mouseover\", mouseover);             item.addEventListener(\"mouseout\", mouseout);             item.addEventListener(\"mouseup\", choose_item);             item.addEventListener(\"contextmenu\", choose_item);              menu.appendChild(item);         };         return module;     })(modules[\"toyplot/root\"],modules[\"toyplot/canvas\"]); modules[\"toyplot/io\"] = (function()     {         var module = {};         module.save_file = function(mime_type, charset, data, filename)         {             var uri = \"data:\" + mime_type + \";charset=\" + charset + \",\" + data;             uri = encodeURI(uri);              var link = document.createElement(\"a\");             if(typeof link.download != \"undefined\")             {               link.href = uri;               link.style = \"visibility:hidden\";               link.download = filename;                document.body.appendChild(link);               link.click();               document.body.removeChild(link);             }             else             {               window.open(uri);             }         };         return module;     })(); modules[\"toyplot.coordinates.Axis\"] = (         function(canvas)         {             function sign(x)             {                 return x &lt; 0 ? -1 : x &gt; 0 ? 1 : 0;             }              function mix(a, b, amount)             {                 return ((1.0 - amount) * a) + (amount * b);             }              function log(x, base)             {                 return Math.log(Math.abs(x)) / Math.log(base);             }              function in_range(a, x, b)             {                 var left = Math.min(a, b);                 var right = Math.max(a, b);                 return left &lt;= x &amp;&amp; x &lt;= right;             }              function inside(range, projection)             {                 for(var i = 0; i != projection.length; ++i)                 {                     var segment = projection[i];                     if(in_range(segment.range.min, range, segment.range.max))                         return true;                 }                 return false;             }              function to_domain(range, projection)             {                 for(var i = 0; i != projection.length; ++i)                 {                     var segment = projection[i];                     if(in_range(segment.range.bounds.min, range, segment.range.bounds.max))                     {                         if(segment.scale == \"linear\")                         {                             var amount = (range - segment.range.min) / (segment.range.max - segment.range.min);                             return mix(segment.domain.min, segment.domain.max, amount)                         }                         else if(segment.scale[0] == \"log\")                         {                             var amount = (range - segment.range.min) / (segment.range.max - segment.range.min);                             var base = segment.scale[1];                             return sign(segment.domain.min) * Math.pow(base, mix(log(segment.domain.min, base), log(segment.domain.max, base), amount));                         }                     }                 }             }              var axes = {};              function display_coordinates(e)             {                 var current = canvas.createSVGPoint();                 current.x = e.clientX;                 current.y = e.clientY;                  for(var axis_id in axes)                 {                     var axis = document.querySelector(\"#\" + axis_id);                     var coordinates = axis.querySelector(\".toyplot-coordinates-Axis-coordinates\");                     if(coordinates)                     {                         var projection = axes[axis_id];                         var local = current.matrixTransform(axis.getScreenCTM().inverse());                         if(inside(local.x, projection))                         {                             var domain = to_domain(local.x, projection);                             coordinates.style.visibility = \"visible\";                             coordinates.setAttribute(\"transform\", \"translate(\" + local.x + \")\");                             var text = coordinates.querySelector(\"text\");                             text.textContent = domain.toFixed(2);                         }                         else                         {                             coordinates.style.visibility= \"hidden\";                         }                     }                 }             }              canvas.addEventListener(\"click\", display_coordinates);              var module = {};             module.show_coordinates = function(axis_id, projection)             {                 axes[axis_id] = projection;             }              return module;         })(modules[\"toyplot/canvas\"]); (function(tables, context_menu, io, owner_id, key, label, names, columns, filename)         {             tables.set(owner_id, key, names, columns);              var owner = document.querySelector(\"#\" + owner_id);             function show_item(e)             {                 return owner.contains(e.target);             }              function choose_item()             {                 io.save_file(\"text/csv\", \"utf-8\", tables.get_csv(owner_id, key), filename + \".csv\");             }              context_menu.add_item(\"Save \" + label + \" as CSV\", show_item, choose_item);         })(modules[\"toyplot/tables\"],modules[\"toyplot/menus/context\"],modules[\"toyplot/io\"],\"t436ea673fa2b4e7c9de7638281c45d2a\",\"data\",\"plot data\",[\"x\", \"y0\", \"y1\", \"y2\"],[[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 920, 921, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939, 940, 941, 942, 943, 944, 945, 946, 947, 948, 949, 950, 951, 952, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 972, 973, 974, 975, 976, 977, 978, 979, 980, 981, 982, 983, 984, 985, 986, 987, 988, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1007, 1008, 1009, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 1166, 1167, 1168, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 1198, 1199, 1200, 1201, 1202, 1203, 1204, 1205, 1206, 1207, 1208, 1209, 1210, 1211, 1212, 1213, 1214, 1215, 1216, 1217, 1218, 1219, 1220, 1221, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 1236, 1237, 1238, 1239, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 1252, 1253, 1254, 1255, 1256, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 1269, 1270, 1271, 1272, 1273, 1274, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 1291, 1292, 1293, 1294, 1295, 1296, 1297, 1298, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1320, 1321, 1322, 1323, 1324, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1350, 1351, 1352, 1353, 1354, 1355, 1356, 1357, 1358, 1359, 1360, 1361, 1362, 1363, 1364, 1365, 1366, 1367, 1368, 1369, 1370, 1371, 1372, 1373, 1374, 1375, 1376, 1377, 1378, 1379, 1380, 1381, 1382, 1383, 1384, 1385, 1386, 1387, 1388, 1389, 1390, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 1407, 1408, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 1417, 1418, 1419, 1420, 1421, 1422, 1423, 1424, 1425, 1426, 1427, 1428, 1429, 1430, 1431, 1432, 1433, 1434, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 1443, 1444, 1445, 1446, 1447, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 1461, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 1478, 1479, 1480, 1481, 1482, 1483, 1484, 1485, 1486, 1487, 1488, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1497, 1498, 1499, 1500, 1501, 1502, 1503, 1504, 1505, 1506, 1507, 1508, 1509, 1510, 1511, 1512, 1513, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 1532, 1533, 1534, 1535, 1536, 1537, 1538, 1539, 1540, 1541, 1542, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 1568, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 1586, 1587, 1588, 1589, 1590, 1591, 1592, 1593, 1594, 1595, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 1611, 1612, 1613, 1614, 1615, 1616, 1617, 1618, 1619, 1620, 1621, 1622, 1623, 1624, 1625, 1626, 1627, 1628, 1629, 1630, 1631, 1632, 1633, 1634, 1635, 1636, 1637, 1638, 1639, 1640, 1641, 1642, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1681, 1682, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 1699, 1700, 1701, 1702, 1703, 1704, 1705, 1706, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 1730, 1731, 1732, 1733, 1734, 1735, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 1743, 1744, 1745, 1746, 1747, 1748, 1749, 1750, 1751, 1752, 1753, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 1769, 1770, 1771, 1772, 1773, 1774, 1775, 1776, 1777, 1778, 1779, 1780, 1781, 1782, 1783, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 1815, 1816, 1817, 1818, 1819, 1820, 1821, 1822, 1823, 1824, 1825, 1826, 1827, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 1846, 1847, 1848, 1849, 1850, 1851, 1852, 1853, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 1861, 1862, 1863, 1864, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 1874, 1875, 1876, 1877, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 1887, 1888, 1889, 1890, 1891, 1892, 1893, 1894, 1895, 1896, 1897, 1898, 1899, 1900, 1901, 1902, 1903, 1904, 1905, 1906, 1907, 1908, 1909, 1910, 1911, 1912, 1913, 1914, 1915, 1916, 1917, 1918, 1919, 1920, 1921, 1922, 1923, 1924, 1925, 1926, 1927, 1928, 1929, 1930, 1931, 1932, 1933, 1934, 1935, 1936, 1937, 1938, 1939, 1940, 1941, 1942, 1943, 1944, 1945, 1946, 1947, 1948, 1949, 1950, 1951, 1952, 1953, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 1964, 1965, 1966, 1967, 1968, 1969, 1970, 1971, 1972, 1973, 1974, 1975, 1976, 1977, 1978, 1979, 1980, 1981, 1982, 1983, 1984, 1985, 1986, 1987, 1988, 1989, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021, 2022, 2023, 2024, 2025, 2026, 2027, 2028, 2029, 2030, 2031, 2032, 2033, 2034, 2035, 2036, 2037, 2038, 2039, 2040, 2041, 2042, 2043, 2044, 2045, 2046, 2047, 2048, 2049, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2062, 2063, 2064, 2065, 2066, 2067, 2068, 2069, 2070, 2071, 2072, 2073, 2074, 2075, 2076, 2077, 2078, 2079, 2080, 2081, 2082, 2083, 2084, 2085, 2086, 2087, 2088, 2089, 2090, 2091, 2092, 2093, 2094, 2095, 2096, 2097, 2098, 2099, 2100, 2101, 2102, 2103, 2104, 2105, 2106, 2107, 2108, 2109, 2110, 2111, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 2127, 2128, 2129, 2130, 2131, 2132, 2133, 2134, 2135, 2136, 2137, 2138, 2139, 2140, 2141, 2142, 2143, 2144, 2145, 2146, 2147, 2148, 2149, 2150, 2151, 2152, 2153, 2154, 2155, 2156, 2157, 2158, 2159, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 2168, 2169, 2170, 2171, 2172, 2173, 2174, 2175, 2176, 2177, 2178, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 2195, 2196, 2197, 2198, 2199, 2200, 2201, 2202, 2203, 2204, 2205, 2206, 2207, 2208, 2209, 2210, 2211, 2212, 2213, 2214, 2215, 2216, 2217, 2218, 2219, 2220, 2221, 2222, 2223, 2224, 2225, 2226, 2227, 2228, 2229, 2230, 2231, 2232, 2233, 2234, 2235, 2236, 2237, 2238, 2239, 2240, 2241, 2242, 2243, 2244, 2245, 2246, 2247, 2248, 2249, 2250, 2251, 2252, 2253, 2254, 2255, 2256, 2257, 2258, 2259, 2260, 2261, 2262, 2263, 2264, 2265, 2266, 2267, 2268, 2269, 2270, 2271, 2272, 2273, 2274, 2275, 2276, 2277, 2278, 2279, 2280, 2281, 2282, 2283, 2284, 2285, 2286, 2287, 2288, 2289, 2290, 2291, 2292, 2293, 2294, 2295, 2296, 2297, 2298, 2299, 2300, 2301, 2302, 2303, 2304, 2305, 2306, 2307, 2308, 2309, 2310, 2311, 2312, 2313, 2314, 2315, 2316, 2317, 2318, 2319, 2320, 2321, 2322, 2323, 2324, 2325, 2326, 2327, 2328, 2329, 2330, 2331, 2332, 2333, 2334, 2335, 2336, 2337, 2338, 2339, 2340, 2341, 2342, 2343, 2344, 2345, 2346, 2347, 2348, 2349, 2350, 2351, 2352, 2353, 2354, 2355, 2356, 2357, 2358, 2359, 2360, 2361, 2362, 2363, 2364, 2365, 2366, 2367, 2368, 2369, 2370, 2371, 2372, 2373, 2374, 2375, 2376, 2377, 2378, 2379, 2380, 2381, 2382, 2383, 2384, 2385, 2386, 2387, 2388, 2389, 2390, 2391, 2392, 2393, 2394, 2395, 2396, 2397, 2398, 2399, 2400, 2401, 2402, 2403, 2404, 2405, 2406, 2407, 2408, 2409, 2410, 2411, 2412, 2413, 2414, 2415, 2416, 2417, 2418, 2419, 2420, 2421, 2422, 2423, 2424, 2425, 2426, 2427, 2428, 2429, 2430, 2431, 2432, 2433, 2434, 2435, 2436, 2437, 2438, 2439, 2440, 2441, 2442, 2443, 2444, 2445, 2446, 2447, 2448, 2449, 2450, 2451, 2452, 2453, 2454, 2455, 2456, 2457, 2458, 2459, 2460, 2461, 2462, 2463, 2464, 2465, 2466, 2467, 2468, 2469, 2470, 2471, 2472, 2473, 2474, 2475, 2476, 2477, 2478, 2479, 2480, 2481, 2482, 2483, 2484, 2485, 2486, 2487, 2488, 2489, 2490, 2491, 2492, 2493, 2494, 2495, 2496, 2497, 2498, 2499, 2500, 2501, 2502, 2503, 2504, 2505, 2506, 2507, 2508, 2509, 2510, 2511, 2512, 2513, 2514, 2515, 2516, 2517, 2518, 2519, 2520, 2521, 2522, 2523, 2524, 2525, 2526, 2527, 2528, 2529, 2530, 2531, 2532, 2533, 2534, 2535, 2536, 2537, 2538, 2539, 2540, 2541, 2542, 2543, 2544, 2545, 2546, 2547, 2548, 2549, 2550, 2551, 2552, 2553, 2554, 2555, 2556, 2557, 2558, 2559, 2560, 2561, 2562, 2563, 2564, 2565, 2566, 2567, 2568, 2569, 2570, 2571, 2572, 2573, 2574, 2575, 2576, 2577, 2578, 2579, 2580, 2581, 2582, 2583, 2584, 2585, 2586, 2587, 2588, 2589, 2590, 2591, 2592, 2593, 2594, 2595, 2596, 2597, 2598, 2599, 2600, 2601, 2602, 2603, 2604, 2605, 2606, 2607, 2608, 2609, 2610, 2611, 2612, 2613, 2614, 2615, 2616, 2617, 2618, 2619, 2620, 2621, 2622, 2623, 2624, 2625, 2626, 2627, 2628, 2629, 2630, 2631, 2632, 2633, 2634, 2635, 2636, 2637, 2638, 2639, 2640, 2641, 2642, 2643, 2644, 2645, 2646, 2647, 2648, 2649, 2650, 2651, 2652, 2653, 2654, 2655, 2656, 2657, 2658, 2659, 2660, 2661, 2662, 2663, 2664, 2665, 2666, 2667, 2668, 2669, 2670, 2671, 2672, 2673, 2674, 2675, 2676, 2677, 2678, 2679, 2680, 2681, 2682, 2683, 2684, 2685, 2686, 2687, 2688, 2689, 2690, 2691, 2692, 2693, 2694, 2695, 2696, 2697, 2698, 2699, 2700, 2701, 2702, 2703, 2704, 2705, 2706, 2707, 2708, 2709, 2710, 2711, 2712, 2713, 2714, 2715, 2716, 2717, 2718, 2719, 2720, 2721, 2722, 2723, 2724, 2725, 2726, 2727, 2728, 2729, 2730, 2731, 2732, 2733, 2734, 2735, 2736, 2737, 2738, 2739, 2740, 2741, 2742, 2743, 2744, 2745, 2746, 2747, 2748, 2749, 2750, 2751, 2752, 2753, 2754, 2755, 2756, 2757, 2758, 2759, 2760, 2761, 2762, 2763, 2764, 2765, 2766, 2767, 2768, 2769, 2770, 2771, 2772, 2773, 2774, 2775, 2776, 2777, 2778, 2779, 2780, 2781, 2782, 2783, 2784, 2785, 2786, 2787, 2788, 2789, 2790, 2791, 2792, 2793, 2794, 2795, 2796, 2797, 2798, 2799, 2800, 2801, 2802, 2803, 2804, 2805, 2806, 2807, 2808, 2809, 2810, 2811, 2812, 2813, 2814, 2815, 2816, 2817, 2818, 2819, 2820, 2821, 2822, 2823, 2824, 2825, 2826, 2827, 2828, 2829, 2830, 2831, 2832, 2833, 2834, 2835, 2836, 2837, 2838, 2839, 2840, 2841, 2842, 2843, 2844, 2845, 2846, 2847, 2848, 2849, 2850, 2851, 2852, 2853, 2854, 2855, 2856, 2857, 2858, 2859, 2860, 2861, 2862, 2863, 2864, 2865, 2866, 2867, 2868, 2869, 2870, 2871, 2872, 2873, 2874, 2875, 2876, 2877, 2878, 2879, 2880, 2881, 2882, 2883, 2884, 2885, 2886, 2887, 2888, 2889, 2890, 2891, 2892, 2893, 2894, 2895, 2896, 2897, 2898, 2899, 2900, 2901, 2902, 2903, 2904, 2905, 2906, 2907, 2908, 2909, 2910, 2911, 2912, 2913, 2914, 2915, 2916, 2917, 2918, 2919, 2920, 2921, 2922, 2923, 2924, 2925, 2926, 2927, 2928, 2929, 2930, 2931, 2932, 2933, 2934, 2935, 2936, 2937, 2938, 2939, 2940, 2941, 2942, 2943, 2944, 2945, 2946, 2947, 2948, 2949, 2950, 2951, 2952, 2953, 2954, 2955, 2956, 2957, 2958, 2959, 2960, 2961, 2962, 2963, 2964, 2965, 2966, 2967, 2968, 2969, 2970, 2971, 2972, 2973, 2974, 2975, 2976, 2977, 2978, 2979, 2980, 2981, 2982, 2983, 2984, 2985, 2986, 2987, 2988, 2989, 2990, 2991, 2992, 2993, 2994, 2995, 2996, 2997, 2998, 2999, 3000, 3001, 3002, 3003, 3004, 3005, 3006, 3007, 3008, 3009, 3010, 3011, 3012, 3013, 3014, 3015, 3016, 3017, 3018, 3019, 3020, 3021, 3022, 3023, 3024, 3025, 3026, 3027, 3028, 3029, 3030, 3031, 3032, 3033, 3034, 3035, 3036, 3037, 3038, 3039, 3040, 3041, 3042, 3043, 3044, 3045, 3046, 3047, 3048, 3049, 3050, 3051, 3052, 3053, 3054, 3055, 3056, 3057, 3058, 3059, 3060, 3061, 3062, 3063, 3064, 3065, 3066, 3067, 3068, 3069, 3070, 3071, 3072, 3073, 3074, 3075, 3076, 3077, 3078, 3079, 3080, 3081, 3082, 3083, 3084, 3085, 3086, 3087, 3088, 3089, 3090, 3091, 3092, 3093, 3094, 3095, 3096, 3097, 3098, 3099, 3100, 3101, 3102, 3103, 3104, 3105, 3106, 3107, 3108, 3109, 3110, 3111, 3112, 3113, 3114, 3115, 3116, 3117, 3118, 3119, 3120, 3121, 3122, 3123, 3124, 3125, 3126, 3127, 3128, 3129, 3130, 3131, 3132, 3133, 3134, 3135, 3136, 3137, 3138, 3139, 3140, 3141, 3142, 3143, 3144, 3145, 3146, 3147, 3148, 3149, 3150, 3151, 3152, 3153, 3154, 3155, 3156, 3157, 3158, 3159, 3160, 3161, 3162, 3163, 3164, 3165, 3166, 3167, 3168, 3169, 3170, 3171, 3172, 3173, 3174, 3175, 3176, 3177, 3178, 3179, 3180, 3181, 3182, 3183, 3184, 3185, 3186, 3187, 3188, 3189, 3190, 3191, 3192, 3193, 3194, 3195, 3196, 3197, 3198, 3199, 3200, 3201, 3202, 3203, 3204, 3205, 3206, 3207, 3208, 3209, 3210, 3211, 3212, 3213, 3214, 3215, 3216, 3217, 3218, 3219, 3220, 3221, 3222, 3223, 3224, 3225, 3226, 3227, 3228, 3229, 3230, 3231, 3232, 3233, 3234, 3235, 3236, 3237, 3238, 3239, 3240, 3241, 3242, 3243, 3244, 3245, 3246, 3247, 3248, 3249, 3250, 3251, 3252, 3253, 3254, 3255, 3256, 3257, 3258, 3259, 3260, 3261, 3262, 3263, 3264, 3265, 3266, 3267, 3268, 3269, 3270, 3271, 3272, 3273, 3274, 3275, 3276, 3277, 3278, 3279, 3280, 3281, 3282, 3283, 3284, 3285, 3286, 3287, 3288, 3289, 3290, 3291, 3292, 3293, 3294, 3295, 3296, 3297, 3298, 3299, 3300, 3301, 3302, 3303, 3304, 3305, 3306, 3307, 3308, 3309, 3310, 3311, 3312, 3313, 3314, 3315, 3316, 3317, 3318, 3319, 3320, 3321, 3322, 3323, 3324, 3325, 3326, 3327, 3328, 3329, 3330, 3331, 3332, 3333, 3334, 3335, 3336, 3337, 3338, 3339, 3340, 3341, 3342, 3343, 3344, 3345, 3346, 3347, 3348, 3349, 3350, 3351, 3352, 3353, 3354, 3355, 3356, 3357, 3358, 3359, 3360, 3361, 3362, 3363, 3364, 3365, 3366, 3367, 3368, 3369, 3370, 3371, 3372, 3373, 3374, 3375, 3376, 3377, 3378, 3379, 3380, 3381, 3382, 3383, 3384, 3385, 3386, 3387, 3388, 3389, 3390, 3391, 3392, 3393, 3394, 3395, 3396, 3397, 3398, 3399, 3400, 3401, 3402, 3403, 3404, 3405, 3406, 3407, 3408, 3409, 3410, 3411, 3412, 3413, 3414, 3415, 3416, 3417, 3418, 3419, 3420, 3421, 3422, 3423, 3424, 3425, 3426, 3427, 3428, 3429, 3430, 3431, 3432, 3433, 3434, 3435, 3436, 3437, 3438, 3439, 3440, 3441, 3442, 3443, 3444, 3445, 3446, 3447, 3448, 3449, 3450, 3451, 3452, 3453, 3454, 3455, 3456, 3457, 3458, 3459, 3460, 3461, 3462, 3463, 3464, 3465, 3466, 3467, 3468, 3469, 3470, 3471, 3472, 3473, 3474, 3475, 3476, 3477, 3478, 3479, 3480, 3481, 3482, 3483, 3484, 3485, 3486, 3487, 3488, 3489, 3490, 3491, 3492, 3493, 3494, 3495, 3496, 3497, 3498, 3499, 3500, 3501, 3502, 3503, 3504, 3505, 3506, 3507, 3508, 3509, 3510, 3511, 3512, 3513, 3514, 3515, 3516, 3517, 3518, 3519, 3520, 3521, 3522, 3523, 3524, 3525, 3526, 3527, 3528, 3529, 3530, 3531, 3532, 3533, 3534, 3535, 3536, 3537, 3538, 3539, 3540, 3541, 3542, 3543, 3544, 3545, 3546, 3547, 3548, 3549, 3550, 3551, 3552, 3553, 3554, 3555, 3556, 3557, 3558, 3559, 3560, 3561, 3562, 3563, 3564, 3565, 3566, 3567, 3568, 3569, 3570, 3571, 3572, 3573, 3574, 3575, 3576, 3577, 3578, 3579, 3580, 3581, 3582, 3583, 3584, 3585, 3586, 3587, 3588, 3589, 3590, 3591, 3592, 3593, 3594, 3595, 3596, 3597, 3598, 3599, 3600, 3601, 3602, 3603, 3604, 3605, 3606, 3607, 3608, 3609, 3610, 3611, 3612, 3613, 3614, 3615, 3616, 3617, 3618, 3619, 3620, 3621, 3622, 3623, 3624, 3625, 3626, 3627, 3628, 3629, 3630, 3631, 3632, 3633, 3634, 3635, 3636, 3637, 3638, 3639, 3640, 3641, 3642, 3643, 3644, 3645, 3646, 3647, 3648, 3649, 3650, 3651, 3652, 3653, 3654, 3655, 3656, 3657, 3658, 3659, 3660, 3661, 3662, 3663, 3664, 3665, 3666, 3667, 3668, 3669, 3670, 3671, 3672, 3673, 3674, 3675, 3676, 3677, 3678, 3679, 3680, 3681, 3682, 3683, 3684, 3685, 3686, 3687, 3688, 3689, 3690, 3691, 3692, 3693, 3694, 3695, 3696, 3697, 3698, 3699, 3700, 3701, 3702, 3703, 3704, 3705, 3706, 3707, 3708, 3709, 3710, 3711, 3712, 3713, 3714, 3715, 3716, 3717, 3718, 3719, 3720, 3721, 3722, 3723, 3724, 3725, 3726, 3727, 3728, 3729, 3730, 3731, 3732, 3733, 3734, 3735, 3736, 3737, 3738, 3739, 3740, 3741, 3742, 3743, 3744, 3745, 3746, 3747, 3748, 3749, 3750, 3751, 3752, 3753, 3754, 3755, 3756, 3757, 3758, 3759, 3760, 3761, 3762, 3763, 3764, 3765, 3766, 3767, 3768, 3769, 3770, 3771, 3772, 3773, 3774, 3775, 3776, 3777, 3778, 3779, 3780, 3781, 3782, 3783, 3784, 3785, 3786, 3787, 3788, 3789, 3790, 3791, 3792, 3793, 3794, 3795, 3796, 3797, 3798, 3799, 3800, 3801, 3802, 3803, 3804, 3805, 3806, 3807, 3808, 3809, 3810, 3811, 3812, 3813, 3814, 3815, 3816, 3817, 3818, 3819, 3820, 3821, 3822, 3823, 3824, 3825, 3826, 3827, 3828, 3829, 3830, 3831, 3832, 3833, 3834, 3835, 3836, 3837, 3838, 3839, 3840, 3841, 3842, 3843, 3844, 3845, 3846, 3847, 3848, 3849, 3850, 3851, 3852, 3853, 3854, 3855, 3856, 3857, 3858, 3859, 3860, 3861, 3862, 3863, 3864, 3865, 3866, 3867, 3868, 3869, 3870, 3871, 3872, 3873, 3874, 3875, 3876, 3877, 3878, 3879, 3880, 3881, 3882, 3883, 3884, 3885, 3886, 3887, 3888, 3889, 3890, 3891, 3892, 3893, 3894, 3895, 3896, 3897, 3898, 3899, 3900, 3901, 3902, 3903, 3904, 3905, 3906, 3907, 3908, 3909, 3910, 3911, 3912, 3913, 3914, 3915, 3916, 3917, 3918, 3919, 3920, 3921, 3922, 3923, 3924, 3925, 3926, 3927, 3928, 3929, 3930, 3931, 3932, 3933, 3934, 3935, 3936, 3937, 3938, 3939, 3940, 3941, 3942, 3943, 3944, 3945, 3946, 3947, 3948, 3949, 3950, 3951, 3952, 3953, 3954, 3955, 3956, 3957, 3958, 3959, 3960, 3961, 3962, 3963, 3964, 3965, 3966, 3967, 3968, 3969, 3970, 3971, 3972, 3973, 3974, 3975, 3976, 3977, 3978, 3979, 3980, 3981, 3982, 3983, 3984, 3985, 3986, 3987, 3988, 3989, 3990, 3991, 3992, 3993, 3994, 3995, 3996, 3997, 3998, 3999, 4000, 4001, 4002, 4003, 4004, 4005, 4006, 4007, 4008, 4009, 4010, 4011, 4012, 4013, 4014, 4015, 4016, 4017, 4018, 4019, 4020, 4021, 4022, 4023, 4024, 4025, 4026, 4027, 4028, 4029, 4030, 4031, 4032, 4033, 4034, 4035, 4036, 4037, 4038, 4039, 4040, 4041, 4042, 4043, 4044, 4045, 4046, 4047, 4048, 4049, 4050, 4051, 4052, 4053, 4054, 4055, 4056, 4057, 4058, 4059, 4060, 4061, 4062, 4063, 4064, 4065, 4066, 4067, 4068, 4069, 4070, 4071, 4072, 4073, 4074, 4075, 4076, 4077, 4078, 4079, 4080, 4081, 4082, 4083, 4084, 4085, 4086, 4087, 4088, 4089, 4090, 4091, 4092, 4093, 4094, 4095, 4096, 4097, 4098, 4099, 4100, 4101, 4102, 4103, 4104, 4105, 4106, 4107, 4108, 4109, 4110, 4111, 4112, 4113, 4114, 4115, 4116, 4117, 4118, 4119, 4120, 4121, 4122, 4123, 4124, 4125, 4126, 4127, 4128, 4129, 4130, 4131, 4132, 4133, 4134, 4135, 4136, 4137, 4138, 4139, 4140, 4141, 4142, 4143, 4144, 4145, 4146, 4147, 4148, 4149, 4150, 4151, 4152, 4153, 4154, 4155, 4156, 4157, 4158, 4159, 4160, 4161, 4162, 4163, 4164, 4165, 4166, 4167, 4168, 4169, 4170, 4171, 4172, 4173, 4174, 4175, 4176, 4177, 4178, 4179, 4180, 4181, 4182, 4183, 4184, 4185, 4186, 4187, 4188, 4189, 4190, 4191, 4192, 4193, 4194, 4195, 4196, 4197, 4198, 4199, 4200, 4201, 4202, 4203, 4204, 4205, 4206, 4207, 4208, 4209, 4210, 4211, 4212, 4213, 4214, 4215, 4216, 4217, 4218, 4219, 4220, 4221, 4222, 4223, 4224, 4225, 4226, 4227, 4228, 4229, 4230, 4231, 4232, 4233, 4234, 4235, 4236, 4237, 4238, 4239, 4240, 4241, 4242, 4243, 4244, 4245, 4246, 4247, 4248, 4249, 4250, 4251, 4252, 4253, 4254, 4255, 4256, 4257, 4258, 4259, 4260, 4261, 4262, 4263, 4264, 4265, 4266, 4267, 4268, 4269, 4270, 4271, 4272, 4273, 4274, 4275, 4276, 4277, 4278, 4279, 4280, 4281, 4282, 4283, 4284, 4285, 4286, 4287, 4288, 4289, 4290, 4291, 4292, 4293, 4294, 4295, 4296, 4297, 4298, 4299, 4300, 4301, 4302, 4303, 4304, 4305, 4306, 4307, 4308, 4309, 4310, 4311, 4312, 4313, 4314, 4315, 4316, 4317, 4318, 4319, 4320, 4321, 4322, 4323, 4324, 4325, 4326, 4327, 4328, 4329, 4330, 4331, 4332, 4333, 4334, 4335, 4336, 4337, 4338, 4339, 4340, 4341, 4342, 4343, 4344, 4345, 4346, 4347, 4348, 4349, 4350, 4351, 4352, 4353, 4354, 4355, 4356, 4357, 4358, 4359, 4360, 4361, 4362, 4363, 4364, 4365, 4366, 4367, 4368, 4369, 4370, 4371, 4372, 4373, 4374, 4375, 4376, 4377, 4378, 4379, 4380, 4381, 4382, 4383, 4384, 4385, 4386, 4387, 4388, 4389, 4390, 4391, 4392, 4393, 4394, 4395, 4396, 4397, 4398, 4399, 4400, 4401, 4402, 4403, 4404, 4405, 4406, 4407, 4408, 4409, 4410, 4411, 4412, 4413, 4414, 4415, 4416, 4417, 4418, 4419, 4420, 4421, 4422, 4423, 4424, 4425, 4426, 4427, 4428, 4429, 4430, 4431, 4432, 4433, 4434, 4435, 4436, 4437, 4438, 4439, 4440, 4441, 4442, 4443, 4444, 4445, 4446, 4447, 4448, 4449, 4450, 4451, 4452, 4453, 4454, 4455, 4456, 4457, 4458, 4459, 4460, 4461, 4462, 4463, 4464, 4465, 4466, 4467, 4468, 4469, 4470, 4471, 4472, 4473, 4474, 4475, 4476, 4477, 4478, 4479, 4480, 4481, 4482, 4483, 4484, 4485, 4486, 4487, 4488, 4489, 4490, 4491, 4492, 4493, 4494, 4495, 4496, 4497, 4498, 4499, 4500, 4501, 4502, 4503, 4504, 4505, 4506, 4507, 4508, 4509, 4510, 4511, 4512, 4513, 4514, 4515, 4516, 4517, 4518, 4519, 4520, 4521, 4522, 4523, 4524, 4525, 4526, 4527, 4528, 4529, 4530, 4531, 4532, 4533, 4534, 4535, 4536, 4537, 4538, 4539, 4540, 4541, 4542, 4543, 4544, 4545, 4546, 4547, 4548, 4549, 4550, 4551, 4552, 4553, 4554, 4555, 4556, 4557, 4558, 4559, 4560, 4561, 4562, 4563, 4564, 4565, 4566, 4567, 4568, 4569, 4570, 4571, 4572, 4573, 4574, 4575, 4576, 4577, 4578, 4579, 4580, 4581, 4582, 4583, 4584, 4585, 4586, 4587, 4588, 4589, 4590, 4591, 4592, 4593, 4594, 4595, 4596, 4597, 4598, 4599, 4600, 4601, 4602, 4603, 4604, 4605, 4606, 4607, 4608, 4609, 4610, 4611, 4612, 4613, 4614, 4615, 4616, 4617, 4618, 4619, 4620, 4621, 4622, 4623, 4624, 4625, 4626, 4627, 4628, 4629, 4630, 4631, 4632, 4633, 4634, 4635, 4636, 4637, 4638, 4639, 4640, 4641, 4642, 4643, 4644, 4645, 4646, 4647, 4648, 4649, 4650, 4651, 4652, 4653, 4654, 4655, 4656, 4657, 4658, 4659, 4660, 4661, 4662, 4663, 4664, 4665, 4666, 4667, 4668, 4669, 4670, 4671, 4672, 4673, 4674, 4675, 4676, 4677, 4678, 4679, 4680, 4681, 4682, 4683, 4684, 4685, 4686, 4687, 4688, 4689, 4690, 4691, 4692, 4693, 4694, 4695, 4696, 4697, 4698, 4699, 4700, 4701, 4702, 4703, 4704, 4705, 4706, 4707, 4708, 4709, 4710, 4711, 4712, 4713, 4714, 4715, 4716, 4717, 4718, 4719, 4720, 4721, 4722, 4723, 4724, 4725, 4726, 4727, 4728, 4729, 4730, 4731, 4732, 4733, 4734, 4735, 4736, 4737, 4738, 4739, 4740, 4741, 4742, 4743, 4744, 4745, 4746, 4747, 4748, 4749, 4750, 4751, 4752, 4753, 4754, 4755, 4756, 4757, 4758, 4759, 4760, 4761, 4762, 4763, 4764, 4765, 4766, 4767, 4768, 4769, 4770, 4771, 4772, 4773, 4774, 4775, 4776, 4777, 4778, 4779, 4780, 4781, 4782, 4783, 4784, 4785, 4786, 4787, 4788, 4789, 4790, 4791, 4792, 4793, 4794, 4795, 4796, 4797, 4798, 4799, 4800, 4801, 4802, 4803, 4804, 4805, 4806, 4807, 4808, 4809, 4810, 4811, 4812, 4813, 4814, 4815, 4816, 4817, 4818, 4819, 4820, 4821, 4822, 4823, 4824, 4825, 4826, 4827, 4828, 4829, 4830, 4831, 4832, 4833, 4834, 4835, 4836, 4837, 4838, 4839, 4840, 4841, 4842, 4843, 4844, 4845, 4846, 4847, 4848, 4849, 4850, 4851, 4852, 4853, 4854, 4855, 4856, 4857, 4858, 4859, 4860, 4861, 4862, 4863, 4864, 4865, 4866, 4867, 4868, 4869, 4870, 4871, 4872, 4873, 4874, 4875, 4876, 4877, 4878, 4879, 4880, 4881, 4882, 4883, 4884, 4885, 4886, 4887, 4888, 4889, 4890, 4891, 4892, 4893, 4894, 4895, 4896, 4897, 4898, 4899, 4900, 4901, 4902, 4903, 4904, 4905, 4906, 4907, 4908, 4909, 4910, 4911, 4912, 4913, 4914, 4915, 4916, 4917, 4918, 4919, 4920, 4921, 4922, 4923, 4924, 4925, 4926, 4927, 4928, 4929, 4930, 4931, 4932, 4933, 4934, 4935, 4936, 4937, 4938, 4939, 4940, 4941, 4942, 4943, 4944, 4945, 4946, 4947, 4948, 4949, 4950, 4951, 4952, 4953, 4954, 4955, 4956, 4957, 4958, 4959, 4960, 4961, 4962, 4963, 4964, 4965, 4966, 4967, 4968, 4969, 4970, 4971, 4972, 4973, 4974, 4975, 4976, 4977, 4978, 4979, 4980, 4981, 4982, 4983, 4984, 4985, 4986, 4987, 4988, 4989, 4990, 4991, 4992, 4993, 4994, 4995, 4996, 4997, 4998, 4999, 5000, 5001, 5002, 5003, 5004, 5005, 5006, 5007, 5008, 5009, 5010, 5011, 5012, 5013, 5014, 5015, 5016, 5017, 5018, 5019, 5020, 5021, 5022, 5023, 5024, 5025, 5026, 5027, 5028, 5029, 5030, 5031, 5032, 5033, 5034, 5035, 5036, 5037, 5038, 5039, 5040, 5041, 5042, 5043, 5044, 5045, 5046, 5047, 5048, 5049, 5050, 5051, 5052, 5053, 5054, 5055, 5056, 5057, 5058, 5059, 5060, 5061, 5062, 5063, 5064, 5065, 5066, 5067, 5068, 5069, 5070, 5071, 5072, 5073, 5074, 5075, 5076, 5077, 5078, 5079, 5080, 5081, 5082, 5083, 5084, 5085, 5086, 5087, 5088, 5089, 5090, 5091, 5092, 5093, 5094, 5095, 5096, 5097, 5098, 5099, 5100, 5101, 5102, 5103, 5104, 5105, 5106, 5107, 5108, 5109, 5110, 5111, 5112, 5113, 5114, 5115, 5116, 5117, 5118, 5119, 5120, 5121, 5122, 5123, 5124, 5125, 5126, 5127, 5128, 5129, 5130, 5131, 5132, 5133, 5134, 5135, 5136, 5137, 5138, 5139, 5140, 5141, 5142, 5143, 5144, 5145, 5146, 5147, 5148, 5149, 5150, 5151, 5152, 5153, 5154, 5155, 5156, 5157, 5158, 5159, 5160, 5161, 5162, 5163, 5164, 5165, 5166, 5167, 5168, 5169, 5170, 5171, 5172, 5173, 5174, 5175, 5176, 5177, 5178, 5179, 5180, 5181, 5182, 5183, 5184, 5185, 5186, 5187, 5188, 5189, 5190, 5191, 5192, 5193, 5194, 5195, 5196, 5197, 5198, 5199, 5200, 5201, 5202, 5203, 5204, 5205, 5206, 5207, 5208, 5209, 5210, 5211, 5212, 5213, 5214, 5215, 5216, 5217, 5218, 5219, 5220, 5221, 5222, 5223, 5224, 5225, 5226, 5227, 5228, 5229, 5230, 5231, 5232, 5233, 5234, 5235, 5236, 5237, 5238, 5239, 5240, 5241, 5242, 5243, 5244, 5245, 5246, 5247, 5248, 5249, 5250, 5251, 5252, 5253, 5254, 5255, 5256, 5257, 5258, 5259, 5260, 5261, 5262, 5263, 5264, 5265, 5266, 5267, 5268, 5269, 5270, 5271, 5272, 5273, 5274, 5275, 5276, 5277, 5278, 5279, 5280, 5281, 5282, 5283, 5284, 5285, 5286, 5287, 5288, 5289, 5290, 5291, 5292, 5293, 5294, 5295, 5296, 5297, 5298, 5299, 5300, 5301, 5302, 5303, 5304, 5305, 5306, 5307, 5308, 5309, 5310, 5311, 5312, 5313, 5314, 5315, 5316, 5317, 5318, 5319, 5320, 5321, 5322, 5323, 5324, 5325, 5326, 5327, 5328, 5329, 5330, 5331, 5332, 5333, 5334, 5335, 5336, 5337, 5338, 5339, 5340, 5341, 5342, 5343, 5344, 5345, 5346, 5347, 5348, 5349, 5350, 5351, 5352, 5353, 5354, 5355, 5356, 5357, 5358, 5359, 5360, 5361, 5362, 5363, 5364, 5365, 5366, 5367, 5368, 5369, 5370, 5371, 5372, 5373, 5374, 5375, 5376, 5377, 5378, 5379, 5380, 5381, 5382, 5383, 5384, 5385, 5386, 5387, 5388, 5389, 5390, 5391, 5392, 5393, 5394, 5395, 5396, 5397, 5398, 5399, 5400, 5401, 5402, 5403, 5404, 5405, 5406, 5407, 5408, 5409, 5410, 5411, 5412, 5413, 5414, 5415, 5416, 5417, 5418, 5419, 5420, 5421, 5422, 5423, 5424, 5425, 5426, 5427, 5428, 5429, 5430, 5431, 5432, 5433, 5434, 5435, 5436, 5437, 5438, 5439, 5440, 5441, 5442, 5443, 5444, 5445, 5446, 5447, 5448, 5449, 5450, 5451, 5452, 5453, 5454, 5455, 5456, 5457, 5458, 5459, 5460, 5461, 5462, 5463, 5464, 5465, 5466, 5467, 5468, 5469, 5470, 5471, 5472, 5473, 5474, 5475, 5476, 5477, 5478, 5479, 5480, 5481, 5482, 5483, 5484, 5485, 5486, 5487, 5488, 5489, 5490, 5491, 5492, 5493, 5494, 5495, 5496, 5497, 5498, 5499, 5500, 5501, 5502, 5503, 5504, 5505, 5506, 5507, 5508, 5509, 5510, 5511, 5512, 5513, 5514, 5515, 5516, 5517, 5518, 5519, 5520, 5521, 5522, 5523, 5524, 5525, 5526, 5527, 5528, 5529, 5530, 5531, 5532, 5533, 5534, 5535, 5536, 5537, 5538, 5539, 5540, 5541, 5542, 5543, 5544, 5545, 5546, 5547, 5548, 5549, 5550, 5551, 5552, 5553, 5554, 5555, 5556, 5557, 5558, 5559, 5560, 5561, 5562, 5563, 5564, 5565, 5566, 5567, 5568, 5569, 5570, 5571, 5572, 5573, 5574, 5575, 5576, 5577, 5578, 5579, 5580, 5581, 5582, 5583, 5584, 5585, 5586, 5587, 5588, 5589, 5590, 5591, 5592, 5593, 5594, 5595, 5596, 5597, 5598, 5599, 5600, 5601, 5602, 5603, 5604, 5605, 5606, 5607, 5608, 5609, 5610, 5611, 5612, 5613, 5614, 5615, 5616, 5617, 5618, 5619, 5620, 5621, 5622, 5623, 5624, 5625, 5626, 5627, 5628, 5629, 5630, 5631, 5632, 5633, 5634, 5635, 5636, 5637, 5638, 5639, 5640, 5641, 5642, 5643, 5644, 5645, 5646, 5647, 5648, 5649, 5650, 5651, 5652, 5653, 5654, 5655, 5656, 5657, 5658, 5659, 5660, 5661, 5662, 5663, 5664, 5665, 5666, 5667, 5668, 5669, 5670, 5671, 5672, 5673, 5674, 5675, 5676, 5677, 5678, 5679, 5680, 5681, 5682, 5683, 5684, 5685, 5686, 5687, 5688, 5689, 5690, 5691, 5692, 5693, 5694, 5695, 5696, 5697, 5698, 5699, 5700, 5701, 5702, 5703, 5704, 5705, 5706, 5707, 5708, 5709, 5710, 5711, 5712, 5713, 5714, 5715, 5716, 5717, 5718, 5719, 5720, 5721, 5722, 5723, 5724, 5725, 5726, 5727, 5728, 5729, 5730, 5731, 5732, 5733, 5734, 5735, 5736, 5737, 5738, 5739, 5740, 5741, 5742, 5743, 5744, 5745, 5746, 5747, 5748, 5749, 5750, 5751, 5752, 5753, 5754, 5755, 5756, 5757, 5758, 5759, 5760, 5761, 5762, 5763, 5764, 5765, 5766, 5767, 5768, 5769, 5770, 5771, 5772, 5773, 5774, 5775, 5776, 5777, 5778, 5779, 5780, 5781, 5782, 5783, 5784, 5785, 5786, 5787, 5788, 5789, 5790, 5791, 5792, 5793, 5794, 5795, 5796, 5797, 5798, 5799, 5800, 5801, 5802, 5803, 5804, 5805, 5806, 5807, 5808, 5809, 5810, 5811, 5812, 5813, 5814, 5815, 5816, 5817, 5818, 5819, 5820, 5821, 5822, 5823, 5824, 5825, 5826, 5827, 5828, 5829, 5830, 5831, 5832, 5833, 5834, 5835, 5836, 5837, 5838, 5839, 5840, 5841, 5842, 5843, 5844, 5845, 5846, 5847, 5848, 5849, 5850, 5851, 5852, 5853, 5854, 5855, 5856, 5857, 5858, 5859, 5860, 5861, 5862, 5863, 5864, 5865, 5866, 5867, 5868, 5869, 5870, 5871, 5872, 5873, 5874, 5875, 5876, 5877, 5878, 5879, 5880, 5881, 5882, 5883, 5884, 5885, 5886, 5887, 5888, 5889, 5890, 5891, 5892, 5893, 5894, 5895, 5896, 5897, 5898, 5899, 5900, 5901, 5902, 5903, 5904, 5905, 5906, 5907, 5908, 5909, 5910, 5911, 5912, 5913, 5914, 5915, 5916, 5917, 5918, 5919, 5920, 5921, 5922, 5923, 5924, 5925, 5926, 5927, 5928, 5929, 5930, 5931, 5932, 5933, 5934, 5935, 5936, 5937, 5938, 5939, 5940, 5941, 5942, 5943, 5944, 5945, 5946, 5947, 5948, 5949, 5950, 5951, 5952, 5953, 5954, 5955, 5956, 5957, 5958, 5959, 5960, 5961, 5962, 5963, 5964, 5965, 5966, 5967, 5968, 5969, 5970, 5971, 5972, 5973, 5974, 5975, 5976, 5977, 5978, 5979, 5980, 5981, 5982, 5983, 5984, 5985, 5986, 5987, 5988, 5989, 5990, 5991, 5992, 5993, 5994, 5995, 5996, 5997, 5998, 5999, 6000, 6001, 6002, 6003, 6004, 6005, 6006, 6007, 6008, 6009, 6010, 6011, 6012, 6013, 6014, 6015, 6016, 6017, 6018, 6019, 6020, 6021, 6022, 6023, 6024, 6025, 6026, 6027, 6028, 6029, 6030, 6031, 6032, 6033, 6034, 6035, 6036, 6037, 6038, 6039, 6040, 6041, 6042, 6043, 6044, 6045, 6046, 6047, 6048, 6049, 6050, 6051, 6052, 6053, 6054, 6055, 6056, 6057, 6058, 6059, 6060, 6061, 6062, 6063, 6064, 6065, 6066, 6067, 6068, 6069, 6070, 6071, 6072, 6073, 6074, 6075, 6076, 6077, 6078, 6079, 6080, 6081, 6082, 6083, 6084, 6085, 6086, 6087, 6088, 6089, 6090, 6091, 6092, 6093, 6094, 6095, 6096, 6097, 6098, 6099, 6100, 6101, 6102, 6103, 6104, 6105, 6106, 6107, 6108, 6109, 6110, 6111, 6112, 6113, 6114, 6115, 6116, 6117, 6118, 6119, 6120, 6121, 6122, 6123, 6124, 6125, 6126, 6127, 6128, 6129, 6130, 6131, 6132, 6133, 6134, 6135, 6136, 6137, 6138, 6139, 6140, 6141, 6142, 6143, 6144, 6145, 6146, 6147, 6148, 6149, 6150, 6151, 6152, 6153, 6154, 6155, 6156, 6157, 6158, 6159, 6160, 6161, 6162, 6163, 6164, 6165, 6166, 6167, 6168, 6169, 6170, 6171, 6172, 6173, 6174, 6175, 6176, 6177, 6178, 6179, 6180, 6181, 6182, 6183, 6184, 6185, 6186, 6187, 6188, 6189, 6190, 6191, 6192, 6193, 6194, 6195, 6196, 6197, 6198, 6199, 6200, 6201, 6202, 6203, 6204, 6205, 6206, 6207, 6208, 6209, 6210, 6211, 6212, 6213, 6214, 6215, 6216, 6217, 6218, 6219, 6220, 6221, 6222, 6223, 6224, 6225, 6226, 6227, 6228, 6229, 6230, 6231, 6232, 6233, 6234, 6235, 6236, 6237, 6238, 6239, 6240, 6241, 6242, 6243, 6244, 6245, 6246, 6247, 6248, 6249, 6250, 6251, 6252, 6253, 6254, 6255, 6256, 6257, 6258, 6259, 6260, 6261, 6262, 6263, 6264, 6265, 6266, 6267, 6268, 6269, 6270, 6271, 6272, 6273, 6274, 6275, 6276, 6277, 6278, 6279, 6280, 6281, 6282, 6283, 6284, 6285, 6286, 6287, 6288, 6289, 6290, 6291, 6292, 6293, 6294, 6295, 6296, 6297, 6298, 6299, 6300, 6301, 6302, 6303, 6304, 6305, 6306, 6307, 6308, 6309, 6310, 6311, 6312, 6313, 6314, 6315, 6316, 6317, 6318, 6319, 6320, 6321, 6322, 6323, 6324, 6325, 6326, 6327, 6328, 6329, 6330, 6331, 6332, 6333, 6334, 6335, 6336, 6337, 6338, 6339, 6340, 6341, 6342, 6343, 6344, 6345, 6346, 6347, 6348, 6349, 6350, 6351, 6352, 6353, 6354, 6355, 6356, 6357, 6358, 6359, 6360, 6361, 6362, 6363, 6364, 6365, 6366, 6367, 6368, 6369, 6370, 6371, 6372, 6373, 6374, 6375, 6376, 6377, 6378, 6379, 6380, 6381, 6382, 6383, 6384, 6385, 6386, 6387, 6388, 6389, 6390, 6391, 6392, 6393, 6394, 6395, 6396, 6397, 6398, 6399, 6400, 6401, 6402, 6403, 6404, 6405, 6406, 6407, 6408, 6409, 6410, 6411, 6412, 6413, 6414, 6415, 6416, 6417, 6418, 6419, 6420, 6421, 6422, 6423, 6424, 6425, 6426, 6427, 6428, 6429, 6430, 6431, 6432, 6433, 6434, 6435, 6436, 6437, 6438, 6439, 6440, 6441, 6442, 6443, 6444, 6445, 6446, 6447, 6448, 6449, 6450, 6451, 6452, 6453, 6454, 6455, 6456, 6457, 6458, 6459, 6460, 6461, 6462, 6463, 6464, 6465, 6466, 6467, 6468, 6469, 6470, 6471, 6472, 6473, 6474, 6475, 6476, 6477, 6478, 6479, 6480, 6481, 6482, 6483, 6484, 6485, 6486, 6487, 6488, 6489, 6490, 6491, 6492, 6493, 6494, 6495, 6496, 6497, 6498, 6499, 6500, 6501, 6502, 6503, 6504, 6505, 6506, 6507, 6508, 6509, 6510, 6511, 6512, 6513, 6514, 6515, 6516, 6517, 6518, 6519, 6520, 6521, 6522, 6523, 6524, 6525, 6526, 6527, 6528, 6529, 6530, 6531, 6532, 6533, 6534, 6535, 6536, 6537, 6538, 6539, 6540, 6541, 6542, 6543, 6544, 6545, 6546, 6547, 6548, 6549, 6550, 6551, 6552, 6553, 6554, 6555, 6556, 6557, 6558, 6559, 6560, 6561, 6562, 6563, 6564, 6565, 6566, 6567, 6568, 6569, 6570, 6571, 6572, 6573, 6574, 6575, 6576, 6577, 6578, 6579, 6580, 6581, 6582, 6583, 6584, 6585, 6586, 6587, 6588, 6589, 6590, 6591, 6592, 6593, 6594, 6595, 6596, 6597, 6598, 6599, 6600, 6601, 6602, 6603, 6604, 6605, 6606, 6607, 6608, 6609, 6610, 6611, 6612, 6613, 6614, 6615, 6616, 6617, 6618, 6619, 6620, 6621, 6622, 6623, 6624, 6625, 6626, 6627, 6628, 6629, 6630, 6631, 6632, 6633, 6634, 6635, 6636, 6637, 6638, 6639, 6640, 6641, 6642, 6643, 6644, 6645, 6646, 6647, 6648, 6649, 6650, 6651, 6652, 6653, 6654, 6655, 6656, 6657, 6658, 6659, 6660, 6661, 6662, 6663, 6664, 6665, 6666, 6667, 6668, 6669, 6670, 6671, 6672, 6673, 6674, 6675, 6676, 6677, 6678, 6679, 6680, 6681, 6682, 6683, 6684, 6685, 6686, 6687, 6688, 6689, 6690, 6691, 6692, 6693, 6694, 6695, 6696, 6697, 6698, 6699, 6700, 6701, 6702, 6703, 6704, 6705, 6706, 6707, 6708, 6709, 6710, 6711, 6712, 6713, 6714, 6715, 6716, 6717, 6718, 6719, 6720, 6721, 6722, 6723, 6724, 6725, 6726, 6727, 6728, 6729, 6730, 6731, 6732, 6733, 6734, 6735, 6736, 6737, 6738, 6739, 6740, 6741, 6742, 6743, 6744, 6745, 6746, 6747, 6748, 6749, 6750, 6751, 6752, 6753, 6754, 6755, 6756, 6757, 6758, 6759, 6760, 6761, 6762, 6763, 6764, 6765, 6766, 6767, 6768, 6769, 6770, 6771, 6772, 6773, 6774, 6775, 6776, 6777, 6778, 6779, 6780, 6781, 6782, 6783, 6784, 6785, 6786, 6787, 6788, 6789, 6790, 6791, 6792, 6793, 6794, 6795, 6796, 6797, 6798, 6799, 6800, 6801, 6802, 6803, 6804, 6805, 6806, 6807, 6808, 6809, 6810, 6811, 6812, 6813, 6814, 6815, 6816, 6817, 6818, 6819, 6820, 6821, 6822, 6823, 6824, 6825, 6826, 6827, 6828, 6829, 6830, 6831, 6832, 6833, 6834, 6835, 6836, 6837, 6838, 6839, 6840, 6841, 6842, 6843, 6844, 6845, 6846, 6847, 6848, 6849, 6850, 6851, 6852, 6853, 6854, 6855, 6856, 6857, 6858, 6859, 6860, 6861, 6862, 6863, 6864, 6865, 6866, 6867, 6868, 6869, 6870, 6871, 6872, 6873, 6874, 6875, 6876, 6877, 6878, 6879, 6880, 6881, 6882, 6883, 6884, 6885, 6886, 6887, 6888, 6889, 6890, 6891, 6892, 6893, 6894, 6895, 6896, 6897, 6898, 6899, 6900, 6901, 6902, 6903, 6904, 6905, 6906, 6907, 6908, 6909, 6910, 6911, 6912, 6913, 6914, 6915, 6916, 6917, 6918, 6919, 6920, 6921, 6922, 6923, 6924, 6925, 6926, 6927, 6928, 6929, 6930, 6931, 6932, 6933, 6934, 6935, 6936, 6937, 6938, 6939, 6940, 6941, 6942, 6943, 6944, 6945, 6946, 6947, 6948, 6949, 6950, 6951, 6952, 6953, 6954, 6955, 6956, 6957, 6958, 6959, 6960, 6961, 6962, 6963, 6964, 6965, 6966, 6967, 6968, 6969, 6970, 6971, 6972, 6973, 6974, 6975, 6976, 6977, 6978, 6979, 6980, 6981, 6982, 6983, 6984, 6985, 6986, 6987, 6988, 6989, 6990, 6991, 6992, 6993, 6994, 6995, 6996, 6997, 6998, 6999, 7000, 7001, 7002, 7003, 7004, 7005, 7006, 7007, 7008, 7009, 7010, 7011, 7012, 7013, 7014, 7015, 7016, 7017, 7018, 7019, 7020, 7021, 7022, 7023, 7024, 7025, 7026, 7027, 7028, 7029, 7030, 7031, 7032, 7033, 7034, 7035, 7036, 7037, 7038, 7039, 7040, 7041, 7042, 7043, 7044, 7045, 7046, 7047, 7048, 7049, 7050, 7051, 7052, 7053, 7054, 7055, 7056, 7057, 7058, 7059, 7060, 7061, 7062, 7063, 7064, 7065, 7066, 7067, 7068, 7069, 7070, 7071, 7072, 7073, 7074, 7075, 7076, 7077, 7078, 7079, 7080, 7081, 7082, 7083, 7084, 7085, 7086, 7087, 7088, 7089, 7090, 7091, 7092, 7093, 7094, 7095, 7096, 7097, 7098, 7099, 7100, 7101, 7102, 7103, 7104, 7105, 7106, 7107, 7108, 7109, 7110, 7111, 7112, 7113, 7114, 7115, 7116, 7117, 7118, 7119, 7120, 7121, 7122, 7123, 7124, 7125, 7126, 7127, 7128, 7129, 7130, 7131, 7132, 7133, 7134, 7135, 7136, 7137, 7138, 7139, 7140, 7141, 7142, 7143, 7144, 7145, 7146, 7147, 7148, 7149, 7150, 7151, 7152, 7153, 7154, 7155, 7156, 7157, 7158, 7159, 7160, 7161, 7162, 7163, 7164, 7165, 7166, 7167, 7168, 7169, 7170, 7171, 7172, 7173, 7174, 7175, 7176, 7177, 7178, 7179, 7180, 7181, 7182, 7183, 7184, 7185, 7186, 7187, 7188, 7189, 7190, 7191, 7192, 7193, 7194, 7195, 7196, 7197, 7198, 7199, 7200, 7201, 7202, 7203, 7204, 7205, 7206, 7207, 7208, 7209, 7210, 7211, 7212, 7213, 7214, 7215, 7216, 7217, 7218, 7219, 7220, 7221, 7222, 7223, 7224, 7225, 7226, 7227, 7228, 7229, 7230, 7231, 7232, 7233, 7234, 7235, 7236, 7237, 7238, 7239, 7240, 7241, 7242, 7243, 7244, 7245, 7246, 7247, 7248, 7249, 7250, 7251, 7252, 7253, 7254, 7255, 7256, 7257, 7258, 7259, 7260, 7261, 7262, 7263, 7264, 7265, 7266, 7267, 7268, 7269, 7270, 7271, 7272, 7273, 7274, 7275, 7276, 7277, 7278, 7279, 7280, 7281, 7282, 7283, 7284, 7285, 7286, 7287, 7288, 7289, 7290, 7291, 7292, 7293, 7294, 7295, 7296, 7297, 7298, 7299, 7300, 7301, 7302, 7303, 7304, 7305, 7306, 7307, 7308, 7309, 7310, 7311, 7312, 7313, 7314, 7315, 7316, 7317, 7318, 7319, 7320, 7321, 7322, 7323, 7324, 7325, 7326, 7327, 7328, 7329, 7330, 7331, 7332, 7333, 7334, 7335, 7336, 7337, 7338, 7339, 7340, 7341, 7342, 7343, 7344, 7345, 7346, 7347, 7348, 7349, 7350, 7351, 7352, 7353, 7354, 7355, 7356, 7357, 7358, 7359, 7360, 7361, 7362, 7363, 7364, 7365, 7366, 7367, 7368, 7369, 7370, 7371, 7372, 7373, 7374, 7375, 7376, 7377, 7378, 7379, 7380, 7381, 7382, 7383, 7384, 7385, 7386, 7387, 7388, 7389, 7390, 7391, 7392, 7393, 7394, 7395, 7396, 7397, 7398, 7399, 7400, 7401, 7402, 7403, 7404, 7405, 7406, 7407, 7408, 7409, 7410, 7411, 7412, 7413, 7414, 7415, 7416, 7417, 7418, 7419, 7420, 7421, 7422, 7423, 7424, 7425, 7426, 7427, 7428, 7429, 7430, 7431, 7432, 7433, 7434, 7435, 7436, 7437, 7438, 7439, 7440, 7441, 7442, 7443, 7444, 7445, 7446, 7447, 7448, 7449, 7450, 7451, 7452, 7453, 7454, 7455, 7456, 7457, 7458, 7459, 7460, 7461, 7462, 7463, 7464, 7465, 7466, 7467, 7468, 7469, 7470, 7471, 7472, 7473, 7474, 7475, 7476, 7477, 7478, 7479, 7480, 7481, 7482, 7483, 7484, 7485, 7486, 7487, 7488, 7489, 7490, 7491, 7492, 7493, 7494, 7495, 7496, 7497, 7498, 7499, 7500, 7501, 7502, 7503, 7504, 7505, 7506, 7507, 7508, 7509, 7510, 7511, 7512, 7513, 7514, 7515, 7516, 7517, 7518, 7519, 7520, 7521, 7522, 7523, 7524, 7525, 7526, 7527, 7528, 7529, 7530, 7531, 7532, 7533, 7534, 7535, 7536, 7537, 7538, 7539, 7540, 7541, 7542, 7543, 7544, 7545, 7546, 7547, 7548, 7549, 7550, 7551, 7552, 7553, 7554, 7555, 7556, 7557, 7558, 7559, 7560, 7561, 7562, 7563, 7564, 7565, 7566, 7567, 7568, 7569, 7570, 7571, 7572, 7573, 7574, 7575, 7576, 7577, 7578, 7579, 7580, 7581, 7582, 7583, 7584, 7585, 7586, 7587, 7588, 7589, 7590, 7591, 7592, 7593, 7594, 7595, 7596, 7597, 7598, 7599, 7600, 7601, 7602, 7603, 7604, 7605, 7606, 7607, 7608, 7609, 7610, 7611, 7612, 7613, 7614, 7615, 7616, 7617, 7618, 7619, 7620, 7621, 7622, 7623, 7624, 7625, 7626, 7627, 7628, 7629, 7630, 7631, 7632, 7633, 7634, 7635, 7636, 7637, 7638, 7639, 7640, 7641, 7642, 7643, 7644, 7645, 7646, 7647, 7648, 7649, 7650, 7651, 7652, 7653, 7654, 7655, 7656, 7657, 7658, 7659, 7660, 7661, 7662, 7663, 7664, 7665, 7666, 7667, 7668, 7669, 7670, 7671, 7672, 7673, 7674, 7675, 7676, 7677, 7678, 7679, 7680, 7681, 7682, 7683, 7684, 7685, 7686, 7687, 7688, 7689, 7690, 7691, 7692, 7693, 7694, 7695, 7696, 7697, 7698, 7699, 7700, 7701, 7702, 7703, 7704, 7705, 7706, 7707, 7708, 7709, 7710, 7711, 7712, 7713, 7714, 7715, 7716, 7717, 7718, 7719, 7720, 7721, 7722, 7723, 7724, 7725, 7726, 7727, 7728, 7729, 7730, 7731, 7732, 7733, 7734, 7735, 7736, 7737, 7738, 7739, 7740, 7741, 7742, 7743, 7744, 7745, 7746, 7747, 7748, 7749, 7750, 7751, 7752, 7753, 7754, 7755, 7756, 7757, 7758, 7759, 7760, 7761, 7762, 7763, 7764, 7765, 7766, 7767, 7768, 7769, 7770, 7771, 7772, 7773, 7774, 7775, 7776, 7777, 7778, 7779, 7780, 7781, 7782, 7783, 7784, 7785, 7786, 7787, 7788, 7789, 7790, 7791, 7792, 7793, 7794, 7795, 7796, 7797, 7798, 7799, 7800, 7801, 7802, 7803, 7804, 7805, 7806, 7807, 7808, 7809, 7810, 7811, 7812, 7813, 7814, 7815, 7816, 7817, 7818, 7819, 7820, 7821, 7822, 7823, 7824, 7825, 7826, 7827, 7828, 7829, 7830, 7831, 7832, 7833, 7834, 7835, 7836, 7837, 7838, 7839, 7840, 7841, 7842, 7843, 7844, 7845, 7846, 7847, 7848, 7849, 7850, 7851, 7852, 7853, 7854, 7855, 7856, 7857, 7858, 7859, 7860, 7861, 7862, 7863, 7864, 7865, 7866, 7867, 7868, 7869, 7870, 7871, 7872, 7873, 7874, 7875, 7876, 7877, 7878, 7879, 7880, 7881, 7882, 7883, 7884, 7885, 7886, 7887, 7888, 7889, 7890, 7891, 7892, 7893, 7894, 7895, 7896, 7897, 7898, 7899, 7900, 7901, 7902, 7903, 7904, 7905, 7906, 7907, 7908, 7909, 7910, 7911, 7912, 7913, 7914, 7915, 7916, 7917, 7918, 7919, 7920, 7921, 7922, 7923, 7924, 7925, 7926, 7927, 7928, 7929, 7930, 7931, 7932, 7933, 7934, 7935, 7936, 7937, 7938, 7939, 7940, 7941, 7942, 7943, 7944, 7945, 7946, 7947, 7948, 7949, 7950, 7951, 7952, 7953, 7954, 7955, 7956, 7957, 7958, 7959, 7960, 7961, 7962, 7963, 7964, 7965, 7966, 7967, 7968, 7969, 7970, 7971, 7972, 7973, 7974, 7975, 7976, 7977, 7978, 7979, 7980, 7981, 7982, 7983, 7984, 7985, 7986, 7987, 7988, 7989, 7990, 7991, 7992, 7993, 7994, 7995, 7996, 7997, 7998, 7999, 8000, 8001, 8002, 8003, 8004, 8005, 8006, 8007, 8008, 8009, 8010, 8011, 8012, 8013, 8014, 8015, 8016, 8017, 8018, 8019, 8020, 8021, 8022, 8023, 8024, 8025, 8026, 8027, 8028, 8029, 8030, 8031, 8032, 8033, 8034, 8035, 8036, 8037, 8038, 8039, 8040, 8041, 8042, 8043, 8044, 8045, 8046, 8047, 8048, 8049, 8050, 8051, 8052, 8053, 8054, 8055, 8056, 8057, 8058, 8059, 8060, 8061, 8062, 8063, 8064, 8065, 8066, 8067, 8068, 8069, 8070, 8071, 8072, 8073, 8074, 8075, 8076, 8077, 8078, 8079, 8080, 8081, 8082, 8083, 8084, 8085, 8086, 8087, 8088, 8089, 8090, 8091, 8092, 8093, 8094, 8095, 8096, 8097, 8098, 8099, 8100, 8101, 8102, 8103, 8104, 8105, 8106, 8107, 8108, 8109, 8110, 8111, 8112, 8113, 8114, 8115, 8116, 8117, 8118, 8119, 8120, 8121, 8122, 8123, 8124, 8125, 8126, 8127, 8128, 8129, 8130, 8131, 8132, 8133, 8134, 8135, 8136, 8137, 8138, 8139, 8140, 8141, 8142, 8143, 8144, 8145, 8146, 8147, 8148, 8149, 8150, 8151, 8152, 8153, 8154, 8155, 8156, 8157, 8158, 8159, 8160, 8161, 8162, 8163, 8164, 8165, 8166, 8167, 8168, 8169, 8170, 8171, 8172, 8173, 8174, 8175, 8176, 8177, 8178, 8179, 8180, 8181, 8182, 8183, 8184, 8185, 8186, 8187, 8188, 8189, 8190, 8191, 8192, 8193, 8194, 8195, 8196, 8197, 8198, 8199, 8200, 8201, 8202, 8203, 8204, 8205, 8206, 8207, 8208, 8209, 8210, 8211, 8212, 8213, 8214, 8215, 8216, 8217, 8218, 8219, 8220, 8221, 8222, 8223, 8224, 8225, 8226, 8227, 8228, 8229, 8230, 8231, 8232, 8233, 8234, 8235, 8236, 8237, 8238, 8239, 8240, 8241, 8242, 8243, 8244, 8245, 8246, 8247, 8248, 8249, 8250, 8251, 8252, 8253, 8254, 8255, 8256, 8257, 8258, 8259, 8260, 8261, 8262, 8263, 8264, 8265, 8266, 8267, 8268, 8269, 8270, 8271, 8272, 8273, 8274, 8275, 8276, 8277, 8278, 8279, 8280, 8281, 8282, 8283, 8284, 8285, 8286, 8287, 8288, 8289, 8290, 8291, 8292, 8293, 8294, 8295, 8296, 8297, 8298, 8299, 8300, 8301, 8302, 8303, 8304, 8305, 8306, 8307, 8308, 8309, 8310, 8311, 8312, 8313, 8314, 8315, 8316, 8317, 8318, 8319, 8320, 8321, 8322, 8323, 8324, 8325, 8326, 8327, 8328, 8329, 8330, 8331, 8332, 8333, 8334, 8335, 8336, 8337, 8338, 8339, 8340, 8341, 8342, 8343, 8344, 8345, 8346, 8347, 8348, 8349, 8350, 8351, 8352, 8353, 8354, 8355, 8356, 8357, 8358, 8359, 8360, 8361, 8362, 8363, 8364, 8365, 8366, 8367, 8368, 8369, 8370, 8371, 8372, 8373, 8374, 8375, 8376, 8377, 8378, 8379, 8380, 8381, 8382, 8383, 8384, 8385, 8386, 8387, 8388, 8389, 8390, 8391, 8392, 8393, 8394, 8395, 8396, 8397, 8398, 8399, 8400, 8401, 8402, 8403, 8404, 8405, 8406, 8407, 8408, 8409, 8410, 8411, 8412, 8413, 8414, 8415, 8416, 8417, 8418, 8419, 8420, 8421, 8422, 8423, 8424, 8425, 8426, 8427, 8428, 8429, 8430, 8431, 8432, 8433, 8434, 8435, 8436, 8437, 8438, 8439, 8440, 8441, 8442, 8443, 8444, 8445, 8446, 8447, 8448, 8449, 8450, 8451, 8452, 8453, 8454, 8455, 8456, 8457, 8458, 8459, 8460, 8461, 8462, 8463, 8464, 8465, 8466, 8467, 8468, 8469, 8470, 8471, 8472, 8473, 8474, 8475, 8476, 8477, 8478, 8479, 8480, 8481, 8482, 8483, 8484, 8485, 8486, 8487, 8488, 8489, 8490, 8491, 8492, 8493, 8494, 8495, 8496, 8497, 8498, 8499, 8500, 8501, 8502, 8503, 8504, 8505, 8506, 8507, 8508, 8509, 8510, 8511, 8512, 8513, 8514, 8515, 8516, 8517, 8518, 8519, 8520, 8521, 8522, 8523, 8524, 8525, 8526, 8527, 8528, 8529, 8530, 8531, 8532, 8533, 8534, 8535, 8536, 8537, 8538, 8539, 8540, 8541, 8542, 8543, 8544, 8545, 8546, 8547, 8548, 8549, 8550, 8551, 8552, 8553, 8554, 8555, 8556, 8557, 8558, 8559, 8560, 8561, 8562, 8563, 8564, 8565, 8566, 8567, 8568, 8569, 8570, 8571, 8572, 8573, 8574, 8575, 8576, 8577, 8578, 8579, 8580, 8581, 8582, 8583, 8584, 8585, 8586, 8587, 8588, 8589, 8590, 8591, 8592, 8593, 8594, 8595, 8596, 8597, 8598, 8599, 8600, 8601, 8602, 8603, 8604, 8605, 8606, 8607, 8608, 8609, 8610, 8611, 8612, 8613, 8614, 8615, 8616, 8617, 8618, 8619, 8620, 8621, 8622, 8623, 8624, 8625, 8626, 8627, 8628, 8629, 8630, 8631, 8632, 8633, 8634, 8635, 8636, 8637, 8638, 8639, 8640, 8641, 8642, 8643, 8644, 8645, 8646, 8647, 8648, 8649, 8650, 8651, 8652, 8653, 8654, 8655, 8656, 8657, 8658, 8659, 8660, 8661, 8662, 8663, 8664, 8665, 8666, 8667, 8668, 8669, 8670, 8671, 8672, 8673, 8674, 8675, 8676, 8677, 8678, 8679, 8680, 8681, 8682, 8683, 8684, 8685, 8686, 8687, 8688, 8689, 8690, 8691, 8692, 8693, 8694, 8695, 8696, 8697, 8698, 8699, 8700, 8701, 8702, 8703, 8704, 8705, 8706, 8707, 8708, 8709, 8710, 8711, 8712, 8713, 8714, 8715, 8716, 8717, 8718, 8719, 8720, 8721, 8722, 8723, 8724, 8725, 8726, 8727, 8728, 8729, 8730, 8731, 8732, 8733, 8734, 8735, 8736, 8737, 8738, 8739, 8740, 8741, 8742, 8743, 8744, 8745, 8746, 8747, 8748, 8749, 8750, 8751, 8752, 8753, 8754, 8755, 8756, 8757, 8758, 8759, 8760, 8761, 8762, 8763, 8764, 8765, 8766, 8767, 8768, 8769, 8770, 8771, 8772, 8773, 8774, 8775, 8776, 8777, 8778, 8779, 8780, 8781, 8782, 8783, 8784, 8785, 8786, 8787, 8788, 8789, 8790, 8791, 8792, 8793, 8794, 8795, 8796, 8797, 8798, 8799, 8800, 8801, 8802, 8803, 8804, 8805, 8806, 8807, 8808, 8809, 8810, 8811, 8812, 8813, 8814, 8815, 8816, 8817, 8818, 8819, 8820, 8821, 8822, 8823, 8824, 8825, 8826, 8827, 8828, 8829, 8830, 8831, 8832, 8833, 8834, 8835, 8836, 8837, 8838, 8839, 8840, 8841, 8842, 8843, 8844, 8845, 8846, 8847, 8848, 8849, 8850, 8851, 8852, 8853, 8854, 8855, 8856, 8857, 8858, 8859, 8860, 8861, 8862, 8863, 8864, 8865, 8866, 8867, 8868, 8869, 8870, 8871, 8872, 8873, 8874, 8875, 8876, 8877, 8878, 8879, 8880, 8881, 8882, 8883, 8884, 8885, 8886, 8887, 8888, 8889, 8890, 8891, 8892, 8893, 8894, 8895, 8896, 8897, 8898, 8899, 8900, 8901, 8902, 8903, 8904, 8905, 8906, 8907, 8908, 8909, 8910, 8911, 8912, 8913, 8914, 8915, 8916, 8917, 8918, 8919, 8920, 8921, 8922, 8923, 8924, 8925, 8926, 8927, 8928, 8929, 8930, 8931, 8932, 8933, 8934, 8935, 8936, 8937, 8938, 8939, 8940, 8941, 8942, 8943, 8944, 8945, 8946, 8947, 8948, 8949, 8950, 8951, 8952, 8953, 8954, 8955, 8956, 8957, 8958, 8959, 8960, 8961, 8962, 8963, 8964, 8965, 8966, 8967, 8968, 8969, 8970, 8971, 8972, 8973, 8974, 8975, 8976, 8977, 8978, 8979, 8980, 8981, 8982, 8983, 8984, 8985, 8986, 8987, 8988, 8989, 8990, 8991, 8992, 8993, 8994, 8995, 8996, 8997, 8998, 8999, 9000, 9001, 9002, 9003, 9004, 9005, 9006, 9007, 9008, 9009, 9010, 9011, 9012, 9013, 9014, 9015, 9016, 9017, 9018, 9019, 9020, 9021, 9022, 9023, 9024, 9025, 9026, 9027, 9028, 9029, 9030, 9031, 9032, 9033, 9034, 9035, 9036, 9037, 9038, 9039, 9040, 9041, 9042, 9043, 9044, 9045, 9046, 9047, 9048, 9049, 9050, 9051, 9052, 9053, 9054, 9055, 9056, 9057, 9058, 9059, 9060, 9061, 9062, 9063, 9064, 9065, 9066, 9067, 9068, 9069, 9070, 9071, 9072, 9073, 9074, 9075, 9076, 9077, 9078, 9079, 9080, 9081, 9082, 9083, 9084, 9085, 9086, 9087, 9088, 9089, 9090, 9091, 9092, 9093, 9094, 9095, 9096, 9097, 9098, 9099, 9100, 9101, 9102, 9103, 9104, 9105, 9106, 9107, 9108, 9109, 9110, 9111, 9112, 9113, 9114, 9115, 9116, 9117, 9118, 9119, 9120, 9121, 9122, 9123, 9124, 9125, 9126, 9127, 9128, 9129, 9130, 9131, 9132, 9133, 9134, 9135, 9136, 9137, 9138, 9139, 9140, 9141, 9142, 9143, 9144, 9145, 9146, 9147, 9148, 9149, 9150, 9151, 9152, 9153, 9154, 9155, 9156, 9157, 9158, 9159, 9160, 9161, 9162, 9163, 9164, 9165, 9166, 9167, 9168, 9169, 9170, 9171, 9172, 9173, 9174, 9175, 9176, 9177, 9178, 9179, 9180, 9181, 9182, 9183, 9184, 9185, 9186, 9187, 9188, 9189, 9190, 9191, 9192, 9193, 9194, 9195, 9196, 9197, 9198, 9199, 9200, 9201, 9202, 9203, 9204, 9205, 9206, 9207, 9208, 9209, 9210, 9211, 9212, 9213, 9214, 9215, 9216, 9217, 9218, 9219, 9220, 9221, 9222, 9223, 9224, 9225, 9226, 9227, 9228, 9229, 9230, 9231, 9232, 9233, 9234, 9235, 9236, 9237, 9238, 9239, 9240, 9241, 9242, 9243, 9244, 9245, 9246, 9247, 9248, 9249, 9250, 9251, 9252, 9253, 9254, 9255, 9256, 9257, 9258, 9259, 9260, 9261, 9262, 9263, 9264, 9265, 9266, 9267, 9268, 9269, 9270, 9271, 9272, 9273, 9274, 9275, 9276, 9277, 9278, 9279, 9280, 9281, 9282, 9283, 9284, 9285, 9286, 9287, 9288, 9289, 9290, 9291, 9292, 9293, 9294, 9295, 9296, 9297, 9298, 9299, 9300, 9301, 9302, 9303, 9304, 9305, 9306, 9307, 9308, 9309, 9310, 9311, 9312, 9313, 9314, 9315, 9316, 9317, 9318, 9319, 9320, 9321, 9322, 9323, 9324, 9325, 9326, 9327, 9328, 9329, 9330, 9331, 9332, 9333, 9334, 9335, 9336, 9337, 9338, 9339, 9340, 9341, 9342, 9343, 9344, 9345, 9346, 9347, 9348, 9349, 9350, 9351, 9352, 9353, 9354, 9355, 9356, 9357, 9358, 9359, 9360, 9361, 9362, 9363, 9364, 9365, 9366, 9367, 9368, 9369, 9370, 9371, 9372, 9373, 9374, 9375, 9376, 9377, 9378, 9379, 9380, 9381, 9382, 9383, 9384, 9385, 9386, 9387, 9388, 9389, 9390, 9391, 9392, 9393, 9394, 9395, 9396, 9397, 9398, 9399, 9400, 9401, 9402, 9403, 9404, 9405, 9406, 9407, 9408, 9409, 9410, 9411, 9412, 9413, 9414, 9415, 9416, 9417, 9418, 9419, 9420, 9421, 9422, 9423, 9424, 9425, 9426, 9427, 9428, 9429, 9430, 9431, 9432, 9433, 9434, 9435, 9436, 9437, 9438, 9439, 9440, 9441, 9442, 9443, 9444, 9445, 9446, 9447, 9448, 9449, 9450, 9451, 9452, 9453, 9454, 9455, 9456, 9457, 9458, 9459, 9460, 9461, 9462, 9463, 9464, 9465, 9466, 9467, 9468, 9469, 9470, 9471, 9472, 9473, 9474, 9475, 9476, 9477, 9478, 9479, 9480, 9481, 9482, 9483, 9484, 9485, 9486, 9487, 9488, 9489, 9490, 9491, 9492, 9493, 9494, 9495, 9496, 9497, 9498, 9499, 9500, 9501, 9502, 9503, 9504, 9505, 9506, 9507, 9508, 9509, 9510, 9511, 9512, 9513, 9514, 9515, 9516, 9517, 9518, 9519, 9520, 9521, 9522, 9523, 9524, 9525, 9526, 9527, 9528, 9529, 9530, 9531, 9532, 9533, 9534, 9535, 9536, 9537, 9538, 9539, 9540, 9541, 9542, 9543, 9544, 9545, 9546, 9547, 9548, 9549, 9550, 9551, 9552, 9553, 9554, 9555, 9556, 9557, 9558, 9559, 9560, 9561, 9562, 9563, 9564, 9565, 9566, 9567, 9568, 9569, 9570, 9571, 9572, 9573, 9574, 9575, 9576, 9577, 9578, 9579, 9580, 9581, 9582, 9583, 9584, 9585, 9586, 9587, 9588, 9589, 9590, 9591, 9592, 9593, 9594, 9595, 9596, 9597, 9598, 9599, 9600, 9601, 9602, 9603, 9604, 9605, 9606, 9607, 9608, 9609, 9610, 9611, 9612, 9613, 9614, 9615, 9616, 9617, 9618, 9619, 9620, 9621, 9622, 9623, 9624, 9625, 9626, 9627, 9628, 9629, 9630, 9631, 9632, 9633, 9634, 9635, 9636, 9637, 9638, 9639, 9640, 9641, 9642, 9643, 9644, 9645, 9646, 9647, 9648, 9649, 9650, 9651, 9652, 9653, 9654, 9655, 9656, 9657, 9658, 9659, 9660, 9661, 9662, 9663, 9664, 9665, 9666, 9667, 9668, 9669, 9670, 9671, 9672, 9673, 9674, 9675, 9676, 9677, 9678, 9679, 9680, 9681, 9682, 9683, 9684, 9685, 9686, 9687, 9688, 9689, 9690, 9691, 9692, 9693, 9694, 9695, 9696, 9697, 9698, 9699, 9700, 9701, 9702, 9703, 9704, 9705, 9706, 9707, 9708, 9709, 9710, 9711, 9712, 9713, 9714, 9715, 9716, 9717, 9718, 9719, 9720, 9721, 9722, 9723, 9724, 9725, 9726, 9727, 9728, 9729, 9730, 9731, 9732, 9733, 9734, 9735, 9736, 9737, 9738, 9739, 9740, 9741, 9742, 9743, 9744, 9745, 9746, 9747, 9748, 9749, 9750, 9751, 9752, 9753, 9754, 9755, 9756, 9757, 9758, 9759, 9760, 9761, 9762, 9763, 9764, 9765, 9766, 9767, 9768, 9769, 9770, 9771, 9772, 9773, 9774, 9775, 9776, 9777, 9778, 9779, 9780, 9781, 9782, 9783, 9784, 9785, 9786, 9787, 9788, 9789, 9790, 9791, 9792, 9793, 9794, 9795, 9796, 9797, 9798, 9799, 9800, 9801, 9802, 9803, 9804, 9805, 9806, 9807, 9808, 9809, 9810, 9811, 9812, 9813, 9814, 9815, 9816, 9817, 9818, 9819, 9820, 9821, 9822, 9823, 9824, 9825, 9826, 9827, 9828, 9829, 9830, 9831, 9832, 9833, 9834, 9835, 9836, 9837, 9838, 9839, 9840, 9841, 9842, 9843, 9844, 9845, 9846, 9847, 9848, 9849, 9850, 9851, 9852, 9853, 9854, 9855, 9856, 9857, 9858, 9859, 9860, 9861, 9862, 9863, 9864, 9865, 9866, 9867, 9868, 9869, 9870, 9871, 9872, 9873, 9874, 9875, 9876, 9877, 9878, 9879, 9880, 9881, 9882, 9883, 9884, 9885, 9886, 9887, 9888, 9889, 9890, 9891, 9892, 9893, 9894, 9895, 9896, 9897, 9898, 9899, 9900, 9901, 9902, 9903, 9904, 9905, 9906, 9907, 9908, 9909, 9910, 9911, 9912, 9913, 9914, 9915, 9916, 9917, 9918, 9919, 9920, 9921, 9922, 9923, 9924, 9925, 9926, 9927, 9928, 9929, 9930, 9931, 9932, 9933, 9934, 9935, 9936, 9937, 9938, 9939, 9940, 9941, 9942, 9943, 9944, 9945, 9946, 9947, 9948, 9949, 9950, 9951, 9952, 9953, 9954, 9955, 9956, 9957, 9958, 9959, 9960, 9961, 9962, 9963, 9964, 9965, 9966, 9967, 9968, 9969, 9970, 9971, 9972, 9973, 9974, 9975, 9976, 9977, 9978, 9979, 9980, 9981, 9982, 9983, 9984, 9985, 9986, 9987, 9988, 9989, 9990, 9991, 9992, 9993, 9994, 9995, 9996, 9997, 9998, 9999], [-0.0, -0.0, 0.0020026714169091905, 0.0020026714169091905, 0.0020026714169091905, 0.0020026714169091905, 0.0020026714169091905, 0.0020026714169091905, 0.0020026714169091905, 0.0030060160481541164, 0.0030060160481541164, 0.0030060160481541164, 0.0030060160481541164, 0.0030060160481541164, 0.0030060160481541164, 0.004010704744946431, 0.004010704744946431, 0.004010704744946431, 0.005016741113097489, 0.005016741113097489, 0.005016741113097489, 0.005016741113097489, 0.005016741113097489, 0.0060241287729482, 0.0060241287729482, 0.0060241287729482, 0.0060241287729482, 0.007032871359447699, 0.007032871359447699, 0.007032871359447699, 0.008042972522231793, 0.009054435925701937, 0.009054435925701937, 0.009054435925701937, 0.009054435925701937, 0.010067265249105496, 0.010067265249105496, 0.010067265249105496, 0.010067265249105496, 0.011081464186615802, 0.011081464186615802, 0.011081464186615802, 0.012097036447412734, 0.012097036447412734, 0.012097036447412734, 0.013113985755764624, 0.013113985755764624, 0.013113985755764624, 0.014132315851109871, 0.014132315851109871, 0.014132315851109871, 0.015152030488139599, 0.015152030488139599, 0.015152030488139599, 0.015152030488139599, 0.016173133436880392, 0.016173133436880392, 0.017195628482778433, 0.017195628482778433, 0.017195628482778433, 0.017195628482778433, 0.017195628482778433, 0.017195628482778433, 0.01821951942678344, 0.01821951942678344, 0.01821951942678344, 0.01821951942678344, 0.01821951942678344, 0.01821951942678344, 0.01821951942678344, 0.01821951942678344, 0.01821951942678344, 0.019244810085433203, 0.020271504290939445, 0.020271504290939445, 0.020271504290939445, 0.020271504290939445, 0.020271504290939445, 0.021299605891273502, 0.021299605891273502, 0.021299605891273502, 0.021299605891273502, 0.021299605891273502, 0.021299605891273502, 0.021299605891273502, 0.021299605891273502, 0.021299605891273502, 0.021299605891273502, 0.021299605891273502, 0.021299605891273502, 0.021299605891273502, 0.021299605891273502, 0.021299605891273502, 0.021299605891273502, 0.021299605891273502, 0.021299605891273502, 0.02232911875025261, 0.02232911875025261, 0.02232911875025261, 0.02232911875025261, 0.02232911875025261, 0.02232911875025261, 0.02232911875025261, 0.02232911875025261, 0.02232911875025261, 0.024392393779170046, 0.024392393779170046, 0.024392393779170046, 0.024392393779170046, 0.024392393779170046, 0.024392393779170046, 0.025426163756761003, 0.025426163756761003, 0.026461360608479784, 0.026461360608479784, 0.027497988278693604, 0.027497988278693604, 0.027497988278693604, 0.027497988278693604, 0.027497988278693604, 0.028536050728147418, 0.028536050728147418, 0.028536050728147418, 0.029575551934055255, 0.030616495890191373, 0.030616495890191373, 0.030616495890191373, 0.03165888660698207, 0.03165888660698207, 0.03165888660698207, 0.032702728111598925, 0.032702728111598925, 0.033748024448051854, 0.033748024448051854, 0.033748024448051854, 0.033748024448051854, 0.03479477967728288, 0.03479477967728288, 0.03584299787726133, 0.03584299787726133, 0.03584299787726133, 0.03584299787726133, 0.036892683143078836, 0.036892683143078836, 0.036892683143078836, 0.036892683143078836, 0.036892683143078836, 0.036892683143078836, 0.036892683143078836, 0.036892683143078836, 0.036892683143078836, 0.036892683143078836, 0.036892683143078836, 0.036892683143078836, 0.03794383958704515, 0.03794383958704515, 0.03794383958704515, 0.03794383958704515, 0.03794383958704515, 0.03794383958704515, 0.03794383958704515, 0.03899647133878525, 0.04005058254533647, 0.04005058254533647, 0.04005058254533647, 0.04005058254533647, 0.04005058254533647, 0.04005058254533647, 0.04005058254533647, 0.04005058254533647, 0.04110617737124627, 0.04110617737124627, 0.04110617737124627, 0.04110617737124627, 0.042163259998671446, 0.042163259998671446, 0.042163259998671446, 0.042163259998671446, 0.042163259998671446, 0.043221834627477314, 0.043221834627477314, 0.043221834627477314, 0.043221834627477314, 0.04428190547533754, 0.04428190547533754, 0.04428190547533754, 0.04428190547533754, 0.04428190547533754, 0.04534347677783552, 0.04534347677783552, 0.04640655278856565, 0.04640655278856565, 0.04747113777923531, 0.04747113777923531, 0.04747113777923531, 0.04747113777923531, 0.04747113777923531, 0.04747113777923531, 0.04853723603976841, 0.04853723603976841, 0.04853723603976841, 0.0496048518784088, 0.0496048518784088, 0.0496048518784088, 0.0496048518784088, 0.0496048518784088, 0.0496048518784088, 0.05067398962182454, 0.051744653615213576, 0.051744653615213576, 0.051744653615213576, 0.05281684822240937, 0.05281684822240937, 0.05281684822240937, 0.05281684822240937, 0.05389057782598776, 0.05496584682737417, 0.05496584682737417, 0.05496584682737417, 0.05496584682737417, 0.05496584682737417, 0.05604265964695232, 0.05604265964695232, 0.05604265964695232, 0.05712102072417302, 0.05712102072417302, 0.05712102072417302, 0.05712102072417302, 0.05712102072417302, 0.05712102072417302, 0.05820093451766371, 0.05928240550533964, 0.05928240550533964, 0.05928240550533964, 0.05928240550533964, 0.05928240550533964, 0.05928240550533964, 0.05928240550533964, 0.06036543818451494, 0.06036543818451494, 0.06036543818451494, 0.06036543818451494, 0.06036543818451494, 0.061450037072014664, 0.061450037072014664, 0.061450037072014664, 0.061450037072014664, 0.061450037072014664, 0.061450037072014664, 0.061450037072014664, 0.061450037072014664, 0.061450037072014664, 0.061450037072014664, 0.06253620670428826, 0.06253620670428826, 0.06253620670428826, 0.06253620670428826, 0.06253620670428826, 0.06253620670428826, 0.0636239516375232, 0.0636239516375232, 0.0636239516375232, 0.0636239516375232, 0.0636239516375232, 0.0636239516375232, 0.0636239516375232, 0.0636239516375232, 0.0636239516375232, 0.0636239516375232, 0.0636239516375232, 0.0636239516375232, 0.0636239516375232, 0.0636239516375232, 0.0636239516375232, 0.06580418573100506, 0.06580418573100506, 0.06580418573100506, 0.06580418573100506, 0.06580418573100506, 0.06580418573100506, 0.06580418573100506, 0.06580418573100506, 0.06689668410335321, 0.06799077620109813, 0.06799077620109813, 0.06908646668085422, 0.06908646668085422, 0.06908646668085422, 0.07018376021967458, 0.07128266151517053, 0.07128266151517053, 0.07128266151517053, 0.07128266151517053, 0.07238317528563279, 0.07348530627015284, 0.07348530627015284, 0.07348530627015284, 0.07348530627015284, 0.07348530627015284, 0.07458905922874501, 0.07458905922874501, 0.07458905922874501, 0.07458905922874501, 0.0768014502135608, 0.0768014502135608, 0.0768014502135608, 0.0768014502135608, 0.0768014502135608, 0.0768014502135608, 0.0768014502135608, 0.0768014502135608, 0.0768014502135608, 0.0768014502135608, 0.0768014502135608, 0.0768014502135608, 0.07791009786554404, 0.07791009786554404, 0.07791009786554404, 0.07791009786554404, 0.07791009786554404, 0.07791009786554404, 0.07791009786554404, 0.07902038674336971, 0.07902038674336971, 0.07902038674336971, 0.07902038674336971, 0.08124590766422125, 0.08124590766422125, 0.08124590766422125, 0.08124590766422125, 0.08124590766422125, 0.08124590766422125, 0.08236114950540492, 0.08236114950540492, 0.08236114950540492, 0.0834780521690057, 0.0834780521690057, 0.0834780521690057, 0.0834780521690057, 0.0834780521690057, 0.0834780521690057, 0.0834780521690057, 0.0834780521690057, 0.0834780521690057, 0.0834780521690057, 0.0834780521690057, 0.0845966206090083, 0.0845966206090083, 0.0845966206090083, 0.0845966206090083, 0.08571685980159574, 0.08683877474528276, 0.08683877474528276, 0.08683877474528276, 0.08683877474528276, 0.08683877474528276, 0.08683877474528276, 0.08683877474528276, 0.08796237046104932, 0.08796237046104932, 0.08908765199247523, 0.08908765199247523, 0.08908765199247523, 0.08908765199247523, 0.09021462440587645, 0.09021462440587645, 0.09021462440587645, 0.09134329279044173, 0.09134329279044173, 0.09134329279044173, 0.09134329279044173, 0.09134329279044173, 0.09134329279044173, 0.09134329279044173, 0.09134329279044173, 0.09134329279044173, 0.0924736622583702, 0.0924736622583702, 0.0924736622583702, 0.0924736622583702, 0.0936057379450109, 0.0936057379450109, 0.09473952500900241, 0.09473952500900241, 0.09473952500900241, 0.09473952500900241, 0.09587502863241366, 0.09701225402088665, 0.09701225402088665, 0.09701225402088665, 0.09815120640377922, 0.09815120640377922, 0.09815120640377922, 0.09815120640377922, 0.09815120640377922, 0.09815120640377922, 0.09815120640377922, 0.09815120640377922, 0.09815120640377922, 0.10043431318970028, 0.10043431318970028, 0.1015784781713282, 0.1015784781713282, 0.10272439130486807, 0.1050214834527774, 0.10617267324134017, 0.10617267324134017, 0.10732563273050497, 0.10732563273050497, 0.10732563273050497, 0.10732563273050497, 0.10732563273050497, 0.10732563273050497, 0.10732563273050497, 0.10732563273050497, 0.10732563273050497, 0.10732563273050497, 0.10732563273050497, 0.10732563273050497, 0.10732563273050497, 0.10732563273050497, 0.10732563273050497, 0.10732563273050497, 0.10732563273050497, 0.10732563273050497, 0.10732563273050497, 0.10732563273050497, 0.10732563273050497, 0.10732563273050497, 0.10732563273050497, 0.10732563273050497, 0.10732563273050497, 0.10732563273050497, 0.10848036736969963, 0.10963688263356108, 0.10963688263356108, 0.10963688263356108, 0.10963688263356108, 0.10963688263356108, 0.10963688263356108, 0.10963688263356108, 0.10963688263356108, 0.10963688263356108, 0.10963688263356108, 0.10963688263356108, 0.10963688263356108, 0.10963688263356108, 0.10963688263356108, 0.11079518402209165, 0.11079518402209165, 0.11079518402209165, 0.11079518402209165, 0.11079518402209165, 0.11079518402209165, 0.11079518402209165, 0.11079518402209165, 0.11079518402209165, 0.11079518402209165, 0.11079518402209165, 0.11079518402209165, 0.11311716730093774, 0.11311716730093774, 0.11311716730093774, 0.11311716730093774, 0.11311716730093774, 0.11311716730093774, 0.11311716730093774, 0.11311716730093774, 0.11544636171955261, 0.11544636171955261, 0.11661367713029624, 0.11661367713029624, 0.11661367713029624, 0.11661367713029624, 0.11661367713029624, 0.11661367713029624, 0.11778281220726455, 0.11778281220726455, 0.11778281220726455, 0.11778281220726455, 0.118953772632479, 0.118953772632479, 0.118953772632479, 0.118953772632479, 0.118953772632479, 0.120126564114616, 0.120126564114616, 0.120126564114616, 0.120126564114616, 0.120126564114616, 0.12130119238917467, 0.12130119238917467, 0.12130119238917467, 0.12130119238917467, 0.12130119238917467, 0.12130119238917467, 0.12130119238917467, 0.12130119238917467, 0.12130119238917467, 0.12247766321864464, 0.12247766321864464, 0.12247766321864464, 0.12247766321864464, 0.12247766321864464, 0.12247766321864464, 0.12247766321864464, 0.12247766321864464, 0.12247766321864464, 0.12247766321864464, 0.12247766321864464, 0.12247766321864464, 0.1236559823926755, 0.1236559823926755, 0.12483615572824835, 0.12483615572824835, 0.12483615572824835, 0.12601818906984769, 0.12601818906984769, 0.12601818906984769, 0.12601818906984769, 0.12720208828963497, 0.12720208828963497, 0.12601818906984769, 0.12601818906984769, 0.12601818906984769, 0.12601818906984769, 0.12601818906984769, 0.12601818906984769, 0.12601818906984769, 0.12601818906984769, 0.12601818906984769, 0.12601818906984769, 0.12720208828963497, 0.12720208828963497, 0.12838785928762403, 0.12838785928762403, 0.12838785928762403, 0.1295755079918572, 0.13076504035858325, 0.13076504035858325, 0.13076504035858325, 0.13076504035858325, 0.13076504035858325, 0.13076504035858325, 0.13076504035858325, 0.13076504035858325, 0.13076504035858325, 0.13076504035858325, 0.13076504035858325, 0.13076504035858325, 0.13076504035858325, 0.13076504035858325, 0.13076504035858325, 0.13076504035858325, 0.1319564623724367, 0.13314978004661804, 0.13314978004661804, 0.1343449994230765, 0.1343449994230765, 0.1343449994230765, 0.1343449994230765, 0.1343449994230765, 0.1355421265726932, 0.13674116759546595, 0.13674116759546595, 0.13674116759546595, 0.13674116759546595, 0.13674116759546595, 0.13674116759546595, 0.13674116759546595, 0.13674116759546595, 0.13674116759546595, 0.13674116759546595, 0.13674116759546595, 0.13794212862069627, 0.13794212862069627, 0.13794212862069627, 0.13794212862069627, 0.13794212862069627, 0.13794212862069627, 0.13794212862069627, 0.13794212862069627, 0.13794212862069627, 0.13914501580717725, 0.13914501580717725, 0.13914501580717725, 0.13914501580717725, 0.13914501580717725, 0.14034983534338247, 0.14034983534338247, 0.14276529636841417, 0.14276529636841417, 0.14276529636841417, 0.14276529636841417, 0.14276529636841417, 0.14276529636841417, 0.14276529636841417, 0.14397595038431998, 0.14397595038431998, 0.14518856180449896, 0.14640313696872626, 0.14640313696872626, 0.14640313696872626, 0.14640313696872626, 0.14761968224762723, 0.14761968224762723, 0.14761968224762723, 0.14761968224762723, 0.14761968224762723, 0.14883820404287862, 0.14883820404287862, 0.14883820404287862, 0.14883820404287862, 0.14883820404287862, 0.14883820404287862, 0.14883820404287862, 0.14883820404287862, 0.14883820404287862, 0.14883820404287862, 0.14883820404287862, 0.14883820404287862, 0.14883820404287862, 0.14883820404287862, 0.15005870878741026, 0.15005870878741026, 0.15005870878741026, 0.15005870878741026, 0.15005870878741026, 0.15005870878741026, 0.15005870878741026, 0.15128120294560854, 0.15128120294560854, 0.15128120294560854, 0.15128120294560854, 0.15128120294560854, 0.15128120294560854, 0.15128120294560854, 0.1525056930135225, 0.1525056930135225, 0.1525056930135225, 0.1525056930135225, 0.1525056930135225, 0.1537321855190706, 0.15496068702224935, 0.15496068702224935, 0.15496068702224935, 0.15496068702224935, 0.15496068702224935, 0.15619120411534426, 0.15619120411534426, 0.15619120411534426, 0.15619120411534426, 0.15619120411534426, 0.15619120411534426, 0.15619120411534426, 0.15619120411534426, 0.15619120411534426, 0.15619120411534426, 0.15742374342314186, 0.15742374342314186, 0.15742374342314186, 0.15742374342314186, 0.15742374342314186, 0.15742374342314186, 0.15742374342314186, 0.15742374342314186, 0.15865831160314336, 0.15865831160314336, 0.1598949153457812, 0.1598949153457812, 0.1598949153457812, 0.1598949153457812, 0.1598949153457812, 0.1598949153457812, 0.1598949153457812, 0.1598949153457812, 0.1598949153457812, 0.1598949153457812, 0.1598949153457812, 0.1598949153457812, 0.16113356137463603, 0.16113356137463603, 0.16113356137463603, 0.16113356137463603, 0.16113356137463603, 0.16113356137463603, 0.16113356137463603, 0.16113356137463603, 0.16113356137463603, 0.16113356137463603, 0.16113356137463603, 0.16113356137463603, 0.16113356137463603, 0.16113356137463603, 0.16113356137463603, 0.16113356137463603, 0.16113356137463603, 0.16113356137463603, 0.16113356137463603, 0.16113356137463603, 0.16113356137463603, 0.16113356137463603, 0.16113356137463603, 0.16113356137463603, 0.16113356137463603, 0.16361700735237797, 0.16486182091615134, 0.16486182091615134, 0.16486182091615134, 0.16486182091615134, 0.16486182091615134, 0.1661087039963614, 0.1661087039963614, 0.16735766348565728, 0.16735766348565728, 0.16735766348565728, 0.16735766348565728, 0.16735766348565728, 0.16735766348565728, 0.16735766348565728, 0.16735766348565728, 0.16735766348565728, 0.16735766348565728, 0.1661087039963614, 0.16735766348565728, 0.16860870631118013, 0.16860870631118013, 0.16860870631118013, 0.16860870631118013, 0.16986183943479327, 0.16986183943479327, 0.16986183943479327, 0.16986183943479327, 0.16986183943479327, 0.16986183943479327, 0.16986183943479327, 0.16986183943479327, 0.16986183943479327, 0.16986183943479327, 0.16986183943479327, 0.17111706985331548, 0.17111706985331548, 0.17111706985331548, 0.1723744045987548, 0.1723744045987548, 0.1723744045987548, 0.1723744045987548, 0.1723744045987548, 0.1736338507385448, 0.1736338507385448, 0.1736338507385448, 0.1736338507385448, 0.1736338507385448, 0.1736338507385448, 0.1736338507385448, 0.17489541537578335, 0.17489541537578335, 0.17489541537578335, 0.17489541537578335, 0.17489541537578335, 0.17615910564947304, 0.17615910564947304, 0.17615910564947304, 0.17742492873476284, 0.17742492873476284, 0.17742492873476284, 0.17742492873476284, 0.17742492873476284, 0.17742492873476284, 0.17742492873476284, 0.17742492873476284, 0.17742492873476284, 0.17742492873476284, 0.17742492873476284, 0.17742492873476284, 0.17742492873476284, 0.17869289184319342, 0.17869289184319342, 0.17869289184319342, 0.17869289184319342, 0.17869289184319342, 0.17869289184319342, 0.17869289184319342, 0.17869289184319342, 0.17869289184319342, 0.17869289184319342, 0.17869289184319342, 0.17869289184319342, 0.17869289184319342, 0.17869289184319342, 0.17869289184319342, 0.17869289184319342, 0.17996300222294326, 0.17996300222294326, 0.17996300222294326, 0.17996300222294326, 0.17996300222294326, 0.18123526715907706, 0.18123526715907706, 0.18123526715907706, 0.18123526715907706, 0.18250969397379688, 0.18250969397379688, 0.18250969397379688, 0.18250969397379688, 0.18250969397379688, 0.18250969397379688, 0.18250969397379688, 0.18250969397379688, 0.18250969397379688, 0.18250969397379688, 0.18250969397379688, 0.1837862900266948, 0.1837862900266948, 0.1837862900266948, 0.1837862900266948, 0.1837862900266948, 0.18506506271500764, 0.18506506271500764, 0.1863460194738747, 0.1863460194738747, 0.1863460194738747, 0.1863460194738747, 0.1863460194738747, 0.1863460194738747, 0.18762916777659683, 0.18891451513489782, 0.18891451513489782, 0.18891451513489782, 0.18891451513489782, 0.18891451513489782, 0.18891451513489782, 0.18891451513489782, 0.18891451513489782, 0.18891451513489782, 0.18891451513489782, 0.18891451513489782, 0.18891451513489782, 0.18891451513489782, 0.18891451513489782, 0.18891451513489782, 0.18891451513489782, 0.18891451513489782, 0.18891451513489782, 0.18891451513489782, 0.18891451513489782, 0.18891451513489782, 0.18891451513489782, 0.18891451513489782, 0.1902020690991887, 0.1902020690991887, 0.1902020690991887, 0.19149183725883373, 0.19149183725883373, 0.19149183725883373, 0.19149183725883373, 0.19149183725883373, 0.19149183725883373, 0.19149183725883373, 0.19149183725883373, 0.19149183725883373, 0.19149183725883373, 0.19149183725883373, 0.19149183725883373, 0.19149183725883373, 0.19278382724241835, 0.19278382724241835, 0.19278382724241835, 0.19278382724241835, 0.19278382724241835, 0.19407804671802065, 0.19537450339348394, 0.19667320501669233, 0.19797415937584864, 0.19797415937584864, 0.19797415937584864, 0.19797415937584864, 0.19797415937584864, 0.19797415937584864, 0.19927737429975423, 0.19927737429975423, 0.19927737429975423, 0.19927737429975423, 0.2005828576580922, 0.2005828576580922, 0.20189061736171238, 0.20189061736171238, 0.20189061736171238, 0.20189061736171238, 0.20189061736171238, 0.20189061736171238, 0.20189061736171238, 0.20189061736171238, 0.20189061736171238, 0.20189061736171238, 0.20320066136291862, 0.20320066136291862, 0.20320066136291862, 0.20451299765575937, 0.20451299765575937, 0.20451299765575937, 0.20451299765575937, 0.20451299765575937, 0.20451299765575937, 0.20451299765575937, 0.20451299765575937, 0.20451299765575937, 0.20451299765575937, 0.20451299765575937, 0.20582763427632023, 0.20582763427632023, 0.20582763427632023, 0.20582763427632023, 0.20582763427632023, 0.20714457930301883, 0.2084638408569035, 0.2084638408569035, 0.2084638408569035, 0.2084638408569035, 0.2084638408569035, 0.2084638408569035, 0.2084638408569035, 0.2084638408569035, 0.2084638408569035, 0.2084638408569035, 0.2084638408569035, 0.2084638408569035, 0.2084638408569035, 0.20978542710195303, 0.20978542710195303, 0.20978542710195303, 0.20978542710195303, 0.20978542710195303, 0.21110934624537986, 0.21110934624537986, 0.21110934624537986, 0.21110934624537986, 0.21110934624537986, 0.21110934624537986, 0.21110934624537986, 0.20978542710195303, 0.20978542710195303, 0.20978542710195303, 0.20978542710195303, 0.20978542710195303, 0.20978542710195303, 0.20978542710195303, 0.20978542710195303, 0.20978542710195303, 0.20978542710195303, 0.20978542710195303, 0.20978542710195303, 0.20978542710195303, 0.20978542710195303, 0.20978542710195303, 0.20978542710195303, 0.20978542710195303, 0.21110934624537986, 0.21110934624537986, 0.2124356065379363, 0.2124356065379363, 0.2124356065379363, 0.2124356065379363, 0.2124356065379363, 0.2124356065379363, 0.2124356065379363, 0.2124356065379363, 0.2124356065379363, 0.2124356065379363, 0.2124356065379363, 0.2124356065379363, 0.21376421627422293, 0.21376421627422293, 0.21376421627422293, 0.21376421627422293, 0.21376421627422293, 0.21376421627422293, 0.21376421627422293, 0.2150951837929993, 0.2150951837929993, 0.2164285174774987, 0.2164285174774987, 0.2164285174774987, 0.2164285174774987, 0.2164285174774987, 0.2164285174774987, 0.2164285174774987, 0.2164285174774987, 0.21776422575574483, 0.21776422575574483, 0.21776422575574483, 0.21776422575574483, 0.21776422575574483, 0.21776422575574483, 0.21776422575574483, 0.21776422575574483, 0.21776422575574483, 0.21776422575574483, 0.21776422575574483, 0.21776422575574483, 0.21776422575574483, 0.21776422575574483, 0.21910231710087086, 0.21910231710087086, 0.21910231710087086, 0.21910231710087086, 0.21910231710087086, 0.21910231710087086, 0.22044280003144262, 0.22044280003144262, 0.22044280003144262, 0.22044280003144262, 0.22044280003144262, 0.22044280003144262, 0.22044280003144262, 0.22044280003144262, 0.22044280003144262, 0.22044280003144262, 0.22044280003144262, 0.22044280003144262, 0.22178568311178387, 0.22178568311178387, 0.22178568311178387, 0.22178568311178387, 0.22178568311178387, 0.22313097495230405, 0.22313097495230405, 0.22447868420983025, 0.22447868420983025, 0.22447868420983025, 0.22447868420983025, 0.22447868420983025, 0.22447868420983025, 0.2258288195879412, 0.2258288195879412, 0.2258288195879412, 0.2258288195879412, 0.2258288195879412, 0.2258288195879412, 0.2258288195879412, 0.2258288195879412, 0.2258288195879412, 0.2258288195879412, 0.2258288195879412, 0.2258288195879412, 0.2258288195879412, 0.22718138983730418, 0.22718138983730418, 0.22718138983730418, 0.22853640375601592, 0.22853640375601592, 0.22853640375601592, 0.22853640375601592, 0.22853640375601592, 0.22853640375601592, 0.22853640375601592, 0.22853640375601592, 0.22853640375601592, 0.22853640375601592, 0.22853640375601592, 0.22989387018994561, 0.22989387018994561, 0.22989387018994561, 0.22989387018994561, 0.22989387018994561, 0.23125379803308121, 0.23125379803308121, 0.2326161962278796, 0.2326161962278796, 0.2326161962278796, 0.2326161962278796, 0.2326161962278796, 0.2326161962278796, 0.2326161962278796, 0.2326161962278796, 0.2326161962278796, 0.2326161962278796, 0.2326161962278796, 0.2326161962278796, 0.2326161962278796, 0.2326161962278796, 0.2326161962278796, 0.2339810737656191, 0.2339810737656191, 0.2339810737656191, 0.2339810737656191, 0.2339810737656191, 0.2353484396867554, 0.2353484396867554, 0.2367183030812811, 0.2367183030812811, 0.2367183030812811, 0.23809067308908832, 0.23809067308908832, 0.23809067308908832, 0.23809067308908832, 0.23809067308908832, 0.23809067308908832, 0.23809067308908832, 0.23809067308908832, 0.239465558900334, 0.239465558900334, 0.239465558900334, 0.24084296975581007, 0.24084296975581007, 0.24084296975581007, 0.24084296975581007, 0.24084296975581007, 0.24084296975581007, 0.24084296975581007, 0.24084296975581007, 0.24084296975581007, 0.24084296975581007, 0.24084296975581007, 0.24084296975581007, 0.24084296975581007, 0.24084296975581007, 0.24084296975581007, 0.24084296975581007, 0.24084296975581007, 0.24084296975581007, 0.24084296975581007, 0.24084296975581007, 0.24084296975581007, 0.24084296975581007, 0.24084296975581007, 0.24084296975581007, 0.24222291494731554, 0.24222291494731554, 0.24222291494731554, 0.24222291494731554, 0.24222291494731554, 0.24222291494731554, 0.24222291494731554, 0.24222291494731554, 0.24222291494731554, 0.24360540381803242, 0.24360540381803242, 0.24360540381803242, 0.24360540381803242, 0.2449904457629059, 0.2449904457629059, 0.2449904457629059, 0.2449904457629059, 0.2449904457629059, 0.2449904457629059, 0.2449904457629059, 0.2463780502290271, 0.2463780502290271, 0.2463780502290271, 0.2463780502290271, 0.2463780502290271, 0.2463780502290271, 0.2463780502290271, 0.2463780502290271, 0.2463780502290271, 0.2463780502290271, 0.2463780502290271, 0.2463780502290271, 0.2463780502290271, 0.2463780502290271, 0.2463780502290271, 0.2463780502290271, 0.2463780502290271, 0.2463780502290271, 0.2463780502290271, 0.2463780502290271, 0.2463780502290271, 0.2463780502290271, 0.2463780502290271, 0.24776822671601922, 0.24776822671601922, 0.24776822671601922, 0.24916098477642873, 0.24916098477642873, 0.24916098477642873, 0.24916098477642873, 0.24916098477642873, 0.24916098477642873, 0.24916098477642873, 0.24916098477642873, 0.2505563340161186, 0.2505563340161186, 0.2505563340161186, 0.2505563340161186, 0.2505563340161186, 0.2505563340161186, 0.2505563340161186, 0.24916098477642873, 0.24916098477642873, 0.24916098477642873, 0.24916098477642873, 0.24916098477642873, 0.24916098477642873, 0.2505563340161186, 0.2505563340161186, 0.2505563340161186, 0.2505563340161186, 0.2519542840946656, 0.25335484472576214, 0.25335484472576214, 0.25335484472576214, 0.25335484472576214, 0.25335484472576214, 0.25335484472576214, 0.25335484472576214, 0.25335484472576214, 0.25616383677338367, 0.25616383677338367, 0.25616383677338367, 0.25616383677338367, 0.25616383677338367, 0.25616383677338367, 0.25616383677338367, 0.25616383677338367, 0.25616383677338367, 0.25616383677338367, 0.25616383677338367, 0.25616383677338367, 0.25757228789153375, 0.25757228789153375, 0.25757228789153375, 0.25757228789153375, 0.25757228789153375, 0.258983388966313, 0.258983388966313, 0.258983388966313, 0.258983388966313, 0.258983388966313, 0.258983388966313, 0.258983388966313, 0.258983388966313, 0.258983388966313, 0.258983388966313, 0.258983388966313, 0.26039714998814145, 0.2618135810040425, 0.26323269211807104, 0.26323269211807104, 0.26465449349174536, 0.26465449349174536, 0.26465449349174536, 0.26465449349174536, 0.26465449349174536, 0.26465449349174536, 0.26465449349174536, 0.26465449349174536, 0.26465449349174536, 0.26465449349174536, 0.26323269211807104, 0.26323269211807104, 0.26323269211807104, 0.26323269211807104, 0.26323269211807104, 0.26323269211807104, 0.26323269211807104, 0.26323269211807104, 0.26323269211807104, 0.26323269211807104, 0.26323269211807104, 0.26465449349174536, 0.26465449349174536, 0.26607899534448465, 0.26607899534448465, 0.2689361416569855, 0.2689361416569855, 0.2689361416569855, 0.2689361416569855, 0.2689361416569855, 0.2689361416569855, 0.2689361416569855, 0.2689361416569855, 0.2689361416569855, 0.2689361416569855, 0.2689361416569855, 0.2689361416569855, 0.2689361416569855, 0.2703688068490749, 0.27180421398578813, 0.27180421398578813, 0.27180421398578813, 0.27180421398578813, 0.27180421398578813, 0.27180421398578813, 0.27180421398578813, 0.27180421398578813, 0.27180421398578813, 0.27180421398578813, 0.27180421398578813, 0.27180421398578813, 0.27180421398578813, 0.27180421398578813, 0.27180421398578813, 0.27180421398578813, 0.27180421398578813, 0.27180421398578813, 0.27180421398578813, 0.27180421398578813, 0.27324237358274195, 0.27324237358274195, 0.27324237358274195, 0.27324237358274195, 0.27324237358274195, 0.27324237358274195, 0.27324237358274195, 0.27324237358274195, 0.27324237358274195, 0.2746832962161623, 0.2746832962161623, 0.2746832962161623, 0.2746832962161623, 0.27612699252335066, 0.27757347320315484, 0.27757347320315484, 0.27757347320315484, 0.27757347320315484, 0.27757347320315484, 0.27757347320315484, 0.27757347320315484, 0.27757347320315484, 0.27757347320315484, 0.27757347320315484, 0.27757347320315484, 0.27757347320315484, 0.27757347320315484, 0.27757347320315484, 0.27757347320315484, 0.27902274901644525, 0.27902274901644525, 0.27902274901644525, 0.27902274901644525, 0.2804748307865951, 0.2804748307865951, 0.2804748307865951, 0.2804748307865951, 0.2804748307865951, 0.28192972939996486, 0.28192972939996486, 0.28338745580639324, 0.28338745580639324, 0.28338745580639324, 0.28484802101968987, 0.28484802101968987, 0.28484802101968987, 0.28484802101968987, 0.28631143611813614, 0.28777771224498877, 0.28777771224498877, 0.28777771224498877, 0.28777771224498877, 0.28777771224498877, 0.28777771224498877, 0.28777771224498877, 0.28777771224498877, 0.28777771224498877, 0.28924686060898847, 0.28924686060898847, 0.28924686060898847, 0.28924686060898847, 0.2907188924848749, 0.2907188924848749, 0.29219381921390564, 0.29219381921390564, 0.29367165220437963, 0.29367165220437963, 0.29367165220437963, 0.29367165220437963, 0.29367165220437963, 0.2966360829412472, 0.2966360829412472, 0.29812270384424056, 0.29812270384424056, 0.29812270384424056, 0.29812270384424056, 0.29812270384424056, 0.29812270384424056, 0.29812270384424056, 0.2996122773229626, 0.2996122773229626, 0.2996122773229626, 0.2996122773229626, 0.2996122773229626, 0.2996122773229626, 0.3011048151289702, 0.3011048151289702, 0.3011048151289702, 0.3011048151289702, 0.3011048151289702, 0.3011048151289702, 0.3011048151289702, 0.3011048151289702, 0.3011048151289702, 0.3011048151289702, 0.30409883108112323, 0.30409883108112323, 0.30409883108112323, 0.30260032908411844, 0.30260032908411844, 0.30409883108112323, 0.30409883108112323, 0.30409883108112323, 0.3056003330841281, 0.3056003330841281, 0.3056003330841281, 0.3056003330841281, 0.3056003330841281, 0.3056003330841281, 0.3056003330841281, 0.3056003330841281, 0.3056003330841281, 0.3056003330841281, 0.3056003330841281, 0.3056003330841281, 0.3071048471292773, 0.3071048471292773, 0.3071048471292773, 0.3071048471292773, 0.3071048471292773, 0.3071048471292773, 0.3071048471292773, 0.3071048471292773, 0.3071048471292773, 0.3071048471292773, 0.3071048471292773, 0.3071048471292773, 0.3071048471292773, 0.3071048471292773, 0.3071048471292773, 0.30861238532529545, 0.30861238532529545, 0.3101229598540715, 0.3101229598540715, 0.3101229598540715, 0.3101229598540715, 0.3101229598540715, 0.3101229598540715, 0.3101229598540715, 0.31163658297124935, 0.31163658297124935, 0.31163658297124935, 0.31163658297124935, 0.31163658297124935, 0.31163658297124935, 0.31163658297124935, 0.31163658297124935, 0.31163658297124935, 0.3131532670068251, 0.3131532670068251, 0.3131532670068251, 0.3131532670068251, 0.3131532670068251, 0.3131532670068251, 0.3131532670068251, 0.31163658297124935, 0.3131532670068251, 0.3131532670068251, 0.3131532670068251, 0.3131532670068251, 0.3131532670068251, 0.3131532670068251, 0.3131532670068251, 0.3131532670068251, 0.3131532670068251, 0.31163658297124935, 0.31163658297124935, 0.31163658297124935, 0.31163658297124935, 0.3131532670068251, 0.3131532670068251, 0.3146730243657495, 0.31619586752853596, 0.31619586752853596, 0.31619586752853596, 0.31619586752853596, 0.31619586752853596, 0.31619586752853596, 0.3177218090518766, 0.3177218090518766, 0.3177218090518766, 0.3177218090518766, 0.31925086156926286, 0.31925086156926286, 0.31925086156926286, 0.31925086156926286, 0.31925086156926286, 0.31925086156926286, 0.31925086156926286, 0.31925086156926286, 0.31925086156926286, 0.3177218090518766, 0.3177218090518766, 0.31925086156926286, 0.31925086156926286, 0.31925086156926286, 0.31925086156926286, 0.31925086156926286, 0.32078303779161305, 0.32078303779161305, 0.32231835050790664, 0.32385681258582477, 0.32385681258582477, 0.32539843697239673, 0.32539843697239673, 0.32539843697239673, 0.32539843697239673, 0.32539843697239673, 0.32539843697239673, 0.32539843697239673, 0.32849122486029336, 0.32849122486029336, 0.32849122486029336, 0.32849122486029336, 0.33004241465833756, 0.33004241465833756, 0.33004241465833756, 0.33004241465833756, 0.33004241465833756, 0.3315968193598168, 0.3315968193598168, 0.3315968193598168, 0.3315968193598168, 0.3315968193598168, 0.3315968193598168, 0.3315968193598168, 0.3315968193598168, 0.3315968193598168, 0.33315445231844626, 0.33315445231844626, 0.33315445231844626, 0.3347153269713146, 0.3347153269713146, 0.3347153269713146, 0.3347153269713146, 0.3347153269713146, 0.3347153269713146, 0.3362794568395806, 0.33784685552917515, 0.33784685552917515, 0.33784685552917515, 0.3362794568395806, 0.3362794568395806, 0.3362794568395806, 0.33941753673151115, 0.33941753673151115, 0.33941753673151115, 0.33941753673151115, 0.33941753673151115, 0.33941753673151115, 0.33941753673151115, 0.33941753673151115, 0.33941753673151115, 0.33941753673151115, 0.33941753673151115, 0.33941753673151115, 0.33941753673151115, 0.33941753673151115, 0.33941753673151115, 0.33941753673151115, 0.33941753673151115, 0.33941753673151115, 0.33941753673151115, 0.33941753673151115, 0.33941753673151115, 0.34099151422420204, 0.34099151422420204, 0.34099151422420204, 0.34256880187178623, 0.34256880187178623, 0.34256880187178623, 0.34256880187178623, 0.34256880187178623, 0.34256880187178623, 0.34256880187178623, 0.34256880187178623, 0.34256880187178623, 0.34256880187178623, 0.34256880187178623, 0.34256880187178623, 0.34256880187178623, 0.34256880187178623, 0.34256880187178623, 0.34256880187178623, 0.34414941362645973, 0.34414941362645973, 0.34414941362645973, 0.34414941362645973, 0.34573336352881734, 0.34573336352881734, 0.34414941362645973, 0.34414941362645973, 0.34414941362645973, 0.34414941362645973, 0.34414941362645973, 0.34573336352881734, 0.34573336352881734, 0.34573336352881734, 0.34573336352881734, 0.34573336352881734, 0.3473206657086006, 0.3473206657086006, 0.3489113343854538, 0.3505053838696889, 0.3521028285630576, 0.3521028285630576, 0.3537036829595319, 0.3537036829595319, 0.3537036829595319, 0.3537036829595319, 0.3537036829595319, 0.3537036829595319, 0.3521028285630576, 0.3521028285630576, 0.3553079616460941, 0.3553079616460941, 0.3553079616460941, 0.35691567930353263, 0.35691567930353263, 0.35691567930353263, 0.35691567930353263, 0.35691567930353263, 0.35691567930353263, 0.35691567930353263, 0.35691567930353263, 0.35691567930353263, 0.35691567930353263, 0.35691567930353263, 0.35691567930353263, 0.3585268507072497, 0.3585268507072497, 0.3585268507072497, 0.3585268507072497, 0.3585268507072497, 0.3585268507072497, 0.3585268507072497, 0.3585268507072497, 0.3585268507072497, 0.3601414907280756, 0.3601414907280756, 0.3601414907280756, 0.3601414907280756, 0.3601414907280756, 0.3633812365864628, 0.3633812365864628, 0.3633812365864628, 0.3633812365864628, 0.3650063726502807, 0.3650063726502807, 0.3650063726502807, 0.3650063726502807, 0.3650063726502807, 0.3650063726502807, 0.3650063726502807, 0.3650063726502807, 0.3650063726502807, 0.3650063726502807, 0.3650063726502807, 0.3650063726502807, 0.3650063726502807, 0.3650063726502807, 0.3650063726502807, 0.3650063726502807, 0.3650063726502807, 0.3650063726502807, 0.3650063726502807, 0.3650063726502807, 0.3650063726502807, 0.3650063726502807, 0.3650063726502807, 0.3650063726502807, 0.3650063726502807, 0.3650063726502807, 0.3650063726502807, 0.3650063726502807, 0.3666350377854115, 0.3650063726502807, 0.3650063726502807, 0.3650063726502807, 0.3650063726502807, 0.3666350377854115, 0.3666350377854115, 0.3666350377854115, 0.3666350377854115, 0.3666350377854115, 0.3666350377854115, 0.3666350377854115, 0.3666350377854115, 0.3666350377854115, 0.3666350377854115, 0.3666350377854115, 0.3666350377854115, 0.3666350377854115, 0.3666350377854115, 0.3650063726502807, 0.3650063726502807, 0.3650063726502807, 0.3650063726502807, 0.3650063726502807, 0.3650063726502807, 0.3666350377854115, 0.3666350377854115, 0.3682672473523581, 0.3682672473523581, 0.3682672473523581, 0.3682672473523581, 0.3682672473523581, 0.3682672473523581, 0.3682672473523581, 0.3682672473523581, 0.36990301681212834, 0.36990301681212834, 0.36990301681212834, 0.36990301681212834, 0.36990301681212834, 0.36990301681212834, 0.36990301681212834, 0.37154236172711347, 0.37154236172711347, 0.3731852977619774, 0.3731852977619774, 0.3731852977619774, 0.37154236172711347, 0.37154236172711347, 0.37154236172711347, 0.3748318406845542, 0.3748318406845542, 0.3748318406845542, 0.3748318406845542, 0.3748318406845542, 0.3748318406845542, 0.3731852977619774, 0.3731852977619774, 0.3731852977619774, 0.3731852977619774, 0.3731852977619774, 0.3731852977619774, 0.3731852977619774, 0.3731852977619774, 0.3731852977619774, 0.3731852977619774, 0.3731852977619774, 0.3731852977619774, 0.3748318406845542, 0.3748318406845542, 0.3748318406845542, 0.3748318406845542, 0.376482006366756, 0.376482006366756, 0.376482006366756, 0.376482006366756, 0.376482006366756, 0.376482006366756, 0.376482006366756, 0.3748318406845542, 0.3748318406845542, 0.3748318406845542, 0.3748318406845542, 0.3748318406845542, 0.3748318406845542, 0.376482006366756, 0.37813581078549147, 0.376482006366756, 0.37813581078549147, 0.37813581078549147, 0.37813581078549147, 0.37979327002359364, 0.37979327002359364, 0.3814544002707583, 0.3814544002707583, 0.3814544002707583, 0.3814544002707583, 0.3831192178244929, 0.3831192178244929, 0.3831192178244929, 0.3831192178244929, 0.3831192178244929, 0.3831192178244929, 0.3831192178244929, 0.3831192178244929, 0.3831192178244929, 0.3831192178244929, 0.3831192178244929, 0.3831192178244929, 0.3831192178244929, 0.3831192178244929, 0.3831192178244929, 0.38478773909107633, 0.38478773909107633, 0.38478773909107633, 0.38645998058652814, 0.38645998058652814, 0.38645998058652814, 0.38645998058652814, 0.38813595893759034, 0.38813595893759034, 0.38813595893759034, 0.38813595893759034, 0.38813595893759034, 0.3914991932730869, 0.3914991932730869, 0.3931864830735984, 0.3931864830735984, 0.3931864830735984, 0.3931864830735984, 0.3931864830735984, 0.3931864830735984, 0.3948775773639154, 0.3948775773639154, 0.3948775773639154, 0.3948775773639154, 0.3948775773639154, 0.3948775773639154, 0.3948775773639154, 0.3948775773639154, 0.3931864830735984, 0.3931864830735984, 0.3948775773639154, 0.3948775773639154, 0.3948775773639154, 0.3948775773639154, 0.3948775773639154, 0.3948775773639154, 0.3948775773639154, 0.3948775773639154, 0.3948775773639154, 0.3948775773639154, 0.3948775773639154, 0.3948775773639154, 0.3948775773639154, 0.39657249333949346, 0.39657249333949346, 0.39657249333949346, 0.39657249333949346, 0.39657249333949346, 0.3982712483126325, 0.3982712483126325, 0.3982712483126325, 0.399973859713537, 0.399973859713537, 0.399973859713537, 0.40168034509138856, 0.40168034509138856, 0.40168034509138856, 0.40168034509138856, 0.40168034509138856, 0.40168034509138856, 0.40168034509138856, 0.40168034509138856, 0.40168034509138856, 0.40168034509138856, 0.40168034509138856, 0.40168034509138856, 0.40168034509138856, 0.40168034509138856, 0.40168034509138856, 0.40168034509138856, 0.40168034509138856, 0.40168034509138856, 0.40168034509138856, 0.40168034509138856, 0.40168034509138856, 0.40168034509138856, 0.399973859713537, 0.40168034509138856, 0.4033907221154324, 0.4033907221154324, 0.4033907221154324, 0.4033907221154324, 0.4033907221154324, 0.4033907221154324, 0.4033907221154324, 0.4033907221154324, 0.4033907221154324, 0.4033907221154324, 0.40510500857607445, 0.4033907221154324, 0.40168034509138856, 0.40168034509138856, 0.40168034509138856, 0.40168034509138856, 0.40168034509138856, 0.40168034509138856, 0.40168034509138856, 0.40168034509138856, 0.40168034509138856, 0.40168034509138856, 0.40168034509138856, 0.40168034509138856, 0.40168034509138856, 0.40168034509138856, 0.40168034509138856, 0.40168034509138856, 0.4033907221154324, 0.4033907221154324, 0.4033907221154324, 0.4033907221154324, 0.4033907221154324, 0.4033907221154324, 0.4033907221154324, 0.40510500857607445, 0.40510500857607445, 0.40510500857607445, 0.40510500857607445, 0.40510500857607445, 0.40682322238599133, 0.40682322238599133, 0.40682322238599133, 0.40682322238599133, 0.40682322238599133, 0.40682322238599133, 0.408545381581254, 0.408545381581254, 0.408545381581254, 0.408545381581254, 0.408545381581254, 0.408545381581254, 0.4102715043224634, 0.4102715043224634, 0.4102715043224634, 0.41200160889589965, 0.4154738373199563, 0.4154738373199563, 0.4154738373199563, 0.41721599838206097, 0.41721599838206097, 0.41721599838206097, 0.41721599838206097, 0.41721599838206097, 0.41721599838206097, 0.41721599838206097, 0.41721599838206097, 0.41721599838206097, 0.41721599838206097, 0.41721599838206097, 0.41721599838206097, 0.41721599838206097, 0.41721599838206097, 0.4154738373199563, 0.41721599838206097, 0.41721599838206097, 0.41721599838206097, 0.41721599838206097, 0.4154738373199563, 0.4154738373199563, 0.4154738373199563, 0.4154738373199563, 0.4154738373199563, 0.4154738373199563, 0.4154738373199563, 0.4154738373199563, 0.4154738373199563, 0.4154738373199563, 0.4137357137146842, 0.4137357137146842, 0.4137357137146842, 0.4137357137146842, 0.4137357137146842, 0.4137357137146842, 0.4137357137146842, 0.4137357137146842, 0.4137357137146842, 0.4137357137146842, 0.4154738373199563, 0.4154738373199563, 0.4154738373199563, 0.41721599838206097, 0.41721599838206097, 0.41721599838206097, 0.41721599838206097, 0.41721599838206097, 0.41721599838206097, 0.41721599838206097, 0.41721599838206097, 0.41721599838206097, 0.41721599838206097, 0.41721599838206097, 0.41721599838206097, 0.41721599838206097, 0.41721599838206097, 0.4189622157017543, 0.4189622157017543, 0.4189622157017543, 0.4189622157017543, 0.4189622157017543, 0.4189622157017543, 0.4189622157017543, 0.4189622157017543, 0.4189622157017543, 0.4189622157017543, 0.4189622157017543, 0.41721599838206097, 0.41721599838206097, 0.41721599838206097, 0.41721599838206097, 0.41721599838206097, 0.41721599838206097, 0.4189622157017543, 0.4189622157017543, 0.4189622157017543, 0.4207125082114195, 0.4207125082114195, 0.4207125082114195, 0.42246689497629863, 0.42246689497629863, 0.42246689497629863, 0.42246689497629863, 0.42246689497629863, 0.42246689497629863, 0.42246689497629863, 0.42246689497629863, 0.42246689497629863, 0.42246689497629863, 0.42246689497629863, 0.42246689497629863, 0.42246689497629863, 0.42246689497629863, 0.42246689497629863, 0.42246689497629863, 0.42246689497629863, 0.42246689497629863, 0.4242253951957392, 0.4242253951957392, 0.4242253951957392, 0.4242253951957392, 0.4242253951957392, 0.4242253951957392, 0.4242253951957392, 0.4242253951957392, 0.4242253951957392, 0.42598802820445447, 0.42598802820445447, 0.42598802820445447, 0.42598802820445447, 0.42775481347379873, 0.42775481347379873, 0.4295257706130585, 0.4313009193707582, 0.4313009193707582, 0.4313009193707582, 0.4313009193707582, 0.4313009193707582, 0.4313009193707582, 0.4313009193707582, 0.4313009193707582, 0.4313009193707582, 0.4313009193707582, 0.4313009193707582, 0.4313009193707582, 0.4313009193707582, 0.4313009193707582, 0.4313009193707582, 0.4313009193707582, 0.4313009193707582, 0.4313009193707582, 0.4313009193707582, 0.4313009193707582, 0.4313009193707582, 0.4313009193707582, 0.4313009193707582, 0.4313009193707582, 0.4313009193707582, 0.4313009193707582, 0.4313009193707582, 0.4313009193707582, 0.4313009193707582, 0.433080279635981, 0.433080279635981, 0.433080279635981, 0.433080279635981, 0.433080279635981, 0.433080279635981, 0.433080279635981, 0.433080279635981, 0.4348638714397065, 0.4366517149561638, 0.4384438305041999, 0.4384438305041999, 0.4366517149561638, 0.4366517149561638, 0.4366517149561638, 0.4366517149561638, 0.4384438305041999, 0.4384438305041999, 0.440240238548666, 0.440240238548666, 0.440240238548666, 0.440240238548666, 0.440240238548666, 0.440240238548666, 0.440240238548666, 0.44204095970181967, 0.44204095970181967, 0.44204095970181967, 0.44204095970181967, 0.44204095970181967, 0.44204095970181967, 0.44204095970181967, 0.44204095970181967, 0.44204095970181967, 0.4438460147247434, 0.4438460147247434, 0.4438460147247434, 0.4438460147247434, 0.4438460147247434, 0.4438460147247434, 0.4456554245287812, 0.4456554245287812, 0.4456554245287812, 0.4456554245287812, 0.4456554245287812, 0.4456554245287812, 0.4456554245287812, 0.4456554245287812, 0.4474692101769926, 0.4474692101769926, 0.4474692101769926, 0.44928739288562225, 0.44928739288562225, 0.44928739288562225, 0.44928739288562225, 0.4474692101769926, 0.44928739288562225, 0.44928739288562225, 0.45110999402559104, 0.45110999402559104, 0.45110999402559104, 0.45110999402559104, 0.45110999402559104, 0.45110999402559104, 0.45110999402559104, 0.45110999402559104, 0.45110999402559104, 0.45110999402559104, 0.45110999402559104, 0.45110999402559104, 0.45110999402559104, 0.45110999402559104, 0.45110999402559104, 0.45110999402559104, 0.45110999402559104, 0.45110999402559104, 0.45110999402559104, 0.45110999402559104, 0.45110999402559104, 0.45110999402559104, 0.45110999402559104, 0.45110999402559104, 0.45110999402559104, 0.45110999402559104, 0.45110999402559104, 0.45110999402559104, 0.45110999402559104, 0.45110999402559104, 0.45110999402559104, 0.45110999402559104, 0.45110999402559104, 0.45110999402559104, 0.45110999402559104, 0.4529370351240021, 0.4529370351240021, 0.4529370351240021, 0.4529370351240021, 0.4529370351240021, 0.4529370351240021, 0.4529370351240021, 0.4529370351240021, 0.4529370351240021, 0.4529370351240021, 0.4529370351240021, 0.4529370351240021, 0.4529370351240021, 0.4529370351240021, 0.4529370351240021, 0.4529370351240021, 0.4529370351240021, 0.45476853786566585, 0.45660452409464575, 0.45660452409464575, 0.45660452409464575, 0.45660452409464575, 0.45660452409464575, 0.4584450158158209, 0.4584450158158209, 0.46029003519646744, 0.46029003519646744, 0.46029003519646744, 0.46029003519646744, 0.46213960456786274, 0.46213960456786274, 0.4639937464269044, 0.4639937464269044, 0.4639937464269044, 0.4639937464269044, 0.4639937464269044, 0.4639937464269044, 0.4639937464269044, 0.4639937464269044, 0.4639937464269044, 0.4639937464269044, 0.4639937464269044, 0.4639937464269044, 0.4639937464269044, 0.4639937464269044, 0.4639937464269044, 0.4639937464269044, 0.4639937464269044, 0.4639937464269044, 0.4639937464269044, 0.46585248343775465, 0.46585248343775465, 0.46585248343775465, 0.46585248343775465, 0.46585248343775465, 0.46585248343775465, 0.46585248343775465, 0.4677158384335013, 0.4677158384335013, 0.46958383441784013, 0.46958383441784013, 0.46958383441784013, 0.47333384223036945, 0.47333384223036945, 0.47333384223036945, 0.47333384223036945, 0.47521590093443866, 0.47521590093443866, 0.47521590093443866, 0.47521590093443866, 0.47521590093443866, 0.47521590093443866, 0.47521590093443866, 0.47521590093443866, 0.47521590093443866, 0.47521590093443866, 0.47521590093443866, 0.47521590093443866, 0.47521590093443866, 0.47521590093443866, 0.47521590093443866, 0.47521590093443866, 0.47521590093443866, 0.47521590093443866, 0.47521590093443866, 0.47521590093443866, 0.47521590093443866, 0.47521590093443866, 0.47521590093443866, 0.47521590093443866, 0.47521590093443866, 0.47521590093443866, 0.47521590093443866, 0.47521590093443866, 0.47521590093443866, 0.4771026943823741, 0.4771026943823741, 0.4771026943823741, 0.4771026943823741, 0.4771026943823741, 0.4771026943823741, 0.4771026943823741, 0.4771026943823741, 0.4771026943823741, 0.4771026943823741, 0.4771026943823741, 0.4771026943823741, 0.4789942464569067, 0.4771026943823741, 0.4789942464569067, 0.48089058122192563, 0.4827917229243166, 0.4827917229243166, 0.4827917229243166, 0.4827917229243166, 0.48469769599582113, 0.48469769599582113, 0.48469769599582113, 0.48469769599582113, 0.48469769599582113, 0.48469769599582113, 0.48469769599582113, 0.48469769599582113, 0.48469769599582113, 0.48469769599582113, 0.48469769599582113, 0.48469769599582113, 0.48660852505492014, 0.48660852505492014, 0.48660852505492014, 0.48660852505492014, 0.48852423490874264, 0.48852423490874264, 0.48852423490874264, 0.48852423490874264, 0.48852423490874264, 0.48852423490874264, 0.48852423490874264, 0.48852423490874264, 0.48852423490874264, 0.48852423490874264, 0.48852423490874264, 0.48852423490874264, 0.48852423490874264, 0.48852423490874264, 0.48852423490874264, 0.48852423490874264, 0.48852423490874264, 0.48852423490874264, 0.48852423490874264, 0.490444850554998, 0.490444850554998, 0.490444850554998, 0.490444850554998, 0.490444850554998, 0.490444850554998, 0.4923703971839323, 0.4923703971839323, 0.490444850554998, 0.490444850554998, 0.4923703971839323, 0.4923703971839323, 0.4923703971839323, 0.4923703971839323, 0.4923703971839323, 0.4943009001803119, 0.4943009001803119, 0.4943009001803119, 0.4962363851254307, 0.4962363851254307, 0.4962363851254307, 0.4962363851254307, 0.4962363851254307, 0.4962363851254307, 0.4981768777991439, 0.5001224041819288, 0.5001224041819288, 0.5001224041819288, 0.5001224041819288, 0.5001224041819288, 0.5001224041819288, 0.502072990456972, 0.502072990456972, 0.502072990456972, 0.502072990456972, 0.502072990456972, 0.502072990456972, 0.502072990456972, 0.502072990456972, 0.502072990456972, 0.502072990456972, 0.502072990456972, 0.502072990456972, 0.502072990456972, 0.502072990456972, 0.502072990456972, 0.502072990456972, 0.502072990456972, 0.5040286630122826, 0.5040286630122826, 0.5059894484428356, 0.5059894484428356, 0.5040286630122826, 0.5040286630122826, 0.5040286630122826, 0.5040286630122826, 0.5040286630122826, 0.5040286630122826, 0.5040286630122826, 0.5040286630122826, 0.502072990456972, 0.502072990456972, 0.502072990456972, 0.502072990456972, 0.502072990456972, 0.502072990456972, 0.502072990456972, 0.502072990456972, 0.502072990456972, 0.502072990456972, 0.502072990456972, 0.502072990456972, 0.5040286630122826, 0.502072990456972, 0.502072990456972, 0.502072990456972, 0.502072990456972, 0.5040286630122826, 0.5040286630122826, 0.5040286630122826, 0.5040286630122826, 0.502072990456972, 0.502072990456972, 0.5040286630122826, 0.5040286630122826, 0.5040286630122826, 0.502072990456972, 0.502072990456972, 0.502072990456972, 0.502072990456972, 0.502072990456972, 0.502072990456972, 0.502072990456972, 0.502072990456972, 0.502072990456972, 0.502072990456972, 0.502072990456972, 0.502072990456972, 0.502072990456972, 0.5001224041819288, 0.5001224041819288, 0.5001224041819288, 0.5001224041819288, 0.5001224041819288, 0.5001224041819288, 0.5001224041819288, 0.5001224041819288, 0.5001224041819288, 0.502072990456972, 0.502072990456972, 0.502072990456972, 0.502072990456972, 0.5001224041819288, 0.5001224041819288, 0.5001224041819288, 0.5001224041819288, 0.5001224041819288, 0.5001224041819288, 0.5001224041819288, 0.5001224041819288, 0.5001224041819288, 0.5001224041819288, 0.5001224041819288, 0.5001224041819288, 0.5001224041819288, 0.5001224041819288, 0.502072990456972, 0.502072990456972, 0.502072990456972, 0.5001224041819288, 0.5001224041819288, 0.5001224041819288, 0.5001224041819288, 0.5001224041819288, 0.5001224041819288, 0.5001224041819288, 0.5001224041819288, 0.5001224041819288, 0.502072990456972, 0.502072990456972, 0.502072990456972, 0.502072990456972, 0.5040286630122826, 0.5040286630122826, 0.5040286630122826, 0.5059894484428356, 0.5079553735527413, 0.5079553735527413, 0.5079553735527413, 0.5099264653574435, 0.5099264653574435, 0.5119027510859472, 0.5119027510859472, 0.5119027510859472, 0.5119027510859472, 0.5119027510859472, 0.5119027510859472, 0.5119027510859472, 0.5119027510859472, 0.5119027510859472, 0.5138842581830763, 0.515871014311759, 0.515871014311759, 0.5178630473553462, 0.5198603854199589, 0.5198603854199589, 0.5198603854199589, 0.5198603854199589, 0.5198603854199589, 0.5178630473553462, 0.5178630473553462, 0.5178630473553462, 0.5178630473553462, 0.5178630473553462, 0.5178630473553462, 0.5178630473553462, 0.5178630473553462, 0.5178630473553462, 0.5178630473553462, 0.5178630473553462, 0.5178630473553462, 0.5198603854199589, 0.5178630473553462, 0.5198603854199589, 0.5198603854199589, 0.5198603854199589, 0.5178630473553462, 0.5178630473553462, 0.5178630473553462, 0.5198603854199589, 0.5198603854199589, 0.5198603854199589, 0.5198603854199589, 0.5198603854199589, 0.5198603854199589, 0.5198603854199589, 0.5198603854199589, 0.5198603854199589, 0.5198603854199589, 0.5178630473553462, 0.5178630473553462, 0.5178630473553462, 0.5178630473553462, 0.5178630473553462, 0.5178630473553462, 0.5178630473553462, 0.515871014311759, 0.5138842581830763, 0.5138842581830763, 0.5138842581830763, 0.5138842581830763, 0.5138842581830763, 0.5138842581830763, 0.5138842581830763, 0.5138842581830763, 0.5138842581830763, 0.5138842581830763, 0.5138842581830763, 0.5138842581830763, 0.515871014311759, 0.515871014311759, 0.515871014311759, 0.515871014311759, 0.5138842581830763, 0.5138842581830763, 0.515871014311759, 0.515871014311759, 0.5178630473553462, 0.5178630473553462, 0.5178630473553462, 0.5178630473553462, 0.515871014311759, 0.515871014311759, 0.515871014311759, 0.515871014311759, 0.515871014311759, 0.515871014311759, 0.515871014311759, 0.515871014311759, 0.515871014311759, 0.515871014311759, 0.515871014311759, 0.515871014311759, 0.515871014311759, 0.5178630473553462, 0.5178630473553462, 0.5178630473553462, 0.5178630473553462, 0.5178630473553462, 0.5178630473553462, 0.5178630473553462, 0.5178630473553462, 0.5178630473553462, 0.5178630473553462, 0.5178630473553462, 0.5178630473553462, 0.5178630473553462, 0.5178630473553462, 0.5178630473553462, 0.5178630473553462, 0.5178630473553462, 0.5178630473553462, 0.5178630473553462, 0.5178630473553462, 0.5178630473553462, 0.5178630473553462, 0.5178630473553462, 0.5198603854199589, 0.5198603854199589, 0.5198603854199589, 0.5198603854199589, 0.5198603854199589, 0.5198603854199589, 0.5198603854199589, 0.5198603854199589, 0.5198603854199589, 0.5198603854199589, 0.5178630473553462, 0.5178630473553462, 0.515871014311759, 0.515871014311759, 0.515871014311759, 0.515871014311759, 0.515871014311759, 0.5138842581830763, 0.5138842581830763, 0.5138842581830763, 0.5138842581830763, 0.5138842581830763, 0.5138842581830763, 0.5138842581830763, 0.5138842581830763, 0.515871014311759, 0.515871014311759, 0.515871014311759, 0.515871014311759, 0.515871014311759, 0.515871014311759, 0.515871014311759, 0.515871014311759, 0.515871014311759, 0.5138842581830763, 0.5138842581830763, 0.5138842581830763, 0.5138842581830763, 0.515871014311759, 0.5178630473553462, 0.5178630473553462, 0.5178630473553462, 0.5178630473553462, 0.5178630473553462, 0.5178630473553462, 0.5178630473553462, 0.5178630473553462, 0.5178630473553462, 0.5178630473553462, 0.5178630473553462, 0.5198603854199589, 0.5198603854199589, 0.5218630568368681, 0.5218630568368681, 0.5218630568368681, 0.5218630568368681, 0.5198603854199589, 0.5198603854199589, 0.5198603854199589, 0.5198603854199589, 0.5198603854199589, 0.5198603854199589, 0.5198603854199589, 0.5198603854199589, 0.5198603854199589, 0.5198603854199589, 0.5198603854199589, 0.5198603854199589, 0.5198603854199589, 0.5198603854199589, 0.5198603854199589, 0.5178630473553462, 0.5178630473553462, 0.5178630473553462, 0.5178630473553462, 0.5178630473553462, 0.5178630473553462, 0.5178630473553462, 0.5178630473553462, 0.5178630473553462, 0.5178630473553462, 0.5178630473553462, 0.5178630473553462, 0.5178630473553462, 0.5178630473553462, 0.5178630473553462, 0.5178630473553462, 0.5178630473553462, 0.5178630473553462, 0.5178630473553462, 0.5178630473553462, 0.5178630473553462, 0.5178630473553462, 0.5178630473553462, 0.5178630473553462, 0.5198603854199589, 0.5198603854199589, 0.5198603854199589, 0.5218630568368681, 0.5218630568368681, 0.5218630568368681, 0.5218630568368681, 0.5218630568368681, 0.5198603854199589, 0.5198603854199589, 0.5218630568368681, 0.5218630568368681, 0.5218630568368681, 0.5218630568368681, 0.5218630568368681, 0.5218630568368681, 0.5218630568368681, 0.5218630568368681, 0.5218630568368681, 0.5218630568368681, 0.5218630568368681, 0.5218630568368681, 0.5238710901649053, 0.5238710901649053, 0.5238710901649053, 0.5238710901649053, 0.5238710901649053, 0.5238710901649053, 0.5238710901649053, 0.5238710901649053, 0.5238710901649053, 0.5238710901649053, 0.5238710901649053, 0.5238710901649053, 0.5238710901649053, 0.5238710901649053, 0.5238710901649053, 0.5238710901649053, 0.5238710901649053, 0.5238710901649053, 0.5238710901649053, 0.5238710901649053, 0.5238710901649053, 0.5238710901649053, 0.5238710901649053, 0.5258845141929072, 0.5258845141929072, 0.5258845141929072, 0.5258845141929072, 0.5258845141929072, 0.5258845141929072, 0.5258845141929072, 0.5258845141929072, 0.5258845141929072, 0.5258845141929072, 0.5258845141929072, 0.5258845141929072, 0.5258845141929072, 0.5258845141929072, 0.5258845141929072, 0.5258845141929072, 0.5258845141929072, 0.5258845141929072, 0.5279033579421907, 0.5279033579421907, 0.5279033579421907, 0.5279033579421907, 0.5279033579421907, 0.5258845141929072, 0.5258845141929072, 0.5258845141929072, 0.5258845141929072, 0.5258845141929072, 0.5258845141929072, 0.5258845141929072, 0.5258845141929072, 0.5258845141929072, 0.5258845141929072, 0.5258845141929072, 0.5258845141929072, 0.5258845141929072, 0.5258845141929072, 0.5258845141929072, 0.5258845141929072, 0.5258845141929072, 0.5258845141929072, 0.5258845141929072, 0.5258845141929072, 0.5258845141929072, 0.5258845141929072, 0.5258845141929072, 0.5238710901649053, 0.5238710901649053, 0.5238710901649053, 0.5238710901649053, 0.5238710901649053, 0.5238710901649053, 0.5238710901649053, 0.5238710901649053, 0.5238710901649053, 0.5238710901649053, 0.5238710901649053, 0.5258845141929072, 0.5258845141929072, 0.5258845141929072, 0.5258845141929072, 0.5258845141929072, 0.5258845141929072, 0.5258845141929072, 0.5258845141929072, 0.5258845141929072, 0.5258845141929072, 0.5258845141929072, 0.5258845141929072, 0.5258845141929072, 0.5258845141929072, 0.5258845141929072, 0.5258845141929072, 0.5258845141929072, 0.5258845141929072, 0.5258845141929072, 0.5279033579421907, 0.5279033579421907, 0.5279033579421907, 0.5279033579421907, 0.5279033579421907, 0.5299276506690644, 0.5319574218673717, 0.5319574218673717, 0.5319574218673717, 0.5319574218673717, 0.5319574218673717, 0.5319574218673717, 0.5339927012710688, 0.5339927012710688, 0.5339927012710688, 0.5339927012710688, 0.5339927012710688, 0.5339927012710688, 0.5339927012710688, 0.5339927012710688, 0.5360335188568393, 0.5380799048467424, 0.5380799048467424, 0.5380799048467424, 0.5380799048467424, 0.5380799048467424, 0.5380799048467424, 0.5380799048467424, 0.5380799048467424, 0.5380799048467424, 0.5380799048467424, 0.5380799048467424, 0.5401318897108984, 0.5401318897108984, 0.5401318897108984, 0.5401318897108984, 0.5401318897108984, 0.5401318897108984, 0.5421895041702115, 0.544252779199129, 0.544252779199129, 0.544252779199129, 0.544252779199129, 0.544252779199129, 0.5421895041702115, 0.5421895041702115, 0.5421895041702115, 0.5421895041702115, 0.5421895041702115, 0.5421895041702115, 0.5421895041702115, 0.5421895041702115, 0.5421895041702115, 0.5421895041702115, 0.5421895041702115, 0.5421895041702115, 0.5421895041702115, 0.5421895041702115, 0.5421895041702115, 0.5421895041702115, 0.544252779199129, 0.544252779199129, 0.5463217460284387, 0.5463217460284387, 0.5483964361481063, 0.5504768813101504, 0.5504768813101504, 0.5504768813101504, 0.5504768813101504, 0.5504768813101504, 0.5525631135315578, 0.5525631135315578, 0.5525631135315578, 0.5525631135315578, 0.5525631135315578, 0.5525631135315578, 0.5525631135315578, 0.5525631135315578, 0.5525631135315578, 0.5525631135315578, 0.5525631135315578, 0.5525631135315578, 0.5525631135315578, 0.5525631135315578, 0.5546551650972418, 0.5546551650972418, 0.5567530685630377, 0.5567530685630377, 0.5567530685630377, 0.5567530685630377, 0.5588568567587442, 0.5588568567587442, 0.5588568567587442, 0.5588568567587442, 0.5588568567587442, 0.5588568567587442, 0.5609665627912052, 0.5609665627912052, 0.5609665627912052, 0.5609665627912052, 0.5609665627912052, 0.5609665627912052, 0.5630822200474362, 0.5630822200474362, 0.5630822200474362, 0.5652038621977945, 0.5652038621977945, 0.5673315231991942, 0.5673315231991942, 0.5673315231991942, 0.5673315231991942, 0.5694652372983677, 0.5694652372983677, 0.5716050390351726, 0.5716050390351726, 0.5716050390351726, 0.5716050390351726, 0.5716050390351726, 0.5716050390351726, 0.5716050390351726, 0.5716050390351726, 0.5716050390351726, 0.5716050390351726, 0.5716050390351726, 0.5716050390351726, 0.5716050390351726, 0.5737509632459467, 0.5737509632459467, 0.5737509632459467, 0.5737509632459467, 0.5737509632459467, 0.5737509632459467, 0.5759030450669114, 0.5759030450669114, 0.5759030450669114, 0.5737509632459467, 0.5759030450669114, 0.5759030450669114, 0.5759030450669114, 0.5759030450669114, 0.5759030450669114, 0.5759030450669114, 0.5759030450669114, 0.5759030450669114, 0.5759030450669114, 0.5759030450669114, 0.5759030450669114, 0.5759030450669114, 0.5759030450669114, 0.5759030450669114, 0.5780613199376228, 0.5759030450669114, 0.5759030450669114, 0.5780613199376228, 0.5780613199376228, 0.5802258236044738, 0.5802258236044738, 0.5802258236044738, 0.5802258236044738, 0.5802258236044738, 0.5823965921242473, 0.5823965921242473, 0.5823965921242473, 0.5823965921242473, 0.5823965921242473, 0.5823965921242473, 0.5823965921242473, 0.5823965921242473, 0.5823965921242473, 0.5823965921242473, 0.5823965921242473, 0.5823965921242473, 0.5823965921242473, 0.5823965921242473, 0.5823965921242473, 0.5823965921242473, 0.5823965921242473, 0.5823965921242473, 0.5823965921242473, 0.5823965921242473, 0.5823965921242473, 0.5802258236044738, 0.5823965921242473, 0.5823965921242473, 0.5823965921242473, 0.5823965921242473, 0.5823965921242473, 0.5823965921242473, 0.5823965921242473, 0.5845736618677183, 0.5845736618677183, 0.5845736618677183, 0.5845736618677183, 0.5845736618677183, 0.5845736618677183, 0.5845736618677183, 0.5845736618677183, 0.5845736618677183, 0.5845736618677183, 0.5845736618677183, 0.5845736618677183, 0.5845736618677183, 0.5845736618677183, 0.5845736618677183, 0.5845736618677183, 0.5845736618677183, 0.5867570695233121, 0.5867570695233121, 0.5867570695233121, 0.5867570695233121, 0.5867570695233121, 0.5867570695233121, 0.5867570695233121, 0.5867570695233121, 0.5867570695233121, 0.5867570695233121, 0.5867570695233121, 0.5867570695233121, 0.5867570695233121, 0.5911430469351293, 0.5933456916901118, 0.5933456916901118, 0.5933456916901118, 0.5933456916901118, 0.5933456916901118, 0.5933456916901118, 0.5933456916901118, 0.5955548243624293, 0.5955548243624293, 0.5955548243624293, 0.5977704832855029, 0.5977704832855029, 0.5977704832855029, 0.5977704832855029, 0.5977704832855029, 0.5977704832855029, 0.5977704832855029, 0.5999927071334957, 0.5999927071334957, 0.5977704832855029, 0.5977704832855029, 0.5977704832855029, 0.5977704832855029, 0.5977704832855029, 0.5977704832855029, 0.5977704832855029, 0.5977704832855029, 0.5977704832855029, 0.5977704832855029, 0.5977704832855029, 0.5977704832855029, 0.5977704832855029, 0.5977704832855029, 0.5977704832855029, 0.5977704832855029, 0.5999927071334957, 0.5999927071334957, 0.5999927071334957, 0.5999927071334957, 0.5999927071334957, 0.5999927071334957, 0.6022215349253638, 0.6022215349253638, 0.6022215349253638, 0.6044570060289671, 0.6044570060289671, 0.6044570060289671, 0.6044570060289671, 0.6044570060289671, 0.6044570060289671, 0.6066991601652417, 0.6066991601652417, 0.6066991601652417, 0.6066991601652417, 0.6066991601652417, 0.6089480374124341, 0.6089480374124341, 0.6112036782104006, 0.6112036782104006, 0.6112036782104006, 0.6112036782104006, 0.6112036782104006, 0.6112036782104006, 0.6134661233649699, 0.6134661233649699, 0.6134661233649699, 0.6134661233649699, 0.6134661233649699, 0.6134661233649699, 0.6134661233649699, 0.6134661233649699, 0.6134661233649699, 0.6134661233649699, 0.6134661233649699, 0.6134661233649699, 0.6157354140523725, 0.6157354140523725, 0.6157354140523725, 0.6157354140523725, 0.6157354140523725, 0.6157354140523725, 0.6157354140523725, 0.6134661233649699, 0.6134661233649699, 0.6134661233649699, 0.6134661233649699, 0.6134661233649699, 0.6134661233649699, 0.6134661233649699, 0.6134661233649699, 0.6134661233649699, 0.6134661233649699, 0.6134661233649699, 0.6134661233649699, 0.6134661233649699, 0.6134661233649699, 0.6157354140523725, 0.618011591823738, 0.618011591823738, 0.618011591823738, 0.618011591823738, 0.618011591823738, 0.618011591823738, 0.618011591823738, 0.618011591823738, 0.618011591823738, 0.618011591823738, 0.618011591823738, 0.618011591823738, 0.618011591823738, 0.618011591823738, 0.618011591823738, 0.6202946986096592, 0.6202946986096592, 0.6202946986096592, 0.6202946986096592, 0.6202946986096592, 0.6202946986096592, 0.6202946986096592, 0.6202946986096592, 0.6202946986096592, 0.6202946986096592, 0.6202946986096592, 0.6202946986096592, 0.6225847767248269, 0.6248818688727362, 0.6248818688727362, 0.6248818688727362, 0.6248818688727362, 0.6248818688727362, 0.6271860181504639, 0.6271860181504639, 0.6271860181504639, 0.6271860181504639, 0.6271860181504639, 0.6271860181504639, 0.6271860181504639, 0.6271860181504639, 0.6271860181504639, 0.6271860181504639, 0.6271860181504639, 0.6271860181504639, 0.6271860181504639, 0.6271860181504639, 0.6271860181504639, 0.6271860181504639, 0.6271860181504639, 0.62949726805352, 0.62949726805352, 0.62949726805352, 0.62949726805352, 0.62949726805352, 0.62949726805352, 0.6318156624807745, 0.6318156624807745, 0.6318156624807745, 0.6318156624807745, 0.6318156624807745, 0.6318156624807745, 0.6318156624807745, 0.6318156624807745, 0.6318156624807745, 0.6318156624807745, 0.6318156624807745, 0.6318156624807745, 0.6318156624807745, 0.6318156624807745, 0.6341412457394608, 0.6341412457394608, 0.6341412457394608, 0.6341412457394608, 0.6341412457394608, 0.6341412457394608, 0.6341412457394608, 0.6341412457394608, 0.6364740625502551, 0.6364740625502551, 0.6364740625502551, 0.6364740625502551, 0.6364740625502551, 0.6364740625502551, 0.6364740625502551, 0.6364740625502551, 0.6364740625502551, 0.6364740625502551, 0.6364740625502551, 0.6364740625502551, 0.6364740625502551, 0.6364740625502551, 0.6364740625502551, 0.6364740625502551, 0.6364740625502551, 0.6411615778091336, 0.6411615778091336, 0.6411615778091336, 0.6411615778091336, 0.6411615778091336, 0.6411615778091336, 0.6411615778091336, 0.6411615778091336, 0.6435163678126344, 0.6435163678126344, 0.6411615778091336, 0.6411615778091336, 0.6411615778091336, 0.6411615778091336, 0.6411615778091336, 0.6435163678126344, 0.6435163678126344, 0.6435163678126344, 0.6435163678126344, 0.6435163678126344, 0.6458785744898065, 0.6458785744898065, 0.6458785744898065, 0.6458785744898065, 0.6435163678126344, 0.6435163678126344, 0.6435163678126344, 0.6435163678126344, 0.6435163678126344, 0.6458785744898065, 0.6458785744898065, 0.6458785744898065, 0.648248244707583, 0.648248244707583, 0.648248244707583, 0.648248244707583, 0.648248244707583, 0.648248244707583, 0.648248244707583, 0.6506254257785422, 0.6506254257785422, 0.6506254257785422, 0.6506254257785422, 0.6506254257785422, 0.6506254257785422, 0.653010165466577, 0.653010165466577, 0.653010165466577, 0.653010165466577, 0.653010165466577, 0.653010165466577, 0.653010165466577, 0.6554025119926521, 0.6554025119926521, 0.6554025119926521, 0.6554025119926521, 0.6578025140406553, 0.6602102207633413, 0.6602102207633413, 0.6602102207633413, 0.6602102207633413, 0.6626256817883731, 0.6626256817883731, 0.6626256817883731, 0.6626256817883731, 0.6626256817883731, 0.6626256817883731, 0.6626256817883731, 0.6626256817883731, 0.6626256817883731, 0.6626256817883731, 0.6626256817883731, 0.6626256817883731, 0.665048947224458, 0.665048947224458, 0.665048947224458, 0.665048947224458, 0.667480067667586, 0.667480067667586, 0.667480067667586, 0.667480067667586, 0.667480067667586, 0.667480067667586, 0.667480067667586, 0.667480067667586, 0.6699190942073692, 0.6699190942073692, 0.6699190942073692, 0.6699190942073692, 0.6699190942073692, 0.6699190942073692, 0.6699190942073692, 0.6699190942073692, 0.6699190942073692, 0.6699190942073692, 0.6699190942073692, 0.6699190942073692, 0.6699190942073692, 0.6699190942073692, 0.6699190942073692, 0.6699190942073692, 0.6723660784334814, 0.6723660784334814, 0.6723660784334814, 0.6723660784334814, 0.6723660784334814, 0.6772841288431009, 0.6772841288431009, 0.6772841288431009, 0.6772841288431009, 0.6772841288431009, 0.6772841288431009, 0.6797553007657402, 0.6797553007657402, 0.6797553007657402, 0.6797553007657402, 0.6822346418666148, 0.6822346418666148, 0.6822346418666148, 0.6822346418666148, 0.6847222063361103, 0.6847222063361103, 0.6847222063361103, 0.6847222063361103, 0.6847222063361103, 0.6847222063361103, 0.6847222063361103, 0.6847222063361103, 0.6822346418666148, 0.6822346418666148, 0.6822346418666148, 0.6822346418666148, 0.6822346418666148, 0.6822346418666148, 0.6822346418666148, 0.6822346418666148, 0.6822346418666148, 0.6822346418666148, 0.6822346418666148, 0.6822346418666148, 0.6822346418666148, 0.6822346418666148, 0.6822346418666148, 0.6822346418666148, 0.6822346418666148, 0.6797553007657402, 0.6797553007657402, 0.6797553007657402, 0.6797553007657402, 0.6797553007657402, 0.6797553007657402, 0.6797553007657402, 0.6797553007657402, 0.6797553007657402, 0.6797553007657402, 0.6822346418666148, 0.6822346418666148, 0.6822346418666148, 0.6822346418666148, 0.6822346418666148, 0.6822346418666148, 0.6822346418666148, 0.6822346418666148, 0.6822346418666148, 0.6822346418666148, 0.6822346418666148, 0.6822346418666148, 0.6847222063361103, 0.6847222063361103, 0.6847222063361103, 0.6847222063361103, 0.6847222063361103, 0.6847222063361103, 0.6847222063361103, 0.6847222063361103, 0.6847222063361103, 0.6847222063361103, 0.6847222063361103, 0.6847222063361103, 0.6872180489056162, 0.6872180489056162, 0.6872180489056162, 0.6872180489056162, 0.6847222063361103, 0.6847222063361103, 0.6847222063361103, 0.6847222063361103, 0.6847222063361103, 0.6847222063361103, 0.6847222063361103, 0.6847222063361103, 0.6847222063361103, 0.6847222063361103, 0.6847222063361103, 0.6847222063361103, 0.6847222063361103, 0.6847222063361103, 0.6847222063361103, 0.6847222063361103, 0.6847222063361103, 0.6847222063361103, 0.6847222063361103, 0.6847222063361103, 0.6847222063361103, 0.6847222063361103, 0.6847222063361103, 0.6847222063361103, 0.6847222063361103, 0.6847222063361103, 0.6847222063361103, 0.6847222063361103, 0.6847222063361103, 0.6847222063361103, 0.6847222063361103, 0.6847222063361103, 0.6847222063361103, 0.6847222063361103, 0.6847222063361103, 0.6847222063361103, 0.6847222063361103, 0.6847222063361103, 0.6847222063361103, 0.6847222063361103, 0.6847222063361103, 0.6847222063361103, 0.6847222063361103, 0.6847222063361103, 0.6872180489056162, 0.6872180489056162, 0.6872180489056162, 0.6872180489056162, 0.6872180489056162, 0.6872180489056162, 0.6872180489056162, 0.6872180489056162, 0.6872180489056162, 0.6872180489056162, 0.6872180489056162, 0.6872180489056162, 0.6847222063361103, 0.6847222063361103, 0.6847222063361103, 0.6847222063361103, 0.6847222063361103, 0.6847222063361103, 0.6847222063361103, 0.6847222063361103, 0.6847222063361103, 0.6847222063361103, 0.6847222063361103, 0.6822346418666148, 0.6822346418666148, 0.6822346418666148, 0.6822346418666148, 0.6847222063361103, 0.6847222063361103, 0.6847222063361103, 0.6847222063361103, 0.6847222063361103, 0.6847222063361103, 0.6847222063361103, 0.6847222063361103, 0.6847222063361103, 0.6847222063361103, 0.6847222063361103, 0.6847222063361103, 0.6872180489056162, 0.6872180489056162, 0.6872180489056162, 0.6872180489056162, 0.6872180489056162, 0.6922347900187138, 0.6922347900187138, 0.6922347900187138, 0.6922347900187138, 0.6922347900187138, 0.6947558007957424, 0.6947558007957424, 0.6947558007957424, 0.6947558007957424, 0.6972853141547217, 0.6998233876429023, 0.6998233876429023, 0.6998233876429023, 0.7023700793937558, 0.7023700793937558, 0.7023700793937558, 0.7023700793937558, 0.7023700793937558, 0.7023700793937558, 0.7023700793937558, 0.7023700793937558, 0.6998233876429023, 0.6998233876429023, 0.6998233876429023, 0.6998233876429023, 0.6998233876429023, 0.6998233876429023, 0.6998233876429023, 0.6998233876429023, 0.6998233876429023, 0.6998233876429023, 0.7023700793937558, 0.7023700793937558, 0.7023700793937558, 0.7023700793937558, 0.7023700793937558, 0.7023700793937558, 0.7049254481349665, 0.7049254481349665, 0.7049254481349665, 0.7023700793937558, 0.6998233876429023, 0.6972853141547217, 0.6972853141547217, 0.6972853141547217, 0.6972853141547217, 0.6972853141547217, 0.6972853141547217, 0.6972853141547217, 0.6972853141547217, 0.6972853141547217, 0.6972853141547217, 0.6972853141547217, 0.6972853141547217, 0.6972853141547217, 0.6972853141547217, 0.6972853141547217, 0.6972853141547217, 0.6972853141547217, 0.6972853141547217, 0.6972853141547217, 0.6998233876429023, 0.6998233876429023, 0.6998233876429023, 0.6998233876429023, 0.6998233876429023, 0.6998233876429023, 0.6998233876429023, 0.6998233876429023, 0.6998233876429023, 0.6998233876429023, 0.6998233876429023, 0.6998233876429023, 0.6998233876429023, 0.6998233876429023, 0.7023700793937558, 0.7023700793937558, 0.7023700793937558, 0.7023700793937558, 0.7023700793937558, 0.7023700793937558, 0.7023700793937558, 0.7049254481349665, 0.7049254481349665, 0.7049254481349665, 0.7049254481349665, 0.7049254481349665, 0.7049254481349665, 0.7049254481349665, 0.7049254481349665, 0.7049254481349665, 0.7049254481349665, 0.7049254481349665, 0.7049254481349665, 0.7049254481349665, 0.7049254481349665, 0.7074895531965558, 0.7074895531965558, 0.7074895531965558, 0.7074895531965558, 0.7074895531965558, 0.7074895531965558, 0.7074895531965558, 0.7049254481349665, 0.7049254481349665, 0.7049254481349665, 0.7074895531965558, 0.7074895531965558, 0.7074895531965558, 0.7074895531965558, 0.7100624545191476, 0.7126442126623772, 0.7126442126623772, 0.7126442126623772, 0.7126442126623772, 0.715234888813443, 0.715234888813443, 0.715234888813443, 0.715234888813443, 0.715234888813443, 0.715234888813443, 0.715234888813443, 0.715234888813443, 0.7126442126623772, 0.7178345447958077, 0.7178345447958077, 0.7178345447958077, 0.7178345447958077, 0.7178345447958077, 0.7178345447958077, 0.7178345447958077, 0.7204432430780512, 0.7204432430780512, 0.7204432430780512, 0.7204432430780512, 0.7204432430780512, 0.7204432430780512, 0.7204432430780512, 0.7204432430780512, 0.7204432430780512, 0.7204432430780512, 0.7204432430780512, 0.7204432430780512, 0.7204432430780512, 0.7204432430780512, 0.7204432430780512, 0.7204432430780512, 0.7204432430780512, 0.7204432430780512, 0.7204432430780512, 0.7204432430780512, 0.7204432430780512, 0.7204432430780512, 0.7204432430780512, 0.7204432430780512, 0.7204432430780512, 0.7204432430780512, 0.7204432430780512, 0.7230610467828777, 0.7230610467828777, 0.7230610467828777, 0.7230610467828777, 0.7230610467828777, 0.7256880196962792, 0.7256880196962792, 0.7230610467828777, 0.7230610467828777, 0.7230610467828777, 0.7230610467828777, 0.7230610467828777, 0.7230610467828777, 0.7230610467828777, 0.7230610467828777, 0.7230610467828777, 0.7230610467828777, 0.7204432430780512, 0.7204432430780512, 0.7230610467828777, 0.7230610467828777, 0.7230610467828777, 0.7256880196962792, 0.7256880196962792, 0.7256880196962792, 0.7256880196962792, 0.7256880196962792, 0.7256880196962792, 0.7256880196962792, 0.7256880196962792, 0.7256880196962792, 0.7256880196962792, 0.7256880196962792, 0.7256880196962792, 0.7256880196962792, 0.7256880196962792, 0.7256880196962792, 0.7256880196962792, 0.7256880196962792, 0.7256880196962792, 0.7256880196962792, 0.7256880196962792, 0.7256880196962792, 0.7256880196962792, 0.7256880196962792, 0.7230610467828777, 0.7230610467828777, 0.7230610467828777, 0.7230610467828777, 0.7230610467828777, 0.7204432430780512, 0.7204432430780512, 0.7204432430780512, 0.7204432430780512, 0.7204432430780512, 0.7204432430780512, 0.7204432430780512, 0.7204432430780512, 0.7204432430780512, 0.7204432430780512, 0.7204432430780512, 0.7204432430780512, 0.7204432430780512, 0.7204432430780512, 0.7204432430780512, 0.7204432430780512, 0.7204432430780512, 0.7204432430780512, 0.7204432430780512, 0.7204432430780512, 0.7204432430780512, 0.7204432430780512, 0.7204432430780512, 0.7204432430780512, 0.7204432430780512, 0.7204432430780512, 0.7204432430780512, 0.7204432430780512, 0.7204432430780512, 0.7204432430780512, 0.7204432430780512, 0.7204432430780512, 0.7204432430780512, 0.7204432430780512, 0.7204432430780512, 0.7204432430780512, 0.7204432430780512, 0.7204432430780512, 0.7204432430780512, 0.7204432430780512, 0.7204432430780512, 0.7204432430780512, 0.7204432430780512, 0.7204432430780512, 0.7204432430780512, 0.7204432430780512, 0.7204432430780512, 0.7204432430780512, 0.7178345447958077, 0.7204432430780512, 0.7204432430780512, 0.7230610467828777, 0.7230610467828777, 0.7230610467828777, 0.7230610467828777, 0.7230610467828777, 0.7230610467828777, 0.7230610467828777, 0.7256880196962792, 0.7256880196962792, 0.7256880196962792, 0.7256880196962792, 0.7256880196962792, 0.7256880196962792, 0.7256880196962792, 0.7256880196962792, 0.7256880196962792, 0.7256880196962792, 0.7256880196962792, 0.7256880196962792, 0.7256880196962792, 0.7256880196962792, 0.7256880196962792, 0.7256880196962792, 0.7256880196962792, 0.7283242262768626, 0.7283242262768626, 0.7283242262768626, 0.7283242262768626, 0.7283242262768626, 0.7283242262768626, 0.7283242262768626, 0.7283242262768626, 0.7283242262768626, 0.7283242262768626, 0.7283242262768626, 0.7283242262768626, 0.7283242262768626, 0.730969731665339, 0.730969731665339, 0.730969731665339, 0.730969731665339, 0.730969731665339, 0.7336246016941819, 0.730969731665339, 0.730969731665339, 0.730969731665339, 0.730969731665339, 0.730969731665339, 0.730969731665339, 0.730969731665339, 0.7283242262768626, 0.7283242262768626, 0.7283242262768626, 0.7283242262768626, 0.7283242262768626, 0.7283242262768626, 0.7283242262768626, 0.7283242262768626, 0.7283242262768626, 0.730969731665339, 0.730969731665339, 0.730969731665339, 0.730969731665339, 0.730969731665339, 0.730969731665339, 0.730969731665339, 0.730969731665339, 0.730969731665339, 0.730969731665339, 0.730969731665339, 0.730969731665339, 0.730969731665339, 0.730969731665339, 0.730969731665339, 0.730969731665339, 0.730969731665339, 0.730969731665339, 0.730969731665339, 0.730969731665339, 0.730969731665339, 0.730969731665339, 0.730969731665339, 0.730969731665339, 0.730969731665339, 0.730969731665339, 0.730969731665339, 0.730969731665339, 0.730969731665339, 0.7336246016941819, 0.7362889028974577, 0.7362889028974577, 0.7362889028974577, 0.7362889028974577, 0.7362889028974577, 0.7362889028974577, 0.7362889028974577, 0.7362889028974577, 0.7362889028974577, 0.7336246016941819, 0.7362889028974577, 0.7362889028974577, 0.7362889028974577, 0.7389627025208297, 0.7416460685317426, 0.7416460685317426, 0.7416460685317426, 0.7416460685317426, 0.7416460685317426, 0.7416460685317426, 0.7416460685317426, 0.7389627025208297, 0.7416460685317426, 0.7416460685317426, 0.7443390696297891, 0.7443390696297891, 0.7443390696297891, 0.7443390696297891, 0.7443390696297891, 0.7443390696297891, 0.7443390696297891, 0.7443390696297891, 0.7443390696297891, 0.7443390696297891, 0.7443390696297891, 0.7470417752572631, 0.7470417752572631, 0.7470417752572631, 0.7470417752572631, 0.7470417752572631, 0.7470417752572631, 0.7470417752572631, 0.7470417752572631, 0.7470417752572631, 0.7470417752572631, 0.7470417752572631, 0.7470417752572631, 0.7470417752572631, 0.7470417752572631, 0.7497542556099044, 0.7497542556099044, 0.7497542556099044, 0.7497542556099044, 0.7497542556099044, 0.7497542556099044, 0.7497542556099044, 0.7497542556099044, 0.7497542556099044, 0.7497542556099044, 0.7497542556099044, 0.7497542556099044, 0.7497542556099044, 0.7497542556099044, 0.7497542556099044, 0.7497542556099044, 0.7497542556099044, 0.7497542556099044, 0.7497542556099044, 0.7497542556099044, 0.7497542556099044, 0.7552088251067144, 0.7552088251067144, 0.7552088251067144, 0.7552088251067144, 0.7552088251067144, 0.7552088251067144, 0.7552088251067144, 0.7552088251067144, 0.7552088251067144, 0.7552088251067144, 0.7552088251067144, 0.7552088251067144, 0.7552088251067144, 0.7552088251067144, 0.7552088251067144, 0.7552088251067144, 0.757951058509047, 0.760703355175769, 0.760703355175769, 0.760703355175769, 0.760703355175769, 0.757951058509047, 0.757951058509047, 0.757951058509047, 0.757951058509047, 0.757951058509047, 0.757951058509047, 0.757951058509047, 0.757951058509047, 0.757951058509047, 0.757951058509047, 0.757951058509047, 0.757951058509047, 0.757951058509047, 0.760703355175769, 0.760703355175769, 0.760703355175769, 0.760703355175769, 0.760703355175769, 0.760703355175769, 0.760703355175769, 0.760703355175769, 0.7634657892379912, 0.7634657892379912, 0.7634657892379912, 0.7634657892379912, 0.760703355175769, 0.760703355175769, 0.760703355175769, 0.760703355175769, 0.760703355175769, 0.760703355175769, 0.757951058509047, 0.757951058509047, 0.757951058509047, 0.757951058509047, 0.757951058509047, 0.757951058509047, 0.760703355175769, 0.760703355175769, 0.760703355175769, 0.760703355175769, 0.760703355175769, 0.760703355175769, 0.760703355175769, 0.760703355175769, 0.760703355175769, 0.760703355175769, 0.760703355175769, 0.7634657892379912, 0.7634657892379912, 0.7634657892379912, 0.7634657892379912, 0.7634657892379912, 0.7634657892379912, 0.7634657892379912, 0.7690213701963877, 0.7690213701963877, 0.7690213701963877, 0.7690213701963877, 0.7690213701963877, 0.7718146695146244, 0.7718146695146244, 0.7718146695146244, 0.7718146695146244, 0.7718146695146244, 0.7718146695146244, 0.7718146695146244, 0.7718146695146244, 0.7718146695146244, 0.7718146695146244, 0.7718146695146244, 0.7746184110975798, 0.7746184110975798, 0.7746184110975798, 0.7746184110975798, 0.7746184110975798, 0.7746184110975798, 0.7746184110975798, 0.7746184110975798, 0.7718146695146244, 0.7718146695146244, 0.7746184110975798, 0.7774326733114927, 0.7774326733114927, 0.7774326733114927, 0.7774326733114927, 0.7774326733114927, 0.7746184110975798, 0.7774326733114927, 0.7774326733114927, 0.7774326733114927, 0.7774326733114927, 0.7774326733114927, 0.7774326733114927, 0.7774326733114927, 0.7774326733114927, 0.7774326733114927, 0.7774326733114927, 0.7774326733114927, 0.7774326733114927, 0.7774326733114927, 0.7774326733114927, 0.7802575354081003, 0.7830930775380297, 0.7830930775380297, 0.7887965270769444, 0.7887965270769444, 0.7887965270769444, 0.7887965270769444, 0.7887965270769444, 0.7887965270769444, 0.7887965270769444, 0.7887965270769444, 0.7887965270769444, 0.7887965270769444, 0.791664599405747, 0.791664599405747, 0.791664599405747, 0.7945436816361213, 0.7945436816361213, 0.7945436816361213, 0.7945436816361213, 0.7945436816361213, 0.7945436816361213, 0.7945436816361213, 0.7945436816361213, 0.7945436816361213, 0.7945436816361213, 0.7945436816361213, 0.7945436816361213, 0.7945436816361213, 0.7945436816361213, 0.7945436816361213, 0.7945436816361213, 0.7945436816361213, 0.7945436816361213, 0.7945436816361213, 0.7945436816361213, 0.7974338586231137, 0.7974338586231137, 0.7974338586231137, 0.7974338586231137, 0.7974338586231137, 0.7974338586231137, 0.7974338586231137, 0.7974338586231137, 0.7974338586231137, 0.8003352162065538, 0.8003352162065538, 0.8003352162065538, 0.8003352162065538, 0.8003352162065538, 0.8003352162065538, 0.8003352162065538, 0.8003352162065538, 0.8003352162065538, 0.8003352162065538, 0.8003352162065538, 0.8003352162065538, 0.8003352162065538, 0.8003352162065538, 0.8003352162065538, 0.8003352162065538, 0.8003352162065538, 0.8003352162065538, 0.8003352162065538, 0.8003352162065538, 0.8003352162065538, 0.8003352162065538, 0.8003352162065538, 0.8003352162065538, 0.8003352162065538, 0.8003352162065538, 0.8003352162065538, 0.8003352162065538, 0.8003352162065538, 0.8003352162065538, 0.8003352162065538, 0.8003352162065538, 0.8003352162065538, 0.8003352162065538, 0.8003352162065538, 0.8003352162065538, 0.8003352162065538, 0.7974338586231137, 0.7974338586231137, 0.7974338586231137, 0.7974338586231137, 0.7974338586231137, 0.7974338586231137, 0.7974338586231137, 0.7974338586231137, 0.7974338586231137, 0.7974338586231137, 0.7974338586231137, 0.7974338586231137, 0.7974338586231137, 0.7974338586231137, 0.7974338586231137, 0.7974338586231137, 0.7974338586231137, 0.7974338586231137, 0.8003352162065538, 0.7974338586231137, 0.7974338586231137, 0.7974338586231137, 0.8003352162065538, 0.8003352162065538, 0.8003352162065538, 0.8003352162065538, 0.8003352162065538, 0.8032478412263523, 0.8032478412263523, 0.8032478412263523, 0.8032478412263523, 0.8032478412263523, 0.8032478412263523, 0.8032478412263523, 0.8032478412263523, 0.8032478412263523, 0.8032478412263523, 0.8032478412263523, 0.8032478412263523, 0.8032478412263523, 0.8032478412263523, 0.8032478412263523, 0.8032478412263523, 0.8061718215380951, 0.8061718215380951, 0.8061718215380951, 0.8032478412263523, 0.8032478412263523, 0.8032478412263523, 0.8032478412263523, 0.8032478412263523, 0.8032478412263523, 0.8032478412263523, 0.8032478412263523, 0.8032478412263523, 0.8032478412263523, 0.8032478412263523, 0.8032478412263523, 0.8032478412263523, 0.8032478412263523, 0.8032478412263523, 0.8032478412263523, 0.8032478412263523, 0.8032478412263523, 0.8032478412263523, 0.8032478412263523, 0.8032478412263523, 0.8032478412263523, 0.8032478412263523, 0.8091072460289473, 0.8091072460289473, 0.8091072460289473, 0.8091072460289473, 0.8091072460289473, 0.8091072460289473, 0.8091072460289473, 0.8091072460289473, 0.8091072460289473, 0.8120542046338646, 0.8120542046338646, 0.8120542046338646, 0.8120542046338646, 0.8120542046338646, 0.8120542046338646, 0.8120542046338646, 0.8150127883521268, 0.8150127883521268, 0.8150127883521268, 0.8150127883521268, 0.8150127883521268, 0.8150127883521268, 0.8150127883521268, 0.8150127883521268, 0.8150127883521268, 0.8150127883521268, 0.8150127883521268, 0.8150127883521268, 0.8150127883521268, 0.8150127883521268, 0.8150127883521268, 0.8179830892641995, 0.8179830892641995, 0.8179830892641995, 0.8179830892641995, 0.8179830892641995, 0.8179830892641995, 0.8179830892641995, 0.8209652005489292, 0.8209652005489292, 0.8209652005489292, 0.8209652005489292, 0.8209652005489292, 0.8209652005489292, 0.8239592165010822, 0.8239592165010822, 0.8239592165010822, 0.8239592165010822, 0.8239592165010822, 0.8239592165010822, 0.8239592165010822, 0.8239592165010822, 0.8209652005489292, 0.8209652005489292, 0.8209652005489292, 0.8209652005489292, 0.8209652005489292, 0.8179830892641995, 0.8209652005489292, 0.8209652005489292, 0.8209652005489292, 0.8209652005489292, 0.8209652005489292, 0.8209652005489292, 0.8209652005489292, 0.8209652005489292, 0.8239592165010822, 0.8239592165010822, 0.8239592165010822, 0.8239592165010822, 0.8239592165010822, 0.8239592165010822, 0.8269652325492362, 0.8269652325492362, 0.8299833452740305, 0.8299833452740305, 0.8299833452740305, 0.8299833452740305, 0.8299833452740305, 0.8299833452740305, 0.8299833452740305, 0.8330136524267842, 0.8330136524267842, 0.8330136524267842, 0.8330136524267842, 0.8360562529484948, 0.8360562529484948, 0.8360562529484948, 0.8360562529484948, 0.8360562529484948, 0.8360562529484948, 0.8360562529484948, 0.8360562529484948, 0.8360562529484948, 0.8360562529484948, 0.8360562529484948, 0.8360562529484948, 0.8360562529484948, 0.8360562529484948, 0.8360562529484948, 0.8360562529484948, 0.8360562529484948, 0.8360562529484948, 0.8360562529484948, 0.8360562529484948, 0.8360562529484948, 0.8330136524267842, 0.8391112469892218, 0.8391112469892218, 0.8391112469892218, 0.8391112469892218, 0.8391112469892218, 0.8391112469892218, 0.8421787359278656, 0.8421787359278656, 0.8421787359278656, 0.8452588223923556, 0.8452588223923556, 0.8452588223923556, 0.8452588223923556, 0.8452588223923556, 0.8452588223923556, 0.8452588223923556, 0.8483516102802523, 0.8483516102802523, 0.8483516102802523, 0.8483516102802523, 0.8483516102802523, 0.8483516102802523, 0.8483516102802523, 0.8483516102802523, 0.8483516102802523, 0.8483516102802523, 0.8483516102802523, 0.8483516102802523, 0.8514572047797757, 0.8514572047797757, 0.8514572047797757, 0.8514572047797757, 0.8514572047797757, 0.8514572047797757, 0.8514572047797757, 0.8514572047797757, 0.8514572047797757, 0.8514572047797757, 0.8514572047797757, 0.8545757123912734, 0.8514572047797757, 0.8514572047797757, 0.8483516102802523, 0.8483516102802523, 0.8483516102802523, 0.8483516102802523, 0.8483516102802523, 0.8483516102802523, 0.8483516102802523, 0.8483516102802523, 0.8483516102802523, 0.8483516102802523, 0.8452588223923556, 0.8452588223923556, 0.8483516102802523, 0.8483516102802523, 0.8483516102802523, 0.8483516102802523, 0.8452588223923556, 0.8452588223923556, 0.8452588223923556, 0.8452588223923556, 0.8452588223923556, 0.8452588223923556, 0.8452588223923556, 0.8452588223923556, 0.8452588223923556, 0.8452588223923556, 0.8452588223923556, 0.8452588223923556, 0.8452588223923556, 0.8452588223923556, 0.8452588223923556, 0.8452588223923556, 0.8452588223923556, 0.8483516102802523, 0.8483516102802523, 0.8483516102802523, 0.8483516102802523, 0.8483516102802523, 0.8483516102802523, 0.8483516102802523, 0.8483516102802523, 0.8483516102802523, 0.8483516102802523, 0.8483516102802523, 0.8483516102802523, 0.8483516102802523, 0.8483516102802523, 0.8483516102802523, 0.8483516102802523, 0.8483516102802523, 0.8452588223923556, 0.8452588223923556, 0.8452588223923556, 0.8452588223923556, 0.8452588223923556, 0.8452588223923556, 0.8421787359278656, 0.8421787359278656, 0.8421787359278656, 0.8421787359278656, 0.8421787359278656, 0.8421787359278656, 0.8421787359278656, 0.8421787359278656, 0.8391112469892218, 0.8391112469892218, 0.8391112469892218, 0.8391112469892218, 0.8391112469892218, 0.8391112469892218, 0.8391112469892218, 0.8391112469892218, 0.8421787359278656, 0.8421787359278656, 0.8421787359278656, 0.8421787359278656, 0.8421787359278656, 0.8421787359278656, 0.8421787359278656, 0.8421787359278656, 0.8452588223923556, 0.8452588223923556, 0.8452588223923556, 0.8452588223923556, 0.8452588223923556, 0.8421787359278656, 0.8421787359278656, 0.8421787359278656, 0.8452588223923556, 0.8452588223923556, 0.8483516102802523, 0.8483516102802523, 0.8483516102802523, 0.8483516102802523, 0.8483516102802523, 0.8483516102802523, 0.8483516102802523, 0.8483516102802523, 0.8483516102802523, 0.8483516102802523, 0.8483516102802523, 0.8483516102802523, 0.8483516102802523, 0.8483516102802523, 0.8483516102802523, 0.8483516102802523, 0.8483516102802523, 0.8483516102802523, 0.8483516102802523, 0.8483516102802523, 0.8483516102802523, 0.8483516102802523, 0.8483516102802523, 0.8483516102802523, 0.8483516102802523, 0.8483516102802523, 0.8483516102802523, 0.8483516102802523, 0.8514572047797757, 0.8514572047797757, 0.8514572047797757, 0.8545757123912734, 0.8545757123912734, 0.8514572047797757, 0.8514572047797757, 0.8514572047797757, 0.8514572047797757, 0.8514572047797757, 0.8514572047797757, 0.8514572047797757, 0.8514572047797757, 0.8514572047797757, 0.8514572047797757, 0.8514572047797757, 0.8514572047797757, 0.8545757123912734, 0.8545757123912734, 0.8545757123912734, 0.8545757123912734, 0.8577072409491341, 0.8608518996441611, 0.8608518996441611, 0.8608518996441611, 0.8608518996441611, 0.8608518996441611, 0.8608518996441611, 0.8608518996441611, 0.8608518996441611, 0.8640097990464186, 0.8640097990464186, 0.8640097990464186, 0.8640097990464186, 0.8640097990464186, 0.8640097990464186, 0.8640097990464186, 0.8640097990464186, 0.8640097990464186, 0.8640097990464186, 0.8640097990464186, 0.8640097990464186, 0.8640097990464186, 0.8640097990464186, 0.8640097990464186, 0.8640097990464186, 0.8640097990464186, 0.8640097990464186, 0.8640097990464186, 0.8640097990464186, 0.8640097990464186, 0.8640097990464186, 0.8640097990464186, 0.8640097990464186, 0.8640097990464186, 0.8640097990464186, 0.8640097990464186, 0.8640097990464186, 0.8640097990464186, 0.8640097990464186, 0.8640097990464186, 0.8640097990464186, 0.8671810511285596, 0.8671810511285596, 0.8671810511285596, 0.8671810511285596, 0.8671810511285596, 0.8671810511285596, 0.8703657692896478, 0.8703657692896478, 0.8703657692896478, 0.8703657692896478, 0.8703657692896478, 0.8703657692896478, 0.8703657692896478, 0.8703657692896478, 0.8703657692896478, 0.8703657692896478, 0.8703657692896478, 0.8703657692896478, 0.8703657692896478, 0.8703657692896478, 0.8703657692896478, 0.8703657692896478, 0.8703657692896478, 0.8703657692896478, 0.8703657692896478, 0.8703657692896478, 0.8703657692896478, 0.8703657692896478, 0.8703657692896478, 0.8703657692896478, 0.8703657692896478, 0.8703657692896478, 0.8703657692896478, 0.8703657692896478, 0.8703657692896478, 0.8703657692896478, 0.873564068379491, 0.873564068379491, 0.873564068379491, 0.8767760647234917, 0.8767760647234917, 0.8767760647234917, 0.8767760647234917, 0.8767760647234917, 0.8767760647234917, 0.8767760647234917, 0.8767760647234917, 0.8767760647234917, 0.8767760647234917, 0.8767760647234917, 0.8800018761480346, 0.8832416220064218, 0.8832416220064218, 0.8832416220064218, 0.8832416220064218, 0.8832416220064218, 0.8832416220064218, 0.8832416220064218, 0.8832416220064218, 0.8832416220064218, 0.8832416220064218, 0.8864954232053707, 0.8864954232053707, 0.8864954232053707, 0.8897634022320874, 0.8897634022320874, 0.8897634022320874, 0.8897634022320874, 0.8897634022320874, 0.8897634022320874, 0.8897634022320874, 0.8897634022320874, 0.8930456831819364, 0.8930456831819364, 0.8930456831819364, 0.8930456831819364, 0.8930456831819364, 0.8930456831819364, 0.8963423917867152, 0.8963423917867152, 0.8963423917867152, 0.8963423917867152, 0.8963423917867152, 0.8963423917867152, 0.8963423917867152, 0.8996536554435527, 0.8996536554435527, 0.8996536554435527, 0.8996536554435527, 0.8996536554435527, 0.9029796032444519, 0.8996536554435527, 0.8996536554435527, 0.9029796032444519, 0.9029796032444519, 0.9029796032444519, 0.8996536554435527, 0.8996536554435527, 0.8996536554435527, 0.8996536554435527, 0.8996536554435527, 0.8996536554435527, 0.8996536554435527, 0.9029796032444519, 0.9029796032444519, 0.9029796032444519, 0.9029796032444519, 0.9029796032444519, 0.9029796032444519, 0.9063203660064874, 0.9063203660064874, 0.9063203660064874, 0.9096760763026781, 0.9096760763026781, 0.9130468684935573, 0.9130468684935573, 0.9130468684935573, 0.9164328787594525, 0.9198342451334959, 0.9198342451334959, 0.9198342451334959, 0.9232511075353913, 0.9232511075353913, 0.9232511075353913, 0.9232511075353913, 0.9232511075353913, 0.9232511075353913, 0.9232511075353913, 0.9232511075353913, 0.9232511075353913, 0.9232511075353913, 0.9266836078059504, 0.9266836078059504, 0.9301318897424224, 0.9301318897424224, 0.9301318897424224, 0.9301318897424224, 0.9301318897424224, 0.9301318897424224, 0.9301318897424224, 0.9301318897424224, 0.9301318897424224, 0.9301318897424224, 0.9301318897424224, 0.9301318897424224, 0.9335960991346433, 0.9335960991346433, 0.9370763838020202, 0.9370763838020202, 0.9370763838020202, 0.9370763838020202, 0.9370763838020202, 0.9440857806156983, 0.947615198893758, 0.9511613047907173, 0.9511613047907173, 0.9511613047907173, 0.9511613047907173, 0.9511613047907173, 0.9511613047907173, 0.9511613047907173, 0.9511613047907173, 0.9511613047907173, 0.9511613047907173, 0.9511613047907173, 0.9511613047907173, 0.9511613047907173, 0.9511613047907173, 0.9547242568596654, 0.9547242568596654, 0.958304215924159, 0.958304215924159, 0.958304215924159, 0.958304215924159, 0.958304215924159, 0.958304215924159, 0.958304215924159, 0.958304215924159, 0.958304215924159, 0.958304215924159, 0.958304215924159, 0.958304215924159, 0.958304215924159, 0.958304215924159, 0.9619013451217786, 0.9619013451217786, 0.9619013451217786, 0.9619013451217786, 0.9619013451217786, 0.9619013451217786, 0.9619013451217786, 0.9619013451217786, 0.9619013451217786, 0.9619013451217786, 0.9619013451217786, 0.9619013451217786, 0.9619013451217786, 0.9619013451217786, 0.9619013451217786, 0.9619013451217786, 0.9619013451217786, 0.9655158099487402, 0.9655158099487402, 0.9655158099487402, 0.9655158099487402, 0.9691477783055814, 0.9691477783055814, 0.9691477783055814, 0.9691477783055814, 0.9691477783055814, 0.9691477783055814, 0.9691477783055814, 0.9691477783055814, 0.9691477783055814, 0.9691477783055814, 0.9691477783055814, 0.9691477783055814, 0.9691477783055814, 0.9691477783055814, 0.9691477783055814, 0.9691477783055814, 0.9691477783055814, 0.972797420543961, 0.972797420543961, 0.972797420543961, 0.972797420543961, 0.972797420543961, 0.972797420543961, 0.972797420543961, 0.972797420543961, 0.972797420543961, 0.972797420543961, 0.972797420543961, 0.972797420543961, 0.972797420543961, 0.972797420543961, 0.972797420543961, 0.972797420543961, 0.972797420543961, 0.972797420543961, 0.972797420543961, 0.9691477783055814, 0.9691477783055814, 0.972797420543961, 0.972797420543961, 0.9691477783055814, 0.9691477783055814, 0.9691477783055814, 0.9691477783055814, 0.9691477783055814, 0.9691477783055814, 0.9691477783055814, 0.972797420543961, 0.972797420543961, 0.972797420543961, 0.972797420543961, 0.972797420543961, 0.972797420543961, 0.972797420543961, 0.972797420543961, 0.9764649095146047, 0.9764649095146047, 0.9764649095146047, 0.9764649095146047, 0.9764649095146047, 0.9764649095146047, 0.9764649095146047, 0.9764649095146047, 0.9764649095146047, 0.9764649095146047, 0.9764649095146047, 0.9764649095146047, 0.9764649095146047, 0.9764649095146047, 0.9764649095146047, 0.9764649095146047, 0.9764649095146047, 0.9764649095146047, 0.9764649095146047, 0.9764649095146047, 0.9764649095146047, 0.9801504206164269, 0.9838541318468635, 0.9838541318468635, 0.9838541318468635, 0.9838541318468635, 0.9838541318468635, 0.9838541318468635, 0.9838541318468635, 0.9838541318468635, 0.9838541318468635, 0.9838541318468635, 0.9838541318468635, 0.9838541318468635, 0.9838541318468635, 0.9801504206164269, 0.9801504206164269, 0.9838541318468635, 0.9838541318468635, 0.9838541318468635, 0.9838541318468635, 0.9838541318468635, 0.9838541318468635, 0.9838541318468635, 0.9838541318468635, 0.9838541318468635, 0.9838541318468635, 0.9838541318468635, 0.9838541318468635, 0.9838541318468635, 0.9838541318468635, 0.9838541318468635, 0.9838541318468635, 0.9838541318468635, 0.9838541318468635, 0.9801504206164269, 0.9801504206164269, 0.9801504206164269, 0.9801504206164269, 0.9801504206164269, 0.9801504206164269, 0.9801504206164269, 0.9801504206164269, 0.9801504206164269, 0.9838541318468635, 0.9838541318468635, 0.9875762238534602, 0.9913168799867398, 0.9913168799867398, 0.9913168799867398, 0.9875762238534602, 0.9875762238534602, 0.9875762238534602, 0.9875762238534602, 0.9875762238534602, 0.9875762238534602, 0.9875762238534602, 0.9875762238534602, 0.9875762238534602, 0.9875762238534602, 0.9875762238534602, 0.9875762238534602, 0.9875762238534602, 0.9875762238534602, 0.9875762238534602, 0.9875762238534602, 0.9838541318468635, 0.9838541318468635, 0.9838541318468635, 0.9838541318468635, 0.9838541318468635, 0.9838541318468635, 0.9875762238534602, 0.9875762238534602, 0.9875762238534602, 0.9875762238534602, 0.9838541318468635, 0.9838541318468635, 0.9838541318468635, 0.9875762238534602, 0.9875762238534602, 0.9875762238534602, 0.9875762238534602, 0.9875762238534602, 0.9875762238534602, 0.9875762238534602, 0.9875762238534602, 0.9875762238534602, 0.9875762238534602, 0.9875762238534602, 0.9875762238534602, 0.9838541318468635, 0.9838541318468635, 0.9801504206164269, 0.9801504206164269, 0.9801504206164269, 0.9838541318468635, 0.9838541318468635, 0.9838541318468635, 0.9801504206164269, 0.9801504206164269, 0.9801504206164269, 0.9801504206164269, 0.9801504206164269, 0.9838541318468635, 0.9838541318468635, 0.9838541318468635, 0.9838541318468635, 0.9838541318468635, 0.9838541318468635, 0.9838541318468635, 0.9838541318468635, 0.9838541318468635, 0.9838541318468635, 0.9838541318468635, 0.9838541318468635, 0.9838541318468635, 0.9838541318468635, 0.9838541318468635, 0.9838541318468635, 0.9838541318468635, 0.9838541318468635, 0.9801504206164269, 0.9838541318468635, 0.9838541318468635, 0.9801504206164269, 0.9801504206164269, 0.9875762238534602, 0.9875762238534602, 0.9875762238534602, 0.9875762238534602, 0.9875762238534602, 0.9875762238534602, 0.9875762238534602, 0.9875762238534602, 0.9875762238534602, 0.9875762238534602, 0.9875762238534602, 0.9875762238534602, 0.9875762238534602, 0.9875762238534602, 0.9875762238534602, 0.9875762238534602, 0.9875762238534602, 0.9875762238534602, 0.9875762238534602, 0.9838541318468635, 0.9801504206164269, 0.9801504206164269, 0.9801504206164269, 0.9801504206164269, 0.9801504206164269, 0.9801504206164269, 0.9764649095146047, 0.9764649095146047, 0.9764649095146047, 0.9764649095146047, 0.9764649095146047, 0.9801504206164269, 0.9801504206164269, 0.9801504206164269, 0.9801504206164269, 0.9801504206164269, 0.9801504206164269, 0.9801504206164269, 0.9801504206164269, 0.9801504206164269, 0.9801504206164269, 0.9801504206164269, 0.9801504206164269, 0.9801504206164269, 0.9801504206164269, 0.9801504206164269, 0.9838541318468635, 0.9838541318468635, 0.9838541318468635, 0.9801504206164269, 0.9801504206164269, 0.9801504206164269, 0.9801504206164269, 0.9801504206164269, 0.9801504206164269, 0.9801504206164269, 0.9801504206164269, 0.9801504206164269, 0.9838541318468635, 0.9838541318468635, 0.9838541318468635, 0.9838541318468635, 0.9801504206164269, 0.9801504206164269, 0.9801504206164269, 0.9801504206164269, 0.9801504206164269, 0.9801504206164269, 0.9801504206164269, 0.9801504206164269, 0.9801504206164269, 0.9801504206164269, 0.9801504206164269, 0.9801504206164269, 0.9801504206164269, 0.9801504206164269, 0.9801504206164269, 0.9801504206164269, 0.9801504206164269, 0.9801504206164269, 0.9801504206164269, 0.9764649095146047, 0.9764649095146047, 0.9764649095146047, 0.9764649095146047, 0.9764649095146047, 0.9764649095146047, 0.9764649095146047, 0.9764649095146047, 0.9801504206164269, 0.9838541318468635, 0.9801504206164269, 0.9801504206164269, 0.9801504206164269, 0.9801504206164269, 0.9801504206164269, 0.9801504206164269, 0.9801504206164269, 0.9801504206164269, 0.9801504206164269, 0.9801504206164269, 0.9801504206164269, 0.9801504206164269, 0.9801504206164269, 0.9801504206164269, 0.9838541318468635, 0.9838541318468635, 0.9838541318468635, 0.9838541318468635, 0.9838541318468635, 0.9838541318468635, 0.9838541318468635, 0.9838541318468635, 0.9838541318468635, 0.9801504206164269, 0.9801504206164269, 0.9801504206164269, 0.9801504206164269, 0.9801504206164269, 0.9801504206164269, 0.9801504206164269, 0.9801504206164269, 0.9801504206164269, 0.9801504206164269, 0.9801504206164269, 0.9801504206164269, 0.9801504206164269, 0.9801504206164269, 0.9801504206164269, 0.9801504206164269, 0.9801504206164269, 0.9801504206164269, 0.9801504206164269, 0.9838541318468635, 0.9838541318468635, 0.9838541318468635, 0.9838541318468635, 0.9838541318468635, 0.9875762238534602, 0.9875762238534602, 0.9875762238534602, 0.9875762238534602, 0.9875762238534602, 0.9913168799867398, 0.9913168799867398, 0.9913168799867398, 0.9913168799867398, 0.9913168799867398, 0.9913168799867398, 0.9913168799867398, 0.9913168799867398, 0.9913168799867398, 0.9913168799867398, 0.9913168799867398, 0.9913168799867398, 0.9913168799867398, 0.9913168799867398, 0.9913168799867398, 0.9913168799867398, 0.9913168799867398, 0.9913168799867398, 0.9913168799867398, 0.9913168799867398, 0.9913168799867398, 0.9913168799867398, 0.9913168799867398, 0.9913168799867398, 0.9950762863543978, 0.9950762863543978, 0.9950762863543978, 0.9950762863543978, 0.9950762863543978, 0.9950762863543978, 0.9950762863543978, 0.9950762863543978, 0.9950762863543978, 0.9950762863543978, 0.9988546318768656, 0.9988546318768656, 0.9988546318768656, 0.9988546318768656, 1.0026521083442759, 1.0026521083442759, 1.0026521083442759, 1.0026521083442759, 1.0026521083442759, 1.0026521083442759, 1.0064689104748792, 1.0064689104748792, 1.0064689104748792, 1.0026521083442759, 1.0026521083442759, 1.0026521083442759, 1.0026521083442759, 1.0026521083442759, 1.0026521083442759, 1.0026521083442759, 1.0026521083442759, 1.0026521083442759, 1.0026521083442759, 1.0026521083442759, 1.0026521083442759, 1.0026521083442759, 1.0026521083442759, 1.0026521083442759, 1.0026521083442759, 1.0026521083442759, 1.0026521083442759, 1.0026521083442759, 1.0026521083442759, 1.0026521083442759, 1.0064689104748792, 1.0064689104748792, 1.0064689104748792, 1.0064689104748792, 1.0064689104748792, 1.0064689104748792, 1.0064689104748792, 1.0064689104748792, 1.0064689104748792, 1.0064689104748792, 1.0064689104748792, 1.0064689104748792, 1.0064689104748792, 1.0064689104748792, 1.0064689104748792, 1.0064689104748792, 1.010305235974957, 1.010305235974957, 1.010305235974957, 1.010305235974957, 1.010305235974957, 1.010305235974957, 1.010305235974957, 1.014161285600271, 1.014161285600271, 1.014161285600271, 1.014161285600271, 1.014161285600271, 1.014161285600271, 1.014161285600271, 1.014161285600271, 1.014161285600271, 1.014161285600271, 1.018037263219103, 1.018037263219103, 1.018037263219103, 1.018037263219103, 1.018037263219103, 1.018037263219103, 1.018037263219103, 1.018037263219103, 1.018037263219103, 1.018037263219103, 1.018037263219103, 1.018037263219103, 1.018037263219103, 1.018037263219103, 1.014161285600271, 1.014161285600271, 1.014161285600271, 1.014161285600271, 1.014161285600271, 1.014161285600271, 1.014161285600271, 1.014161285600271, 1.014161285600271, 1.018037263219103, 1.018037263219103, 1.018037263219103, 1.018037263219103, 1.018037263219103, 1.0258498338627948, 1.0258498338627948, 1.0258498338627948, 1.0258498338627948, 1.0258498338627948, 1.0258498338627948, 1.0258498338627948, 1.0258498338627948, 1.0258498338627948, 1.0297868507774026, 1.0297868507774026, 1.0297868507774026, 1.0297868507774026, 1.0297868507774026, 1.0297868507774026, 1.0297868507774026, 1.0297868507774026, 1.0297868507774026, 1.0297868507774026, 1.0297868507774026, 1.0297868507774026, 1.0297868507774026, 1.0297868507774026, 1.0297868507774026, 1.0297868507774026, 1.0297868507774026, 1.0297868507774026, 1.0337446436030353, 1.0337446436030353, 1.0337446436030353, 1.0337446436030353, 1.0337446436030353, 1.0377234327753055, 1.0377234327753055, 1.0377234327753055, 1.0377234327753055, 1.0377234327753055, 1.0377234327753055, 1.0377234327753055, 1.0377234327753055, 1.0377234327753055, 1.0377234327753055, 1.0377234327753055, 1.0377234327753055, 1.0377234327753055, 1.0377234327753055, 1.0377234327753055, 1.0377234327753055, 1.0377234327753055, 1.0377234327753055, 1.0337446436030353, 1.0377234327753055, 1.0377234327753055, 1.0377234327753055, 1.0377234327753055, 1.0377234327753055, 1.0377234327753055, 1.0377234327753055, 1.0377234327753055, 1.0377234327753055, 1.0377234327753055, 1.0377234327753055, 1.0377234327753055, 1.0377234327753055, 1.0337446436030353, 1.0337446436030353, 1.0337446436030353, 1.0377234327753055, 1.0377234327753055, 1.0377234327753055, 1.0377234327753055, 1.0377234327753055, 1.0377234327753055, 1.0337446436030353, 1.0337446436030353, 1.0337446436030353, 1.0337446436030353, 1.0337446436030353, 1.0337446436030353, 1.0337446436030353, 1.0337446436030353, 1.0377234327753055, 1.0377234327753055, 1.0377234327753055, 1.0377234327753055, 1.0377234327753055, 1.0377234327753055, 1.0377234327753055, 1.0377234327753055, 1.0377234327753055, 1.0377234327753055, 1.0377234327753055, 1.0377234327753055, 1.0377234327753055, 1.0377234327753055, 1.0377234327753055, 1.0377234327753055, 1.0377234327753055, 1.0377234327753055, 1.0377234327753055, 1.0377234327753055, 1.0377234327753055, 1.0377234327753055, 1.0377234327753055, 1.0377234327753055, 1.0377234327753055, 1.0377234327753055, 1.0377234327753055, 1.0377234327753055, 1.0377234327753055, 1.0377234327753055, 1.0377234327753055, 1.0377234327753055, 1.0377234327753055, 1.0377234327753055, 1.0377234327753055, 1.0377234327753055, 1.0377234327753055, 1.0377234327753055, 1.0377234327753055, 1.0377234327753055, 1.0337446436030353, 1.0337446436030353, 1.0377234327753055, 1.0377234327753055, 1.0337446436030353, 1.0297868507774026, 1.0297868507774026, 1.0297868507774026, 1.0297868507774026, 1.0297868507774026, 1.0297868507774026, 1.0297868507774026, 1.0337446436030353, 1.0337446436030353, 1.0337446436030353, 1.0337446436030353, 1.0337446436030353, 1.0337446436030353, 1.0337446436030353, 1.0337446436030353, 1.0337446436030353, 1.0337446436030353, 1.0337446436030353, 1.0337446436030353, 1.0337446436030353, 1.0297868507774026, 1.0297868507774026, 1.0297868507774026, 1.0297868507774026, 1.0297868507774026, 1.0297868507774026, 1.0297868507774026, 1.0297868507774026, 1.0297868507774026, 1.0297868507774026, 1.0297868507774026, 1.0297868507774026, 1.0297868507774026, 1.0297868507774026, 1.0297868507774026, 1.0337446436030353, 1.0337446436030353, 1.0337446436030353, 1.0337446436030353, 1.0337446436030353, 1.0337446436030353, 1.0297868507774026, 1.0297868507774026, 1.0297868507774026, 1.0297868507774026, 1.0297868507774026, 1.0297868507774026, 1.0297868507774026, 1.0297868507774026, 1.0297868507774026, 1.0297868507774026, 1.0297868507774026, 1.0297868507774026, 1.0297868507774026, 1.0297868507774026, 1.0337446436030353, 1.0337446436030353, 1.0337446436030353, 1.0337446436030353, 1.0337446436030353, 1.0337446436030353, 1.0337446436030353, 1.0337446436030353, 1.0337446436030353, 1.0337446436030353, 1.0377234327753055, 1.0377234327753055, 1.041723442256827, 1.041723442256827, 1.041723442256827, 1.041723442256827, 1.041723442256827, 1.041723442256827, 1.0377234327753055, 1.0337446436030353, 1.0297868507774026, 1.0297868507774026, 1.0297868507774026, 1.0297868507774026, 1.0297868507774026, 1.0297868507774026, 1.0297868507774026, 1.0297868507774026, 1.0297868507774026, 1.0297868507774026, 1.0337446436030353, 1.0337446436030353, 1.0337446436030353, 1.0337446436030353, 1.0337446436030353, 1.0337446436030353, 1.0337446436030353, 1.0337446436030353, 1.0337446436030353, 1.0377234327753055, 1.0377234327753055, 1.0377234327753055, 1.0377234327753055, 1.0377234327753055, 1.0377234327753055, 1.0377234327753055, 1.0377234327753055, 1.0377234327753055, 1.0377234327753055, 1.041723442256827, 1.041723442256827, 1.041723442256827, 1.041723442256827, 1.041723442256827, 1.041723442256827, 1.041723442256827, 1.041723442256827, 1.041723442256827, 1.041723442256827, 1.041723442256827, 1.041723442256827, 1.041723442256827, 1.041723442256827, 1.041723442256827, 1.0457448996128658, 1.041723442256827, 1.041723442256827, 1.041723442256827, 1.041723442256827, 1.041723442256827, 1.0377234327753055, 1.0377234327753055, 1.0377234327753055, 1.0377234327753055, 1.0377234327753055, 1.0377234327753055, 1.041723442256827, 1.0377234327753055, 1.0377234327753055, 1.0377234327753055, 1.041723442256827, 1.041723442256827, 1.041723442256827, 1.041723442256827, 1.041723442256827, 1.041723442256827, 1.041723442256827, 1.041723442256827, 1.041723442256827, 1.041723442256827, 1.041723442256827, 1.041723442256827, 1.041723442256827, 1.041723442256827, 1.041723442256827, 1.041723442256827, 1.041723442256827, 1.041723442256827, 1.041723442256827, 1.041723442256827, 1.041723442256827, 1.041723442256827, 1.041723442256827, 1.041723442256827, 1.041723442256827, 1.0457448996128658, 1.0457448996128658, 1.0457448996128658, 1.0457448996128658, 1.0457448996128658, 1.0457448996128658, 1.0457448996128658, 1.0457448996128658, 1.0457448996128658, 1.0457448996128658, 1.0457448996128658, 1.0457448996128658, 1.0457448996128658, 1.041723442256827, 1.041723442256827, 1.0457448996128658, 1.0457448996128658, 1.0457448996128658, 1.0457448996128658, 1.0457448996128658, 1.0457448996128658, 1.0457448996128658, 1.0457448996128658, 1.0457448996128658, 1.0457448996128658, 1.0457448996128658, 1.0457448996128658, 1.0457448996128658, 1.0457448996128658, 1.049788036089023, 1.049788036089023, 1.049788036089023, 1.049788036089023, 1.049788036089023, 1.049788036089023, 1.049788036089023, 1.049788036089023, 1.049788036089023, 1.049788036089023, 1.049788036089023, 1.049788036089023, 1.049788036089023, 1.049788036089023, 1.049788036089023, 1.049788036089023, 1.0457448996128658, 1.0457448996128658, 1.0457448996128658, 1.0457448996128658, 1.049788036089023, 1.049788036089023, 1.049788036089023, 1.049788036089023, 1.049788036089023, 1.0538530866910276, 1.0538530866910276, 1.057940290266701, 1.057940290266701, 1.057940290266701, 1.057940290266701, 1.057940290266701, 1.0538530866910276, 1.0538530866910276, 1.0538530866910276, 1.0538530866910276, 1.0538530866910276, 1.0538530866910276, 1.0538530866910276, 1.0538530866910276, 1.057940290266701, 1.057940290266701, 1.057940290266701, 1.057940290266701, 1.0620498895901702, 1.0620498895901702, 1.0620498895901702, 1.0620498895901702, 1.0620498895901702, 1.0620498895901702, 1.0620498895901702, 1.0620498895901702, 1.0620498895901702, 1.0620498895901702, 1.0620498895901702, 1.0620498895901702, 1.0620498895901702, 1.0620498895901702, 1.0620498895901702, 1.0620498895901702, 1.0620498895901702, 1.0620498895901702, 1.0661821314483977, 1.0661821314483977, 1.0661821314483977, 1.0661821314483977, 1.0661821314483977, 1.0661821314483977, 1.0661821314483977, 1.0661821314483977, 1.0661821314483977, 1.0661821314483977, 1.0661821314483977, 1.0661821314483977, 1.0661821314483977, 1.0661821314483977, 1.0661821314483977, 1.0661821314483977, 1.0661821314483977, 1.070337266730109, 1.070337266730109, 1.070337266730109, 1.070337266730109, 1.070337266730109, 1.070337266730109, 1.070337266730109, 1.070337266730109, 1.070337266730109, 1.070337266730109, 1.070337266730109, 1.070337266730109, 1.070337266730109, 1.070337266730109, 1.070337266730109, 1.070337266730109, 1.070337266730109, 1.070337266730109, 1.070337266730109, 1.070337266730109, 1.0745155505172006, 1.0745155505172006, 1.0745155505172006, 1.0745155505172006, 1.078717242178703, 1.078717242178703, 1.0745155505172006, 1.0745155505172006, 1.0745155505172006, 1.0745155505172006, 1.0745155505172006, 1.0745155505172006, 1.0745155505172006, 1.0745155505172006, 1.0745155505172006, 1.0745155505172006, 1.0745155505172006, 1.0745155505172006, 1.078717242178703, 1.078717242178703, 1.070337266730109, 1.070337266730109, 1.070337266730109, 1.070337266730109, 1.0745155505172006, 1.0745155505172006, 1.0745155505172006, 1.0745155505172006, 1.0745155505172006, 1.0745155505172006, 1.0745155505172006, 1.0745155505172006, 1.0745155505172006, 1.0745155505172006, 1.0745155505172006, 1.0745155505172006, 1.0745155505172006, 1.0745155505172006, 1.070337266730109, 1.070337266730109, 1.070337266730109, 1.070337266730109, 1.070337266730109, 1.070337266730109, 1.070337266730109, 1.070337266730109, 1.070337266730109, 1.070337266730109, 1.070337266730109, 1.070337266730109, 1.070337266730109, 1.070337266730109, 1.070337266730109, 1.070337266730109, 1.070337266730109, 1.070337266730109, 1.070337266730109, 1.070337266730109, 1.070337266730109, 1.070337266730109, 1.070337266730109, 1.0661821314483977, 1.0620498895901702, 1.0620498895901702, 1.0620498895901702, 1.0620498895901702, 1.0620498895901702, 1.0661821314483977, 1.0661821314483977, 1.0661821314483977, 1.070337266730109, 1.070337266730109, 1.070337266730109, 1.070337266730109, 1.070337266730109, 1.070337266730109, 1.070337266730109, 1.070337266730109, 1.070337266730109, 1.070337266730109, 1.070337266730109, 1.070337266730109, 1.070337266730109, 1.070337266730109, 1.0661821314483977, 1.0661821314483977, 1.0661821314483977, 1.0661821314483977, 1.0661821314483977, 1.070337266730109, 1.070337266730109, 1.070337266730109, 1.070337266730109, 1.070337266730109, 1.070337266730109, 1.070337266730109, 1.070337266730109, 1.0745155505172006, 1.0745155505172006, 1.0745155505172006, 1.0745155505172006, 1.0745155505172006, 1.0745155505172006, 1.0745155505172006, 1.0745155505172006, 1.078717242178703, 1.078717242178703, 1.078717242178703, 1.078717242178703, 1.078717242178703, 1.078717242178703, 1.078717242178703, 1.078717242178703, 1.078717242178703, 1.0745155505172006, 1.0745155505172006, 1.078717242178703, 1.078717242178703, 1.082942605467395, 1.082942605467395, 1.082942605467395, 1.082942605467395, 1.082942605467395, 1.082942605467395, 1.082942605467395, 1.082942605467395, 1.0871919086191528, 1.0871919086191528, 1.0871919086191528, 1.0871919086191528, 1.0871919086191528, 1.0871919086191528, 1.0871919086191528, 1.0871919086191528, 1.0871919086191528, 1.0871919086191528, 1.0871919086191528, 1.0871919086191528, 1.0871919086191528, 1.0871919086191528, 1.0871919086191528, 1.0871919086191528, 1.0871919086191528, 1.0871919086191528, 1.082942605467395, 1.082942605467395, 1.078717242178703, 1.078717242178703, 1.078717242178703, 1.078717242178703, 1.078717242178703, 1.082942605467395, 1.082942605467395, 1.082942605467395, 1.082942605467395, 1.082942605467395, 1.082942605467395, 1.082942605467395, 1.0871919086191528, 1.0871919086191528, 1.0871919086191528, 1.0871919086191528, 1.0871919086191528, 1.0871919086191528, 1.0871919086191528, 1.0871919086191528, 1.0871919086191528, 1.0871919086191528, 1.0871919086191528, 1.0871919086191528, 1.0871919086191528, 1.0871919086191528, 1.0871919086191528, 1.0871919086191528, 1.0871919086191528, 1.0871919086191528, 1.0871919086191528, 1.0871919086191528, 1.0871919086191528, 1.0871919086191528, 1.0871919086191528, 1.0871919086191528, 1.0871919086191528, 1.0871919086191528, 1.0871919086191528, 1.0871919086191528, 1.0871919086191528, 1.0871919086191528, 1.0871919086191528, 1.0871919086191528, 1.0871919086191528, 1.0871919086191528, 1.0871919086191528, 1.0914654244551314, 1.0914654244551314, 1.0914654244551314, 1.0914654244551314, 1.0914654244551314, 1.0914654244551314, 1.0914654244551314, 1.0914654244551314, 1.0914654244551314, 1.0914654244551314, 1.0914654244551314, 1.0914654244551314, 1.0914654244551314, 1.09576343048687, 1.09576343048687, 1.09576343048687, 1.09576343048687, 1.09576343048687, 1.09576343048687, 1.09576343048687, 1.09576343048687, 1.09576343048687, 1.09576343048687, 1.09576343048687, 1.09576343048687, 1.09576343048687, 1.0914654244551314, 1.09576343048687, 1.09576343048687, 1.09576343048687, 1.09576343048687, 1.09576343048687, 1.09576343048687, 1.09576343048687, 1.1000862090244323, 1.1000862090244323, 1.1000862090244323, 1.1000862090244323, 1.1000862090244323, 1.1000862090244323, 1.1000862090244323, 1.1000862090244323, 1.1044340472876772, 1.1044340472876772, 1.108807237520772, 1.1132060771100702, 1.1132060771100702, 1.1176308687054617, 1.1176308687054617, 1.1176308687054617, 1.1220819203453227, 1.1220819203453227, 1.1265595455852002, 1.1265595455852002, 1.1265595455852002, 1.1265595455852002, 1.1265595455852002, 1.1265595455852002, 1.1310640636303595, 1.1310640636303595, 1.1310640636303595, 1.1310640636303595, 1.1310640636303595, 1.1310640636303595, 1.1310640636303595, 1.1310640636303595, 1.1310640636303595, 1.1310640636303595, 1.1310640636303595, 1.1310640636303595, 1.1310640636303595, 1.1310640636303595, 1.1310640636303595, 1.1310640636303595, 1.1310640636303595, 1.1310640636303595, 1.1310640636303595, 1.1310640636303595, 1.1310640636303595, 1.1310640636303595, 1.1310640636303595, 1.1310640636303595, 1.1310640636303595, 1.1355957994723314, 1.1355957994723314, 1.1355957994723314, 1.1355957994723314, 1.1355957994723314, 1.1355957994723314, 1.1401550840296177, 1.1401550840296177, 1.1401550840296177, 1.1401550840296177, 1.1401550840296177, 1.1401550840296177, 1.1401550840296177, 1.1401550840296177, 1.1401550840296177, 1.1401550840296177, 1.1401550840296177, 1.1401550840296177, 1.1401550840296177, 1.1401550840296177, 1.1401550840296177, 1.1401550840296177, 1.144742254292695, 1.144742254292695, 1.1493576534734788, 1.1493576534734788, 1.1493576534734788, 1.1493576534734788, 1.1493576534734788, 1.1493576534734788, 1.1493576534734788, 1.144742254292695, 1.144742254292695, 1.144742254292695, 1.144742254292695, 1.144742254292695, 1.144742254292695, 1.144742254292695, 1.144742254292695, 1.144742254292695, 1.144742254292695, 1.144742254292695, 1.144742254292695, 1.144742254292695, 1.144742254292695, 1.144742254292695, 1.144742254292695, 1.144742254292695, 1.144742254292695, 1.144742254292695, 1.1493576534734788, 1.1493576534734788, 1.1493576534734788, 1.1493576534734788, 1.1493576534734788, 1.1493576534734788, 1.1493576534734788, 1.1493576534734788, 1.1493576534734788, 1.1493576534734788, 1.1540016311594194, 1.1540016311594194, 1.1540016311594194, 1.1540016311594194, 1.1586745434723968, 1.1540016311594194, 1.1540016311594194, 1.1540016311594194, 1.1540016311594194, 1.1540016311594194, 1.1540016311594194, 1.1540016311594194, 1.1540016311594194, 1.1540016311594194, 1.1540016311594194, 1.1540016311594194, 1.1540016311594194, 1.1540016311594194, 1.1493576534734788, 1.1493576534734788, 1.1493576534734788, 1.1493576534734788, 1.1493576534734788, 1.1493576534734788, 1.1493576534734788, 1.1493576534734788, 1.1493576534734788, 1.1540016311594194, 1.1540016311594194, 1.1540016311594194, 1.1586745434723968, 1.1586745434723968, 1.1633767532325932, 1.1633767532325932, 1.1633767532325932, 1.1586745434723968, 1.1586745434723968, 1.1633767532325932, 1.1633767532325932, 1.1633767532325932, 1.1633767532325932, 1.1633767532325932, 1.1633767532325932, 1.1633767532325932, 1.1633767532325932, 1.1633767532325932, 1.1633767532325932, 1.1633767532325932, 1.1633767532325932, 1.1633767532325932, 1.1633767532325932, 1.1633767532325932, 1.1633767532325932, 1.1681086301275414, 1.1681086301275414, 1.1681086301275414, 1.172870550886536, 1.172870550886536, 1.177662899460614, 1.177662899460614, 1.1824860672083317, 1.1824860672083317, 1.1824860672083317, 1.1824860672083317, 1.1824860672083317, 1.1824860672083317, 1.1824860672083317, 1.1824860672083317, 1.1824860672083317, 1.177662899460614, 1.172870550886536, 1.172870550886536, 1.172870550886536, 1.172870550886536, 1.172870550886536, 1.177662899460614, 1.177662899460614, 1.177662899460614, 1.177662899460614, 1.177662899460614, 1.177662899460614, 1.177662899460614, 1.177662899460614, 1.177662899460614, 1.177662899460614, 1.177662899460614, 1.177662899460614, 1.177662899460614, 1.177662899460614, 1.177662899460614, 1.177662899460614, 1.177662899460614, 1.177662899460614, 1.177662899460614, 1.177662899460614, 1.177662899460614, 1.177662899460614, 1.177662899460614, 1.177662899460614, 1.177662899460614, 1.177662899460614, 1.177662899460614, 1.177662899460614, 1.177662899460614, 1.177662899460614, 1.177662899460614, 1.177662899460614, 1.177662899460614, 1.177662899460614, 1.177662899460614, 1.177662899460614, 1.177662899460614, 1.177662899460614, 1.177662899460614, 1.177662899460614, 1.177662899460614, 1.177662899460614, 1.177662899460614, 1.177662899460614, 1.1824860672083317, 1.1824860672083317, 1.1824860672083317, 1.177662899460614, 1.177662899460614, 1.177662899460614, 1.177662899460614, 1.177662899460614, 1.177662899460614, 1.177662899460614, 1.177662899460614, 1.177662899460614, 1.177662899460614, 1.177662899460614, 1.177662899460614, 1.177662899460614, 1.177662899460614, 1.177662899460614, 1.177662899460614, 1.172870550886536, 1.172870550886536, 1.177662899460614, 1.172870550886536, 1.172870550886536, 1.177662899460614, 1.177662899460614, 1.177662899460614, 1.177662899460614, 1.1824860672083317, 1.1824860672083317, 1.1824860672083317, 1.1824860672083317, 1.1824860672083317, 1.1824860672083317, 1.1824860672083317, 1.1824860672083317, 1.1824860672083317, 1.1824860672083317, 1.1824860672083317, 1.187340453087545, 1.187340453087545, 1.187340453087545, 1.187340453087545, 1.187340453087545, 1.187340453087545, 1.187340453087545, 1.187340453087545, 1.187340453087545, 1.187340453087545, 1.187340453087545, 1.187340453087545, 1.187340453087545, 1.187340453087545, 1.187340453087545, 1.187340453087545, 1.187340453087545, 1.187340453087545, 1.1922264638534403, 1.1922264638534403, 1.1922264638534403, 1.2020950272865738, 1.2020950272865738, 1.2020950272865738, 1.2020950272865738, 1.2020950272865738, 1.2020950272865738, 1.2020950272865738, 1.2020950272865738, 1.2020950272865738, 1.2020950272865738, 1.2020950272865738, 1.2020950272865738, 1.2020950272865738, 1.2020950272865738, 1.2020950272865738, 1.2020950272865738, 1.2020950272865738, 1.2020950272865738, 1.2070784343255752, 1.2070784343255752, 1.2070784343255752, 1.2070784343255752, 1.2070784343255752, 1.2070784343255752, 1.2070784343255752, 1.2070784343255752, 1.2070784343255752, 1.2070784343255752, 1.2070784343255752, 1.2070784343255752, 1.2070784343255752, 1.2070784343255752, 1.2070784343255752, 1.2070784343255752, 1.2070784343255752, 1.2070784343255752, 1.2070784343255752, 1.2070784343255752, 1.2120951754386722, 1.2120951754386722, 1.2120951754386722, 1.2171456995746808, 1.2120951754386722, 1.2070784343255752, 1.2070784343255752, 1.2070784343255752, 1.2070784343255752, 1.2120951754386722, 1.2070784343255752, 1.2070784343255752, 1.2070784343255752, 1.2070784343255752, 1.2070784343255752, 1.2120951754386722, 1.2120951754386722, 1.2120951754386722, 1.2120951754386722, 1.2120951754386722, 1.2120951754386722, 1.2120951754386722, 1.2120951754386722, 1.2171456995746808, 1.2222304648137148, 1.2222304648137148, 1.2222304648137148, 1.2222304648137148, 1.2222304648137148, 1.2222304648137148, 1.2273499386165145, 1.2273499386165145, 1.2273499386165145, 1.2273499386165145, 1.2273499386165145, 1.2273499386165145, 1.2273499386165145, 1.2273499386165145, 1.2273499386165145, 1.2273499386165145, 1.2273499386165145, 1.2273499386165145, 1.2273499386165145, 1.2273499386165145, 1.2273499386165145, 1.2273499386165145, 1.2273499386165145, 1.2325045980823361, 1.2325045980823361, 1.2325045980823361, 1.2325045980823361, 1.2325045980823361, 1.2325045980823361, 1.2325045980823361, 1.2325045980823361, 1.2325045980823361, 1.2325045980823361, 1.2325045980823361, 1.2325045980823361, 1.2325045980823361, 1.2325045980823361, 1.2376949302157663, 1.2376949302157663, 1.2376949302157663, 1.2376949302157663, 1.2376949302157663, 1.2376949302157663, 1.2429214322028364, 1.2429214322028364, 1.2429214322028364, 1.2481846116968216, 1.2481846116968216, 1.2481846116968216, 1.2481846116968216, 1.2481846116968216, 1.2481846116968216, 1.2429214322028364, 1.2429214322028364, 1.2429214322028364, 1.2429214322028364, 1.2429214322028364, 1.2376949302157663, 1.2376949302157663, 1.2376949302157663, 1.2376949302157663, 1.2429214322028364, 1.2429214322028364, 1.2429214322028364, 1.2429214322028364, 1.2429214322028364, 1.2429214322028364, 1.2429214322028364, 1.2429214322028364, 1.2429214322028364, 1.2429214322028364, 1.2376949302157663, 1.2376949302157663, 1.2376949302157663, 1.2376949302157663, 1.2376949302157663, 1.2325045980823361, 1.2273499386165145, 1.2273499386165145, 1.2273499386165145, 1.2273499386165145, 1.2325045980823361, 1.2325045980823361, 1.2325045980823361, 1.2325045980823361, 1.2325045980823361, 1.2376949302157663, 1.2376949302157663, 1.2376949302157663, 1.2481846116968216, 1.2481846116968216, 1.2429214322028364, 1.2429214322028364, 1.2481846116968216, 1.2481846116968216, 1.2481846116968216, 1.2481846116968216, 1.2481846116968216, 1.2481846116968216, 1.2481846116968216, 1.2481846116968216, 1.2481846116968216, 1.2481846116968216, 1.2481846116968216, 1.2481846116968216, 1.2481846116968216, 1.2534849871141407, 1.2534849871141407, 1.2534849871141407, 1.2534849871141407, 1.2534849871141407, 1.2534849871141407, 1.2534849871141407, 1.2534849871141407, 1.2534849871141407, 1.2588230879407885, 1.2588230879407885, 1.2588230879407885, 1.2641994550497482, 1.2641994550497482, 1.2641994550497482, 1.2641994550497482, 1.2641994550497482, 1.2641994550497482, 1.2696146410298634, 1.2696146410298634, 1.2696146410298634, 1.2805637405957282, 1.2805637405957282, 1.2805637405957282, 1.2805637405957282, 1.2805637405957282, 1.2805637405957282, 1.2805637405957282, 1.2805637405957282, 1.2805637405957282, 1.2860988210689448, 1.2916750549345832, 1.2916750549345832, 1.2916750549345832, 1.2916750549345832, 1.2916750549345832, 1.2916750549345832, 1.2916750549345832, 1.2916750549345832, 1.2916750549345832, 1.2916750549345832, 1.2916750549345832, 1.2916750549345832, 1.2916750549345832, 1.2916750549345832, 1.2916750549345832, 1.2916750549345832, 1.2916750549345832, 1.2916750549345832, 1.2916750549345832, 1.2916750549345832, 1.2916750549345832, 1.2916750549345832, 1.2916750549345832, 1.2916750549345832, 1.2972930587314517, 1.2972930587314517, 1.3029534629579889, 1.3029534629579889, 1.3029534629579889, 1.3029534629579889, 1.3029534629579889, 1.3086569124969032, 1.3086569124969032, 1.3086569124969032, 1.3086569124969032, 1.3086569124969032, 1.3029534629579889, 1.3029534629579889, 1.3029534629579889, 1.3029534629579889, 1.3029534629579889, 1.3029534629579889, 1.3029534629579889, 1.3029534629579889, 1.3029534629579889, 1.3029534629579889, 1.3029534629579889, 1.3029534629579889, 1.3029534629579889, 1.3029534629579889, 1.3029534629579889, 1.3029534629579889, 1.3029534629579889, 1.3086569124969032, 1.3086569124969032, 1.3086569124969032, 1.3086569124969032, 1.3029534629579889, 1.3029534629579889, 1.3029534629579889, 1.3029534629579889, 1.3029534629579889, 1.3029534629579889, 1.3086569124969032, 1.3086569124969032, 1.3086569124969032, 1.3086569124969032, 1.3086569124969032, 1.3086569124969032, 1.3144040670560801, 1.3144040670560801, 1.3144040670560801, 1.3201956016265128, 1.3201956016265128, 1.3201956016265128, 1.3201956016265128, 1.326032206958054, 1.326032206958054, 1.326032206958054, 1.326032206958054, 1.326032206958054, 1.326032206958054, 1.326032206958054, 1.326032206958054, 1.3201956016265128, 1.3201956016265128, 1.3201956016265128, 1.3201956016265128, 1.3201956016265128, 1.3201956016265128, 1.3201956016265128, 1.3144040670560801, 1.3144040670560801, 1.3144040670560801, 1.3144040670560801, 1.3144040670560801, 1.3144040670560801, 1.3144040670560801, 1.3201956016265128, 1.3201956016265128, 1.3201956016265128, 1.3201956016265128, 1.326032206958054, 1.326032206958054, 1.326032206958054, 1.326032206958054, 1.326032206958054, 1.326032206958054, 1.326032206958054, 1.326032206958054, 1.326032206958054, 1.326032206958054, 1.326032206958054, 1.326032206958054, 1.326032206958054, 1.3201956016265128, 1.326032206958054, 1.326032206958054, 1.326032206958054, 1.326032206958054, 1.3201956016265128, 1.3201956016265128, 1.3201956016265128, 1.3201956016265128, 1.3201956016265128, 1.3201956016265128, 1.3201956016265128, 1.3201956016265128, 1.326032206958054, 1.326032206958054, 1.326032206958054, 1.326032206958054, 1.326032206958054, 1.326032206958054, 1.326032206958054, 1.326032206958054, 1.326032206958054, 1.326032206958054, 1.3319145900538236, 1.3319145900538236, 1.3319145900538236, 1.3319145900538236, 1.3319145900538236, 1.3319145900538236, 1.3319145900538236, 1.3319145900538236, 1.3319145900538236, 1.3319145900538236, 1.3319145900538236, 1.3319145900538236, 1.3319145900538236, 1.3319145900538236, 1.3319145900538236, 1.3319145900538236, 1.3319145900538236, 1.3319145900538236, 1.3319145900538236, 1.3319145900538236, 1.3319145900538236, 1.3319145900538236, 1.3319145900538236, 1.3319145900538236, 1.3319145900538236, 1.3319145900538236, 1.3319145900538236, 1.3319145900538236, 1.3378434746841583, 1.3378434746841583, 1.3378434746841583, 1.3378434746841583, 1.3378434746841583, 1.3378434746841583, 1.3378434746841583, 1.3378434746841583, 1.3378434746841583, 1.3378434746841583, 1.3378434746841583, 1.3378434746841583, 1.3378434746841583, 1.3378434746841583, 1.3378434746841583, 1.3438196019210409, 1.3498437306939894, 1.3498437306939894, 1.3498437306939894, 1.3498437306939894, 1.3498437306939894, 1.3559166383684538, 1.3559166383684538, 1.3498437306939894, 1.3559166383684538, 1.3559166383684538, 1.3498437306939894, 1.3498437306939894, 1.3498437306939894, 1.3498437306939894, 1.3498437306939894, 1.3498437306939894, 1.3498437306939894, 1.3498437306939894, 1.3559166383684538, 1.3559166383684538, 1.3559166383684538, 1.3559166383684538, 1.3559166383684538, 1.3559166383684538, 1.3559166383684538, 1.3559166383684538, 1.3559166383684538, 1.3559166383684538, 1.3620391213478242, 1.3620391213478242, 1.3620391213478242, 1.3620391213478242, 1.3620391213478242, 1.3620391213478242, 1.3620391213478242, 1.3620391213478242, 1.3620391213478242, 1.3620391213478242, 1.3620391213478242, 1.3620391213478242, 1.3620391213478242, 1.3620391213478242, 1.3620391213478242, 1.3620391213478242, 1.3682119957002112, 1.3682119957002112, 1.3682119957002112, 1.3682119957002112, 1.3744360978112324, 1.3682119957002112, 1.3682119957002112, 1.3682119957002112, 1.3682119957002112, 1.3682119957002112, 1.3682119957002112, 1.3682119957002112, 1.3682119957002112, 1.3682119957002112, 1.3682119957002112, 1.3744360978112324, 1.3744360978112324, 1.3744360978112324, 1.3744360978112324, 1.3744360978112324, 1.3744360978112324, 1.3744360978112324, 1.3744360978112324, 1.3682119957002112, 1.3682119957002112, 1.3682119957002112, 1.3682119957002112, 1.3682119957002112, 1.3620391213478242, 1.3620391213478242, 1.3620391213478242, 1.3620391213478242, 1.3620391213478242, 1.3559166383684538, 1.3559166383684538, 1.3559166383684538, 1.3559166383684538, 1.3498437306939894, 1.3498437306939894, 1.3498437306939894, 1.3498437306939894, 1.3498437306939894, 1.3498437306939894, 1.3498437306939894, 1.3498437306939894, 1.3498437306939894, 1.3438196019210409, 1.3438196019210409, 1.3438196019210409, 1.3438196019210409, 1.3498437306939894, 1.3498437306939894, 1.3498437306939894, 1.3498437306939894, 1.3498437306939894, 1.3498437306939894, 1.3498437306939894, 1.3498437306939894, 1.3498437306939894, 1.3498437306939894, 1.3498437306939894, 1.3559166383684538, 1.3559166383684538, 1.3438196019210409, 1.3438196019210409, 1.3438196019210409, 1.3438196019210409, 1.3438196019210409, 1.3438196019210409, 1.3498437306939894, 1.3498437306939894, 1.3498437306939894, 1.3498437306939894, 1.3498437306939894, 1.3498437306939894, 1.3498437306939894, 1.3498437306939894, 1.3498437306939894, 1.3498437306939894, 1.3498437306939894, 1.3498437306939894, 1.3498437306939894, 1.3498437306939894, 1.3498437306939894, 1.3498437306939894, 1.3498437306939894, 1.3498437306939894, 1.3559166383684538, 1.3559166383684538, 1.3559166383684538, 1.3559166383684538, 1.3559166383684538, 1.3438196019210409, 1.3438196019210409, 1.3438196019210409, 1.3438196019210409, 1.3438196019210409, 1.3438196019210409, 1.3498437306939894, 1.3498437306939894, 1.3498437306939894, 1.3498437306939894, 1.3498437306939894, 1.3498437306939894, 1.3498437306939894, 1.3498437306939894, 1.3498437306939894, 1.3498437306939894, 1.3559166383684538, 1.3559166383684538, 1.3559166383684538, 1.3559166383684538, 1.3559166383684538, 1.3559166383684538, 1.3559166383684538, 1.3559166383684538, 1.3559166383684538, 1.3559166383684538, 1.3559166383684538, 1.3620391213478242, 1.3620391213478242, 1.3620391213478242, 1.3620391213478242, 1.3620391213478242, 1.3620391213478242, 1.3620391213478242, 1.3620391213478242, 1.3620391213478242, 1.3620391213478242, 1.3620391213478242, 1.3620391213478242, 1.3620391213478242, 1.3682119957002112, 1.3682119957002112, 1.3682119957002112, 1.3682119957002112, 1.3682119957002112, 1.3682119957002112, 1.3682119957002112, 1.3682119957002112, 1.3682119957002112, 1.3682119957002112, 1.3682119957002112, 1.3682119957002112, 1.3682119957002112, 1.3682119957002112, 1.3682119957002112, 1.3682119957002112, 1.3682119957002112, 1.3744360978112324, 1.3744360978112324, 1.3807122850641198, 1.3807122850641198, 1.3807122850641198, 1.3744360978112324, 1.3744360978112324, 1.3744360978112324, 1.3744360978112324, 1.3744360978112324, 1.3807122850641198, 1.3807122850641198, 1.3807122850641198, 1.3807122850641198, 1.3807122850641198, 1.3807122850641198, 1.3807122850641198, 1.3807122850641198, 1.3807122850641198, 1.3807122850641198, 1.3807122850641198, 1.3807122850641198, 1.3807122850641198, 1.3870414365485186, 1.3870414365485186, 1.3870414365485186, 1.3870414365485186, 1.3870414365485186, 1.3870414365485186, 1.3870414365485186, 1.3870414365485186, 1.3870414365485186, 1.3870414365485186, 1.3870414365485186, 1.3870414365485186, 1.3870414365485186, 1.3870414365485186, 1.3870414365485186, 1.3870414365485186, 1.3870414365485186, 1.3870414365485186, 1.3870414365485186, 1.3870414365485186, 1.3870414365485186, 1.3870414365485186, 1.3870414365485186, 1.3870414365485186, 1.3870414365485186, 1.3870414365485186, 1.3870414365485186, 1.3807122850641198, 1.3807122850641198, 1.3807122850641198, 1.3807122850641198, 1.3807122850641198, 1.3807122850641198, 1.3807122850641198, 1.3807122850641198, 1.3807122850641198, 1.3807122850641198, 1.3807122850641198, 1.3807122850641198, 1.3870414365485186, 1.3870414365485186, 1.3870414365485186, 1.3870414365485186, 1.3870414365485186, 1.3870414365485186, 1.3870414365485186, 1.3870414365485186, 1.3870414365485186, 1.3870414365485186, 1.3870414365485186, 1.3934244537994498, 1.3934244537994498, 1.3934244537994498, 1.3934244537994498, 1.3934244537994498, 1.3934244537994498, 1.3934244537994498, 1.3998622615679932, 1.4063558086253296, 1.4063558086253296, 1.4063558086253296, 1.4063558086253296, 1.4063558086253296, 1.4063558086253296, 1.4063558086253296, 1.4063558086253296, 1.4063558086253296, 1.4063558086253296, 1.4063558086253296, 1.4063558086253296, 1.4063558086253296, 1.4063558086253296, 1.4063558086253296, 1.4063558086253296, 1.4063558086253296, 1.4063558086253296, 1.4063558086253296, 1.4063558086253296, 1.4063558086253296, 1.4063558086253296, 1.3998622615679932, 1.3998622615679932, 1.3934244537994498, 1.3870414365485186, 1.3934244537994498, 1.3934244537994498, 1.3934244537994498, 1.3934244537994498, 1.3934244537994498, 1.3934244537994498, 1.3934244537994498, 1.3934244537994498, 1.3934244537994498, 1.3934244537994498, 1.3934244537994498, 1.3934244537994498, 1.3934244537994498, 1.3870414365485186, 1.3870414365485186, 1.3870414365485186, 1.3870414365485186, 1.3870414365485186, 1.3870414365485186, 1.3870414365485186, 1.3870414365485186, 1.3870414365485186, 1.3807122850641198, 1.3807122850641198, 1.3807122850641198, 1.3870414365485186, 1.3870414365485186, 1.3934244537994498, 1.3934244537994498, 1.3934244537994498, 1.3934244537994498, 1.3934244537994498, 1.3934244537994498, 1.3934244537994498, 1.3934244537994498, 1.3934244537994498, 1.3934244537994498, 1.3934244537994498, 1.3934244537994498, 1.3934244537994498, 1.3934244537994498, 1.3934244537994498, 1.3934244537994498, 1.3934244537994498, 1.3934244537994498, 1.3934244537994498, 1.3934244537994498, 1.3934244537994498, 1.3934244537994498, 1.3998622615679932, 1.3998622615679932, 1.3998622615679932, 1.3998622615679932, 1.3998622615679932, 1.4063558086253296, 1.4063558086253296, 1.4063558086253296, 1.4063558086253296, 1.4063558086253296, 1.4063558086253296, 1.4063558086253296, 1.4063558086253296, 1.4063558086253296, 1.4063558086253296, 1.4063558086253296, 1.3998622615679932, 1.3998622615679932, 1.3998622615679932, 1.3998622615679932, 1.3998622615679932, 1.3998622615679932, 1.3998622615679932, 1.3998622615679932, 1.3998622615679932, 1.3998622615679932, 1.3998622615679932, 1.3998622615679932, 1.3998622615679932, 1.3998622615679932, 1.3998622615679932, 1.4063558086253296, 1.4063558086253296, 1.4063558086253296, 1.4063558086253296, 1.4063558086253296, 1.4063558086253296, 1.4063558086253296, 1.4063558086253296, 1.4063558086253296, 1.4195140408635114, 1.4195140408635114, 1.4195140408635114, 1.4195140408635114, 1.4195140408635114, 1.4195140408635114, 1.4129060686018955, 1.4195140408635114, 1.4195140408635114, 1.4195140408635114, 1.4195140408635114, 1.4195140408635114, 1.4195140408635114, 1.4195140408635114, 1.4195140408635114, 1.4195140408635114, 1.4195140408635114, 1.4195140408635114, 1.4195140408635114, 1.4195140408635114, 1.4195140408635114, 1.4129060686018955, 1.4129060686018955, 1.4129060686018955, 1.4129060686018955, 1.4129060686018955, 1.4129060686018955, 1.4129060686018955, 1.4129060686018955, 1.4129060686018955, 1.4129060686018955, 1.4129060686018955, 1.4129060686018955, 1.4129060686018955, 1.4129060686018955, 1.4129060686018955, 1.4129060686018955, 1.4129060686018955, 1.4129060686018955, 1.4129060686018955, 1.4129060686018955, 1.4129060686018955, 1.4195140408635114, 1.4195140408635114, 1.4195140408635114, 1.4195140408635114, 1.4195140408635114, 1.4261807514264462, 1.4261807514264462, 1.4261807514264462, 1.4261807514264462, 1.4261807514264462, 1.4261807514264462, 1.4261807514264462, 1.4261807514264462, 1.4261807514264462, 1.4261807514264462, 1.4261807514264462, 1.4261807514264462, 1.4329072539135164, 1.4396946305534546, 1.4396946305534546, 1.4396946305534546, 1.4396946305534546, 1.4396946305534546, 1.4396946305534546, 1.4396946305534546, 1.4396946305534546, 1.4396946305534546, 1.4396946305534546, 1.4396946305534546, 1.4396946305534546, 1.4396946305534546, 1.4396946305534546, 1.4396946305534546, 1.4396946305534546, 1.4396946305534546, 1.4396946305534546, 1.4396946305534546, 1.4396946305534546, 1.4396946305534546, 1.4396946305534546, 1.4396946305534546, 1.4396946305534546, 1.4396946305534546, 1.4396946305534546, 1.4396946305534546, 1.4465439932259094, 1.4465439932259094, 1.4465439932259094, 1.4465439932259094, 1.4465439932259094, 1.4465439932259094, 1.4465439932259094, 1.4465439932259094, 1.4465439932259094, 1.4465439932259094, 1.4465439932259094, 1.4465439932259094, 1.4465439932259094, 1.4465439932259094, 1.4465439932259094, 1.4465439932259094, 1.4465439932259094, 1.4465439932259094, 1.4465439932259094, 1.4465439932259094, 1.4465439932259094, 1.4465439932259094, 1.4465439932259094, 1.4465439932259094, 1.4465439932259094, 1.4465439932259094, 1.4465439932259094, 1.4465439932259094, 1.4534564845546023, 1.4534564845546023, 1.4534564845546023, 1.4534564845546023, 1.4534564845546023, 1.4534564845546023, 1.4534564845546023, 1.4534564845546023, 1.4534564845546023, 1.4534564845546023, 1.4534564845546023, 1.4534564845546023, 1.4534564845546023, 1.4534564845546023, 1.4534564845546023, 1.4534564845546023, 1.4534564845546023, 1.4534564845546023, 1.4534564845546023, 1.4534564845546023, 1.4465439932259094, 1.4465439932259094, 1.4396946305534546, 1.4396946305534546, 1.4396946305534546, 1.4396946305534546, 1.4396946305534546, 1.4396946305534546, 1.4396946305534546, 1.4396946305534546, 1.4396946305534546, 1.4396946305534546, 1.4396946305534546, 1.4396946305534546, 1.4396946305534546, 1.4396946305534546, 1.4396946305534546, 1.4329072539135164, 1.4329072539135164, 1.4329072539135164, 1.4329072539135164, 1.4195140408635114, 1.4195140408635114, 1.4195140408635114, 1.4195140408635114, 1.4195140408635114, 1.4195140408635114, 1.4195140408635114, 1.4129060686018955, 1.4063558086253296, 1.4063558086253296, 1.4063558086253296, 1.4063558086253296, 1.4063558086253296, 1.4063558086253296, 1.4063558086253296, 1.4063558086253296, 1.4063558086253296, 1.4063558086253296, 1.4063558086253296, 1.4063558086253296, 1.4063558086253296, 1.4063558086253296, 1.4063558086253296, 1.4063558086253296, 1.4063558086253296, 1.3998622615679932, 1.3998622615679932, 1.3998622615679932, 1.3998622615679932, 1.3998622615679932, 1.3998622615679932, 1.3934244537994498, 1.3934244537994498, 1.3934244537994498, 1.3934244537994498, 1.3934244537994498, 1.3934244537994498, 1.3934244537994498, 1.3934244537994498, 1.3934244537994498, 1.3934244537994498, 1.3934244537994498, 1.3998622615679932, 1.3998622615679932, 1.3998622615679932, 1.3998622615679932, 1.3998622615679932, 1.3998622615679932, 1.3998622615679932, 1.3998622615679932, 1.3998622615679932, 1.3998622615679932, 1.3998622615679932, 1.3998622615679932, 1.3998622615679932, 1.3998622615679932, 1.3934244537994498, 1.3934244537994498, 1.3934244537994498, 1.3934244537994498, 1.3934244537994498, 1.3998622615679932, 1.3998622615679932, 1.3998622615679932, 1.3998622615679932, 1.3998622615679932, 1.3998622615679932, 1.3998622615679932, 1.3998622615679932, 1.3934244537994498, 1.3934244537994498, 1.3934244537994498, 1.3934244537994498, 1.3934244537994498, 1.3934244537994498, 1.3934244537994498, 1.3934244537994498, 1.3934244537994498, 1.3934244537994498, 1.3934244537994498, 1.3934244537994498, 1.3934244537994498, 1.3934244537994498, 1.3934244537994498, 1.3934244537994498, 1.3934244537994498, 1.3934244537994498, 1.3934244537994498, 1.3934244537994498, 1.3870414365485186, 1.3870414365485186, 1.3870414365485186, 1.3807122850641198, 1.3807122850641198, 1.3807122850641198, 1.3807122850641198, 1.3807122850641198, 1.3807122850641198, 1.3807122850641198, 1.3807122850641198, 1.3807122850641198, 1.3807122850641198, 1.3870414365485186, 1.3870414365485186, 1.3870414365485186, 1.3870414365485186, 1.3870414365485186, 1.3870414365485186, 1.3870414365485186, 1.3870414365485186, 1.3870414365485186, 1.3870414365485186, 1.3870414365485186, 1.3870414365485186, 1.3870414365485186, 1.3870414365485186, 1.3870414365485186, 1.3870414365485186, 1.3870414365485186, 1.3870414365485186, 1.3870414365485186, 1.3870414365485186, 1.3870414365485186, 1.3870414365485186, 1.3870414365485186, 1.3934244537994498, 1.3934244537994498, 1.3934244537994498, 1.3870414365485186, 1.3870414365485186, 1.3807122850641198, 1.3807122850641198, 1.3807122850641198, 1.3807122850641198, 1.3870414365485186, 1.3870414365485186, 1.3934244537994498, 1.3934244537994498, 1.3934244537994498, 1.3934244537994498, 1.3934244537994498, 1.3934244537994498, 1.3934244537994498, 1.3934244537994498, 1.3934244537994498, 1.3934244537994498, 1.3998622615679932, 1.3998622615679932, 1.3998622615679932, 1.4063558086253296, 1.4063558086253296, 1.4063558086253296, 1.4129060686018955, 1.4195140408635114, 1.4195140408635114, 1.4195140408635114, 1.4195140408635114, 1.4195140408635114, 1.4195140408635114, 1.4195140408635114, 1.4195140408635114, 1.4195140408635114, 1.4195140408635114, 1.4195140408635114, 1.4261807514264462, 1.4261807514264462, 1.4195140408635114, 1.4195140408635114, 1.4195140408635114, 1.4195140408635114, 1.4195140408635114, 1.4195140408635114, 1.4195140408635114, 1.4195140408635114, 1.4195140408635114, 1.4195140408635114, 1.4195140408635114, 1.4195140408635114, 1.4129060686018955, 1.4129060686018955, 1.4195140408635114, 1.4195140408635114, 1.4195140408635114, 1.4195140408635114, 1.4195140408635114, 1.4195140408635114, 1.4195140408635114, 1.4195140408635114, 1.4195140408635114, 1.4195140408635114, 1.4261807514264462, 1.4261807514264462, 1.4261807514264462, 1.4261807514264462, 1.4261807514264462, 1.4261807514264462, 1.4261807514264462, 1.4261807514264462, 1.4261807514264462, 1.4329072539135164, 1.4465439932259094, 1.4465439932259094, 1.4465439932259094, 1.4465439932259094, 1.4465439932259094, 1.4465439932259094, 1.4465439932259094, 1.4465439932259094, 1.4465439932259094, 1.4465439932259094, 1.4465439932259094, 1.4465439932259094, 1.4465439932259094, 1.4465439932259094, 1.4465439932259094, 1.4465439932259094, 1.4465439932259094, 1.4465439932259094, 1.4465439932259094, 1.4465439932259094, 1.4465439932259094, 1.4465439932259094, 1.4465439932259094, 1.4465439932259094, 1.4465439932259094, 1.4465439932259094, 1.4465439932259094, 1.4465439932259094, 1.4465439932259094, 1.4465439932259094, 1.4534564845546023, 1.4534564845546023, 1.4534564845546023, 1.4534564845546023, 1.4534564845546023, 1.4534564845546023, 1.4534564845546023, 1.4604332790513372, 1.4604332790513372, 1.4604332790513372, 1.4604332790513372, 1.4604332790513372, 1.4604332790513372, 1.4604332790513372, 1.4604332790513372, 1.4674755843137168, 1.4674755843137168, 1.4674755843137168, 1.4674755843137168, 1.4674755843137168, 1.4674755843137168, 1.4674755843137168, 1.4674755843137168, 1.4674755843137168, 1.4674755843137168, 1.4674755843137168, 1.4674755843137168, 1.4674755843137168, 1.4674755843137168, 1.4745846422796245, 1.4745846422796245, 1.4745846422796245, 1.4745846422796245, 1.4745846422796245, 1.4745846422796245, 1.4674755843137168, 1.4674755843137168, 1.4674755843137168, 1.4674755843137168, 1.4674755843137168, 1.4674755843137168, 1.4674755843137168, 1.4674755843137168, 1.4674755843137168, 1.4674755843137168, 1.4674755843137168, 1.4674755843137168, 1.4674755843137168, 1.4674755843137168, 1.4745846422796245, 1.4745846422796245, 1.4745846422796245, 1.4745846422796245, 1.4745846422796245, 1.4745846422796245, 1.4745846422796245, 1.4745846422796245, 1.4745846422796245, 1.4745846422796245, 1.4745846422796245, 1.4745846422796245, 1.4817617305417374, 1.4817617305417374, 1.4817617305417374, 1.4817617305417374, 1.4817617305417374, 1.4817617305417374, 1.4674755843137168, 1.4674755843137168, 1.4674755843137168, 1.4674755843137168, 1.4674755843137168, 1.4674755843137168, 1.4674755843137168, 1.4674755843137168, 1.4674755843137168, 1.4674755843137168, 1.4674755843137168, 1.4674755843137168, 1.4674755843137168, 1.4674755843137168, 1.4674755843137168, 1.4674755843137168, 1.4674755843137168, 1.4674755843137168, 1.4674755843137168, 1.4674755843137168, 1.4674755843137168, 1.4674755843137168, 1.4674755843137168, 1.4674755843137168, 1.4674755843137168, 1.4674755843137168, 1.4674755843137168, 1.4674755843137168, 1.4674755843137168, 1.4674755843137168, 1.4745846422796245, 1.4745846422796245, 1.4745846422796245, 1.4745846422796245, 1.4745846422796245, 1.4745846422796245, 1.4745846422796245, 1.4745846422796245, 1.4745846422796245, 1.4745846422796245, 1.4745846422796245, 1.4674755843137168, 1.4674755843137168, 1.4674755843137168, 1.4674755843137168, 1.4604332790513372, 1.4604332790513372, 1.4604332790513372, 1.4604332790513372, 1.4604332790513372, 1.4604332790513372, 1.4604332790513372, 1.4604332790513372, 1.4674755843137168, 1.4674755843137168, 1.4674755843137168, 1.4674755843137168, 1.4674755843137168, 1.4674755843137168, 1.4674755843137168, 1.4604332790513372, 1.4674755843137168, 1.4674755843137168, 1.4674755843137168, 1.4674755843137168, 1.4674755843137168, 1.4674755843137168, 1.4674755843137168, 1.4674755843137168, 1.4674755843137168, 1.4674755843137168, 1.4674755843137168, 1.4674755843137168, 1.4674755843137168, 1.4674755843137168, 1.4674755843137168, 1.4674755843137168, 1.4674755843137168, 1.4674755843137168, 1.4674755843137168, 1.4674755843137168, 1.4674755843137168, 1.4674755843137168, 1.4674755843137168, 1.4674755843137168, 1.4674755843137168, 1.4674755843137168, 1.4674755843137168, 1.4674755843137168, 1.4674755843137168, 1.4674755843137168, 1.4674755843137168, 1.4674755843137168, 1.4674755843137168, 1.4674755843137168, 1.4674755843137168, 1.4674755843137168, 1.4674755843137168, 1.4674755843137168, 1.4674755843137168, 1.4674755843137168, 1.4674755843137168, 1.4674755843137168, 1.4674755843137168, 1.4745846422796245, 1.4674755843137168, 1.4674755843137168, 1.4674755843137168, 1.4674755843137168, 1.4674755843137168, 1.4674755843137168, 1.4674755843137168, 1.4674755843137168, 1.4674755843137168, 1.4745846422796245, 1.4745846422796245, 1.4817617305417374, 1.4817617305417374, 1.4890081637255403, 1.4890081637255403, 1.4817617305417374, 1.4817617305417374, 1.4890081637255403, 1.4890081637255403, 1.4890081637255403, 1.4890081637255403, 1.4890081637255403, 1.4890081637255403, 1.4963252949345636, 1.4963252949345636, 1.4963252949345636, 1.4963252949345636, 1.4890081637255403, 1.4817617305417374, 1.4817617305417374, 1.4817617305417374, 1.4817617305417374, 1.4817617305417374, 1.4817617305417374, 1.4817617305417374, 1.4817617305417374, 1.4817617305417374, 1.4817617305417374, 1.4817617305417374, 1.4817617305417374, 1.4817617305417374, 1.4817617305417374, 1.4817617305417374, 1.4817617305417374, 1.4817617305417374, 1.4817617305417374, 1.4817617305417374, 1.4817617305417374, 1.4817617305417374, 1.4817617305417374, 1.4817617305417374, 1.4817617305417374, 1.4817617305417374, 1.4817617305417374, 1.4817617305417374, 1.4817617305417374, 1.4817617305417374, 1.4817617305417374, 1.4817617305417374, 1.4817617305417374, 1.4817617305417374, 1.4817617305417374, 1.4817617305417374, 1.4817617305417374, 1.4817617305417374, 1.4817617305417374, 1.4817617305417374, 1.4817617305417374, 1.4817617305417374, 1.4817617305417374, 1.4890081637255403, 1.4890081637255403, 1.4890081637255403, 1.4963252949345636, 1.4963252949345636, 1.4963252949345636, 1.4963252949345636, 1.4963252949345636, 1.4963252949345636, 1.4963252949345636, 1.4963252949345636, 1.4963252949345636, 1.4963252949345636, 1.5111772654066988, 1.5111772654066988, 1.5111772654066988, 1.5037145172668223, 1.5037145172668223, 1.5037145172668223, 1.5037145172668223, 1.5037145172668223, 1.5037145172668223, 1.5037145172668223, 1.5037145172668223, 1.5037145172668223, 1.5037145172668223, 1.5037145172668223, 1.5037145172668223, 1.5037145172668223, 1.5037145172668223, 1.5037145172668223, 1.5037145172668223, 1.5037145172668223, 1.5037145172668223, 1.5037145172668223, 1.5037145172668223, 1.5037145172668223, 1.5037145172668223, 1.5037145172668223, 1.5037145172668223, 1.5037145172668223, 1.5037145172668223, 1.5037145172668223, 1.5037145172668223, 1.5037145172668223, 1.5037145172668223, 1.5037145172668223, 1.5037145172668223, 1.5037145172668223, 1.5037145172668223, 1.5037145172668223, 1.5037145172668223, 1.5037145172668223, 1.5037145172668223, 1.5037145172668223, 1.5037145172668223, 1.5037145172668223, 1.5037145172668223, 1.5037145172668223, 1.5037145172668223, 1.5037145172668223, 1.5037145172668223, 1.5037145172668223, 1.5037145172668223, 1.5037145172668223, 1.4963252949345636, 1.4963252949345636, 1.4890081637255403, 1.4890081637255403, 1.4890081637255403, 1.4890081637255403, 1.4963252949345636, 1.4963252949345636, 1.4963252949345636, 1.4963252949345636, 1.4963252949345636, 1.4963252949345636, 1.4963252949345636, 1.4963252949345636, 1.4963252949345636, 1.4963252949345636, 1.4963252949345636, 1.5037145172668223, 1.5037145172668223, 1.5037145172668223, 1.5037145172668223, 1.5037145172668223, 1.5037145172668223, 1.5037145172668223, 1.5037145172668223, 1.5037145172668223, 1.5037145172668223, 1.5037145172668223, 1.5037145172668223, 1.5037145172668223, 1.5037145172668223, 1.4963252949345636, 1.4963252949345636, 1.4963252949345636, 1.4963252949345636, 1.4963252949345636, 1.4963252949345636, 1.4963252949345636, 1.5037145172668223, 1.5037145172668223, 1.5037145172668223, 1.5037145172668223, 1.5037145172668223, 1.5037145172668223, 1.5037145172668223, 1.5037145172668223, 1.5037145172668223, 1.5037145172668223, 1.5037145172668223, 1.5037145172668223, 1.5037145172668223, 1.5037145172668223, 1.5037145172668223, 1.5037145172668223, 1.5037145172668223, 1.5037145172668223, 1.5111772654066988, 1.5111772654066988, 1.5111772654066988, 1.5111772654066988, 1.5111772654066988, 1.5187150172968247, 1.5187150172968247, 1.5187150172968247, 1.5187150172968247, 1.5187150172968247, 1.5187150172968247, 1.5263292958948378, 1.5187150172968247, 1.5187150172968247, 1.5187150172968247, 1.5187150172968247, 1.5187150172968247, 1.5187150172968247, 1.5263292958948378, 1.5263292958948378, 1.5263292958948378, 1.5263292958948378, 1.5263292958948378, 1.5263292958948378, 1.5263292958948378, 1.5263292958948378, 1.5263292958948378, 1.54179376129689, 1.54179376129689, 1.54179376129689, 1.54179376129689, 1.54179376129689, 1.54179376129689, 1.549647236197361, 1.549647236197361, 1.549647236197361, 1.549647236197361, 1.549647236197361, 1.54179376129689, 1.549647236197361, 1.549647236197361, 1.549647236197361, 1.549647236197361, 1.549647236197361, 1.549647236197361, 1.5575838181952646, 1.5575838181952646, 1.5575838181952646, 1.5575838181952646, 1.5575838181952646, 1.5575838181952646, 1.5575838181952646, 1.5575838181952646, 1.5575838181952646, 1.5575838181952646, 1.5575838181952646, 1.5575838181952646, 1.5575838181952646, 1.5575838181952646, 1.5575838181952646, 1.565605285032825, 1.5575838181952646, 1.5575838181952646, 1.5575838181952646, 1.5575838181952646, 1.549647236197361, 1.549647236197361, 1.549647236197361, 1.5575838181952646, 1.5575838181952646, 1.5575838181952646, 1.5575838181952646, 1.5575838181952646, 1.5575838181952646, 1.5575838181952646, 1.5575838181952646, 1.5575838181952646, 1.5575838181952646, 1.565605285032825, 1.565605285032825, 1.565605285032825, 1.565605285032825, 1.565605285032825, 1.565605285032825, 1.5737134721109867, 1.5737134721109867, 1.5737134721109867, 1.5737134721109867, 1.5737134721109867, 1.5737134721109867, 1.5737134721109867, 1.5737134721109867, 1.5737134721109867, 1.5737134721109867, 1.5737134721109867, 1.5737134721109867, 1.5737134721109867, 1.5737134721109867, 1.5737134721109867, 1.5819102750101297, 1.5737134721109867, 1.5737134721109867, 1.5737134721109867, 1.5737134721109867, 1.5737134721109867, 1.5737134721109867, 1.5737134721109867, 1.5737134721109867, 1.5737134721109867, 1.5819102750101297, 1.5901976521500683, 1.5901976521500683, 1.5901976521500683, 1.5901976521500683, 1.5901976521500683, 1.5901976521500683, 1.5901976521500683, 1.5901976521500683, 1.5901976521500683, 1.5901976521500683, 1.598577627598662, 1.5819102750101297, 1.5819102750101297, 1.5819102750101297, 1.5819102750101297, 1.5819102750101297, 1.5819102750101297, 1.5819102750101297, 1.5819102750101297, 1.5819102750101297, 1.5819102750101297, 1.5819102750101297, 1.5819102750101297, 1.5819102750101297, 1.5819102750101297, 1.5819102750101297, 1.5819102750101297, 1.5819102750101297, 1.5819102750101297, 1.5819102750101297, 1.5819102750101297, 1.5819102750101297, 1.5819102750101297, 1.5901976521500683, 1.5901976521500683, 1.5901976521500683, 1.5901976521500683, 1.5901976521500683, 1.5901976521500683, 1.5901976521500683, 1.5901976521500683, 1.5901976521500683, 1.5901976521500683, 1.5901976521500683, 1.5901976521500683, 1.5901976521500683, 1.5901976521500683, 1.5901976521500683, 1.5901976521500683, 1.5901976521500683, 1.5901976521500683, 1.5901976521500683, 1.5901976521500683, 1.5901976521500683, 1.5901976521500683, 1.5901976521500683, 1.5901976521500683, 1.5901976521500683, 1.598577627598662, 1.598577627598662, 1.5901976521500683, 1.5901976521500683, 1.5901976521500683, 1.5901976521500683, 1.5901976521500683, 1.5901976521500683, 1.5901976521500683, 1.5901976521500683, 1.5901976521500683, 1.598577627598662, 1.598577627598662, 1.598577627598662, 1.598577627598662, 1.598577627598662, 1.598577627598662, 1.598577627598662, 1.598577627598662, 1.5901976521500683, 1.5901976521500683, 1.5901976521500683, 1.5901976521500683, 1.5901976521500683, 1.5819102750101297, 1.5819102750101297, 1.5819102750101297, 1.5819102750101297, 1.5819102750101297, 1.5819102750101297, 1.5819102750101297, 1.5819102750101297, 1.5737134721109867, 1.5737134721109867, 1.5819102750101297, 1.5819102750101297, 1.5819102750101297, 1.5819102750101297, 1.5819102750101297, 1.5819102750101297, 1.5819102750101297, 1.5819102750101297, 1.5737134721109867, 1.5737134721109867, 1.5737134721109867, 1.5737134721109867, 1.5737134721109867, 1.565605285032825, 1.565605285032825, 1.565605285032825, 1.565605285032825, 1.565605285032825, 1.549647236197361, 1.549647236197361, 1.549647236197361, 1.549647236197361, 1.549647236197361, 1.549647236197361, 1.549647236197361, 1.549647236197361, 1.549647236197361, 1.549647236197361, 1.549647236197361, 1.549647236197361, 1.54179376129689, 1.54179376129689, 1.54179376129689, 1.54179376129689, 1.54179376129689, 1.54179376129689, 1.54179376129689, 1.54179376129689, 1.54179376129689, 1.54179376129689, 1.54179376129689, 1.54179376129689, 1.54179376129689, 1.54179376129689, 1.54179376129689, 1.54179376129689, 1.54179376129689, 1.54179376129689, 1.54179376129689, 1.54179376129689, 1.549647236197361, 1.549647236197361, 1.549647236197361, 1.549647236197361, 1.549647236197361, 1.549647236197361, 1.549647236197361, 1.5575838181952646, 1.5575838181952646, 1.5575838181952646, 1.5575838181952646, 1.5575838181952646, 1.549647236197361, 1.549647236197361, 1.549647236197361, 1.549647236197361, 1.549647236197361, 1.5575838181952646, 1.5575838181952646, 1.5575838181952646, 1.5575838181952646, 1.5575838181952646, 1.5575838181952646, 1.5575838181952646, 1.5575838181952646, 1.5575838181952646, 1.5575838181952646, 1.5575838181952646, 1.5575838181952646, 1.565605285032825, 1.565605285032825, 1.565605285032825, 1.5737134721109867, 1.5737134721109867, 1.5737134721109867, 1.5737134721109867, 1.5737134721109867, 1.5737134721109867, 1.5819102750101297, 1.5819102750101297, 1.5819102750101297, 1.5819102750101297, 1.5819102750101297, 1.5819102750101297, 1.5901976521500683, 1.5901976521500683, 1.5901976521500683, 1.5901976521500683, 1.5901976521500683, 1.5901976521500683, 1.5901976521500683, 1.5901976521500683, 1.5901976521500683, 1.5901976521500683, 1.5901976521500683, 1.5901976521500683, 1.5901976521500683, 1.5901976521500683, 1.5901976521500683, 1.5901976521500683, 1.5901976521500683, 1.5901976521500683, 1.598577627598662, 1.598577627598662, 1.5901976521500683, 1.598577627598662, 1.598577627598662, 1.598577627598662, 1.598577627598662, 1.598577627598662, 1.598577627598662, 1.598577627598662, 1.598577627598662, 1.598577627598662, 1.598577627598662, 1.598577627598662, 1.598577627598662, 1.598577627598662, 1.598577627598662, 1.598577627598662, 1.5901976521500683, 1.5901976521500683, 1.5901976521500683, 1.5901976521500683, 1.5901976521500683, 1.5901976521500683, 1.5901976521500683, 1.5901976521500683, 1.5901976521500683, 1.5901976521500683, 1.5901976521500683, 1.5901976521500683, 1.5901976521500683, 1.5819102750101297, 1.5819102750101297, 1.5819102750101297, 1.5819102750101297, 1.5819102750101297, 1.5819102750101297, 1.5819102750101297, 1.5819102750101297, 1.5819102750101297, 1.5819102750101297, 1.5819102750101297, 1.5737134721109867, 1.5737134721109867, 1.5737134721109867, 1.5737134721109867, 1.5737134721109867, 1.5737134721109867, 1.5737134721109867, 1.5737134721109867, 1.5737134721109867, 1.5737134721109867, 1.5737134721109867, 1.5737134721109867, 1.5819102750101297, 1.5819102750101297, 1.5819102750101297, 1.5819102750101297, 1.5819102750101297, 1.5819102750101297, 1.5819102750101297, 1.5819102750101297, 1.5819102750101297, 1.5819102750101297, 1.5819102750101297, 1.5819102750101297, 1.5819102750101297, 1.5819102750101297, 1.5819102750101297, 1.5819102750101297, 1.5819102750101297, 1.5819102750101297, 1.5819102750101297, 1.5819102750101297, 1.5819102750101297, 1.5819102750101297, 1.5819102750101297, 1.5819102750101297, 1.5819102750101297, 1.5819102750101297, 1.5819102750101297, 1.5819102750101297, 1.5819102750101297, 1.5819102750101297, 1.5819102750101297, 1.5819102750101297, 1.5819102750101297, 1.5819102750101297, 1.5737134721109867, 1.5737134721109867, 1.5737134721109867, 1.5737134721109867, 1.5737134721109867, 1.5737134721109867, 1.5737134721109867, 1.5737134721109867, 1.5737134721109867, 1.5737134721109867, 1.5737134721109867, 1.5737134721109867, 1.5737134721109867, 1.5737134721109867, 1.5737134721109867, 1.5737134721109867, 1.5737134721109867, 1.5737134721109867, 1.5737134721109867, 1.5737134721109867, 1.5737134721109867, 1.5737134721109867, 1.5737134721109867, 1.5737134721109867, 1.5737134721109867, 1.5737134721109867, 1.5819102750101297, 1.5819102750101297, 1.5819102750101297, 1.5819102750101297, 1.5819102750101297, 1.5819102750101297, 1.5737134721109867, 1.5737134721109867, 1.5737134721109867, 1.5737134721109867, 1.5737134721109867, 1.5737134721109867, 1.5737134721109867, 1.565605285032825, 1.565605285032825, 1.5737134721109867, 1.5737134721109867, 1.5737134721109867, 1.5737134721109867, 1.5737134721109867, 1.5737134721109867, 1.5737134721109867, 1.5737134721109867, 1.5737134721109867, 1.5737134721109867, 1.5737134721109867, 1.5737134721109867, 1.5737134721109867, 1.5737134721109867, 1.5737134721109867, 1.5737134721109867, 1.5737134721109867, 1.5737134721109867, 1.5737134721109867, 1.5737134721109867, 1.5737134721109867, 1.5737134721109867, 1.5737134721109867, 1.5737134721109867, 1.5737134721109867, 1.5737134721109867, 1.5737134721109867, 1.5737134721109867, 1.5737134721109867, 1.5819102750101297, 1.5737134721109867, 1.5737134721109867, 1.5737134721109867, 1.5737134721109867, 1.5737134721109867, 1.5737134721109867, 1.5737134721109867, 1.5819102750101297, 1.5819102750101297, 1.5819102750101297, 1.5819102750101297, 1.5737134721109867, 1.5737134721109867, 1.5737134721109867, 1.5737134721109867, 1.5737134721109867, 1.5737134721109867, 1.5737134721109867, 1.5737134721109867, 1.5737134721109867, 1.5819102750101297, 1.5819102750101297, 1.5901976521500683, 1.5901976521500683, 1.5901976521500683, 1.5901976521500683, 1.5901976521500683, 1.598577627598662, 1.598577627598662, 1.598577627598662, 1.598577627598662, 1.598577627598662, 1.598577627598662, 1.598577627598662, 1.598577627598662, 1.598577627598662, 1.598577627598662, 1.598577627598662, 1.598577627598662, 1.598577627598662, 1.598577627598662, 1.598577627598662, 1.598577627598662, 1.598577627598662, 1.598577627598662, 1.598577627598662, 1.598577627598662, 1.598577627598662, 1.598577627598662, 1.598577627598662, 1.5901976521500683, 1.5901976521500683, 1.5901976521500683, 1.5901976521500683, 1.5901976521500683, 1.5819102750101297, 1.5819102750101297, 1.5737134721109867, 1.5737134721109867, 1.5737134721109867, 1.5737134721109867, 1.5737134721109867, 1.5737134721109867, 1.5819102750101297, 1.5819102750101297, 1.5819102750101297, 1.5819102750101297, 1.5819102750101297, 1.5901976521500683, 1.5901976521500683, 1.5901976521500683, 1.5901976521500683, 1.5901976521500683, 1.5901976521500683, 1.5901976521500683, 1.5901976521500683, 1.5901976521500683, 1.5819102750101297, 1.5819102750101297, 1.5819102750101297, 1.5819102750101297, 1.5819102750101297, 1.5819102750101297, 1.5819102750101297, 1.5819102750101297, 1.5819102750101297, 1.5819102750101297, 1.5819102750101297, 1.5819102750101297, 1.5819102750101297, 1.5819102750101297, 1.5819102750101297, 1.5819102750101297, 1.5819102750101297, 1.5819102750101297, 1.5819102750101297, 1.5819102750101297, 1.5819102750101297, 1.5819102750101297, 1.5819102750101297, 1.5819102750101297, 1.5819102750101297, 1.5819102750101297, 1.5819102750101297, 1.5819102750101297, 1.5819102750101297, 1.5819102750101297, 1.5819102750101297, 1.5819102750101297, 1.5819102750101297, 1.5819102750101297, 1.5819102750101297, 1.5819102750101297, 1.5819102750101297, 1.5819102750101297, 1.5819102750101297, 1.5819102750101297, 1.5819102750101297, 1.5819102750101297, 1.5737134721109867, 1.5737134721109867, 1.5737134721109867, 1.5737134721109867, 1.5737134721109867, 1.5737134721109867, 1.5737134721109867, 1.5737134721109867, 1.565605285032825, 1.565605285032825, 1.565605285032825, 1.5737134721109867, 1.5737134721109867, 1.5737134721109867, 1.5737134721109867, 1.5737134721109867, 1.5737134721109867, 1.5737134721109867, 1.5737134721109867, 1.5737134721109867, 1.5737134721109867, 1.5737134721109867, 1.565605285032825, 1.565605285032825, 1.565605285032825, 1.565605285032825, 1.565605285032825, 1.565605285032825, 1.565605285032825, 1.565605285032825, 1.565605285032825, 1.565605285032825, 1.565605285032825, 1.565605285032825, 1.565605285032825, 1.565605285032825, 1.565605285032825, 1.565605285032825, 1.565605285032825, 1.565605285032825, 1.565605285032825, 1.565605285032825, 1.565605285032825, 1.565605285032825, 1.565605285032825, 1.565605285032825, 1.5737134721109867, 1.5737134721109867, 1.5737134721109867, 1.5737134721109867, 1.5737134721109867, 1.5737134721109867, 1.565605285032825, 1.565605285032825, 1.565605285032825, 1.565605285032825, 1.565605285032825, 1.565605285032825, 1.565605285032825, 1.565605285032825, 1.565605285032825, 1.5737134721109867, 1.5819102750101297, 1.5901976521500683, 1.5901976521500683, 1.5901976521500683, 1.5901976521500683, 1.5901976521500683, 1.5901976521500683, 1.5901976521500683, 1.5901976521500683, 1.5901976521500683, 1.5901976521500683, 1.5901976521500683, 1.5901976521500683, 1.5901976521500683, 1.5901976521500683, 1.5901976521500683, 1.5901976521500683, 1.5901976521500683, 1.598577627598662, 1.598577627598662, 1.598577627598662, 1.5901976521500683, 1.5901976521500683, 1.5901976521500683, 1.5901976521500683, 1.5901976521500683, 1.5901976521500683, 1.5901976521500683, 1.5901976521500683, 1.5901976521500683, 1.5901976521500683, 1.5901976521500683, 1.5901976521500683, 1.598577627598662, 1.598577627598662, 1.598577627598662, 1.598577627598662, 1.598577627598662, 1.598577627598662, 1.598577627598662, 1.598577627598662, 1.598577627598662, 1.598577627598662, 1.598577627598662, 1.598577627598662, 1.6070522940391125, 1.6070522940391125, 1.6070522940391125, 1.6070522940391125, 1.6070522940391125, 1.6070522940391125, 1.6156238159068292, 1.6156238159068292, 1.6156238159068292, 1.6156238159068292, 1.6156238159068292, 1.6156238159068292, 1.6070522940391125, 1.6070522940391125, 1.6156238159068292, 1.6156238159068292, 1.6156238159068292, 1.6156238159068292, 1.6156238159068292, 1.6156238159068292, 1.6156238159068292, 1.6156238159068292, 1.6156238159068292, 1.6156238159068292, 1.6156238159068292, 1.6156238159068292, 1.6156238159068292, 1.6156238159068292, 1.6156238159068292, 1.6156238159068292, 1.6156238159068292, 1.6156238159068292, 1.6156238159068292, 1.6156238159068292, 1.6156238159068292, 1.6242944327076363, 1.6242944327076363, 1.6242944327076363, 1.6242944327076363, 1.6242944327076363, 1.6330664625300302, 1.6330664625300302, 1.6330664625300302, 1.6330664625300302, 1.6330664625300302, 1.6330664625300302, 1.6330664625300302, 1.6330664625300302, 1.6330664625300302, 1.6330664625300302, 1.6242944327076363, 1.6242944327076363, 1.6242944327076363, 1.6242944327076363, 1.6242944327076363, 1.6242944327076363, 1.6242944327076363, 1.6242944327076363, 1.6242944327076363, 1.6242944327076363, 1.6242944327076363, 1.6242944327076363, 1.6330664625300302, 1.6242944327076363, 1.6242944327076363, 1.6242944327076363, 1.6242944327076363, 1.6330664625300302, 1.6330664625300302, 1.6330664625300302, 1.641942305765282, 1.641942305765282, 1.641942305765282, 1.641942305765282, 1.641942305765282, 1.641942305765282, 1.641942305765282, 1.641942305765282, 1.641942305765282, 1.641942305765282, 1.641942305765282, 1.6330664625300302, 1.6330664625300302, 1.6330664625300302, 1.6330664625300302, 1.6330664625300302, 1.6330664625300302, 1.6330664625300302, 1.6330664625300302, 1.641942305765282, 1.641942305765282, 1.641942305765282, 1.641942305765282, 1.641942305765282, 1.641942305765282, 1.641942305765282, 1.641942305765282, 1.641942305765282, 1.6509244490503183, 1.6509244490503183, 1.6509244490503183, 1.6509244490503183, 1.6509244490503183, 1.6509244490503183, 1.6509244490503183, 1.6509244490503183, 1.6600154694495777, 1.6600154694495777, 1.6600154694495777, 1.6600154694495777, 1.6600154694495777, 1.6600154694495777, 1.6600154694495777, 1.6600154694495777, 1.6509244490503183, 1.6509244490503183, 1.6509244490503183, 1.6509244490503183, 1.6509244490503183, 1.6509244490503183, 1.6509244490503183, 1.6509244490503183, 1.6509244490503183, 1.6509244490503183, 1.6509244490503183, 1.6509244490503183, 1.6509244490503183, 1.6509244490503183, 1.6509244490503183, 1.6509244490503183, 1.6509244490503183, 1.6509244490503183, 1.6509244490503183, 1.6509244490503183, 1.6509244490503183, 1.6509244490503183, 1.6509244490503183, 1.6509244490503183, 1.6509244490503183, 1.6509244490503183, 1.6509244490503183, 1.6509244490503183, 1.6509244490503183, 1.6509244490503183, 1.6509244490503183, 1.6509244490503183, 1.6509244490503183, 1.6600154694495777, 1.6600154694495777, 1.6600154694495777, 1.6600154694495777, 1.6600154694495777, 1.6600154694495777, 1.6600154694495777, 1.6600154694495777, 1.6600154694495777, 1.6600154694495777, 1.6600154694495777, 1.6600154694495777, 1.6692180388934381, 1.678534928892356, 1.678534928892356, 1.678534928892356, 1.678534928892356, 1.678534928892356, 1.678534928892356, 1.678534928892356, 1.678534928892356, 1.678534928892356, 1.678534928892356, 1.678534928892356, 1.678534928892356, 1.678534928892356, 1.678534928892356, 1.6879690155475013, 1.6975232848805737, 1.6975232848805737, 1.6975232848805737, 1.6975232848805737, 1.6975232848805737, 1.6975232848805737, 1.6975232848805737, 1.6975232848805737, 1.6975232848805737, 1.6975232848805737, 1.6975232848805737, 1.6975232848805737, 1.6975232848805737, 1.6975232848805737, 1.6975232848805737, 1.6975232848805737, 1.6975232848805737, 1.6975232848805737, 1.6975232848805737, 1.6975232848805737, 1.6975232848805737, 1.6975232848805737, 1.6975232848805737, 1.6975232848805737, 1.6975232848805737, 1.6975232848805737, 1.6975232848805737, 1.6975232848805737, 1.6975232848805737, 1.6975232848805737, 1.6975232848805737, 1.6975232848805737, 1.707200838507504, 1.717004899683019, 1.717004899683019, 1.717004899683019, 1.717004899683019, 1.717004899683019, 1.717004899683019, 1.717004899683019, 1.717004899683019, 1.717004899683019, 1.717004899683019, 1.717004899683019, 1.717004899683019, 1.717004899683019, 1.717004899683019, 1.717004899683019, 1.717004899683019, 1.717004899683019, 1.717004899683019, 1.717004899683019, 1.717004899683019, 1.717004899683019, 1.717004899683019, 1.717004899683019, 1.717004899683019, 1.7269388197455344, 1.7269388197455344, 1.7370060849946398, 1.7370060849946398, 1.7370060849946398, 1.7370060849946398, 1.747210324036474, 1.747210324036474, 1.747210324036474, 1.747210324036474, 1.747210324036474, 1.747210324036474, 1.757555315635726, 1.757555315635726, 1.757555315635726, 1.757555315635726, 1.757555315635726, 1.757555315635726, 1.757555315635726, 1.757555315635726, 1.757555315635726, 1.757555315635726, 1.757555315635726, 1.757555315635726, 1.757555315635726, 1.757555315635726, 1.757555315635726, 1.747210324036474, 1.7370060849946398, 1.7370060849946398, 1.7370060849946398, 1.7370060849946398, 1.7370060849946398, 1.7370060849946398, 1.7370060849946398, 1.7370060849946398, 1.747210324036474, 1.747210324036474, 1.747210324036474, 1.747210324036474, 1.747210324036474, 1.757555315635726, 1.757555315635726, 1.757555315635726, 1.757555315635726, 1.757555315635726, 1.757555315635726, 1.757555315635726, 1.757555315635726, 1.757555315635726, 1.757555315635726, 1.757555315635726, 1.757555315635726, 1.757555315635726, 1.757555315635726, 1.7680449971167804, 1.7680449971167804, 1.7680449971167804, 1.7680449971167804, 1.7680449971167804, 1.7680449971167804, 1.7680449971167804, 1.7680449971167804, 1.7680449971167804, 1.7680449971167804, 1.7786834733607484, 1.7786834733607484, 1.789475026449823, 1.8004241260156872, 1.8004241260156872, 1.8004241260156872, 1.8004241260156872, 1.8004241260156872, 1.8004241260156872, 1.8115354403545432, 1.8004241260156872, 1.8004241260156872, 1.8115354403545432, 1.8115354403545432, 1.8228138483779481, 1.8228138483779481, 1.8228138483779481, 1.8228138483779481, 1.8228138483779481, 1.8228138483779481, 1.8228138483779481, 1.8228138483779481, 1.8115354403545432, 1.8004241260156872, 1.8004241260156872, 1.8004241260156872, 1.8004241260156872, 1.8004241260156872, 1.8004241260156872, 1.8004241260156872, 1.8004241260156872, 1.8004241260156872, 1.8004241260156872, 1.8004241260156872, 1.8004241260156872, 1.8115354403545432, 1.8115354403545432, 1.8115354403545432, 1.8115354403545432, 1.8004241260156872, 1.8004241260156872, 1.8004241260156872, 1.8004241260156872, 1.8004241260156872, 1.8115354403545432, 1.8115354403545432, 1.8115354403545432, 1.8115354403545432, 1.8115354403545432, 1.8115354403545432, 1.8115354403545432, 1.8115354403545432, 1.8115354403545432, 1.8115354403545432, 1.8115354403545432, 1.8115354403545432, 1.8115354403545432, 1.8115354403545432, 1.8115354403545432, 1.8115354403545432, 1.8115354403545432, 1.8115354403545432, 1.8115354403545432, 1.8115354403545432, 1.8115354403545432, 1.8115354403545432, 1.8115354403545432, 1.8115354403545432, 1.8115354403545432, 1.8115354403545432, 1.8115354403545432, 1.8115354403545432, 1.8115354403545432, 1.8115354403545432, 1.8115354403545432, 1.8115354403545432, 1.8115354403545432, 1.8115354403545432, 1.8115354403545432, 1.8115354403545432, 1.8115354403545432, 1.8115354403545432, 1.8115354403545432, 1.8115354403545432, 1.8115354403545432, 1.8115354403545432, 1.8228138483779481, 1.8228138483779481, 1.8115354403545432, 1.8115354403545432, 1.8004241260156872, 1.8004241260156872, 1.8004241260156872, 1.8004241260156872, 1.8004241260156872, 1.8004241260156872, 1.8004241260156872, 1.8004241260156872, 1.8004241260156872, 1.8004241260156872, 1.8004241260156872, 1.8004241260156872, 1.8004241260156872, 1.8004241260156872, 1.8004241260156872, 1.8004241260156872, 1.8004241260156872, 1.8115354403545432, 1.8115354403545432, 1.8115354403545432, 1.8115354403545432, 1.8115354403545432, 1.8115354403545432, 1.8115354403545432, 1.8115354403545432, 1.8115354403545432, 1.8004241260156872, 1.8004241260156872, 1.8004241260156872, 1.8004241260156872, 1.8004241260156872, 1.8004241260156872, 1.789475026449823, 1.789475026449823, 1.7786834733607484, 1.7786834733607484, 1.7680449971167804, 1.7680449971167804, 1.757555315635726, 1.757555315635726, 1.7680449971167804, 1.7680449971167804, 1.7680449971167804, 1.7680449971167804, 1.7680449971167804, 1.7680449971167804, 1.7680449971167804, 1.7680449971167804, 1.7680449971167804, 1.7680449971167804, 1.7680449971167804, 1.7786834733607484, 1.7786834733607484, 1.7786834733607484, 1.7786834733607484, 1.7786834733607484, 1.7786834733607484, 1.7786834733607484, 1.789475026449823, 1.789475026449823, 1.789475026449823, 1.789475026449823, 1.789475026449823, 1.789475026449823, 1.789475026449823, 1.789475026449823, 1.789475026449823, 1.789475026449823, 1.789475026449823, 1.789475026449823, 1.7786834733607484, 1.7786834733607484, 1.7786834733607484, 1.7786834733607484, 1.789475026449823, 1.789475026449823, 1.789475026449823, 1.789475026449823, 1.789475026449823, 1.789475026449823, 1.789475026449823, 1.789475026449823, 1.789475026449823, 1.789475026449823, 1.789475026449823, 1.789475026449823, 1.789475026449823, 1.7786834733607484, 1.7786834733607484, 1.7786834733607484, 1.789475026449823, 1.789475026449823, 1.7786834733607484, 1.7786834733607484, 1.7786834733607484, 1.7786834733607484, 1.7680449971167804, 1.757555315635726, 1.757555315635726, 1.757555315635726, 1.757555315635726, 1.757555315635726, 1.757555315635726, 1.757555315635726, 1.757555315635726, 1.757555315635726, 1.757555315635726, 1.757555315635726, 1.757555315635726, 1.757555315635726, 1.757555315635726, 1.757555315635726, 1.757555315635726, 1.757555315635726, 1.757555315635726, 1.757555315635726, 1.757555315635726, 1.757555315635726, 1.757555315635726, 1.757555315635726, 1.757555315635726, 1.757555315635726, 1.7680449971167804, 1.7680449971167804, 1.7680449971167804, 1.7680449971167804, 1.7680449971167804, 1.7680449971167804, 1.7680449971167804, 1.7680449971167804, 1.7680449971167804, 1.7680449971167804, 1.7680449971167804, 1.7680449971167804, 1.7680449971167804, 1.7680449971167804, 1.7786834733607484, 1.7786834733607484, 1.7786834733607484, 1.7786834733607484, 1.7786834733607484, 1.7786834733607484, 1.7680449971167804, 1.7680449971167804, 1.7680449971167804, 1.7680449971167804, 1.7680449971167804, 1.7680449971167804, 1.7680449971167804, 1.7680449971167804, 1.7680449971167804, 1.7680449971167804, 1.7680449971167804, 1.7680449971167804, 1.7680449971167804, 1.7680449971167804, 1.7680449971167804, 1.7680449971167804, 1.7680449971167804, 1.7680449971167804, 1.7680449971167804, 1.7680449971167804, 1.7680449971167804, 1.7680449971167804, 1.7680449971167804, 1.7680449971167804, 1.7680449971167804, 1.7680449971167804, 1.7680449971167804, 1.7680449971167804, 1.7680449971167804, 1.7680449971167804, 1.7680449971167804, 1.7680449971167804, 1.7680449971167804, 1.7680449971167804, 1.7680449971167804, 1.7680449971167804, 1.7680449971167804, 1.7680449971167804, 1.7680449971167804, 1.7680449971167804, 1.7786834733607484, 1.7786834733607484, 1.7786834733607484, 1.7786834733607484, 1.7786834733607484, 1.7786834733607484, 1.7786834733607484, 1.789475026449823, 1.789475026449823, 1.789475026449823, 1.789475026449823, 1.789475026449823, 1.789475026449823, 1.789475026449823, 1.789475026449823, 1.789475026449823, 1.789475026449823, 1.789475026449823, 1.789475026449823, 1.789475026449823, 1.789475026449823, 1.789475026449823, 1.789475026449823, 1.789475026449823, 1.789475026449823, 1.789475026449823, 1.789475026449823, 1.789475026449823, 1.789475026449823, 1.789475026449823, 1.8004241260156872, 1.8115354403545432, 1.8115354403545432, 1.8115354403545432, 1.8115354403545432, 1.8115354403545432, 1.8004241260156872, 1.8004241260156872, 1.8004241260156872, 1.8004241260156872, 1.8004241260156872, 1.8004241260156872, 1.8115354403545432, 1.8115354403545432, 1.8115354403545432, 1.8115354403545432, 1.8115354403545432, 1.8115354403545432, 1.8115354403545432, 1.8115354403545432, 1.8115354403545432, 1.8115354403545432, 1.8115354403545432, 1.8115354403545432, 1.8115354403545432, 1.8115354403545432, 1.8228138483779481, 1.8228138483779481, 1.8228138483779481, 1.8228138483779481, 1.8228138483779481, 1.8228138483779481, 1.8228138483779481, 1.8228138483779481, 1.8228138483779481, 1.834264452476039, 1.834264452476039, 1.8228138483779481, 1.8228138483779481, 1.8115354403545432, 1.8115354403545432, 1.8115354403545432, 1.8115354403545432, 1.8115354403545432, 1.8115354403545432, 1.8115354403545432, 1.8115354403545432, 1.8228138483779481, 1.8228138483779481, 1.8228138483779481, 1.8228138483779481, 1.8228138483779481, 1.8228138483779481, 1.8228138483779481, 1.8228138483779481, 1.8228138483779481, 1.8228138483779481, 1.8228138483779481, 1.8228138483779481, 1.8228138483779481, 1.8228138483779481, 1.8228138483779481, 1.8228138483779481, 1.8228138483779481, 1.8228138483779481, 1.8228138483779481, 1.8228138483779481, 1.8228138483779481, 1.8228138483779481, 1.8228138483779481, 1.8228138483779481, 1.8228138483779481, 1.8228138483779481, 1.8228138483779481, 1.8228138483779481, 1.834264452476039, 1.834264452476039, 1.834264452476039, 1.834264452476039, 1.834264452476039, 1.834264452476039, 1.834264452476039, 1.834264452476039, 1.834264452476039, 1.834264452476039, 1.834264452476039, 1.834264452476039, 1.834264452476039, 1.834264452476039, 1.834264452476039, 1.834264452476039, 1.834264452476039, 1.834264452476039, 1.834264452476039, 1.8458925923780138, 1.8458925923780138, 1.8458925923780138, 1.8458925923780138, 1.834264452476039, 1.8458925923780138, 1.8458925923780138, 1.8458925923780138, 1.8458925923780138, 1.834264452476039, 1.834264452476039, 1.834264452476039, 1.8228138483779481, 1.8228138483779481, 1.8115354403545432, 1.8115354403545432, 1.834264452476039, 1.834264452476039, 1.834264452476039, 1.834264452476039, 1.834264452476039, 1.834264452476039, 1.834264452476039, 1.8458925923780138, 1.8458925923780138, 1.8458925923780138, 1.834264452476039, 1.834264452476039, 1.834264452476039, 1.834264452476039, 1.834264452476039, 1.8458925923780138, 1.8458925923780138, 1.8458925923780138, 1.8458925923780138, 1.8458925923780138, 1.8458925923780138, 1.8458925923780138, 1.8458925923780138, 1.8458925923780138, 1.8458925923780138, 1.8458925923780138, 1.8458925923780138, 1.8458925923780138, 1.8458925923780138, 1.8458925923780138, 1.8458925923780138, 1.8458925923780138, 1.8458925923780138, 1.8458925923780138, 1.8458925923780138, 1.8458925923780138, 1.8458925923780138, 1.8458925923780138, 1.8458925923780138, 1.8458925923780138, 1.8458925923780138, 1.8458925923780138, 1.8458925923780138, 1.8458925923780138, 1.8458925923780138, 1.8458925923780138, 1.8458925923780138, 1.8458925923780138, 1.8458925923780138, 1.8458925923780138, 1.8458925923780138, 1.8458925923780138, 1.8458925923780138, 1.8458925923780138, 1.8458925923780138, 1.8458925923780138, 1.8458925923780138, 1.8458925923780138, 1.8458925923780138, 1.8458925923780138, 1.857703860104118, 1.857703860104118, 1.857703860104118, 1.857703860104118, 1.857703860104118, 1.857703860104118, 1.857703860104118, 1.857703860104118, 1.857703860104118, 1.857703860104118, 1.857703860104118, 1.857703860104118, 1.857703860104118, 1.857703860104118, 1.857703860104118, 1.857703860104118, 1.857703860104118, 1.857703860104118, 1.857703860104118, 1.857703860104118, 1.857703860104118, 1.857703860104118, 1.857703860104118, 1.857703860104118, 1.8697041161139474, 1.8697041161139474, 1.8697041161139474, 1.8697041161139474, 1.8697041161139474, 1.8697041161139474, 1.8697041161139474, 1.8697041161139474, 1.8697041161139474, 1.8697041161139474, 1.8697041161139474, 1.8697041161139474, 1.8697041161139474, 1.8697041161139474, 1.8697041161139474, 1.8697041161139474, 1.8697041161139474, 1.8697041161139474, 1.8697041161139474, 1.8697041161139474, 1.8697041161139474, 1.8697041161139474, 1.8697041161139474, 1.8697041161139474, 1.8697041161139474, 1.8697041161139474, 1.8697041161139474, 1.8697041161139474, 1.8697041161139474, 1.8697041161139474, 1.8697041161139474, 1.8697041161139474, 1.8697041161139474, 1.8697041161139474, 1.8697041161139474, 1.8697041161139474, 1.8697041161139474, 1.8697041161139474, 1.8697041161139474, 1.8697041161139474, 1.8697041161139474, 1.8697041161139474, 1.8697041161139474, 1.8818995067677822, 1.8818995067677822, 1.8818995067677822, 1.8818995067677822, 1.8818995067677822, 1.8818995067677822, 1.8818995067677822, 1.8818995067677822, 1.8818995067677822, 1.8818995067677822, 1.8818995067677822, 1.8818995067677822, 1.8818995067677822, 1.8818995067677822, 1.8818995067677822, 1.8818995067677822, 1.8818995067677822, 1.8818995067677822, 1.8818995067677822, 1.8818995067677822, 1.8818995067677822, 1.8818995067677822, 1.8818995067677822, 1.8818995067677822, 1.8818995067677822, 1.8818995067677822, 1.8818995067677822, 1.8818995067677822, 1.8818995067677822, 1.8697041161139474, 1.8697041161139474, 1.8697041161139474, 1.8697041161139474, 1.8697041161139474, 1.8697041161139474, 1.8697041161139474, 1.8697041161139474, 1.8697041161139474, 1.8697041161139474, 1.8697041161139474, 1.8697041161139474, 1.8697041161139474, 1.8697041161139474, 1.8697041161139474, 1.8697041161139474, 1.8818995067677822, 1.894296483231191, 1.894296483231191, 1.9069018219684766, 1.9069018219684766, 1.9069018219684766, 1.9069018219684766, 1.9069018219684766, 1.9069018219684766, 1.9069018219684766, 1.9197226469879514, 1.9197226469879514, 1.9327664540218537, 1.9327664540218537, 1.9327664540218537, 1.9327664540218537, 1.9327664540218537, 1.9327664540218537, 1.9327664540218537, 1.9327664540218537, 1.9327664540218537, 1.9327664540218537, 1.9327664540218537, 1.9327664540218537, 1.9327664540218537, 1.9327664540218537, 1.9327664540218537, 1.9327664540218537, 1.9327664540218537, 1.9327664540218537, 1.9327664540218537, 1.9327664540218537, 1.9327664540218537, 1.9327664540218537, 1.9327664540218537, 1.9327664540218537, 1.9327664540218537, 1.9327664540218537, 1.9327664540218537, 1.9327664540218537, 1.9327664540218537, 1.9327664540218537, 1.9197226469879514, 1.9197226469879514, 1.9197226469879514, 1.9197226469879514, 1.9197226469879514, 1.9197226469879514, 1.9197226469879514, 1.9327664540218537, 1.9327664540218537, 1.9327664540218537, 1.9327664540218537, 1.9327664540218537, 1.9327664540218537, 1.9460411368464041, 1.9197226469879514, 1.9197226469879514, 1.9197226469879514, 1.9069018219684766, 1.9069018219684766, 1.9069018219684766, 1.9069018219684766, 1.9069018219684766, 1.9069018219684766, 1.9069018219684766, 1.9069018219684766, 1.9069018219684766, 1.9069018219684766, 1.9069018219684766, 1.9069018219684766, 1.9069018219684766, 1.9069018219684766, 1.9069018219684766, 1.9069018219684766, 1.9069018219684766, 1.9069018219684766, 1.9069018219684766, 1.9069018219684766, 1.9069018219684766, 1.9069018219684766, 1.9069018219684766, 1.9069018219684766, 1.9069018219684766, 1.9069018219684766, 1.9069018219684766, 1.9069018219684766, 1.9069018219684766, 1.9069018219684766, 1.9069018219684766, 1.9069018219684766, 1.9069018219684766, 1.9069018219684766, 1.9069018219684766, 1.9069018219684766, 1.9069018219684766, 1.9069018219684766, 1.9069018219684766, 1.9069018219684766, 1.9069018219684766, 1.9069018219684766, 1.9069018219684766, 1.9069018219684766, 1.9069018219684766, 1.9069018219684766, 1.9069018219684766, 1.9069018219684766, 1.9069018219684766, 1.9197226469879514, 1.9197226469879514, 1.9197226469879514, 1.9197226469879514, 1.9197226469879514, 1.9197226469879514, 1.9197226469879514, 1.9197226469879514, 1.9197226469879514, 1.9197226469879514, 1.9197226469879514, 1.9197226469879514, 1.9197226469879514, 1.9197226469879514, 1.9197226469879514, 1.9197226469879514, 1.9197226469879514, 1.9197226469879514, 1.9197226469879514, 1.9197226469879514, 1.9197226469879514, 1.9197226469879514, 1.9197226469879514, 1.9197226469879514, 1.9197226469879514, 1.9197226469879514, 1.9197226469879514, 1.9197226469879514, 1.9197226469879514, 1.9197226469879514, 1.9197226469879514, 1.9197226469879514, 1.9197226469879514, 1.9197226469879514, 1.9197226469879514, 1.9197226469879514, 1.9197226469879514, 1.9197226469879514, 1.9197226469879514, 1.9197226469879514, 1.9197226469879514, 1.9197226469879514, 1.9197226469879514, 1.9197226469879514, 1.9197226469879514, 1.9197226469879514, 1.9069018219684766, 1.9069018219684766, 1.9069018219684766, 1.9069018219684766, 1.9069018219684766, 1.9069018219684766, 1.9069018219684766, 1.9069018219684766, 1.9069018219684766, 1.9069018219684766, 1.9069018219684766, 1.9069018219684766, 1.9069018219684766, 1.9197226469879514, 1.9197226469879514, 1.9197226469879514, 1.9197226469879514, 1.9197226469879514, 1.9197226469879514, 1.9197226469879514, 1.9197226469879514, 1.9069018219684766, 1.9069018219684766, 1.9069018219684766, 1.9069018219684766, 1.9069018219684766, 1.9069018219684766, 1.9069018219684766, 1.9069018219684766, 1.9069018219684766, 1.9069018219684766, 1.9197226469879514, 1.9197226469879514, 1.9197226469879514, 1.9197226469879514, 1.9197226469879514, 1.9197226469879514, 1.9069018219684766, 1.9069018219684766, 1.9069018219684766, 1.9069018219684766, 1.9069018219684766, 1.9069018219684766, 1.9069018219684766, 1.9069018219684766, 1.9069018219684766, 1.9069018219684766, 1.9069018219684766, 1.9069018219684766, 1.9069018219684766, 1.9197226469879514, 1.9197226469879514, 1.9197226469879514, 1.9197226469879514, 1.9197226469879514, 1.9197226469879514, 1.9197226469879514, 1.9197226469879514, 1.9197226469879514, 1.9197226469879514, 1.9069018219684766, 1.9069018219684766, 1.9069018219684766, 1.9069018219684766, 1.9069018219684766, 1.9069018219684766, 1.9197226469879514, 1.9197226469879514, 1.9197226469879514, 1.9327664540218537, 1.9327664540218537, 1.9327664540218537, 1.9327664540218537, 1.9327664540218537, 1.9327664540218537, 1.9327664540218537, 1.9327664540218537, 1.9327664540218537, 1.9197226469879514, 1.9197226469879514, 1.9327664540218537, 1.9327664540218537, 1.9327664540218537, 1.9327664540218537, 1.9327664540218537, 1.9327664540218537, 1.9327664540218537, 1.9327664540218537, 1.9327664540218537, 1.9595550159734128, 1.9460411368464041, 1.9460411368464041, 1.9460411368464041, 1.9460411368464041, 1.9460411368464041, 1.9460411368464041, 1.9460411368464041, 1.9460411368464041, 1.9460411368464041, 1.9460411368464041, 1.9460411368464041, 1.9460411368464041, 1.9327664540218537, 1.9327664540218537, 1.9327664540218537, 1.9327664540218537, 1.9327664540218537, 1.9327664540218537, 1.9327664540218537, 1.9327664540218537, 1.9327664540218537, 1.9327664540218537, 1.9327664540218537, 1.9327664540218537, 1.9327664540218537, 1.9327664540218537, 1.9327664540218537, 1.9327664540218537, 1.9327664540218537, 1.9197226469879514, 1.9197226469879514, 1.9197226469879514, 1.9197226469879514, 1.9197226469879514, 1.9197226469879514, 1.9197226469879514, 1.9197226469879514, 1.9197226469879514, 1.9197226469879514, 1.9327664540218537, 1.9327664540218537, 1.9327664540218537, 1.9327664540218537, 1.9460411368464041, 1.9460411368464041, 1.9460411368464041, 1.9460411368464041, 1.9460411368464041, 1.9460411368464041, 1.9460411368464041, 1.9460411368464041, 1.9460411368464041, 1.9460411368464041, 1.9460411368464041, 1.9460411368464041, 1.9460411368464041, 1.9460411368464041, 1.9460411368464041, 1.9460411368464041, 1.9460411368464041, 1.9460411368464041, 1.9595550159734128, 1.973316869974561, 1.973316869974561, 1.973316869974561, 1.973316869974561, 1.9873359697336745, 1.9873359697336745, 1.9873359697336745, 1.9873359697336745, 1.9873359697336745, 1.9873359697336745, 1.9873359697336745, 1.9873359697336745, 1.9873359697336745, 1.9873359697336745, 1.9873359697336745, 1.9873359697336745, 1.9873359697336745, 1.9873359697336745, 1.9873359697336745, 1.9873359697336745, 1.9873359697336745, 1.9873359697336745, 1.9873359697336745, 1.9873359697336745, 1.9873359697336745, 1.9873359697336745, 1.9873359697336745, 1.9873359697336745, 1.9873359697336745, 1.9873359697336745, 1.9873359697336745, 1.9873359697336745, 1.9873359697336745, 1.9873359697336745, 1.973316869974561, 1.973316869974561, 1.973316869974561, 1.973316869974561, 1.973316869974561, 1.973316869974561, 1.973316869974561, 1.9873359697336745, 1.9873359697336745, 1.9873359697336745, 1.9873359697336745, 1.9873359697336745, 1.9873359697336745, 1.9873359697336745, 1.9873359697336745, 1.9873359697336745, 1.9873359697336745, 1.9873359697336745, 1.9873359697336745, 1.9873359697336745, 1.9873359697336745, 1.9873359697336745, 1.9873359697336745, 1.9873359697336745, 1.9873359697336745, 1.9873359697336745, 1.9873359697336745, 1.9873359697336745, 1.9873359697336745, 1.9873359697336745, 1.9873359697336745, 1.973316869974561, 1.973316869974561, 1.9873359697336745, 1.9873359697336745, 1.9873359697336745, 1.9873359697336745, 1.9873359697336745, 1.9873359697336745, 1.9873359697336745, 1.9873359697336745, 1.9873359697336745, 1.9873359697336745, 1.9873359697336745, 1.9873359697336745, 1.9873359697336745, 1.9873359697336745, 1.9873359697336745, 1.9873359697336745, 1.9873359697336745, 1.9873359697336745, 1.9873359697336745, 1.9873359697336745, 1.9873359697336745, 1.9873359697336745, 1.9873359697336745, 1.9873359697336745, 1.9873359697336745, 1.9873359697336745, 1.9873359697336745, 1.9873359697336745, 1.9873359697336745, 1.9873359697336745, 1.9873359697336745, 1.9873359697336745, 1.9873359697336745, 1.9873359697336745, 1.9873359697336745, 1.9873359697336745, 1.9873359697336745, 1.9873359697336745, 1.9873359697336745, 1.9873359697336745, 1.9873359697336745, 1.9873359697336745, 2.001622115961695, 2.016185680354522, 2.016185680354522, 2.016185680354522, 2.016185680354522, 2.016185680354522, 2.0310376508266565, 2.0310376508266565, 2.0310376508266565, 2.0310376508266565, 2.0310376508266565, 2.0310376508266565, 2.0310376508266565, 2.0461896813147957, 2.0461896813147957, 2.0461896813147957, 2.0461896813147957, 2.0461896813147957, 2.0616541467168483, 2.0616541467168483, 2.0616541467168483, 2.0616541467168483, 2.0616541467168483, 2.0616541467168483, 2.0616541467168483, 2.0616541467168483, 2.0461896813147957, 2.0461896813147957, 2.0461896813147957, 2.0461896813147957, 2.0461896813147957, 2.0461896813147957, 2.0461896813147957, 2.0461896813147957, 2.0461896813147957, 2.0461896813147957, 2.0461896813147957, 2.0461896813147957, 2.0461896813147957, 2.0461896813147957, 2.0461896813147957, 2.0461896813147957, 2.0461896813147957, 2.0616541467168483, 2.0616541467168483, 2.0616541467168483, 2.0616541467168483, 2.0616541467168483, 2.0616541467168483, 2.0616541467168483, 2.0616541467168483, 2.0616541467168483, 2.0616541467168483, 2.0616541467168483, 2.0616541467168483, 2.0616541467168483, 2.0616541467168483, 2.0616541467168483, 2.0616541467168483, 2.0616541467168483, 2.0616541467168483, 2.0616541467168483, 2.0616541467168483, 2.0616541467168483, 2.0616541467168483, 2.0616541467168483, 2.0616541467168483, 2.0616541467168483, 2.0616541467168483, 2.0616541467168483, 2.0616541467168483, 2.0616541467168483, 2.0616541467168483, 2.0616541467168483, 2.0616541467168483, 2.0616541467168483, 2.0616541467168483, 2.0616541467168483, 2.0616541467168483, 2.0616541467168483, 2.0774442036152223, 2.0774442036152223, 2.0774442036152223, 2.0774442036152223, 2.0774442036152223, 2.0774442036152223, 2.0616541467168483, 2.0774442036152223, 2.0774442036152223, 2.0774442036152223, 2.0774442036152223, 2.0774442036152223, 2.0774442036152223, 2.0774442036152223, 2.0774442036152223, 2.0616541467168483, 2.0616541467168483, 2.0616541467168483, 2.0616541467168483, 2.0616541467168483, 2.0616541467168483, 2.0616541467168483, 2.093573857530944, 2.093573857530944, 2.093573857530944, 2.093573857530944, 2.093573857530944, 2.093573857530944, 2.093573857530944, 2.093573857530944, 2.093573857530944, 2.093573857530944, 2.093573857530944, 2.093573857530944, 2.093573857530944, 2.093573857530944, 2.093573857530944, 2.093573857530944, 2.093573857530944, 2.0774442036152223, 2.0774442036152223, 2.0774442036152223, 2.0774442036152223, 2.0774442036152223, 2.0774442036152223, 2.0774442036152223, 2.0774442036152223, 2.0774442036152223, 2.0774442036152223, 2.0774442036152223, 2.0774442036152223, 2.0774442036152223, 2.0774442036152223, 2.0774442036152223, 2.0774442036152223, 2.0774442036152223, 2.0774442036152223, 2.0774442036152223, 2.093573857530944, 2.093573857530944, 2.093573857530944, 2.0774442036152223, 2.0774442036152223, 2.0774442036152223, 2.0774442036152223, 2.093573857530944, 2.093573857530944, 2.1100580375700266, 2.1100580375700266, 2.1100580375700266, 2.1100580375700266, 2.093573857530944, 2.093573857530944, 2.093573857530944, 2.0774442036152223, 2.0774442036152223, 2.0774442036152223, 2.0774442036152223, 2.0774442036152223, 2.0774442036152223, 2.0774442036152223, 2.0774442036152223, 2.0774442036152223, 2.0774442036152223, 2.0774442036152223, 2.0774442036152223, 2.0774442036152223, 2.0774442036152223, 2.0774442036152223, 2.0774442036152223, 2.0774442036152223, 2.0774442036152223, 2.0774442036152223, 2.0616541467168483, 2.0616541467168483, 2.0616541467168483, 2.0616541467168483, 2.0461896813147957, 2.0461896813147957, 2.0461896813147957, 2.0461896813147957, 2.0461896813147957, 2.0310376508266565, 2.0310376508266565, 2.0310376508266565, 2.0310376508266565, 2.0310376508266565, 2.0310376508266565, 2.0310376508266565, 2.0310376508266565, 2.0310376508266565, 2.0310376508266565, 2.0310376508266565, 2.0310376508266565, 2.0310376508266565, 2.0310376508266565, 2.0310376508266565, 2.0310376508266565, 2.0310376508266565, 2.0461896813147957, 2.0461896813147957, 2.0461896813147957, 2.0461896813147957, 2.0461896813147957, 2.0461896813147957, 2.0616541467168483, 2.0616541467168483, 2.0616541467168483, 2.0461896813147957, 2.0461896813147957, 2.0461896813147957, 2.0461896813147957, 2.0310376508266565, 2.0310376508266565, 2.016185680354522, 2.016185680354522, 2.016185680354522, 2.016185680354522, 2.016185680354522, 2.016185680354522, 2.016185680354522, 2.016185680354522, 2.016185680354522, 2.016185680354522, 2.016185680354522, 2.016185680354522, 2.016185680354522, 2.016185680354522, 2.001622115961695, 2.001622115961695, 1.9873359697336745, 1.9873359697336745, 1.9873359697336745, 1.9873359697336745, 1.9873359697336745, 1.9873359697336745, 1.9873359697336745, 1.9873359697336745, 1.9873359697336745, 1.9873359697336745, 1.9873359697336745, 1.9873359697336745, 2.001622115961695, 2.016185680354522, 2.016185680354522, 2.016185680354522, 2.016185680354522, 2.016185680354522, 2.016185680354522, 2.016185680354522, 2.016185680354522, 2.016185680354522, 2.016185680354522, 2.016185680354522, 2.016185680354522, 2.016185680354522, 2.016185680354522, 2.0310376508266565, 2.0310376508266565, 2.0310376508266565, 2.0310376508266565, 2.0310376508266565, 2.0310376508266565, 2.0310376508266565, 2.0310376508266565, 2.0310376508266565, 2.0310376508266565, 2.0310376508266565, 2.0310376508266565, 2.0310376508266565, 2.0310376508266565, 2.0310376508266565, 2.0310376508266565, 2.0310376508266565, 2.0310376508266565, 2.0310376508266565, 2.0310376508266565, 2.0310376508266565, 2.0310376508266565, 2.0310376508266565, 2.0310376508266565, 2.0310376508266565, 2.0310376508266565, 2.0310376508266565, 2.0310376508266565, 2.0310376508266565, 2.0310376508266565, 2.0310376508266565, 2.0310376508266565, 2.0310376508266565, 2.0310376508266565, 2.0310376508266565, 2.0310376508266565, 2.0310376508266565, 2.0310376508266565, 2.0461896813147957, 2.0461896813147957, 2.0461896813147957, 2.0461896813147957, 2.0461896813147957, 2.0461896813147957, 2.0461896813147957, 2.0461896813147957, 2.0461896813147957, 2.0461896813147957, 2.0461896813147957, 2.0461896813147957, 2.0461896813147957, 2.0461896813147957, 2.0616541467168483, 2.0616541467168483, 2.0616541467168483, 2.0616541467168483, 2.0616541467168483, 2.0616541467168483, 2.0616541467168483, 2.093573857530944, 2.093573857530944, 2.093573857530944, 2.1100580375700266, 2.1100580375700266, 2.1100580375700266, 2.1100580375700266, 2.093573857530944, 2.093573857530944, 2.093573857530944, 2.093573857530944, 2.1100580375700266, 2.1100580375700266, 2.093573857530944, 2.093573857530944, 2.093573857530944, 2.093573857530944, 2.093573857530944, 2.093573857530944, 2.093573857530944, 2.093573857530944, 2.093573857530944, 2.093573857530944, 2.093573857530944, 2.093573857530944, 2.093573857530944, 2.1100580375700266, 2.1100580375700266, 2.1100580375700266, 2.093573857530944, 2.093573857530944, 2.093573857530944, 2.093573857530944, 2.093573857530944, 2.093573857530944, 2.093573857530944, 2.093573857530944, 2.0774442036152223, 2.0774442036152223, 2.0774442036152223, 2.0774442036152223, 2.0774442036152223, 2.0774442036152223, 2.0774442036152223, 2.0774442036152223, 2.093573857530944, 2.093573857530944, 2.1100580375700266, 2.1100580375700266, 2.1100580375700266, 2.1100580375700266, 2.1100580375700266, 2.1100580375700266, 2.1100580375700266, 2.1100580375700266, 2.1100580375700266, 2.1100580375700266, 2.1100580375700266, 2.1100580375700266, 2.1100580375700266, 2.1100580375700266, 2.1100580375700266, 2.1100580375700266, 2.1100580375700266, 2.1100580375700266, 2.1100580375700266, 2.1100580375700266, 2.1100580375700266], [0.0, 0.0, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.004, 0.004, 0.004, 0.005, 0.005, 0.005, 0.005, 0.005, 0.006, 0.006, 0.006, 0.006, 0.007, 0.007, 0.007, 0.008, 0.009, 0.009, 0.009, 0.009, 0.01, 0.01, 0.01, 0.01, 0.011, 0.011, 0.011, 0.012, 0.012, 0.012, 0.013, 0.013, 0.013, 0.014, 0.014, 0.014, 0.015, 0.015, 0.015, 0.015, 0.016, 0.016, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.019, 0.02, 0.02, 0.02, 0.02, 0.02, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.022, 0.022, 0.022, 0.022, 0.022, 0.022, 0.022, 0.022, 0.022, 0.024, 0.024, 0.024, 0.024, 0.024, 0.024, 0.025, 0.025, 0.026, 0.026, 0.027, 0.027, 0.027, 0.027, 0.027, 0.028, 0.028, 0.028, 0.029, 0.03, 0.03, 0.03, 0.031, 0.031, 0.031, 0.032, 0.032, 0.033, 0.033, 0.033, 0.033, 0.034, 0.034, 0.035, 0.035, 0.035, 0.035, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.036, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.038, 0.039, 0.039, 0.039, 0.039, 0.039, 0.039, 0.039, 0.039, 0.04, 0.04, 0.04, 0.04, 0.041, 0.041, 0.041, 0.041, 0.041, 0.042, 0.042, 0.042, 0.042, 0.043, 0.043, 0.043, 0.043, 0.043, 0.044, 0.044, 0.045, 0.045, 0.046, 0.046, 0.046, 0.046, 0.046, 0.046, 0.047, 0.047, 0.047, 0.048, 0.048, 0.048, 0.048, 0.048, 0.048, 0.049, 0.05, 0.05, 0.05, 0.051, 0.051, 0.051, 0.051, 0.052, 0.053, 0.053, 0.053, 0.053, 0.053, 0.054, 0.054, 0.054, 0.055, 0.055, 0.055, 0.055, 0.055, 0.055, 0.056, 0.057, 0.057, 0.057, 0.057, 0.057, 0.057, 0.057, 0.058, 0.058, 0.058, 0.058, 0.058, 0.059, 0.059, 0.059, 0.059, 0.059, 0.059, 0.059, 0.059, 0.059, 0.059, 0.06, 0.06, 0.06, 0.06, 0.06, 0.06, 0.061, 0.061, 0.061, 0.061, 0.061, 0.061, 0.061, 0.061, 0.061, 0.061, 0.061, 0.061, 0.061, 0.061, 0.061, 0.063, 0.063, 0.063, 0.063, 0.063, 0.063, 0.063, 0.063, 0.064, 0.065, 0.065, 0.066, 0.066, 0.066, 0.067, 0.068, 0.068, 0.068, 0.068, 0.069, 0.07, 0.07, 0.07, 0.07, 0.07, 0.071, 0.071, 0.071, 0.071, 0.073, 0.073, 0.073, 0.073, 0.073, 0.073, 0.073, 0.073, 0.073, 0.073, 0.073, 0.073, 0.074, 0.074, 0.074, 0.074, 0.074, 0.074, 0.074, 0.075, 0.075, 0.075, 0.075, 0.077, 0.077, 0.077, 0.077, 0.077, 0.077, 0.078, 0.078, 0.078, 0.079, 0.079, 0.079, 0.079, 0.079, 0.079, 0.079, 0.079, 0.079, 0.079, 0.079, 0.08, 0.08, 0.08, 0.08, 0.081, 0.082, 0.082, 0.082, 0.082, 0.082, 0.082, 0.082, 0.083, 0.083, 0.084, 0.084, 0.084, 0.084, 0.085, 0.085, 0.085, 0.086, 0.086, 0.086, 0.086, 0.086, 0.086, 0.086, 0.086, 0.086, 0.087, 0.087, 0.087, 0.087, 0.088, 0.088, 0.089, 0.089, 0.089, 0.089, 0.09, 0.091, 0.091, 0.091, 0.092, 0.092, 0.092, 0.092, 0.092, 0.092, 0.092, 0.092, 0.092, 0.094, 0.094, 0.095, 0.095, 0.096, 0.098, 0.099, 0.099, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.1, 0.101, 0.102, 0.102, 0.102, 0.102, 0.102, 0.102, 0.102, 0.102, 0.102, 0.102, 0.102, 0.102, 0.102, 0.102, 0.103, 0.103, 0.103, 0.103, 0.103, 0.103, 0.103, 0.103, 0.103, 0.103, 0.103, 0.103, 0.105, 0.105, 0.105, 0.105, 0.105, 0.105, 0.105, 0.105, 0.107, 0.107, 0.108, 0.108, 0.108, 0.108, 0.108, 0.108, 0.109, 0.109, 0.109, 0.109, 0.11, 0.11, 0.11, 0.11, 0.11, 0.111, 0.111, 0.111, 0.111, 0.111, 0.112, 0.112, 0.112, 0.112, 0.112, 0.112, 0.112, 0.112, 0.112, 0.113, 0.113, 0.113, 0.113, 0.113, 0.113, 0.113, 0.113, 0.113, 0.113, 0.113, 0.113, 0.114, 0.114, 0.115, 0.115, 0.115, 0.116, 0.116, 0.116, 0.116, 0.117, 0.117, 0.116, 0.116, 0.116, 0.116, 0.116, 0.116, 0.116, 0.116, 0.116, 0.116, 0.117, 0.117, 0.118, 0.118, 0.118, 0.119, 0.12, 0.12, 0.12, 0.12, 0.12, 0.12, 0.12, 0.12, 0.12, 0.12, 0.12, 0.12, 0.12, 0.12, 0.12, 0.12, 0.121, 0.122, 0.122, 0.123, 0.123, 0.123, 0.123, 0.123, 0.124, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.125, 0.126, 0.126, 0.126, 0.126, 0.126, 0.126, 0.126, 0.126, 0.126, 0.127, 0.127, 0.127, 0.127, 0.127, 0.128, 0.128, 0.13, 0.13, 0.13, 0.13, 0.13, 0.13, 0.13, 0.131, 0.131, 0.132, 0.133, 0.133, 0.133, 0.133, 0.134, 0.134, 0.134, 0.134, 0.134, 0.135, 0.135, 0.135, 0.135, 0.135, 0.135, 0.135, 0.135, 0.135, 0.135, 0.135, 0.135, 0.135, 0.135, 0.136, 0.136, 0.136, 0.136, 0.136, 0.136, 0.136, 0.137, 0.137, 0.137, 0.137, 0.137, 0.137, 0.137, 0.138, 0.138, 0.138, 0.138, 0.138, 0.139, 0.14, 0.14, 0.14, 0.14, 0.14, 0.141, 0.141, 0.141, 0.141, 0.141, 0.141, 0.141, 0.141, 0.141, 0.141, 0.142, 0.142, 0.142, 0.142, 0.142, 0.142, 0.142, 0.142, 0.143, 0.143, 0.144, 0.144, 0.144, 0.144, 0.144, 0.144, 0.144, 0.144, 0.144, 0.144, 0.144, 0.144, 0.145, 0.145, 0.145, 0.145, 0.145, 0.145, 0.145, 0.145, 0.145, 0.145, 0.145, 0.145, 0.145, 0.145, 0.145, 0.145, 0.145, 0.145, 0.145, 0.145, 0.145, 0.145, 0.145, 0.145, 0.145, 0.147, 0.148, 0.148, 0.148, 0.148, 0.148, 0.149, 0.149, 0.15, 0.15, 0.15, 0.15, 0.15, 0.15, 0.15, 0.15, 0.15, 0.15, 0.149, 0.15, 0.151, 0.151, 0.151, 0.151, 0.152, 0.152, 0.152, 0.152, 0.152, 0.152, 0.152, 0.152, 0.152, 0.152, 0.152, 0.153, 0.153, 0.153, 0.154, 0.154, 0.154, 0.154, 0.154, 0.155, 0.155, 0.155, 0.155, 0.155, 0.155, 0.155, 0.156, 0.156, 0.156, 0.156, 0.156, 0.157, 0.157, 0.157, 0.158, 0.158, 0.158, 0.158, 0.158, 0.158, 0.158, 0.158, 0.158, 0.158, 0.158, 0.158, 0.158, 0.159, 0.159, 0.159, 0.159, 0.159, 0.159, 0.159, 0.159, 0.159, 0.159, 0.159, 0.159, 0.159, 0.159, 0.159, 0.159, 0.16, 0.16, 0.16, 0.16, 0.16, 0.161, 0.161, 0.161, 0.161, 0.162, 0.162, 0.162, 0.162, 0.162, 0.162, 0.162, 0.162, 0.162, 0.162, 0.162, 0.163, 0.163, 0.163, 0.163, 0.163, 0.164, 0.164, 0.165, 0.165, 0.165, 0.165, 0.165, 0.165, 0.166, 0.167, 0.167, 0.167, 0.167, 0.167, 0.167, 0.167, 0.167, 0.167, 0.167, 0.167, 0.167, 0.167, 0.167, 0.167, 0.167, 0.167, 0.167, 0.167, 0.167, 0.167, 0.167, 0.167, 0.168, 0.168, 0.168, 0.169, 0.169, 0.169, 0.169, 0.169, 0.169, 0.169, 0.169, 0.169, 0.169, 0.169, 0.169, 0.169, 0.17, 0.17, 0.17, 0.17, 0.17, 0.171, 0.172, 0.173, 0.174, 0.174, 0.174, 0.174, 0.174, 0.174, 0.175, 0.175, 0.175, 0.175, 0.176, 0.176, 0.177, 0.177, 0.177, 0.177, 0.177, 0.177, 0.177, 0.177, 0.177, 0.177, 0.178, 0.178, 0.178, 0.179, 0.179, 0.179, 0.179, 0.179, 0.179, 0.179, 0.179, 0.179, 0.179, 0.179, 0.18, 0.18, 0.18, 0.18, 0.18, 0.181, 0.182, 0.182, 0.182, 0.182, 0.182, 0.182, 0.182, 0.182, 0.182, 0.182, 0.182, 0.182, 0.182, 0.183, 0.183, 0.183, 0.183, 0.183, 0.184, 0.184, 0.184, 0.184, 0.184, 0.184, 0.184, 0.183, 0.183, 0.183, 0.183, 0.183, 0.183, 0.183, 0.183, 0.183, 0.183, 0.183, 0.183, 0.183, 0.183, 0.183, 0.183, 0.183, 0.184, 0.184, 0.185, 0.185, 0.185, 0.185, 0.185, 0.185, 0.185, 0.185, 0.185, 0.185, 0.185, 0.185, 0.186, 0.186, 0.186, 0.186, 0.186, 0.186, 0.186, 0.187, 0.187, 0.188, 0.188, 0.188, 0.188, 0.188, 0.188, 0.188, 0.188, 0.189, 0.189, 0.189, 0.189, 0.189, 0.189, 0.189, 0.189, 0.189, 0.189, 0.189, 0.189, 0.189, 0.189, 0.19, 0.19, 0.19, 0.19, 0.19, 0.19, 0.191, 0.191, 0.191, 0.191, 0.191, 0.191, 0.191, 0.191, 0.191, 0.191, 0.191, 0.191, 0.192, 0.192, 0.192, 0.192, 0.192, 0.193, 0.193, 0.194, 0.194, 0.194, 0.194, 0.194, 0.194, 0.195, 0.195, 0.195, 0.195, 0.195, 0.195, 0.195, 0.195, 0.195, 0.195, 0.195, 0.195, 0.195, 0.196, 0.196, 0.196, 0.197, 0.197, 0.197, 0.197, 0.197, 0.197, 0.197, 0.197, 0.197, 0.197, 0.197, 0.198, 0.198, 0.198, 0.198, 0.198, 0.199, 0.199, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.201, 0.201, 0.201, 0.201, 0.201, 0.202, 0.202, 0.203, 0.203, 0.203, 0.204, 0.204, 0.204, 0.204, 0.204, 0.204, 0.204, 0.204, 0.205, 0.205, 0.205, 0.206, 0.206, 0.206, 0.206, 0.206, 0.206, 0.206, 0.206, 0.206, 0.206, 0.206, 0.206, 0.206, 0.206, 0.206, 0.206, 0.206, 0.206, 0.206, 0.206, 0.206, 0.206, 0.206, 0.206, 0.207, 0.207, 0.207, 0.207, 0.207, 0.207, 0.207, 0.207, 0.207, 0.208, 0.208, 0.208, 0.208, 0.209, 0.209, 0.209, 0.209, 0.209, 0.209, 0.209, 0.21, 0.21, 0.21, 0.21, 0.21, 0.21, 0.21, 0.21, 0.21, 0.21, 0.21, 0.21, 0.21, 0.21, 0.21, 0.21, 0.21, 0.21, 0.21, 0.21, 0.21, 0.21, 0.21, 0.211, 0.211, 0.211, 0.212, 0.212, 0.212, 0.212, 0.212, 0.212, 0.212, 0.212, 0.213, 0.213, 0.213, 0.213, 0.213, 0.213, 0.213, 0.212, 0.212, 0.212, 0.212, 0.212, 0.212, 0.213, 0.213, 0.213, 0.213, 0.214, 0.215, 0.215, 0.215, 0.215, 0.215, 0.215, 0.215, 0.215, 0.217, 0.217, 0.217, 0.217, 0.217, 0.217, 0.217, 0.217, 0.217, 0.217, 0.217, 0.217, 0.218, 0.218, 0.218, 0.218, 0.218, 0.219, 0.219, 0.219, 0.219, 0.219, 0.219, 0.219, 0.219, 0.219, 0.219, 0.219, 0.22, 0.221, 0.222, 0.222, 0.223, 0.223, 0.223, 0.223, 0.223, 0.223, 0.223, 0.223, 0.223, 0.223, 0.222, 0.222, 0.222, 0.222, 0.222, 0.222, 0.222, 0.222, 0.222, 0.222, 0.222, 0.223, 0.223, 0.224, 0.224, 0.226, 0.226, 0.226, 0.226, 0.226, 0.226, 0.226, 0.226, 0.226, 0.226, 0.226, 0.226, 0.226, 0.227, 0.228, 0.228, 0.228, 0.228, 0.228, 0.228, 0.228, 0.228, 0.228, 0.228, 0.228, 0.228, 0.228, 0.228, 0.228, 0.228, 0.228, 0.228, 0.228, 0.228, 0.229, 0.229, 0.229, 0.229, 0.229, 0.229, 0.229, 0.229, 0.229, 0.23, 0.23, 0.23, 0.23, 0.231, 0.232, 0.232, 0.232, 0.232, 0.232, 0.232, 0.232, 0.232, 0.232, 0.232, 0.232, 0.232, 0.232, 0.232, 0.232, 0.233, 0.233, 0.233, 0.233, 0.234, 0.234, 0.234, 0.234, 0.234, 0.235, 0.235, 0.236, 0.236, 0.236, 0.237, 0.237, 0.237, 0.237, 0.238, 0.239, 0.239, 0.239, 0.239, 0.239, 0.239, 0.239, 0.239, 0.239, 0.24, 0.24, 0.24, 0.24, 0.241, 0.241, 0.242, 0.242, 0.243, 0.243, 0.243, 0.243, 0.243, 0.245, 0.245, 0.246, 0.246, 0.246, 0.246, 0.246, 0.246, 0.246, 0.247, 0.247, 0.247, 0.247, 0.247, 0.247, 0.248, 0.248, 0.248, 0.248, 0.248, 0.248, 0.248, 0.248, 0.248, 0.248, 0.25, 0.25, 0.25, 0.249, 0.249, 0.25, 0.25, 0.25, 0.251, 0.251, 0.251, 0.251, 0.251, 0.251, 0.251, 0.251, 0.251, 0.251, 0.251, 0.251, 0.252, 0.252, 0.252, 0.252, 0.252, 0.252, 0.252, 0.252, 0.252, 0.252, 0.252, 0.252, 0.252, 0.252, 0.252, 0.253, 0.253, 0.254, 0.254, 0.254, 0.254, 0.254, 0.254, 0.254, 0.255, 0.255, 0.255, 0.255, 0.255, 0.255, 0.255, 0.255, 0.255, 0.256, 0.256, 0.256, 0.256, 0.256, 0.256, 0.256, 0.255, 0.256, 0.256, 0.256, 0.256, 0.256, 0.256, 0.256, 0.256, 0.256, 0.255, 0.255, 0.255, 0.255, 0.256, 0.256, 0.257, 0.258, 0.258, 0.258, 0.258, 0.258, 0.258, 0.259, 0.259, 0.259, 0.259, 0.26, 0.26, 0.26, 0.26, 0.26, 0.26, 0.26, 0.26, 0.26, 0.259, 0.259, 0.26, 0.26, 0.26, 0.26, 0.26, 0.261, 0.261, 0.262, 0.263, 0.263, 0.264, 0.264, 0.264, 0.264, 0.264, 0.264, 0.264, 0.266, 0.266, 0.266, 0.266, 0.267, 0.267, 0.267, 0.267, 0.267, 0.268, 0.268, 0.268, 0.268, 0.268, 0.268, 0.268, 0.268, 0.268, 0.269, 0.269, 0.269, 0.27, 0.27, 0.27, 0.27, 0.27, 0.27, 0.271, 0.272, 0.272, 0.272, 0.271, 0.271, 0.271, 0.273, 0.273, 0.273, 0.273, 0.273, 0.273, 0.273, 0.273, 0.273, 0.273, 0.273, 0.273, 0.273, 0.273, 0.273, 0.273, 0.273, 0.273, 0.273, 0.273, 0.273, 0.274, 0.274, 0.274, 0.275, 0.275, 0.275, 0.275, 0.275, 0.275, 0.275, 0.275, 0.275, 0.275, 0.275, 0.275, 0.275, 0.275, 0.275, 0.275, 0.276, 0.276, 0.276, 0.276, 0.277, 0.277, 0.276, 0.276, 0.276, 0.276, 0.276, 0.277, 0.277, 0.277, 0.277, 0.277, 0.278, 0.278, 0.279, 0.28, 0.281, 0.281, 0.282, 0.282, 0.282, 0.282, 0.282, 0.282, 0.281, 0.281, 0.283, 0.283, 0.283, 0.284, 0.284, 0.284, 0.284, 0.284, 0.284, 0.284, 0.284, 0.284, 0.284, 0.284, 0.284, 0.285, 0.285, 0.285, 0.285, 0.285, 0.285, 0.285, 0.285, 0.285, 0.286, 0.286, 0.286, 0.286, 0.286, 0.288, 0.288, 0.288, 0.288, 0.289, 0.289, 0.289, 0.289, 0.289, 0.289, 0.289, 0.289, 0.289, 0.289, 0.289, 0.289, 0.289, 0.289, 0.289, 0.289, 0.289, 0.289, 0.289, 0.289, 0.289, 0.289, 0.289, 0.289, 0.289, 0.289, 0.289, 0.289, 0.29, 0.289, 0.289, 0.289, 0.289, 0.29, 0.29, 0.29, 0.29, 0.29, 0.29, 0.29, 0.29, 0.29, 0.29, 0.29, 0.29, 0.29, 0.29, 0.289, 0.289, 0.289, 0.289, 0.289, 0.289, 0.29, 0.29, 0.291, 0.291, 0.291, 0.291, 0.291, 0.291, 0.291, 0.291, 0.292, 0.292, 0.292, 0.292, 0.292, 0.292, 0.292, 0.293, 0.293, 0.294, 0.294, 0.294, 0.293, 0.293, 0.293, 0.295, 0.295, 0.295, 0.295, 0.295, 0.295, 0.294, 0.294, 0.294, 0.294, 0.294, 0.294, 0.294, 0.294, 0.294, 0.294, 0.294, 0.294, 0.295, 0.295, 0.295, 0.295, 0.296, 0.296, 0.296, 0.296, 0.296, 0.296, 0.296, 0.295, 0.295, 0.295, 0.295, 0.295, 0.295, 0.296, 0.297, 0.296, 0.297, 0.297, 0.297, 0.298, 0.298, 0.299, 0.299, 0.299, 0.299, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.301, 0.301, 0.301, 0.302, 0.302, 0.302, 0.302, 0.303, 0.303, 0.303, 0.303, 0.303, 0.305, 0.305, 0.306, 0.306, 0.306, 0.306, 0.306, 0.306, 0.307, 0.307, 0.307, 0.307, 0.307, 0.307, 0.307, 0.307, 0.306, 0.306, 0.307, 0.307, 0.307, 0.307, 0.307, 0.307, 0.307, 0.307, 0.307, 0.307, 0.307, 0.307, 0.307, 0.308, 0.308, 0.308, 0.308, 0.308, 0.309, 0.309, 0.309, 0.31, 0.31, 0.31, 0.311, 0.311, 0.311, 0.311, 0.311, 0.311, 0.311, 0.311, 0.311, 0.311, 0.311, 0.311, 0.311, 0.311, 0.311, 0.311, 0.311, 0.311, 0.311, 0.311, 0.311, 0.311, 0.31, 0.311, 0.312, 0.312, 0.312, 0.312, 0.312, 0.312, 0.312, 0.312, 0.312, 0.312, 0.313, 0.312, 0.311, 0.311, 0.311, 0.311, 0.311, 0.311, 0.311, 0.311, 0.311, 0.311, 0.311, 0.311, 0.311, 0.311, 0.311, 0.311, 0.312, 0.312, 0.312, 0.312, 0.312, 0.312, 0.312, 0.313, 0.313, 0.313, 0.313, 0.313, 0.314, 0.314, 0.314, 0.314, 0.314, 0.314, 0.315, 0.315, 0.315, 0.315, 0.315, 0.315, 0.316, 0.316, 0.316, 0.317, 0.319, 0.319, 0.319, 0.32, 0.32, 0.32, 0.32, 0.32, 0.32, 0.32, 0.32, 0.32, 0.32, 0.32, 0.32, 0.32, 0.32, 0.319, 0.32, 0.32, 0.32, 0.32, 0.319, 0.319, 0.319, 0.319, 0.319, 0.319, 0.319, 0.319, 0.319, 0.319, 0.318, 0.318, 0.318, 0.318, 0.318, 0.318, 0.318, 0.318, 0.318, 0.318, 0.319, 0.319, 0.319, 0.32, 0.32, 0.32, 0.32, 0.32, 0.32, 0.32, 0.32, 0.32, 0.32, 0.32, 0.32, 0.32, 0.32, 0.321, 0.321, 0.321, 0.321, 0.321, 0.321, 0.321, 0.321, 0.321, 0.321, 0.321, 0.32, 0.32, 0.32, 0.32, 0.32, 0.32, 0.321, 0.321, 0.321, 0.322, 0.322, 0.322, 0.323, 0.323, 0.323, 0.323, 0.323, 0.323, 0.323, 0.323, 0.323, 0.323, 0.323, 0.323, 0.323, 0.323, 0.323, 0.323, 0.323, 0.323, 0.324, 0.324, 0.324, 0.324, 0.324, 0.324, 0.324, 0.324, 0.324, 0.325, 0.325, 0.325, 0.325, 0.326, 0.326, 0.327, 0.328, 0.328, 0.328, 0.328, 0.328, 0.328, 0.328, 0.328, 0.328, 0.328, 0.328, 0.328, 0.328, 0.328, 0.328, 0.328, 0.328, 0.328, 0.328, 0.328, 0.328, 0.328, 0.328, 0.328, 0.328, 0.328, 0.328, 0.328, 0.328, 0.329, 0.329, 0.329, 0.329, 0.329, 0.329, 0.329, 0.329, 0.33, 0.331, 0.332, 0.332, 0.331, 0.331, 0.331, 0.331, 0.332, 0.332, 0.333, 0.333, 0.333, 0.333, 0.333, 0.333, 0.333, 0.334, 0.334, 0.334, 0.334, 0.334, 0.334, 0.334, 0.334, 0.334, 0.335, 0.335, 0.335, 0.335, 0.335, 0.335, 0.336, 0.336, 0.336, 0.336, 0.336, 0.336, 0.336, 0.336, 0.337, 0.337, 0.337, 0.338, 0.338, 0.338, 0.338, 0.337, 0.338, 0.338, 0.339, 0.339, 0.339, 0.339, 0.339, 0.339, 0.339, 0.339, 0.339, 0.339, 0.339, 0.339, 0.339, 0.339, 0.339, 0.339, 0.339, 0.339, 0.339, 0.339, 0.339, 0.339, 0.339, 0.339, 0.339, 0.339, 0.339, 0.339, 0.339, 0.339, 0.339, 0.339, 0.339, 0.339, 0.339, 0.34, 0.34, 0.34, 0.34, 0.34, 0.34, 0.34, 0.34, 0.34, 0.34, 0.34, 0.34, 0.34, 0.34, 0.34, 0.34, 0.34, 0.341, 0.342, 0.342, 0.342, 0.342, 0.342, 0.343, 0.343, 0.344, 0.344, 0.344, 0.344, 0.345, 0.345, 0.346, 0.346, 0.346, 0.346, 0.346, 0.346, 0.346, 0.346, 0.346, 0.346, 0.346, 0.346, 0.346, 0.346, 0.346, 0.346, 0.346, 0.346, 0.346, 0.347, 0.347, 0.347, 0.347, 0.347, 0.347, 0.347, 0.348, 0.348, 0.349, 0.349, 0.349, 0.351, 0.351, 0.351, 0.351, 0.352, 0.352, 0.352, 0.352, 0.352, 0.352, 0.352, 0.352, 0.352, 0.352, 0.352, 0.352, 0.352, 0.352, 0.352, 0.352, 0.352, 0.352, 0.352, 0.352, 0.352, 0.352, 0.352, 0.352, 0.352, 0.352, 0.352, 0.352, 0.352, 0.353, 0.353, 0.353, 0.353, 0.353, 0.353, 0.353, 0.353, 0.353, 0.353, 0.353, 0.353, 0.354, 0.353, 0.354, 0.355, 0.356, 0.356, 0.356, 0.356, 0.357, 0.357, 0.357, 0.357, 0.357, 0.357, 0.357, 0.357, 0.357, 0.357, 0.357, 0.357, 0.358, 0.358, 0.358, 0.358, 0.359, 0.359, 0.359, 0.359, 0.359, 0.359, 0.359, 0.359, 0.359, 0.359, 0.359, 0.359, 0.359, 0.359, 0.359, 0.359, 0.359, 0.359, 0.359, 0.36, 0.36, 0.36, 0.36, 0.36, 0.36, 0.361, 0.361, 0.36, 0.36, 0.361, 0.361, 0.361, 0.361, 0.361, 0.362, 0.362, 0.362, 0.363, 0.363, 0.363, 0.363, 0.363, 0.363, 0.364, 0.365, 0.365, 0.365, 0.365, 0.365, 0.365, 0.366, 0.366, 0.366, 0.366, 0.366, 0.366, 0.366, 0.366, 0.366, 0.366, 0.366, 0.366, 0.366, 0.366, 0.366, 0.366, 0.366, 0.367, 0.367, 0.368, 0.368, 0.367, 0.367, 0.367, 0.367, 0.367, 0.367, 0.367, 0.367, 0.366, 0.366, 0.366, 0.366, 0.366, 0.366, 0.366, 0.366, 0.366, 0.366, 0.366, 0.366, 0.367, 0.366, 0.366, 0.366, 0.366, 0.367, 0.367, 0.367, 0.367, 0.366, 0.366, 0.367, 0.367, 0.367, 0.366, 0.366, 0.366, 0.366, 0.366, 0.366, 0.366, 0.366, 0.366, 0.366, 0.366, 0.366, 0.366, 0.365, 0.365, 0.365, 0.365, 0.365, 0.365, 0.365, 0.365, 0.365, 0.366, 0.366, 0.366, 0.366, 0.365, 0.365, 0.365, 0.365, 0.365, 0.365, 0.365, 0.365, 0.365, 0.365, 0.365, 0.365, 0.365, 0.365, 0.366, 0.366, 0.366, 0.365, 0.365, 0.365, 0.365, 0.365, 0.365, 0.365, 0.365, 0.365, 0.366, 0.366, 0.366, 0.366, 0.367, 0.367, 0.367, 0.368, 0.369, 0.369, 0.369, 0.37, 0.37, 0.371, 0.371, 0.371, 0.371, 0.371, 0.371, 0.371, 0.371, 0.371, 0.372, 0.373, 0.373, 0.374, 0.375, 0.375, 0.375, 0.375, 0.375, 0.374, 0.374, 0.374, 0.374, 0.374, 0.374, 0.374, 0.374, 0.374, 0.374, 0.374, 0.374, 0.375, 0.374, 0.375, 0.375, 0.375, 0.374, 0.374, 0.374, 0.375, 0.375, 0.375, 0.375, 0.375, 0.375, 0.375, 0.375, 0.375, 0.375, 0.374, 0.374, 0.374, 0.374, 0.374, 0.374, 0.374, 0.373, 0.372, 0.372, 0.372, 0.372, 0.372, 0.372, 0.372, 0.372, 0.372, 0.372, 0.372, 0.372, 0.373, 0.373, 0.373, 0.373, 0.372, 0.372, 0.373, 0.373, 0.374, 0.374, 0.374, 0.374, 0.373, 0.373, 0.373, 0.373, 0.373, 0.373, 0.373, 0.373, 0.373, 0.373, 0.373, 0.373, 0.373, 0.374, 0.374, 0.374, 0.374, 0.374, 0.374, 0.374, 0.374, 0.374, 0.374, 0.374, 0.374, 0.374, 0.374, 0.374, 0.374, 0.374, 0.374, 0.374, 0.374, 0.374, 0.374, 0.374, 0.375, 0.375, 0.375, 0.375, 0.375, 0.375, 0.375, 0.375, 0.375, 0.375, 0.374, 0.374, 0.373, 0.373, 0.373, 0.373, 0.373, 0.372, 0.372, 0.372, 0.372, 0.372, 0.372, 0.372, 0.372, 0.373, 0.373, 0.373, 0.373, 0.373, 0.373, 0.373, 0.373, 0.373, 0.372, 0.372, 0.372, 0.372, 0.373, 0.374, 0.374, 0.374, 0.374, 0.374, 0.374, 0.374, 0.374, 0.374, 0.374, 0.374, 0.375, 0.375, 0.376, 0.376, 0.376, 0.376, 0.375, 0.375, 0.375, 0.375, 0.375, 0.375, 0.375, 0.375, 0.375, 0.375, 0.375, 0.375, 0.375, 0.375, 0.375, 0.374, 0.374, 0.374, 0.374, 0.374, 0.374, 0.374, 0.374, 0.374, 0.374, 0.374, 0.374, 0.374, 0.374, 0.374, 0.374, 0.374, 0.374, 0.374, 0.374, 0.374, 0.374, 0.374, 0.374, 0.375, 0.375, 0.375, 0.376, 0.376, 0.376, 0.376, 0.376, 0.375, 0.375, 0.376, 0.376, 0.376, 0.376, 0.376, 0.376, 0.376, 0.376, 0.376, 0.376, 0.376, 0.376, 0.377, 0.377, 0.377, 0.377, 0.377, 0.377, 0.377, 0.377, 0.377, 0.377, 0.377, 0.377, 0.377, 0.377, 0.377, 0.377, 0.377, 0.377, 0.377, 0.377, 0.377, 0.377, 0.377, 0.378, 0.378, 0.378, 0.378, 0.378, 0.378, 0.378, 0.378, 0.378, 0.378, 0.378, 0.378, 0.378, 0.378, 0.378, 0.378, 0.378, 0.378, 0.379, 0.379, 0.379, 0.379, 0.379, 0.378, 0.378, 0.378, 0.378, 0.378, 0.378, 0.378, 0.378, 0.378, 0.378, 0.378, 0.378, 0.378, 0.378, 0.378, 0.378, 0.378, 0.378, 0.378, 0.378, 0.378, 0.378, 0.378, 0.377, 0.377, 0.377, 0.377, 0.377, 0.377, 0.377, 0.377, 0.377, 0.377, 0.377, 0.378, 0.378, 0.378, 0.378, 0.378, 0.378, 0.378, 0.378, 0.378, 0.378, 0.378, 0.378, 0.378, 0.378, 0.378, 0.378, 0.378, 0.378, 0.378, 0.379, 0.379, 0.379, 0.379, 0.379, 0.38, 0.381, 0.381, 0.381, 0.381, 0.381, 0.381, 0.382, 0.382, 0.382, 0.382, 0.382, 0.382, 0.382, 0.382, 0.383, 0.384, 0.384, 0.384, 0.384, 0.384, 0.384, 0.384, 0.384, 0.384, 0.384, 0.384, 0.385, 0.385, 0.385, 0.385, 0.385, 0.385, 0.386, 0.387, 0.387, 0.387, 0.387, 0.387, 0.386, 0.386, 0.386, 0.386, 0.386, 0.386, 0.386, 0.386, 0.386, 0.386, 0.386, 0.386, 0.386, 0.386, 0.386, 0.386, 0.387, 0.387, 0.388, 0.388, 0.389, 0.39, 0.39, 0.39, 0.39, 0.39, 0.391, 0.391, 0.391, 0.391, 0.391, 0.391, 0.391, 0.391, 0.391, 0.391, 0.391, 0.391, 0.391, 0.391, 0.392, 0.392, 0.393, 0.393, 0.393, 0.393, 0.394, 0.394, 0.394, 0.394, 0.394, 0.394, 0.395, 0.395, 0.395, 0.395, 0.395, 0.395, 0.396, 0.396, 0.396, 0.397, 0.397, 0.398, 0.398, 0.398, 0.398, 0.399, 0.399, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.401, 0.401, 0.401, 0.401, 0.401, 0.401, 0.402, 0.402, 0.402, 0.401, 0.402, 0.402, 0.402, 0.402, 0.402, 0.402, 0.402, 0.402, 0.402, 0.402, 0.402, 0.402, 0.402, 0.402, 0.403, 0.402, 0.402, 0.403, 0.403, 0.404, 0.404, 0.404, 0.404, 0.404, 0.405, 0.405, 0.405, 0.405, 0.405, 0.405, 0.405, 0.405, 0.405, 0.405, 0.405, 0.405, 0.405, 0.405, 0.405, 0.405, 0.405, 0.405, 0.405, 0.405, 0.405, 0.404, 0.405, 0.405, 0.405, 0.405, 0.405, 0.405, 0.405, 0.406, 0.406, 0.406, 0.406, 0.406, 0.406, 0.406, 0.406, 0.406, 0.406, 0.406, 0.406, 0.406, 0.406, 0.406, 0.406, 0.406, 0.407, 0.407, 0.407, 0.407, 0.407, 0.407, 0.407, 0.407, 0.407, 0.407, 0.407, 0.407, 0.407, 0.409, 0.41, 0.41, 0.41, 0.41, 0.41, 0.41, 0.41, 0.411, 0.411, 0.411, 0.412, 0.412, 0.412, 0.412, 0.412, 0.412, 0.412, 0.413, 0.413, 0.412, 0.412, 0.412, 0.412, 0.412, 0.412, 0.412, 0.412, 0.412, 0.412, 0.412, 0.412, 0.412, 0.412, 0.412, 0.412, 0.413, 0.413, 0.413, 0.413, 0.413, 0.413, 0.414, 0.414, 0.414, 0.415, 0.415, 0.415, 0.415, 0.415, 0.415, 0.416, 0.416, 0.416, 0.416, 0.416, 0.417, 0.417, 0.418, 0.418, 0.418, 0.418, 0.418, 0.418, 0.419, 0.419, 0.419, 0.419, 0.419, 0.419, 0.419, 0.419, 0.419, 0.419, 0.419, 0.419, 0.42, 0.42, 0.42, 0.42, 0.42, 0.42, 0.42, 0.419, 0.419, 0.419, 0.419, 0.419, 0.419, 0.419, 0.419, 0.419, 0.419, 0.419, 0.419, 0.419, 0.419, 0.42, 0.421, 0.421, 0.421, 0.421, 0.421, 0.421, 0.421, 0.421, 0.421, 0.421, 0.421, 0.421, 0.421, 0.421, 0.421, 0.422, 0.422, 0.422, 0.422, 0.422, 0.422, 0.422, 0.422, 0.422, 0.422, 0.422, 0.422, 0.423, 0.424, 0.424, 0.424, 0.424, 0.424, 0.425, 0.425, 0.425, 0.425, 0.425, 0.425, 0.425, 0.425, 0.425, 0.425, 0.425, 0.425, 0.425, 0.425, 0.425, 0.425, 0.425, 0.426, 0.426, 0.426, 0.426, 0.426, 0.426, 0.427, 0.427, 0.427, 0.427, 0.427, 0.427, 0.427, 0.427, 0.427, 0.427, 0.427, 0.427, 0.427, 0.427, 0.428, 0.428, 0.428, 0.428, 0.428, 0.428, 0.428, 0.428, 0.429, 0.429, 0.429, 0.429, 0.429, 0.429, 0.429, 0.429, 0.429, 0.429, 0.429, 0.429, 0.429, 0.429, 0.429, 0.429, 0.429, 0.431, 0.431, 0.431, 0.431, 0.431, 0.431, 0.431, 0.431, 0.432, 0.432, 0.431, 0.431, 0.431, 0.431, 0.431, 0.432, 0.432, 0.432, 0.432, 0.432, 0.433, 0.433, 0.433, 0.433, 0.432, 0.432, 0.432, 0.432, 0.432, 0.433, 0.433, 0.433, 0.434, 0.434, 0.434, 0.434, 0.434, 0.434, 0.434, 0.435, 0.435, 0.435, 0.435, 0.435, 0.435, 0.436, 0.436, 0.436, 0.436, 0.436, 0.436, 0.436, 0.437, 0.437, 0.437, 0.437, 0.438, 0.439, 0.439, 0.439, 0.439, 0.44, 0.44, 0.44, 0.44, 0.44, 0.44, 0.44, 0.44, 0.44, 0.44, 0.44, 0.44, 0.441, 0.441, 0.441, 0.441, 0.442, 0.442, 0.442, 0.442, 0.442, 0.442, 0.442, 0.442, 0.443, 0.443, 0.443, 0.443, 0.443, 0.443, 0.443, 0.443, 0.443, 0.443, 0.443, 0.443, 0.443, 0.443, 0.443, 0.443, 0.444, 0.444, 0.444, 0.444, 0.444, 0.446, 0.446, 0.446, 0.446, 0.446, 0.446, 0.447, 0.447, 0.447, 0.447, 0.448, 0.448, 0.448, 0.448, 0.449, 0.449, 0.449, 0.449, 0.449, 0.449, 0.449, 0.449, 0.448, 0.448, 0.448, 0.448, 0.448, 0.448, 0.448, 0.448, 0.448, 0.448, 0.448, 0.448, 0.448, 0.448, 0.448, 0.448, 0.448, 0.447, 0.447, 0.447, 0.447, 0.447, 0.447, 0.447, 0.447, 0.447, 0.447, 0.448, 0.448, 0.448, 0.448, 0.448, 0.448, 0.448, 0.448, 0.448, 0.448, 0.448, 0.448, 0.449, 0.449, 0.449, 0.449, 0.449, 0.449, 0.449, 0.449, 0.449, 0.449, 0.449, 0.449, 0.45, 0.45, 0.45, 0.45, 0.449, 0.449, 0.449, 0.449, 0.449, 0.449, 0.449, 0.449, 0.449, 0.449, 0.449, 0.449, 0.449, 0.449, 0.449, 0.449, 0.449, 0.449, 0.449, 0.449, 0.449, 0.449, 0.449, 0.449, 0.449, 0.449, 0.449, 0.449, 0.449, 0.449, 0.449, 0.449, 0.449, 0.449, 0.449, 0.449, 0.449, 0.449, 0.449, 0.449, 0.449, 0.449, 0.449, 0.449, 0.45, 0.45, 0.45, 0.45, 0.45, 0.45, 0.45, 0.45, 0.45, 0.45, 0.45, 0.45, 0.449, 0.449, 0.449, 0.449, 0.449, 0.449, 0.449, 0.449, 0.449, 0.449, 0.449, 0.448, 0.448, 0.448, 0.448, 0.449, 0.449, 0.449, 0.449, 0.449, 0.449, 0.449, 0.449, 0.449, 0.449, 0.449, 0.449, 0.45, 0.45, 0.45, 0.45, 0.45, 0.452, 0.452, 0.452, 0.452, 0.452, 0.453, 0.453, 0.453, 0.453, 0.454, 0.455, 0.455, 0.455, 0.456, 0.456, 0.456, 0.456, 0.456, 0.456, 0.456, 0.456, 0.455, 0.455, 0.455, 0.455, 0.455, 0.455, 0.455, 0.455, 0.455, 0.455, 0.456, 0.456, 0.456, 0.456, 0.456, 0.456, 0.457, 0.457, 0.457, 0.456, 0.455, 0.454, 0.454, 0.454, 0.454, 0.454, 0.454, 0.454, 0.454, 0.454, 0.454, 0.454, 0.454, 0.454, 0.454, 0.454, 0.454, 0.454, 0.454, 0.454, 0.455, 0.455, 0.455, 0.455, 0.455, 0.455, 0.455, 0.455, 0.455, 0.455, 0.455, 0.455, 0.455, 0.455, 0.456, 0.456, 0.456, 0.456, 0.456, 0.456, 0.456, 0.457, 0.457, 0.457, 0.457, 0.457, 0.457, 0.457, 0.457, 0.457, 0.457, 0.457, 0.457, 0.457, 0.457, 0.458, 0.458, 0.458, 0.458, 0.458, 0.458, 0.458, 0.457, 0.457, 0.457, 0.458, 0.458, 0.458, 0.458, 0.459, 0.46, 0.46, 0.46, 0.46, 0.461, 0.461, 0.461, 0.461, 0.461, 0.461, 0.461, 0.461, 0.46, 0.462, 0.462, 0.462, 0.462, 0.462, 0.462, 0.462, 0.463, 0.463, 0.463, 0.463, 0.463, 0.463, 0.463, 0.463, 0.463, 0.463, 0.463, 0.463, 0.463, 0.463, 0.463, 0.463, 0.463, 0.463, 0.463, 0.463, 0.463, 0.463, 0.463, 0.463, 0.463, 0.463, 0.463, 0.464, 0.464, 0.464, 0.464, 0.464, 0.465, 0.465, 0.464, 0.464, 0.464, 0.464, 0.464, 0.464, 0.464, 0.464, 0.464, 0.464, 0.463, 0.463, 0.464, 0.464, 0.464, 0.465, 0.465, 0.465, 0.465, 0.465, 0.465, 0.465, 0.465, 0.465, 0.465, 0.465, 0.465, 0.465, 0.465, 0.465, 0.465, 0.465, 0.465, 0.465, 0.465, 0.465, 0.465, 0.465, 0.464, 0.464, 0.464, 0.464, 0.464, 0.463, 0.463, 0.463, 0.463, 0.463, 0.463, 0.463, 0.463, 0.463, 0.463, 0.463, 0.463, 0.463, 0.463, 0.463, 0.463, 0.463, 0.463, 0.463, 0.463, 0.463, 0.463, 0.463, 0.463, 0.463, 0.463, 0.463, 0.463, 0.463, 0.463, 0.463, 0.463, 0.463, 0.463, 0.463, 0.463, 0.463, 0.463, 0.463, 0.463, 0.463, 0.463, 0.463, 0.463, 0.463, 0.463, 0.463, 0.463, 0.462, 0.463, 0.463, 0.464, 0.464, 0.464, 0.464, 0.464, 0.464, 0.464, 0.465, 0.465, 0.465, 0.465, 0.465, 0.465, 0.465, 0.465, 0.465, 0.465, 0.465, 0.465, 0.465, 0.465, 0.465, 0.465, 0.465, 0.466, 0.466, 0.466, 0.466, 0.466, 0.466, 0.466, 0.466, 0.466, 0.466, 0.466, 0.466, 0.466, 0.467, 0.467, 0.467, 0.467, 0.467, 0.468, 0.467, 0.467, 0.467, 0.467, 0.467, 0.467, 0.467, 0.466, 0.466, 0.466, 0.466, 0.466, 0.466, 0.466, 0.466, 0.466, 0.467, 0.467, 0.467, 0.467, 0.467, 0.467, 0.467, 0.467, 0.467, 0.467, 0.467, 0.467, 0.467, 0.467, 0.467, 0.467, 0.467, 0.467, 0.467, 0.467, 0.467, 0.467, 0.467, 0.467, 0.467, 0.467, 0.467, 0.467, 0.467, 0.468, 0.469, 0.469, 0.469, 0.469, 0.469, 0.469, 0.469, 0.469, 0.469, 0.468, 0.469, 0.469, 0.469, 0.47, 0.471, 0.471, 0.471, 0.471, 0.471, 0.471, 0.471, 0.47, 0.471, 0.471, 0.472, 0.472, 0.472, 0.472, 0.472, 0.472, 0.472, 0.472, 0.472, 0.472, 0.472, 0.473, 0.473, 0.473, 0.473, 0.473, 0.473, 0.473, 0.473, 0.473, 0.473, 0.473, 0.473, 0.473, 0.473, 0.474, 0.474, 0.474, 0.474, 0.474, 0.474, 0.474, 0.474, 0.474, 0.474, 0.474, 0.474, 0.474, 0.474, 0.474, 0.474, 0.474, 0.474, 0.474, 0.474, 0.474, 0.476, 0.476, 0.476, 0.476, 0.476, 0.476, 0.476, 0.476, 0.476, 0.476, 0.476, 0.476, 0.476, 0.476, 0.476, 0.476, 0.477, 0.478, 0.478, 0.478, 0.478, 0.477, 0.477, 0.477, 0.477, 0.477, 0.477, 0.477, 0.477, 0.477, 0.477, 0.477, 0.477, 0.477, 0.478, 0.478, 0.478, 0.478, 0.478, 0.478, 0.478, 0.478, 0.479, 0.479, 0.479, 0.479, 0.478, 0.478, 0.478, 0.478, 0.478, 0.478, 0.477, 0.477, 0.477, 0.477, 0.477, 0.477, 0.478, 0.478, 0.478, 0.478, 0.478, 0.478, 0.478, 0.478, 0.478, 0.478, 0.478, 0.479, 0.479, 0.479, 0.479, 0.479, 0.479, 0.479, 0.481, 0.481, 0.481, 0.481, 0.481, 0.482, 0.482, 0.482, 0.482, 0.482, 0.482, 0.482, 0.482, 0.482, 0.482, 0.482, 0.483, 0.483, 0.483, 0.483, 0.483, 0.483, 0.483, 0.483, 0.482, 0.482, 0.483, 0.484, 0.484, 0.484, 0.484, 0.484, 0.483, 0.484, 0.484, 0.484, 0.484, 0.484, 0.484, 0.484, 0.484, 0.484, 0.484, 0.484, 0.484, 0.484, 0.484, 0.485, 0.486, 0.486, 0.488, 0.488, 0.488, 0.488, 0.488, 0.488, 0.488, 0.488, 0.488, 0.488, 0.489, 0.489, 0.489, 0.49, 0.49, 0.49, 0.49, 0.49, 0.49, 0.49, 0.49, 0.49, 0.49, 0.49, 0.49, 0.49, 0.49, 0.49, 0.49, 0.49, 0.49, 0.49, 0.49, 0.491, 0.491, 0.491, 0.491, 0.491, 0.491, 0.491, 0.491, 0.491, 0.492, 0.492, 0.492, 0.492, 0.492, 0.492, 0.492, 0.492, 0.492, 0.492, 0.492, 0.492, 0.492, 0.492, 0.492, 0.492, 0.492, 0.492, 0.492, 0.492, 0.492, 0.492, 0.492, 0.492, 0.492, 0.492, 0.492, 0.492, 0.492, 0.492, 0.492, 0.492, 0.492, 0.492, 0.492, 0.492, 0.492, 0.491, 0.491, 0.491, 0.491, 0.491, 0.491, 0.491, 0.491, 0.491, 0.491, 0.491, 0.491, 0.491, 0.491, 0.491, 0.491, 0.491, 0.491, 0.492, 0.491, 0.491, 0.491, 0.492, 0.492, 0.492, 0.492, 0.492, 0.493, 0.493, 0.493, 0.493, 0.493, 0.493, 0.493, 0.493, 0.493, 0.493, 0.493, 0.493, 0.493, 0.493, 0.493, 0.493, 0.494, 0.494, 0.494, 0.493, 0.493, 0.493, 0.493, 0.493, 0.493, 0.493, 0.493, 0.493, 0.493, 0.493, 0.493, 0.493, 0.493, 0.493, 0.493, 0.493, 0.493, 0.493, 0.493, 0.493, 0.493, 0.493, 0.495, 0.495, 0.495, 0.495, 0.495, 0.495, 0.495, 0.495, 0.495, 0.496, 0.496, 0.496, 0.496, 0.496, 0.496, 0.496, 0.497, 0.497, 0.497, 0.497, 0.497, 0.497, 0.497, 0.497, 0.497, 0.497, 0.497, 0.497, 0.497, 0.497, 0.497, 0.498, 0.498, 0.498, 0.498, 0.498, 0.498, 0.498, 0.499, 0.499, 0.499, 0.499, 0.499, 0.499, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.499, 0.499, 0.499, 0.499, 0.499, 0.498, 0.499, 0.499, 0.499, 0.499, 0.499, 0.499, 0.499, 0.499, 0.5, 0.5, 0.5, 0.5, 0.5, 0.5, 0.501, 0.501, 0.502, 0.502, 0.502, 0.502, 0.502, 0.502, 0.502, 0.503, 0.503, 0.503, 0.503, 0.504, 0.504, 0.504, 0.504, 0.504, 0.504, 0.504, 0.504, 0.504, 0.504, 0.504, 0.504, 0.504, 0.504, 0.504, 0.504, 0.504, 0.504, 0.504, 0.504, 0.504, 0.503, 0.505, 0.505, 0.505, 0.505, 0.505, 0.505, 0.506, 0.506, 0.506, 0.507, 0.507, 0.507, 0.507, 0.507, 0.507, 0.507, 0.508, 0.508, 0.508, 0.508, 0.508, 0.508, 0.508, 0.508, 0.508, 0.508, 0.508, 0.508, 0.509, 0.509, 0.509, 0.509, 0.509, 0.509, 0.509, 0.509, 0.509, 0.509, 0.509, 0.51, 0.509, 0.509, 0.508, 0.508, 0.508, 0.508, 0.508, 0.508, 0.508, 0.508, 0.508, 0.508, 0.507, 0.507, 0.508, 0.508, 0.508, 0.508, 0.507, 0.507, 0.507, 0.507, 0.507, 0.507, 0.507, 0.507, 0.507, 0.507, 0.507, 0.507, 0.507, 0.507, 0.507, 0.507, 0.507, 0.508, 0.508, 0.508, 0.508, 0.508, 0.508, 0.508, 0.508, 0.508, 0.508, 0.508, 0.508, 0.508, 0.508, 0.508, 0.508, 0.508, 0.507, 0.507, 0.507, 0.507, 0.507, 0.507, 0.506, 0.506, 0.506, 0.506, 0.506, 0.506, 0.506, 0.506, 0.505, 0.505, 0.505, 0.505, 0.505, 0.505, 0.505, 0.505, 0.506, 0.506, 0.506, 0.506, 0.506, 0.506, 0.506, 0.506, 0.507, 0.507, 0.507, 0.507, 0.507, 0.506, 0.506, 0.506, 0.507, 0.507, 0.508, 0.508, 0.508, 0.508, 0.508, 0.508, 0.508, 0.508, 0.508, 0.508, 0.508, 0.508, 0.508, 0.508, 0.508, 0.508, 0.508, 0.508, 0.508, 0.508, 0.508, 0.508, 0.508, 0.508, 0.508, 0.508, 0.508, 0.508, 0.509, 0.509, 0.509, 0.51, 0.51, 0.509, 0.509, 0.509, 0.509, 0.509, 0.509, 0.509, 0.509, 0.509, 0.509, 0.509, 0.509, 0.51, 0.51, 0.51, 0.51, 0.511, 0.512, 0.512, 0.512, 0.512, 0.512, 0.512, 0.512, 0.512, 0.513, 0.513, 0.513, 0.513, 0.513, 0.513, 0.513, 0.513, 0.513, 0.513, 0.513, 0.513, 0.513, 0.513, 0.513, 0.513, 0.513, 0.513, 0.513, 0.513, 0.513, 0.513, 0.513, 0.513, 0.513, 0.513, 0.513, 0.513, 0.513, 0.513, 0.513, 0.513, 0.514, 0.514, 0.514, 0.514, 0.514, 0.514, 0.515, 0.515, 0.515, 0.515, 0.515, 0.515, 0.515, 0.515, 0.515, 0.515, 0.515, 0.515, 0.515, 0.515, 0.515, 0.515, 0.515, 0.515, 0.515, 0.515, 0.515, 0.515, 0.515, 0.515, 0.515, 0.515, 0.515, 0.515, 0.515, 0.515, 0.516, 0.516, 0.516, 0.517, 0.517, 0.517, 0.517, 0.517, 0.517, 0.517, 0.517, 0.517, 0.517, 0.517, 0.518, 0.519, 0.519, 0.519, 0.519, 0.519, 0.519, 0.519, 0.519, 0.519, 0.519, 0.52, 0.52, 0.52, 0.521, 0.521, 0.521, 0.521, 0.521, 0.521, 0.521, 0.521, 0.522, 0.522, 0.522, 0.522, 0.522, 0.522, 0.523, 0.523, 0.523, 0.523, 0.523, 0.523, 0.523, 0.524, 0.524, 0.524, 0.524, 0.524, 0.525, 0.524, 0.524, 0.525, 0.525, 0.525, 0.524, 0.524, 0.524, 0.524, 0.524, 0.524, 0.524, 0.525, 0.525, 0.525, 0.525, 0.525, 0.525, 0.526, 0.526, 0.526, 0.527, 0.527, 0.528, 0.528, 0.528, 0.529, 0.53, 0.53, 0.53, 0.531, 0.531, 0.531, 0.531, 0.531, 0.531, 0.531, 0.531, 0.531, 0.531, 0.532, 0.532, 0.533, 0.533, 0.533, 0.533, 0.533, 0.533, 0.533, 0.533, 0.533, 0.533, 0.533, 0.533, 0.534, 0.534, 0.535, 0.535, 0.535, 0.535, 0.535, 0.537, 0.538, 0.539, 0.539, 0.539, 0.539, 0.539, 0.539, 0.539, 0.539, 0.539, 0.539, 0.539, 0.539, 0.539, 0.539, 0.54, 0.54, 0.541, 0.541, 0.541, 0.541, 0.541, 0.541, 0.541, 0.541, 0.541, 0.541, 0.541, 0.541, 0.541, 0.541, 0.542, 0.542, 0.542, 0.542, 0.542, 0.542, 0.542, 0.542, 0.542, 0.542, 0.542, 0.542, 0.542, 0.542, 0.542, 0.542, 0.542, 0.543, 0.543, 0.543, 0.543, 0.544, 0.544, 0.544, 0.544, 0.544, 0.544, 0.544, 0.544, 0.544, 0.544, 0.544, 0.544, 0.544, 0.544, 0.544, 0.544, 0.544, 0.545, 0.545, 0.545, 0.545, 0.545, 0.545, 0.545, 0.545, 0.545, 0.545, 0.545, 0.545, 0.545, 0.545, 0.545, 0.545, 0.545, 0.545, 0.545, 0.544, 0.544, 0.545, 0.545, 0.544, 0.544, 0.544, 0.544, 0.544, 0.544, 0.544, 0.545, 0.545, 0.545, 0.545, 0.545, 0.545, 0.545, 0.545, 0.546, 0.546, 0.546, 0.546, 0.546, 0.546, 0.546, 0.546, 0.546, 0.546, 0.546, 0.546, 0.546, 0.546, 0.546, 0.546, 0.546, 0.546, 0.546, 0.546, 0.546, 0.547, 0.548, 0.548, 0.548, 0.548, 0.548, 0.548, 0.548, 0.548, 0.548, 0.548, 0.548, 0.548, 0.548, 0.547, 0.547, 0.548, 0.548, 0.548, 0.548, 0.548, 0.548, 0.548, 0.548, 0.548, 0.548, 0.548, 0.548, 0.548, 0.548, 0.548, 0.548, 0.548, 0.548, 0.547, 0.547, 0.547, 0.547, 0.547, 0.547, 0.547, 0.547, 0.547, 0.548, 0.548, 0.549, 0.55, 0.55, 0.55, 0.549, 0.549, 0.549, 0.549, 0.549, 0.549, 0.549, 0.549, 0.549, 0.549, 0.549, 0.549, 0.549, 0.549, 0.549, 0.549, 0.548, 0.548, 0.548, 0.548, 0.548, 0.548, 0.549, 0.549, 0.549, 0.549, 0.548, 0.548, 0.548, 0.549, 0.549, 0.549, 0.549, 0.549, 0.549, 0.549, 0.549, 0.549, 0.549, 0.549, 0.549, 0.548, 0.548, 0.547, 0.547, 0.547, 0.548, 0.548, 0.548, 0.547, 0.547, 0.547, 0.547, 0.547, 0.548, 0.548, 0.548, 0.548, 0.548, 0.548, 0.548, 0.548, 0.548, 0.548, 0.548, 0.548, 0.548, 0.548, 0.548, 0.548, 0.548, 0.548, 0.547, 0.548, 0.548, 0.547, 0.547, 0.549, 0.549, 0.549, 0.549, 0.549, 0.549, 0.549, 0.549, 0.549, 0.549, 0.549, 0.549, 0.549, 0.549, 0.549, 0.549, 0.549, 0.549, 0.549, 0.548, 0.547, 0.547, 0.547, 0.547, 0.547, 0.547, 0.546, 0.546, 0.546, 0.546, 0.546, 0.547, 0.547, 0.547, 0.547, 0.547, 0.547, 0.547, 0.547, 0.547, 0.547, 0.547, 0.547, 0.547, 0.547, 0.547, 0.548, 0.548, 0.548, 0.547, 0.547, 0.547, 0.547, 0.547, 0.547, 0.547, 0.547, 0.547, 0.548, 0.548, 0.548, 0.548, 0.547, 0.547, 0.547, 0.547, 0.547, 0.547, 0.547, 0.547, 0.547, 0.547, 0.547, 0.547, 0.547, 0.547, 0.547, 0.547, 0.547, 0.547, 0.547, 0.546, 0.546, 0.546, 0.546, 0.546, 0.546, 0.546, 0.546, 0.547, 0.548, 0.547, 0.547, 0.547, 0.547, 0.547, 0.547, 0.547, 0.547, 0.547, 0.547, 0.547, 0.547, 0.547, 0.547, 0.548, 0.548, 0.548, 0.548, 0.548, 0.548, 0.548, 0.548, 0.548, 0.547, 0.547, 0.547, 0.547, 0.547, 0.547, 0.547, 0.547, 0.547, 0.547, 0.547, 0.547, 0.547, 0.547, 0.547, 0.547, 0.547, 0.547, 0.547, 0.548, 0.548, 0.548, 0.548, 0.548, 0.549, 0.549, 0.549, 0.549, 0.549, 0.55, 0.55, 0.55, 0.55, 0.55, 0.55, 0.55, 0.55, 0.55, 0.55, 0.55, 0.55, 0.55, 0.55, 0.55, 0.55, 0.55, 0.55, 0.55, 0.55, 0.55, 0.55, 0.55, 0.55, 0.551, 0.551, 0.551, 0.551, 0.551, 0.551, 0.551, 0.551, 0.551, 0.551, 0.552, 0.552, 0.552, 0.552, 0.553, 0.553, 0.553, 0.553, 0.553, 0.553, 0.554, 0.554, 0.554, 0.553, 0.553, 0.553, 0.553, 0.553, 0.553, 0.553, 0.553, 0.553, 0.553, 0.553, 0.553, 0.553, 0.553, 0.553, 0.553, 0.553, 0.553, 0.553, 0.553, 0.553, 0.554, 0.554, 0.554, 0.554, 0.554, 0.554, 0.554, 0.554, 0.554, 0.554, 0.554, 0.554, 0.554, 0.554, 0.554, 0.554, 0.555, 0.555, 0.555, 0.555, 0.555, 0.555, 0.555, 0.556, 0.556, 0.556, 0.556, 0.556, 0.556, 0.556, 0.556, 0.556, 0.556, 0.557, 0.557, 0.557, 0.557, 0.557, 0.557, 0.557, 0.557, 0.557, 0.557, 0.557, 0.557, 0.557, 0.557, 0.556, 0.556, 0.556, 0.556, 0.556, 0.556, 0.556, 0.556, 0.556, 0.557, 0.557, 0.557, 0.557, 0.557, 0.559, 0.559, 0.559, 0.559, 0.559, 0.559, 0.559, 0.559, 0.559, 0.56, 0.56, 0.56, 0.56, 0.56, 0.56, 0.56, 0.56, 0.56, 0.56, 0.56, 0.56, 0.56, 0.56, 0.56, 0.56, 0.56, 0.56, 0.561, 0.561, 0.561, 0.561, 0.561, 0.562, 0.562, 0.562, 0.562, 0.562, 0.562, 0.562, 0.562, 0.562, 0.562, 0.562, 0.562, 0.562, 0.562, 0.562, 0.562, 0.562, 0.562, 0.561, 0.562, 0.562, 0.562, 0.562, 0.562, 0.562, 0.562, 0.562, 0.562, 0.562, 0.562, 0.562, 0.562, 0.561, 0.561, 0.561, 0.562, 0.562, 0.562, 0.562, 0.562, 0.562, 0.561, 0.561, 0.561, 0.561, 0.561, 0.561, 0.561, 0.561, 0.562, 0.562, 0.562, 0.562, 0.562, 0.562, 0.562, 0.562, 0.562, 0.562, 0.562, 0.562, 0.562, 0.562, 0.562, 0.562, 0.562, 0.562, 0.562, 0.562, 0.562, 0.562, 0.562, 0.562, 0.562, 0.562, 0.562, 0.562, 0.562, 0.562, 0.562, 0.562, 0.562, 0.562, 0.562, 0.562, 0.562, 0.562, 0.562, 0.562, 0.561, 0.561, 0.562, 0.562, 0.561, 0.56, 0.56, 0.56, 0.56, 0.56, 0.56, 0.56, 0.561, 0.561, 0.561, 0.561, 0.561, 0.561, 0.561, 0.561, 0.561, 0.561, 0.561, 0.561, 0.561, 0.56, 0.56, 0.56, 0.56, 0.56, 0.56, 0.56, 0.56, 0.56, 0.56, 0.56, 0.56, 0.56, 0.56, 0.56, 0.561, 0.561, 0.561, 0.561, 0.561, 0.561, 0.56, 0.56, 0.56, 0.56, 0.56, 0.56, 0.56, 0.56, 0.56, 0.56, 0.56, 0.56, 0.56, 0.56, 0.561, 0.561, 0.561, 0.561, 0.561, 0.561, 0.561, 0.561, 0.561, 0.561, 0.562, 0.562, 0.563, 0.563, 0.563, 0.563, 0.563, 0.563, 0.562, 0.561, 0.56, 0.56, 0.56, 0.56, 0.56, 0.56, 0.56, 0.56, 0.56, 0.56, 0.561, 0.561, 0.561, 0.561, 0.561, 0.561, 0.561, 0.561, 0.561, 0.562, 0.562, 0.562, 0.562, 0.562, 0.562, 0.562, 0.562, 0.562, 0.562, 0.563, 0.563, 0.563, 0.563, 0.563, 0.563, 0.563, 0.563, 0.563, 0.563, 0.563, 0.563, 0.563, 0.563, 0.563, 0.564, 0.563, 0.563, 0.563, 0.563, 0.563, 0.562, 0.562, 0.562, 0.562, 0.562, 0.562, 0.563, 0.562, 0.562, 0.562, 0.563, 0.563, 0.563, 0.563, 0.563, 0.563, 0.563, 0.563, 0.563, 0.563, 0.563, 0.563, 0.563, 0.563, 0.563, 0.563, 0.563, 0.563, 0.563, 0.563, 0.563, 0.563, 0.563, 0.563, 0.563, 0.564, 0.564, 0.564, 0.564, 0.564, 0.564, 0.564, 0.564, 0.564, 0.564, 0.564, 0.564, 0.564, 0.563, 0.563, 0.564, 0.564, 0.564, 0.564, 0.564, 0.564, 0.564, 0.564, 0.564, 0.564, 0.564, 0.564, 0.564, 0.564, 0.565, 0.565, 0.565, 0.565, 0.565, 0.565, 0.565, 0.565, 0.565, 0.565, 0.565, 0.565, 0.565, 0.565, 0.565, 0.565, 0.564, 0.564, 0.564, 0.564, 0.565, 0.565, 0.565, 0.565, 0.565, 0.566, 0.566, 0.567, 0.567, 0.567, 0.567, 0.567, 0.566, 0.566, 0.566, 0.566, 0.566, 0.566, 0.566, 0.566, 0.567, 0.567, 0.567, 0.567, 0.568, 0.568, 0.568, 0.568, 0.568, 0.568, 0.568, 0.568, 0.568, 0.568, 0.568, 0.568, 0.568, 0.568, 0.568, 0.568, 0.568, 0.568, 0.569, 0.569, 0.569, 0.569, 0.569, 0.569, 0.569, 0.569, 0.569, 0.569, 0.569, 0.569, 0.569, 0.569, 0.569, 0.569, 0.569, 0.57, 0.57, 0.57, 0.57, 0.57, 0.57, 0.57, 0.57, 0.57, 0.57, 0.57, 0.57, 0.57, 0.57, 0.57, 0.57, 0.57, 0.57, 0.57, 0.57, 0.571, 0.571, 0.571, 0.571, 0.572, 0.572, 0.571, 0.571, 0.571, 0.571, 0.571, 0.571, 0.571, 0.571, 0.571, 0.571, 0.571, 0.571, 0.572, 0.572, 0.57, 0.57, 0.57, 0.57, 0.571, 0.571, 0.571, 0.571, 0.571, 0.571, 0.571, 0.571, 0.571, 0.571, 0.571, 0.571, 0.571, 0.571, 0.57, 0.57, 0.57, 0.57, 0.57, 0.57, 0.57, 0.57, 0.57, 0.57, 0.57, 0.57, 0.57, 0.57, 0.57, 0.57, 0.57, 0.57, 0.57, 0.57, 0.57, 0.57, 0.57, 0.569, 0.568, 0.568, 0.568, 0.568, 0.568, 0.569, 0.569, 0.569, 0.57, 0.57, 0.57, 0.57, 0.57, 0.57, 0.57, 0.57, 0.57, 0.57, 0.57, 0.57, 0.57, 0.57, 0.569, 0.569, 0.569, 0.569, 0.569, 0.57, 0.57, 0.57, 0.57, 0.57, 0.57, 0.57, 0.57, 0.571, 0.571, 0.571, 0.571, 0.571, 0.571, 0.571, 0.571, 0.572, 0.572, 0.572, 0.572, 0.572, 0.572, 0.572, 0.572, 0.572, 0.571, 0.571, 0.572, 0.572, 0.573, 0.573, 0.573, 0.573, 0.573, 0.573, 0.573, 0.573, 0.574, 0.574, 0.574, 0.574, 0.574, 0.574, 0.574, 0.574, 0.574, 0.574, 0.574, 0.574, 0.574, 0.574, 0.574, 0.574, 0.574, 0.574, 0.573, 0.573, 0.572, 0.572, 0.572, 0.572, 0.572, 0.573, 0.573, 0.573, 0.573, 0.573, 0.573, 0.573, 0.574, 0.574, 0.574, 0.574, 0.574, 0.574, 0.574, 0.574, 0.574, 0.574, 0.574, 0.574, 0.574, 0.574, 0.574, 0.574, 0.574, 0.574, 0.574, 0.574, 0.574, 0.574, 0.574, 0.574, 0.574, 0.574, 0.574, 0.574, 0.574, 0.574, 0.574, 0.574, 0.574, 0.574, 0.574, 0.575, 0.575, 0.575, 0.575, 0.575, 0.575, 0.575, 0.575, 0.575, 0.575, 0.575, 0.575, 0.575, 0.576, 0.576, 0.576, 0.576, 0.576, 0.576, 0.576, 0.576, 0.576, 0.576, 0.576, 0.576, 0.576, 0.575, 0.576, 0.576, 0.576, 0.576, 0.576, 0.576, 0.576, 0.577, 0.577, 0.577, 0.577, 0.577, 0.577, 0.577, 0.577, 0.578, 0.578, 0.579, 0.58, 0.58, 0.581, 0.581, 0.581, 0.582, 0.582, 0.583, 0.583, 0.583, 0.583, 0.583, 0.583, 0.584, 0.584, 0.584, 0.584, 0.584, 0.584, 0.584, 0.584, 0.584, 0.584, 0.584, 0.584, 0.584, 0.584, 0.584, 0.584, 0.584, 0.584, 0.584, 0.584, 0.584, 0.584, 0.584, 0.584, 0.584, 0.585, 0.585, 0.585, 0.585, 0.585, 0.585, 0.586, 0.586, 0.586, 0.586, 0.586, 0.586, 0.586, 0.586, 0.586, 0.586, 0.586, 0.586, 0.586, 0.586, 0.586, 0.586, 0.587, 0.587, 0.588, 0.588, 0.588, 0.588, 0.588, 0.588, 0.588, 0.587, 0.587, 0.587, 0.587, 0.587, 0.587, 0.587, 0.587, 0.587, 0.587, 0.587, 0.587, 0.587, 0.587, 0.587, 0.587, 0.587, 0.587, 0.587, 0.588, 0.588, 0.588, 0.588, 0.588, 0.588, 0.588, 0.588, 0.588, 0.588, 0.589, 0.589, 0.589, 0.589, 0.59, 0.589, 0.589, 0.589, 0.589, 0.589, 0.589, 0.589, 0.589, 0.589, 0.589, 0.589, 0.589, 0.589, 0.588, 0.588, 0.588, 0.588, 0.588, 0.588, 0.588, 0.588, 0.588, 0.589, 0.589, 0.589, 0.59, 0.59, 0.591, 0.591, 0.591, 0.59, 0.59, 0.591, 0.591, 0.591, 0.591, 0.591, 0.591, 0.591, 0.591, 0.591, 0.591, 0.591, 0.591, 0.591, 0.591, 0.591, 0.591, 0.592, 0.592, 0.592, 0.593, 0.593, 0.594, 0.594, 0.595, 0.595, 0.595, 0.595, 0.595, 0.595, 0.595, 0.595, 0.595, 0.594, 0.593, 0.593, 0.593, 0.593, 0.593, 0.594, 0.594, 0.594, 0.594, 0.594, 0.594, 0.594, 0.594, 0.594, 0.594, 0.594, 0.594, 0.594, 0.594, 0.594, 0.594, 0.594, 0.594, 0.594, 0.594, 0.594, 0.594, 0.594, 0.594, 0.594, 0.594, 0.594, 0.594, 0.594, 0.594, 0.594, 0.594, 0.594, 0.594, 0.594, 0.594, 0.594, 0.594, 0.594, 0.594, 0.594, 0.594, 0.594, 0.594, 0.595, 0.595, 0.595, 0.594, 0.594, 0.594, 0.594, 0.594, 0.594, 0.594, 0.594, 0.594, 0.594, 0.594, 0.594, 0.594, 0.594, 0.594, 0.594, 0.593, 0.593, 0.594, 0.593, 0.593, 0.594, 0.594, 0.594, 0.594, 0.595, 0.595, 0.595, 0.595, 0.595, 0.595, 0.595, 0.595, 0.595, 0.595, 0.595, 0.596, 0.596, 0.596, 0.596, 0.596, 0.596, 0.596, 0.596, 0.596, 0.596, 0.596, 0.596, 0.596, 0.596, 0.596, 0.596, 0.596, 0.596, 0.597, 0.597, 0.597, 0.599, 0.599, 0.599, 0.599, 0.599, 0.599, 0.599, 0.599, 0.599, 0.599, 0.599, 0.599, 0.599, 0.599, 0.599, 0.599, 0.599, 0.599, 0.6, 0.6, 0.6, 0.6, 0.6, 0.6, 0.6, 0.6, 0.6, 0.6, 0.6, 0.6, 0.6, 0.6, 0.6, 0.6, 0.6, 0.6, 0.6, 0.6, 0.601, 0.601, 0.601, 0.602, 0.601, 0.6, 0.6, 0.6, 0.6, 0.601, 0.6, 0.6, 0.6, 0.6, 0.6, 0.601, 0.601, 0.601, 0.601, 0.601, 0.601, 0.601, 0.601, 0.602, 0.603, 0.603, 0.603, 0.603, 0.603, 0.603, 0.604, 0.604, 0.604, 0.604, 0.604, 0.604, 0.604, 0.604, 0.604, 0.604, 0.604, 0.604, 0.604, 0.604, 0.604, 0.604, 0.604, 0.605, 0.605, 0.605, 0.605, 0.605, 0.605, 0.605, 0.605, 0.605, 0.605, 0.605, 0.605, 0.605, 0.605, 0.606, 0.606, 0.606, 0.606, 0.606, 0.606, 0.607, 0.607, 0.607, 0.608, 0.608, 0.608, 0.608, 0.608, 0.608, 0.607, 0.607, 0.607, 0.607, 0.607, 0.606, 0.606, 0.606, 0.606, 0.607, 0.607, 0.607, 0.607, 0.607, 0.607, 0.607, 0.607, 0.607, 0.607, 0.606, 0.606, 0.606, 0.606, 0.606, 0.605, 0.604, 0.604, 0.604, 0.604, 0.605, 0.605, 0.605, 0.605, 0.605, 0.606, 0.606, 0.606, 0.608, 0.608, 0.607, 0.607, 0.608, 0.608, 0.608, 0.608, 0.608, 0.608, 0.608, 0.608, 0.608, 0.608, 0.608, 0.608, 0.608, 0.609, 0.609, 0.609, 0.609, 0.609, 0.609, 0.609, 0.609, 0.609, 0.61, 0.61, 0.61, 0.611, 0.611, 0.611, 0.611, 0.611, 0.611, 0.612, 0.612, 0.612, 0.614, 0.614, 0.614, 0.614, 0.614, 0.614, 0.614, 0.614, 0.614, 0.615, 0.616, 0.616, 0.616, 0.616, 0.616, 0.616, 0.616, 0.616, 0.616, 0.616, 0.616, 0.616, 0.616, 0.616, 0.616, 0.616, 0.616, 0.616, 0.616, 0.616, 0.616, 0.616, 0.616, 0.616, 0.617, 0.617, 0.618, 0.618, 0.618, 0.618, 0.618, 0.619, 0.619, 0.619, 0.619, 0.619, 0.618, 0.618, 0.618, 0.618, 0.618, 0.618, 0.618, 0.618, 0.618, 0.618, 0.618, 0.618, 0.618, 0.618, 0.618, 0.618, 0.618, 0.619, 0.619, 0.619, 0.619, 0.618, 0.618, 0.618, 0.618, 0.618, 0.618, 0.619, 0.619, 0.619, 0.619, 0.619, 0.619, 0.62, 0.62, 0.62, 0.621, 0.621, 0.621, 0.621, 0.622, 0.622, 0.622, 0.622, 0.622, 0.622, 0.622, 0.622, 0.621, 0.621, 0.621, 0.621, 0.621, 0.621, 0.621, 0.62, 0.62, 0.62, 0.62, 0.62, 0.62, 0.62, 0.621, 0.621, 0.621, 0.621, 0.622, 0.622, 0.622, 0.622, 0.622, 0.622, 0.622, 0.622, 0.622, 0.622, 0.622, 0.622, 0.622, 0.621, 0.622, 0.622, 0.622, 0.622, 0.621, 0.621, 0.621, 0.621, 0.621, 0.621, 0.621, 0.621, 0.622, 0.622, 0.622, 0.622, 0.622, 0.622, 0.622, 0.622, 0.622, 0.622, 0.623, 0.623, 0.623, 0.623, 0.623, 0.623, 0.623, 0.623, 0.623, 0.623, 0.623, 0.623, 0.623, 0.623, 0.623, 0.623, 0.623, 0.623, 0.623, 0.623, 0.623, 0.623, 0.623, 0.623, 0.623, 0.623, 0.623, 0.623, 0.624, 0.624, 0.624, 0.624, 0.624, 0.624, 0.624, 0.624, 0.624, 0.624, 0.624, 0.624, 0.624, 0.624, 0.624, 0.625, 0.626, 0.626, 0.626, 0.626, 0.626, 0.627, 0.627, 0.626, 0.627, 0.627, 0.626, 0.626, 0.626, 0.626, 0.626, 0.626, 0.626, 0.626, 0.627, 0.627, 0.627, 0.627, 0.627, 0.627, 0.627, 0.627, 0.627, 0.627, 0.628, 0.628, 0.628, 0.628, 0.628, 0.628, 0.628, 0.628, 0.628, 0.628, 0.628, 0.628, 0.628, 0.628, 0.628, 0.628, 0.629, 0.629, 0.629, 0.629, 0.63, 0.629, 0.629, 0.629, 0.629, 0.629, 0.629, 0.629, 0.629, 0.629, 0.629, 0.63, 0.63, 0.63, 0.63, 0.63, 0.63, 0.63, 0.63, 0.629, 0.629, 0.629, 0.629, 0.629, 0.628, 0.628, 0.628, 0.628, 0.628, 0.627, 0.627, 0.627, 0.627, 0.626, 0.626, 0.626, 0.626, 0.626, 0.626, 0.626, 0.626, 0.626, 0.625, 0.625, 0.625, 0.625, 0.626, 0.626, 0.626, 0.626, 0.626, 0.626, 0.626, 0.626, 0.626, 0.626, 0.626, 0.627, 0.627, 0.625, 0.625, 0.625, 0.625, 0.625, 0.625, 0.626, 0.626, 0.626, 0.626, 0.626, 0.626, 0.626, 0.626, 0.626, 0.626, 0.626, 0.626, 0.626, 0.626, 0.626, 0.626, 0.626, 0.626, 0.627, 0.627, 0.627, 0.627, 0.627, 0.625, 0.625, 0.625, 0.625, 0.625, 0.625, 0.626, 0.626, 0.626, 0.626, 0.626, 0.626, 0.626, 0.626, 0.626, 0.626, 0.627, 0.627, 0.627, 0.627, 0.627, 0.627, 0.627, 0.627, 0.627, 0.627, 0.627, 0.628, 0.628, 0.628, 0.628, 0.628, 0.628, 0.628, 0.628, 0.628, 0.628, 0.628, 0.628, 0.628, 0.629, 0.629, 0.629, 0.629, 0.629, 0.629, 0.629, 0.629, 0.629, 0.629, 0.629, 0.629, 0.629, 0.629, 0.629, 0.629, 0.629, 0.63, 0.63, 0.631, 0.631, 0.631, 0.63, 0.63, 0.63, 0.63, 0.63, 0.631, 0.631, 0.631, 0.631, 0.631, 0.631, 0.631, 0.631, 0.631, 0.631, 0.631, 0.631, 0.631, 0.632, 0.632, 0.632, 0.632, 0.632, 0.632, 0.632, 0.632, 0.632, 0.632, 0.632, 0.632, 0.632, 0.632, 0.632, 0.632, 0.632, 0.632, 0.632, 0.632, 0.632, 0.632, 0.632, 0.632, 0.632, 0.632, 0.632, 0.631, 0.631, 0.631, 0.631, 0.631, 0.631, 0.631, 0.631, 0.631, 0.631, 0.631, 0.631, 0.632, 0.632, 0.632, 0.632, 0.632, 0.632, 0.632, 0.632, 0.632, 0.632, 0.632, 0.633, 0.633, 0.633, 0.633, 0.633, 0.633, 0.633, 0.634, 0.635, 0.635, 0.635, 0.635, 0.635, 0.635, 0.635, 0.635, 0.635, 0.635, 0.635, 0.635, 0.635, 0.635, 0.635, 0.635, 0.635, 0.635, 0.635, 0.635, 0.635, 0.635, 0.634, 0.634, 0.633, 0.632, 0.633, 0.633, 0.633, 0.633, 0.633, 0.633, 0.633, 0.633, 0.633, 0.633, 0.633, 0.633, 0.633, 0.632, 0.632, 0.632, 0.632, 0.632, 0.632, 0.632, 0.632, 0.632, 0.631, 0.631, 0.631, 0.632, 0.632, 0.633, 0.633, 0.633, 0.633, 0.633, 0.633, 0.633, 0.633, 0.633, 0.633, 0.633, 0.633, 0.633, 0.633, 0.633, 0.633, 0.633, 0.633, 0.633, 0.633, 0.633, 0.633, 0.634, 0.634, 0.634, 0.634, 0.634, 0.635, 0.635, 0.635, 0.635, 0.635, 0.635, 0.635, 0.635, 0.635, 0.635, 0.635, 0.634, 0.634, 0.634, 0.634, 0.634, 0.634, 0.634, 0.634, 0.634, 0.634, 0.634, 0.634, 0.634, 0.634, 0.634, 0.635, 0.635, 0.635, 0.635, 0.635, 0.635, 0.635, 0.635, 0.635, 0.637, 0.637, 0.637, 0.637, 0.637, 0.637, 0.636, 0.637, 0.637, 0.637, 0.637, 0.637, 0.637, 0.637, 0.637, 0.637, 0.637, 0.637, 0.637, 0.637, 0.637, 0.636, 0.636, 0.636, 0.636, 0.636, 0.636, 0.636, 0.636, 0.636, 0.636, 0.636, 0.636, 0.636, 0.636, 0.636, 0.636, 0.636, 0.636, 0.636, 0.636, 0.636, 0.637, 0.637, 0.637, 0.637, 0.637, 0.638, 0.638, 0.638, 0.638, 0.638, 0.638, 0.638, 0.638, 0.638, 0.638, 0.638, 0.638, 0.639, 0.64, 0.64, 0.64, 0.64, 0.64, 0.64, 0.64, 0.64, 0.64, 0.64, 0.64, 0.64, 0.64, 0.64, 0.64, 0.64, 0.64, 0.64, 0.64, 0.64, 0.64, 0.64, 0.64, 0.64, 0.64, 0.64, 0.64, 0.641, 0.641, 0.641, 0.641, 0.641, 0.641, 0.641, 0.641, 0.641, 0.641, 0.641, 0.641, 0.641, 0.641, 0.641, 0.641, 0.641, 0.641, 0.641, 0.641, 0.641, 0.641, 0.641, 0.641, 0.641, 0.641, 0.641, 0.641, 0.642, 0.642, 0.642, 0.642, 0.642, 0.642, 0.642, 0.642, 0.642, 0.642, 0.642, 0.642, 0.642, 0.642, 0.642, 0.642, 0.642, 0.642, 0.642, 0.642, 0.641, 0.641, 0.64, 0.64, 0.64, 0.64, 0.64, 0.64, 0.64, 0.64, 0.64, 0.64, 0.64, 0.64, 0.64, 0.64, 0.64, 0.639, 0.639, 0.639, 0.639, 0.637, 0.637, 0.637, 0.637, 0.637, 0.637, 0.637, 0.636, 0.635, 0.635, 0.635, 0.635, 0.635, 0.635, 0.635, 0.635, 0.635, 0.635, 0.635, 0.635, 0.635, 0.635, 0.635, 0.635, 0.635, 0.634, 0.634, 0.634, 0.634, 0.634, 0.634, 0.633, 0.633, 0.633, 0.633, 0.633, 0.633, 0.633, 0.633, 0.633, 0.633, 0.633, 0.634, 0.634, 0.634, 0.634, 0.634, 0.634, 0.634, 0.634, 0.634, 0.634, 0.634, 0.634, 0.634, 0.634, 0.633, 0.633, 0.633, 0.633, 0.633, 0.634, 0.634, 0.634, 0.634, 0.634, 0.634, 0.634, 0.634, 0.633, 0.633, 0.633, 0.633, 0.633, 0.633, 0.633, 0.633, 0.633, 0.633, 0.633, 0.633, 0.633, 0.633, 0.633, 0.633, 0.633, 0.633, 0.633, 0.633, 0.632, 0.632, 0.632, 0.631, 0.631, 0.631, 0.631, 0.631, 0.631, 0.631, 0.631, 0.631, 0.631, 0.632, 0.632, 0.632, 0.632, 0.632, 0.632, 0.632, 0.632, 0.632, 0.632, 0.632, 0.632, 0.632, 0.632, 0.632, 0.632, 0.632, 0.632, 0.632, 0.632, 0.632, 0.632, 0.632, 0.633, 0.633, 0.633, 0.632, 0.632, 0.631, 0.631, 0.631, 0.631, 0.632, 0.632, 0.633, 0.633, 0.633, 0.633, 0.633, 0.633, 0.633, 0.633, 0.633, 0.633, 0.634, 0.634, 0.634, 0.635, 0.635, 0.635, 0.636, 0.637, 0.637, 0.637, 0.637, 0.637, 0.637, 0.637, 0.637, 0.637, 0.637, 0.637, 0.638, 0.638, 0.637, 0.637, 0.637, 0.637, 0.637, 0.637, 0.637, 0.637, 0.637, 0.637, 0.637, 0.637, 0.636, 0.636, 0.637, 0.637, 0.637, 0.637, 0.637, 0.637, 0.637, 0.637, 0.637, 0.637, 0.638, 0.638, 0.638, 0.638, 0.638, 0.638, 0.638, 0.638, 0.638, 0.639, 0.641, 0.641, 0.641, 0.641, 0.641, 0.641, 0.641, 0.641, 0.641, 0.641, 0.641, 0.641, 0.641, 0.641, 0.641, 0.641, 0.641, 0.641, 0.641, 0.641, 0.641, 0.641, 0.641, 0.641, 0.641, 0.641, 0.641, 0.641, 0.641, 0.641, 0.642, 0.642, 0.642, 0.642, 0.642, 0.642, 0.642, 0.643, 0.643, 0.643, 0.643, 0.643, 0.643, 0.643, 0.643, 0.644, 0.644, 0.644, 0.644, 0.644, 0.644, 0.644, 0.644, 0.644, 0.644, 0.644, 0.644, 0.644, 0.644, 0.645, 0.645, 0.645, 0.645, 0.645, 0.645, 0.644, 0.644, 0.644, 0.644, 0.644, 0.644, 0.644, 0.644, 0.644, 0.644, 0.644, 0.644, 0.644, 0.644, 0.645, 0.645, 0.645, 0.645, 0.645, 0.645, 0.645, 0.645, 0.645, 0.645, 0.645, 0.645, 0.646, 0.646, 0.646, 0.646, 0.646, 0.646, 0.644, 0.644, 0.644, 0.644, 0.644, 0.644, 0.644, 0.644, 0.644, 0.644, 0.644, 0.644, 0.644, 0.644, 0.644, 0.644, 0.644, 0.644, 0.644, 0.644, 0.644, 0.644, 0.644, 0.644, 0.644, 0.644, 0.644, 0.644, 0.644, 0.644, 0.645, 0.645, 0.645, 0.645, 0.645, 0.645, 0.645, 0.645, 0.645, 0.645, 0.645, 0.644, 0.644, 0.644, 0.644, 0.643, 0.643, 0.643, 0.643, 0.643, 0.643, 0.643, 0.643, 0.644, 0.644, 0.644, 0.644, 0.644, 0.644, 0.644, 0.643, 0.644, 0.644, 0.644, 0.644, 0.644, 0.644, 0.644, 0.644, 0.644, 0.644, 0.644, 0.644, 0.644, 0.644, 0.644, 0.644, 0.644, 0.644, 0.644, 0.644, 0.644, 0.644, 0.644, 0.644, 0.644, 0.644, 0.644, 0.644, 0.644, 0.644, 0.644, 0.644, 0.644, 0.644, 0.644, 0.644, 0.644, 0.644, 0.644, 0.644, 0.644, 0.644, 0.644, 0.645, 0.644, 0.644, 0.644, 0.644, 0.644, 0.644, 0.644, 0.644, 0.644, 0.645, 0.645, 0.646, 0.646, 0.647, 0.647, 0.646, 0.646, 0.647, 0.647, 0.647, 0.647, 0.647, 0.647, 0.648, 0.648, 0.648, 0.648, 0.647, 0.646, 0.646, 0.646, 0.646, 0.646, 0.646, 0.646, 0.646, 0.646, 0.646, 0.646, 0.646, 0.646, 0.646, 0.646, 0.646, 0.646, 0.646, 0.646, 0.646, 0.646, 0.646, 0.646, 0.646, 0.646, 0.646, 0.646, 0.646, 0.646, 0.646, 0.646, 0.646, 0.646, 0.646, 0.646, 0.646, 0.646, 0.646, 0.646, 0.646, 0.646, 0.646, 0.647, 0.647, 0.647, 0.648, 0.648, 0.648, 0.648, 0.648, 0.648, 0.648, 0.648, 0.648, 0.648, 0.65, 0.65, 0.65, 0.649, 0.649, 0.649, 0.649, 0.649, 0.649, 0.649, 0.649, 0.649, 0.649, 0.649, 0.649, 0.649, 0.649, 0.649, 0.649, 0.649, 0.649, 0.649, 0.649, 0.649, 0.649, 0.649, 0.649, 0.649, 0.649, 0.649, 0.649, 0.649, 0.649, 0.649, 0.649, 0.649, 0.649, 0.649, 0.649, 0.649, 0.649, 0.649, 0.649, 0.649, 0.649, 0.649, 0.649, 0.649, 0.649, 0.649, 0.649, 0.649, 0.648, 0.648, 0.647, 0.647, 0.647, 0.647, 0.648, 0.648, 0.648, 0.648, 0.648, 0.648, 0.648, 0.648, 0.648, 0.648, 0.648, 0.649, 0.649, 0.649, 0.649, 0.649, 0.649, 0.649, 0.649, 0.649, 0.649, 0.649, 0.649, 0.649, 0.649, 0.648, 0.648, 0.648, 0.648, 0.648, 0.648, 0.648, 0.649, 0.649, 0.649, 0.649, 0.649, 0.649, 0.649, 0.649, 0.649, 0.649, 0.649, 0.649, 0.649, 0.649, 0.649, 0.649, 0.649, 0.649, 0.65, 0.65, 0.65, 0.65, 0.65, 0.651, 0.651, 0.651, 0.651, 0.651, 0.651, 0.652, 0.651, 0.651, 0.651, 0.651, 0.651, 0.651, 0.652, 0.652, 0.652, 0.652, 0.652, 0.652, 0.652, 0.652, 0.652, 0.654, 0.654, 0.654, 0.654, 0.654, 0.654, 0.655, 0.655, 0.655, 0.655, 0.655, 0.654, 0.655, 0.655, 0.655, 0.655, 0.655, 0.655, 0.656, 0.656, 0.656, 0.656, 0.656, 0.656, 0.656, 0.656, 0.656, 0.656, 0.656, 0.656, 0.656, 0.656, 0.656, 0.657, 0.656, 0.656, 0.656, 0.656, 0.655, 0.655, 0.655, 0.656, 0.656, 0.656, 0.656, 0.656, 0.656, 0.656, 0.656, 0.656, 0.656, 0.657, 0.657, 0.657, 0.657, 0.657, 0.657, 0.658, 0.658, 0.658, 0.658, 0.658, 0.658, 0.658, 0.658, 0.658, 0.658, 0.658, 0.658, 0.658, 0.658, 0.658, 0.659, 0.658, 0.658, 0.658, 0.658, 0.658, 0.658, 0.658, 0.658, 0.658, 0.659, 0.66, 0.66, 0.66, 0.66, 0.66, 0.66, 0.66, 0.66, 0.66, 0.66, 0.661, 0.659, 0.659, 0.659, 0.659, 0.659, 0.659, 0.659, 0.659, 0.659, 0.659, 0.659, 0.659, 0.659, 0.659, 0.659, 0.659, 0.659, 0.659, 0.659, 0.659, 0.659, 0.659, 0.66, 0.66, 0.66, 0.66, 0.66, 0.66, 0.66, 0.66, 0.66, 0.66, 0.66, 0.66, 0.66, 0.66, 0.66, 0.66, 0.66, 0.66, 0.66, 0.66, 0.66, 0.66, 0.66, 0.66, 0.66, 0.661, 0.661, 0.66, 0.66, 0.66, 0.66, 0.66, 0.66, 0.66, 0.66, 0.66, 0.661, 0.661, 0.661, 0.661, 0.661, 0.661, 0.661, 0.661, 0.66, 0.66, 0.66, 0.66, 0.66, 0.659, 0.659, 0.659, 0.659, 0.659, 0.659, 0.659, 0.659, 0.658, 0.658, 0.659, 0.659, 0.659, 0.659, 0.659, 0.659, 0.659, 0.659, 0.658, 0.658, 0.658, 0.658, 0.658, 0.657, 0.657, 0.657, 0.657, 0.657, 0.655, 0.655, 0.655, 0.655, 0.655, 0.655, 0.655, 0.655, 0.655, 0.655, 0.655, 0.655, 0.654, 0.654, 0.654, 0.654, 0.654, 0.654, 0.654, 0.654, 0.654, 0.654, 0.654, 0.654, 0.654, 0.654, 0.654, 0.654, 0.654, 0.654, 0.654, 0.654, 0.655, 0.655, 0.655, 0.655, 0.655, 0.655, 0.655, 0.656, 0.656, 0.656, 0.656, 0.656, 0.655, 0.655, 0.655, 0.655, 0.655, 0.656, 0.656, 0.656, 0.656, 0.656, 0.656, 0.656, 0.656, 0.656, 0.656, 0.656, 0.656, 0.657, 0.657, 0.657, 0.658, 0.658, 0.658, 0.658, 0.658, 0.658, 0.659, 0.659, 0.659, 0.659, 0.659, 0.659, 0.66, 0.66, 0.66, 0.66, 0.66, 0.66, 0.66, 0.66, 0.66, 0.66, 0.66, 0.66, 0.66, 0.66, 0.66, 0.66, 0.66, 0.66, 0.661, 0.661, 0.66, 0.661, 0.661, 0.661, 0.661, 0.661, 0.661, 0.661, 0.661, 0.661, 0.661, 0.661, 0.661, 0.661, 0.661, 0.661, 0.66, 0.66, 0.66, 0.66, 0.66, 0.66, 0.66, 0.66, 0.66, 0.66, 0.66, 0.66, 0.66, 0.659, 0.659, 0.659, 0.659, 0.659, 0.659, 0.659, 0.659, 0.659, 0.659, 0.659, 0.658, 0.658, 0.658, 0.658, 0.658, 0.658, 0.658, 0.658, 0.658, 0.658, 0.658, 0.658, 0.659, 0.659, 0.659, 0.659, 0.659, 0.659, 0.659, 0.659, 0.659, 0.659, 0.659, 0.659, 0.659, 0.659, 0.659, 0.659, 0.659, 0.659, 0.659, 0.659, 0.659, 0.659, 0.659, 0.659, 0.659, 0.659, 0.659, 0.659, 0.659, 0.659, 0.659, 0.659, 0.659, 0.659, 0.658, 0.658, 0.658, 0.658, 0.658, 0.658, 0.658, 0.658, 0.658, 0.658, 0.658, 0.658, 0.658, 0.658, 0.658, 0.658, 0.658, 0.658, 0.658, 0.658, 0.658, 0.658, 0.658, 0.658, 0.658, 0.658, 0.659, 0.659, 0.659, 0.659, 0.659, 0.659, 0.658, 0.658, 0.658, 0.658, 0.658, 0.658, 0.658, 0.657, 0.657, 0.658, 0.658, 0.658, 0.658, 0.658, 0.658, 0.658, 0.658, 0.658, 0.658, 0.658, 0.658, 0.658, 0.658, 0.658, 0.658, 0.658, 0.658, 0.658, 0.658, 0.658, 0.658, 0.658, 0.658, 0.658, 0.658, 0.658, 0.658, 0.658, 0.659, 0.658, 0.658, 0.658, 0.658, 0.658, 0.658, 0.658, 0.659, 0.659, 0.659, 0.659, 0.658, 0.658, 0.658, 0.658, 0.658, 0.658, 0.658, 0.658, 0.658, 0.659, 0.659, 0.66, 0.66, 0.66, 0.66, 0.66, 0.661, 0.661, 0.661, 0.661, 0.661, 0.661, 0.661, 0.661, 0.661, 0.661, 0.661, 0.661, 0.661, 0.661, 0.661, 0.661, 0.661, 0.661, 0.661, 0.661, 0.661, 0.661, 0.661, 0.66, 0.66, 0.66, 0.66, 0.66, 0.659, 0.659, 0.658, 0.658, 0.658, 0.658, 0.658, 0.658, 0.659, 0.659, 0.659, 0.659, 0.659, 0.66, 0.66, 0.66, 0.66, 0.66, 0.66, 0.66, 0.66, 0.66, 0.659, 0.659, 0.659, 0.659, 0.659, 0.659, 0.659, 0.659, 0.659, 0.659, 0.659, 0.659, 0.659, 0.659, 0.659, 0.659, 0.659, 0.659, 0.659, 0.659, 0.659, 0.659, 0.659, 0.659, 0.659, 0.659, 0.659, 0.659, 0.659, 0.659, 0.659, 0.659, 0.659, 0.659, 0.659, 0.659, 0.659, 0.659, 0.659, 0.659, 0.659, 0.659, 0.658, 0.658, 0.658, 0.658, 0.658, 0.658, 0.658, 0.658, 0.657, 0.657, 0.657, 0.658, 0.658, 0.658, 0.658, 0.658, 0.658, 0.658, 0.658, 0.658, 0.658, 0.658, 0.657, 0.657, 0.657, 0.657, 0.657, 0.657, 0.657, 0.657, 0.657, 0.657, 0.657, 0.657, 0.657, 0.657, 0.657, 0.657, 0.657, 0.657, 0.657, 0.657, 0.657, 0.657, 0.657, 0.657, 0.658, 0.658, 0.658, 0.658, 0.658, 0.658, 0.657, 0.657, 0.657, 0.657, 0.657, 0.657, 0.657, 0.657, 0.657, 0.658, 0.659, 0.66, 0.66, 0.66, 0.66, 0.66, 0.66, 0.66, 0.66, 0.66, 0.66, 0.66, 0.66, 0.66, 0.66, 0.66, 0.66, 0.66, 0.661, 0.661, 0.661, 0.66, 0.66, 0.66, 0.66, 0.66, 0.66, 0.66, 0.66, 0.66, 0.66, 0.66, 0.66, 0.661, 0.661, 0.661, 0.661, 0.661, 0.661, 0.661, 0.661, 0.661, 0.661, 0.661, 0.661, 0.662, 0.662, 0.662, 0.662, 0.662, 0.662, 0.663, 0.663, 0.663, 0.663, 0.663, 0.663, 0.662, 0.662, 0.663, 0.663, 0.663, 0.663, 0.663, 0.663, 0.663, 0.663, 0.663, 0.663, 0.663, 0.663, 0.663, 0.663, 0.663, 0.663, 0.663, 0.663, 0.663, 0.663, 0.663, 0.664, 0.664, 0.664, 0.664, 0.664, 0.665, 0.665, 0.665, 0.665, 0.665, 0.665, 0.665, 0.665, 0.665, 0.665, 0.664, 0.664, 0.664, 0.664, 0.664, 0.664, 0.664, 0.664, 0.664, 0.664, 0.664, 0.664, 0.665, 0.664, 0.664, 0.664, 0.664, 0.665, 0.665, 0.665, 0.666, 0.666, 0.666, 0.666, 0.666, 0.666, 0.666, 0.666, 0.666, 0.666, 0.666, 0.665, 0.665, 0.665, 0.665, 0.665, 0.665, 0.665, 0.665, 0.666, 0.666, 0.666, 0.666, 0.666, 0.666, 0.666, 0.666, 0.666, 0.667, 0.667, 0.667, 0.667, 0.667, 0.667, 0.667, 0.667, 0.668, 0.668, 0.668, 0.668, 0.668, 0.668, 0.668, 0.668, 0.667, 0.667, 0.667, 0.667, 0.667, 0.667, 0.667, 0.667, 0.667, 0.667, 0.667, 0.667, 0.667, 0.667, 0.667, 0.667, 0.667, 0.667, 0.667, 0.667, 0.667, 0.667, 0.667, 0.667, 0.667, 0.667, 0.667, 0.667, 0.667, 0.667, 0.667, 0.667, 0.667, 0.668, 0.668, 0.668, 0.668, 0.668, 0.668, 0.668, 0.668, 0.668, 0.668, 0.668, 0.668, 0.669, 0.67, 0.67, 0.67, 0.67, 0.67, 0.67, 0.67, 0.67, 0.67, 0.67, 0.67, 0.67, 0.67, 0.67, 0.671, 0.672, 0.672, 0.672, 0.672, 0.672, 0.672, 0.672, 0.672, 0.672, 0.672, 0.672, 0.672, 0.672, 0.672, 0.672, 0.672, 0.672, 0.672, 0.672, 0.672, 0.672, 0.672, 0.672, 0.672, 0.672, 0.672, 0.672, 0.672, 0.672, 0.672, 0.672, 0.672, 0.673, 0.674, 0.674, 0.674, 0.674, 0.674, 0.674, 0.674, 0.674, 0.674, 0.674, 0.674, 0.674, 0.674, 0.674, 0.674, 0.674, 0.674, 0.674, 0.674, 0.674, 0.674, 0.674, 0.674, 0.674, 0.675, 0.675, 0.676, 0.676, 0.676, 0.676, 0.677, 0.677, 0.677, 0.677, 0.677, 0.677, 0.678, 0.678, 0.678, 0.678, 0.678, 0.678, 0.678, 0.678, 0.678, 0.678, 0.678, 0.678, 0.678, 0.678, 0.678, 0.677, 0.676, 0.676, 0.676, 0.676, 0.676, 0.676, 0.676, 0.676, 0.677, 0.677, 0.677, 0.677, 0.677, 0.678, 0.678, 0.678, 0.678, 0.678, 0.678, 0.678, 0.678, 0.678, 0.678, 0.678, 0.678, 0.678, 0.678, 0.679, 0.679, 0.679, 0.679, 0.679, 0.679, 0.679, 0.679, 0.679, 0.679, 0.68, 0.68, 0.681, 0.682, 0.682, 0.682, 0.682, 0.682, 0.682, 0.683, 0.682, 0.682, 0.683, 0.683, 0.684, 0.684, 0.684, 0.684, 0.684, 0.684, 0.684, 0.684, 0.683, 0.682, 0.682, 0.682, 0.682, 0.682, 0.682, 0.682, 0.682, 0.682, 0.682, 0.682, 0.682, 0.683, 0.683, 0.683, 0.683, 0.682, 0.682, 0.682, 0.682, 0.682, 0.683, 0.683, 0.683, 0.683, 0.683, 0.683, 0.683, 0.683, 0.683, 0.683, 0.683, 0.683, 0.683, 0.683, 0.683, 0.683, 0.683, 0.683, 0.683, 0.683, 0.683, 0.683, 0.683, 0.683, 0.683, 0.683, 0.683, 0.683, 0.683, 0.683, 0.683, 0.683, 0.683, 0.683, 0.683, 0.683, 0.683, 0.683, 0.683, 0.683, 0.683, 0.683, 0.684, 0.684, 0.683, 0.683, 0.682, 0.682, 0.682, 0.682, 0.682, 0.682, 0.682, 0.682, 0.682, 0.682, 0.682, 0.682, 0.682, 0.682, 0.682, 0.682, 0.682, 0.683, 0.683, 0.683, 0.683, 0.683, 0.683, 0.683, 0.683, 0.683, 0.682, 0.682, 0.682, 0.682, 0.682, 0.682, 0.681, 0.681, 0.68, 0.68, 0.679, 0.679, 0.678, 0.678, 0.679, 0.679, 0.679, 0.679, 0.679, 0.679, 0.679, 0.679, 0.679, 0.679, 0.679, 0.68, 0.68, 0.68, 0.68, 0.68, 0.68, 0.68, 0.681, 0.681, 0.681, 0.681, 0.681, 0.681, 0.681, 0.681, 0.681, 0.681, 0.681, 0.681, 0.68, 0.68, 0.68, 0.68, 0.681, 0.681, 0.681, 0.681, 0.681, 0.681, 0.681, 0.681, 0.681, 0.681, 0.681, 0.681, 0.681, 0.68, 0.68, 0.68, 0.681, 0.681, 0.68, 0.68, 0.68, 0.68, 0.679, 0.678, 0.678, 0.678, 0.678, 0.678, 0.678, 0.678, 0.678, 0.678, 0.678, 0.678, 0.678, 0.678, 0.678, 0.678, 0.678, 0.678, 0.678, 0.678, 0.678, 0.678, 0.678, 0.678, 0.678, 0.678, 0.679, 0.679, 0.679, 0.679, 0.679, 0.679, 0.679, 0.679, 0.679, 0.679, 0.679, 0.679, 0.679, 0.679, 0.68, 0.68, 0.68, 0.68, 0.68, 0.68, 0.679, 0.679, 0.679, 0.679, 0.679, 0.679, 0.679, 0.679, 0.679, 0.679, 0.679, 0.679, 0.679, 0.679, 0.679, 0.679, 0.679, 0.679, 0.679, 0.679, 0.679, 0.679, 0.679, 0.679, 0.679, 0.679, 0.679, 0.679, 0.679, 0.679, 0.679, 0.679, 0.679, 0.679, 0.679, 0.679, 0.679, 0.679, 0.679, 0.679, 0.68, 0.68, 0.68, 0.68, 0.68, 0.68, 0.68, 0.681, 0.681, 0.681, 0.681, 0.681, 0.681, 0.681, 0.681, 0.681, 0.681, 0.681, 0.681, 0.681, 0.681, 0.681, 0.681, 0.681, 0.681, 0.681, 0.681, 0.681, 0.681, 0.681, 0.682, 0.683, 0.683, 0.683, 0.683, 0.683, 0.682, 0.682, 0.682, 0.682, 0.682, 0.682, 0.683, 0.683, 0.683, 0.683, 0.683, 0.683, 0.683, 0.683, 0.683, 0.683, 0.683, 0.683, 0.683, 0.683, 0.684, 0.684, 0.684, 0.684, 0.684, 0.684, 0.684, 0.684, 0.684, 0.685, 0.685, 0.684, 0.684, 0.683, 0.683, 0.683, 0.683, 0.683, 0.683, 0.683, 0.683, 0.684, 0.684, 0.684, 0.684, 0.684, 0.684, 0.684, 0.684, 0.684, 0.684, 0.684, 0.684, 0.684, 0.684, 0.684, 0.684, 0.684, 0.684, 0.684, 0.684, 0.684, 0.684, 0.684, 0.684, 0.684, 0.684, 0.684, 0.684, 0.685, 0.685, 0.685, 0.685, 0.685, 0.685, 0.685, 0.685, 0.685, 0.685, 0.685, 0.685, 0.685, 0.685, 0.685, 0.685, 0.685, 0.685, 0.685, 0.686, 0.686, 0.686, 0.686, 0.685, 0.686, 0.686, 0.686, 0.686, 0.685, 0.685, 0.685, 0.684, 0.684, 0.683, 0.683, 0.685, 0.685, 0.685, 0.685, 0.685, 0.685, 0.685, 0.686, 0.686, 0.686, 0.685, 0.685, 0.685, 0.685, 0.685, 0.686, 0.686, 0.686, 0.686, 0.686, 0.686, 0.686, 0.686, 0.686, 0.686, 0.686, 0.686, 0.686, 0.686, 0.686, 0.686, 0.686, 0.686, 0.686, 0.686, 0.686, 0.686, 0.686, 0.686, 0.686, 0.686, 0.686, 0.686, 0.686, 0.686, 0.686, 0.686, 0.686, 0.686, 0.686, 0.686, 0.686, 0.686, 0.686, 0.686, 0.686, 0.686, 0.686, 0.686, 0.686, 0.687, 0.687, 0.687, 0.687, 0.687, 0.687, 0.687, 0.687, 0.687, 0.687, 0.687, 0.687, 0.687, 0.687, 0.687, 0.687, 0.687, 0.687, 0.687, 0.687, 0.687, 0.687, 0.687, 0.687, 0.688, 0.688, 0.688, 0.688, 0.688, 0.688, 0.688, 0.688, 0.688, 0.688, 0.688, 0.688, 0.688, 0.688, 0.688, 0.688, 0.688, 0.688, 0.688, 0.688, 0.688, 0.688, 0.688, 0.688, 0.688, 0.688, 0.688, 0.688, 0.688, 0.688, 0.688, 0.688, 0.688, 0.688, 0.688, 0.688, 0.688, 0.688, 0.688, 0.688, 0.688, 0.688, 0.688, 0.689, 0.689, 0.689, 0.689, 0.689, 0.689, 0.689, 0.689, 0.689, 0.689, 0.689, 0.689, 0.689, 0.689, 0.689, 0.689, 0.689, 0.689, 0.689, 0.689, 0.689, 0.689, 0.689, 0.689, 0.689, 0.689, 0.689, 0.689, 0.689, 0.688, 0.688, 0.688, 0.688, 0.688, 0.688, 0.688, 0.688, 0.688, 0.688, 0.688, 0.688, 0.688, 0.688, 0.688, 0.688, 0.689, 0.69, 0.69, 0.691, 0.691, 0.691, 0.691, 0.691, 0.691, 0.691, 0.692, 0.692, 0.693, 0.693, 0.693, 0.693, 0.693, 0.693, 0.693, 0.693, 0.693, 0.693, 0.693, 0.693, 0.693, 0.693, 0.693, 0.693, 0.693, 0.693, 0.693, 0.693, 0.693, 0.693, 0.693, 0.693, 0.693, 0.693, 0.693, 0.693, 0.693, 0.693, 0.692, 0.692, 0.692, 0.692, 0.692, 0.692, 0.692, 0.693, 0.693, 0.693, 0.693, 0.693, 0.693, 0.694, 0.692, 0.692, 0.692, 0.691, 0.691, 0.691, 0.691, 0.691, 0.691, 0.691, 0.691, 0.691, 0.691, 0.691, 0.691, 0.691, 0.691, 0.691, 0.691, 0.691, 0.691, 0.691, 0.691, 0.691, 0.691, 0.691, 0.691, 0.691, 0.691, 0.691, 0.691, 0.691, 0.691, 0.691, 0.691, 0.691, 0.691, 0.691, 0.691, 0.691, 0.691, 0.691, 0.691, 0.691, 0.691, 0.691, 0.691, 0.691, 0.691, 0.691, 0.691, 0.691, 0.692, 0.692, 0.692, 0.692, 0.692, 0.692, 0.692, 0.692, 0.692, 0.692, 0.692, 0.692, 0.692, 0.692, 0.692, 0.692, 0.692, 0.692, 0.692, 0.692, 0.692, 0.692, 0.692, 0.692, 0.692, 0.692, 0.692, 0.692, 0.692, 0.692, 0.692, 0.692, 0.692, 0.692, 0.692, 0.692, 0.692, 0.692, 0.692, 0.692, 0.692, 0.692, 0.692, 0.692, 0.692, 0.692, 0.691, 0.691, 0.691, 0.691, 0.691, 0.691, 0.691, 0.691, 0.691, 0.691, 0.691, 0.691, 0.691, 0.692, 0.692, 0.692, 0.692, 0.692, 0.692, 0.692, 0.692, 0.691, 0.691, 0.691, 0.691, 0.691, 0.691, 0.691, 0.691, 0.691, 0.691, 0.692, 0.692, 0.692, 0.692, 0.692, 0.692, 0.691, 0.691, 0.691, 0.691, 0.691, 0.691, 0.691, 0.691, 0.691, 0.691, 0.691, 0.691, 0.691, 0.692, 0.692, 0.692, 0.692, 0.692, 0.692, 0.692, 0.692, 0.692, 0.692, 0.691, 0.691, 0.691, 0.691, 0.691, 0.691, 0.692, 0.692, 0.692, 0.693, 0.693, 0.693, 0.693, 0.693, 0.693, 0.693, 0.693, 0.693, 0.692, 0.692, 0.693, 0.693, 0.693, 0.693, 0.693, 0.693, 0.693, 0.693, 0.693, 0.695, 0.694, 0.694, 0.694, 0.694, 0.694, 0.694, 0.694, 0.694, 0.694, 0.694, 0.694, 0.694, 0.693, 0.693, 0.693, 0.693, 0.693, 0.693, 0.693, 0.693, 0.693, 0.693, 0.693, 0.693, 0.693, 0.693, 0.693, 0.693, 0.693, 0.692, 0.692, 0.692, 0.692, 0.692, 0.692, 0.692, 0.692, 0.692, 0.692, 0.693, 0.693, 0.693, 0.693, 0.694, 0.694, 0.694, 0.694, 0.694, 0.694, 0.694, 0.694, 0.694, 0.694, 0.694, 0.694, 0.694, 0.694, 0.694, 0.694, 0.694, 0.694, 0.695, 0.696, 0.696, 0.696, 0.696, 0.697, 0.697, 0.697, 0.697, 0.697, 0.697, 0.697, 0.697, 0.697, 0.697, 0.697, 0.697, 0.697, 0.697, 0.697, 0.697, 0.697, 0.697, 0.697, 0.697, 0.697, 0.697, 0.697, 0.697, 0.697, 0.697, 0.697, 0.697, 0.697, 0.697, 0.696, 0.696, 0.696, 0.696, 0.696, 0.696, 0.696, 0.697, 0.697, 0.697, 0.697, 0.697, 0.697, 0.697, 0.697, 0.697, 0.697, 0.697, 0.697, 0.697, 0.697, 0.697, 0.697, 0.697, 0.697, 0.697, 0.697, 0.697, 0.697, 0.697, 0.697, 0.696, 0.696, 0.697, 0.697, 0.697, 0.697, 0.697, 0.697, 0.697, 0.697, 0.697, 0.697, 0.697, 0.697, 0.697, 0.697, 0.697, 0.697, 0.697, 0.697, 0.697, 0.697, 0.697, 0.697, 0.697, 0.697, 0.697, 0.697, 0.697, 0.697, 0.697, 0.697, 0.697, 0.697, 0.697, 0.697, 0.697, 0.697, 0.697, 0.697, 0.697, 0.697, 0.697, 0.697, 0.698, 0.699, 0.699, 0.699, 0.699, 0.699, 0.7, 0.7, 0.7, 0.7, 0.7, 0.7, 0.7, 0.701, 0.701, 0.701, 0.701, 0.701, 0.702, 0.702, 0.702, 0.702, 0.702, 0.702, 0.702, 0.702, 0.701, 0.701, 0.701, 0.701, 0.701, 0.701, 0.701, 0.701, 0.701, 0.701, 0.701, 0.701, 0.701, 0.701, 0.701, 0.701, 0.701, 0.702, 0.702, 0.702, 0.702, 0.702, 0.702, 0.702, 0.702, 0.702, 0.702, 0.702, 0.702, 0.702, 0.702, 0.702, 0.702, 0.702, 0.702, 0.702, 0.702, 0.702, 0.702, 0.702, 0.702, 0.702, 0.702, 0.702, 0.702, 0.702, 0.702, 0.702, 0.702, 0.702, 0.702, 0.702, 0.702, 0.702, 0.703, 0.703, 0.703, 0.703, 0.703, 0.703, 0.702, 0.703, 0.703, 0.703, 0.703, 0.703, 0.703, 0.703, 0.703, 0.702, 0.702, 0.702, 0.702, 0.702, 0.702, 0.702, 0.704, 0.704, 0.704, 0.704, 0.704, 0.704, 0.704, 0.704, 0.704, 0.704, 0.704, 0.704, 0.704, 0.704, 0.704, 0.704, 0.704, 0.703, 0.703, 0.703, 0.703, 0.703, 0.703, 0.703, 0.703, 0.703, 0.703, 0.703, 0.703, 0.703, 0.703, 0.703, 0.703, 0.703, 0.703, 0.703, 0.704, 0.704, 0.704, 0.703, 0.703, 0.703, 0.703, 0.704, 0.704, 0.705, 0.705, 0.705, 0.705, 0.704, 0.704, 0.704, 0.703, 0.703, 0.703, 0.703, 0.703, 0.703, 0.703, 0.703, 0.703, 0.703, 0.703, 0.703, 0.703, 0.703, 0.703, 0.703, 0.703, 0.703, 0.703, 0.702, 0.702, 0.702, 0.702, 0.701, 0.701, 0.701, 0.701, 0.701, 0.7, 0.7, 0.7, 0.7, 0.7, 0.7, 0.7, 0.7, 0.7, 0.7, 0.7, 0.7, 0.7, 0.7, 0.7, 0.7, 0.7, 0.701, 0.701, 0.701, 0.701, 0.701, 0.701, 0.702, 0.702, 0.702, 0.701, 0.701, 0.701, 0.701, 0.7, 0.7, 0.699, 0.699, 0.699, 0.699, 0.699, 0.699, 0.699, 0.699, 0.699, 0.699, 0.699, 0.699, 0.699, 0.699, 0.698, 0.698, 0.697, 0.697, 0.697, 0.697, 0.697, 0.697, 0.697, 0.697, 0.697, 0.697, 0.697, 0.697, 0.698, 0.699, 0.699, 0.699, 0.699, 0.699, 0.699, 0.699, 0.699, 0.699, 0.699, 0.699, 0.699, 0.699, 0.699, 0.7, 0.7, 0.7, 0.7, 0.7, 0.7, 0.7, 0.7, 0.7, 0.7, 0.7, 0.7, 0.7, 0.7, 0.7, 0.7, 0.7, 0.7, 0.7, 0.7, 0.7, 0.7, 0.7, 0.7, 0.7, 0.7, 0.7, 0.7, 0.7, 0.7, 0.7, 0.7, 0.7, 0.7, 0.7, 0.7, 0.7, 0.7, 0.701, 0.701, 0.701, 0.701, 0.701, 0.701, 0.701, 0.701, 0.701, 0.701, 0.701, 0.701, 0.701, 0.701, 0.702, 0.702, 0.702, 0.702, 0.702, 0.702, 0.702, 0.704, 0.704, 0.704, 0.705, 0.705, 0.705, 0.705, 0.704, 0.704, 0.704, 0.704, 0.705, 0.705, 0.704, 0.704, 0.704, 0.704, 0.704, 0.704, 0.704, 0.704, 0.704, 0.704, 0.704, 0.704, 0.704, 0.705, 0.705, 0.705, 0.704, 0.704, 0.704, 0.704, 0.704, 0.704, 0.704, 0.704, 0.703, 0.703, 0.703, 0.703, 0.703, 0.703, 0.703, 0.703, 0.704, 0.704, 0.705, 0.705, 0.705, 0.705, 0.705, 0.705, 0.705, 0.705, 0.705, 0.705, 0.705, 0.705, 0.705, 0.705, 0.705, 0.705, 0.705, 0.705, 0.705, 0.705, 0.705], [0.0, 0.0, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.002, 0.003, 0.003, 0.003, 0.003, 0.003, 0.003, 0.004, 0.004, 0.004, 0.005, 0.005, 0.005, 0.005, 0.005, 0.006, 0.006, 0.006, 0.006, 0.007, 0.007, 0.007, 0.008, 0.009, 0.009, 0.009, 0.009, 0.01, 0.01, 0.01, 0.01, 0.011, 0.011, 0.011, 0.012, 0.012, 0.012, 0.013, 0.013, 0.013, 0.014, 0.014, 0.014, 0.015, 0.015, 0.015, 0.015, 0.016, 0.016, 0.017, 0.017, 0.017, 0.017, 0.017, 0.017, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.018, 0.019, 0.02, 0.02, 0.02, 0.02, 0.02, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.021, 0.022, 0.022, 0.022, 0.022, 0.022, 0.023, 0.023, 0.023, 0.023, 0.025, 0.025, 0.025, 0.025, 0.025, 0.025, 0.026, 0.026, 0.027, 0.027, 0.028, 0.028, 0.028, 0.028, 0.028, 0.029, 0.029, 0.029, 0.03, 0.031, 0.031, 0.031, 0.032, 0.032, 0.032, 0.033, 0.033, 0.034, 0.034, 0.034, 0.034, 0.035, 0.035, 0.036, 0.036, 0.036, 0.036, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.037, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.038, 0.039, 0.04, 0.04, 0.04, 0.04, 0.04, 0.04, 0.04, 0.04, 0.041, 0.041, 0.041, 0.041, 0.043, 0.043, 0.043, 0.043, 0.043, 0.044, 0.044, 0.044, 0.044, 0.045, 0.045, 0.045, 0.045, 0.045, 0.046, 0.046, 0.047, 0.047, 0.048, 0.048, 0.048, 0.048, 0.048, 0.048, 0.049, 0.049, 0.049, 0.05, 0.05, 0.05, 0.05, 0.05, 0.05, 0.051, 0.052, 0.052, 0.052, 0.053, 0.053, 0.053, 0.053, 0.054, 0.055, 0.055, 0.055, 0.055, 0.055, 0.056, 0.056, 0.056, 0.057, 0.057, 0.057, 0.057, 0.057, 0.057, 0.058, 0.059, 0.059, 0.059, 0.059, 0.059, 0.059, 0.059, 0.06, 0.06, 0.06, 0.06, 0.06, 0.061, 0.061, 0.061, 0.061, 0.061, 0.061, 0.061, 0.061, 0.061, 0.061, 0.062, 0.062, 0.062, 0.062, 0.062, 0.062, 0.063, 0.063, 0.063, 0.063, 0.063, 0.063, 0.063, 0.063, 0.063, 0.063, 0.063, 0.063, 0.063, 0.063, 0.063, 0.065, 0.065, 0.065, 0.065, 0.066, 0.066, 0.066, 0.066, 0.067, 0.068, 0.068, 0.069, 0.069, 0.069, 0.07, 0.071, 0.071, 0.071, 0.071, 0.072, 0.073, 0.073, 0.073, 0.073, 0.073, 0.074, 0.074, 0.074, 0.074, 0.076, 0.076, 0.076, 0.076, 0.076, 0.076, 0.076, 0.076, 0.076, 0.076, 0.076, 0.076, 0.077, 0.077, 0.077, 0.077, 0.077, 0.077, 0.077, 0.078, 0.078, 0.078, 0.078, 0.08, 0.08, 0.08, 0.08, 0.08, 0.08, 0.081, 0.081, 0.081, 0.082, 0.082, 0.082, 0.082, 0.082, 0.082, 0.082, 0.082, 0.082, 0.082, 0.082, 0.083, 0.083, 0.083, 0.083, 0.084, 0.085, 0.085, 0.085, 0.085, 0.085, 0.085, 0.085, 0.086, 0.086, 0.087, 0.087, 0.087, 0.087, 0.088, 0.088, 0.088, 0.089, 0.089, 0.089, 0.089, 0.089, 0.09, 0.09, 0.09, 0.09, 0.091, 0.091, 0.091, 0.091, 0.092, 0.092, 0.093, 0.093, 0.093, 0.093, 0.094, 0.095, 0.095, 0.095, 0.096, 0.096, 0.096, 0.096, 0.096, 0.096, 0.096, 0.096, 0.096, 0.098, 0.098, 0.099, 0.099, 0.1, 0.102, 0.103, 0.103, 0.104, 0.104, 0.104, 0.104, 0.104, 0.104, 0.104, 0.104, 0.104, 0.104, 0.104, 0.104, 0.104, 0.104, 0.104, 0.104, 0.104, 0.104, 0.104, 0.104, 0.104, 0.104, 0.104, 0.104, 0.104, 0.104, 0.105, 0.106, 0.106, 0.106, 0.106, 0.106, 0.106, 0.106, 0.106, 0.106, 0.106, 0.106, 0.106, 0.106, 0.106, 0.107, 0.107, 0.107, 0.107, 0.107, 0.107, 0.107, 0.107, 0.107, 0.107, 0.107, 0.107, 0.109, 0.109, 0.109, 0.109, 0.109, 0.109, 0.109, 0.109, 0.111, 0.111, 0.112, 0.112, 0.112, 0.112, 0.112, 0.112, 0.113, 0.113, 0.113, 0.113, 0.114, 0.114, 0.114, 0.114, 0.114, 0.115, 0.115, 0.115, 0.115, 0.115, 0.116, 0.116, 0.116, 0.116, 0.116, 0.116, 0.116, 0.116, 0.116, 0.117, 0.117, 0.117, 0.117, 0.117, 0.117, 0.117, 0.117, 0.117, 0.117, 0.117, 0.117, 0.118, 0.118, 0.119, 0.119, 0.119, 0.12, 0.12, 0.12, 0.12, 0.121, 0.121, 0.122, 0.122, 0.122, 0.122, 0.122, 0.122, 0.123, 0.123, 0.123, 0.123, 0.124, 0.124, 0.125, 0.125, 0.125, 0.126, 0.127, 0.127, 0.127, 0.127, 0.127, 0.127, 0.127, 0.127, 0.127, 0.127, 0.127, 0.127, 0.127, 0.127, 0.127, 0.127, 0.128, 0.129, 0.129, 0.131, 0.131, 0.131, 0.131, 0.131, 0.132, 0.133, 0.133, 0.133, 0.133, 0.133, 0.133, 0.133, 0.133, 0.133, 0.133, 0.133, 0.134, 0.134, 0.134, 0.134, 0.134, 0.134, 0.134, 0.134, 0.134, 0.135, 0.135, 0.135, 0.135, 0.135, 0.136, 0.136, 0.138, 0.138, 0.138, 0.138, 0.138, 0.138, 0.138, 0.139, 0.139, 0.14, 0.141, 0.141, 0.141, 0.141, 0.142, 0.142, 0.142, 0.142, 0.142, 0.144, 0.144, 0.144, 0.144, 0.144, 0.144, 0.145, 0.145, 0.145, 0.145, 0.145, 0.145, 0.145, 0.145, 0.146, 0.146, 0.146, 0.146, 0.146, 0.146, 0.146, 0.147, 0.147, 0.147, 0.147, 0.147, 0.147, 0.147, 0.148, 0.148, 0.148, 0.149, 0.149, 0.15, 0.151, 0.151, 0.151, 0.151, 0.151, 0.152, 0.152, 0.152, 0.152, 0.152, 0.152, 0.152, 0.152, 0.152, 0.152, 0.153, 0.153, 0.153, 0.153, 0.153, 0.153, 0.153, 0.153, 0.154, 0.154, 0.155, 0.155, 0.155, 0.155, 0.155, 0.155, 0.155, 0.155, 0.155, 0.156, 0.156, 0.156, 0.157, 0.157, 0.157, 0.157, 0.157, 0.157, 0.157, 0.157, 0.157, 0.157, 0.157, 0.157, 0.157, 0.157, 0.157, 0.157, 0.157, 0.157, 0.157, 0.157, 0.157, 0.157, 0.157, 0.157, 0.157, 0.159, 0.16, 0.16, 0.16, 0.16, 0.16, 0.161, 0.161, 0.162, 0.162, 0.162, 0.162, 0.162, 0.162, 0.162, 0.162, 0.162, 0.162, 0.163, 0.164, 0.165, 0.165, 0.165, 0.166, 0.167, 0.167, 0.167, 0.167, 0.167, 0.167, 0.167, 0.167, 0.167, 0.167, 0.167, 0.168, 0.168, 0.168, 0.169, 0.169, 0.169, 0.169, 0.169, 0.17, 0.17, 0.17, 0.17, 0.17, 0.171, 0.171, 0.172, 0.172, 0.172, 0.172, 0.172, 0.173, 0.173, 0.173, 0.174, 0.174, 0.174, 0.174, 0.174, 0.174, 0.174, 0.174, 0.174, 0.174, 0.174, 0.174, 0.174, 0.175, 0.175, 0.175, 0.175, 0.175, 0.175, 0.175, 0.175, 0.175, 0.175, 0.175, 0.175, 0.175, 0.175, 0.175, 0.175, 0.176, 0.176, 0.176, 0.176, 0.176, 0.177, 0.177, 0.177, 0.177, 0.178, 0.178, 0.178, 0.178, 0.178, 0.178, 0.178, 0.178, 0.178, 0.178, 0.178, 0.179, 0.179, 0.179, 0.179, 0.18, 0.181, 0.181, 0.182, 0.182, 0.182, 0.182, 0.182, 0.182, 0.183, 0.184, 0.184, 0.184, 0.184, 0.184, 0.184, 0.184, 0.184, 0.184, 0.184, 0.184, 0.184, 0.184, 0.184, 0.184, 0.184, 0.184, 0.184, 0.184, 0.184, 0.184, 0.184, 0.184, 0.185, 0.185, 0.185, 0.186, 0.186, 0.186, 0.186, 0.186, 0.186, 0.187, 0.187, 0.187, 0.187, 0.187, 0.187, 0.187, 0.188, 0.188, 0.188, 0.188, 0.188, 0.189, 0.19, 0.191, 0.192, 0.192, 0.192, 0.192, 0.192, 0.192, 0.193, 0.193, 0.193, 0.193, 0.194, 0.194, 0.195, 0.195, 0.195, 0.195, 0.195, 0.195, 0.195, 0.195, 0.195, 0.195, 0.196, 0.196, 0.196, 0.197, 0.197, 0.197, 0.197, 0.197, 0.197, 0.197, 0.197, 0.197, 0.197, 0.197, 0.198, 0.198, 0.198, 0.198, 0.198, 0.199, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.2, 0.201, 0.203, 0.203, 0.203, 0.203, 0.204, 0.204, 0.204, 0.204, 0.204, 0.205, 0.205, 0.205, 0.205, 0.205, 0.205, 0.205, 0.206, 0.206, 0.206, 0.206, 0.206, 0.206, 0.206, 0.206, 0.206, 0.206, 0.206, 0.206, 0.206, 0.206, 0.206, 0.206, 0.206, 0.207, 0.207, 0.208, 0.208, 0.208, 0.208, 0.208, 0.208, 0.208, 0.208, 0.208, 0.208, 0.208, 0.208, 0.209, 0.209, 0.209, 0.209, 0.209, 0.209, 0.209, 0.21, 0.21, 0.211, 0.211, 0.211, 0.212, 0.212, 0.212, 0.212, 0.213, 0.214, 0.214, 0.214, 0.214, 0.214, 0.214, 0.214, 0.214, 0.214, 0.214, 0.214, 0.214, 0.214, 0.214, 0.215, 0.215, 0.215, 0.215, 0.215, 0.215, 0.216, 0.216, 0.216, 0.216, 0.216, 0.216, 0.216, 0.216, 0.216, 0.216, 0.216, 0.216, 0.217, 0.217, 0.217, 0.217, 0.217, 0.218, 0.219, 0.22, 0.22, 0.22, 0.22, 0.22, 0.22, 0.221, 0.221, 0.221, 0.221, 0.222, 0.222, 0.222, 0.222, 0.222, 0.222, 0.222, 0.222, 0.222, 0.223, 0.223, 0.223, 0.224, 0.225, 0.225, 0.225, 0.225, 0.225, 0.225, 0.225, 0.225, 0.225, 0.225, 0.226, 0.226, 0.226, 0.226, 0.226, 0.227, 0.227, 0.229, 0.229, 0.229, 0.229, 0.229, 0.229, 0.229, 0.229, 0.229, 0.229, 0.229, 0.229, 0.229, 0.229, 0.229, 0.23, 0.23, 0.23, 0.23, 0.23, 0.231, 0.231, 0.232, 0.232, 0.232, 0.233, 0.233, 0.233, 0.233, 0.233, 0.233, 0.233, 0.233, 0.234, 0.234, 0.234, 0.235, 0.235, 0.235, 0.235, 0.235, 0.235, 0.235, 0.235, 0.236, 0.236, 0.237, 0.237, 0.237, 0.237, 0.237, 0.237, 0.237, 0.237, 0.237, 0.237, 0.237, 0.237, 0.237, 0.237, 0.238, 0.238, 0.238, 0.238, 0.238, 0.238, 0.238, 0.238, 0.238, 0.239, 0.239, 0.239, 0.239, 0.24, 0.24, 0.24, 0.24, 0.24, 0.24, 0.24, 0.241, 0.241, 0.241, 0.241, 0.241, 0.241, 0.241, 0.241, 0.241, 0.241, 0.241, 0.241, 0.241, 0.241, 0.242, 0.242, 0.242, 0.242, 0.242, 0.242, 0.242, 0.242, 0.242, 0.243, 0.243, 0.243, 0.244, 0.244, 0.244, 0.244, 0.244, 0.244, 0.244, 0.244, 0.245, 0.245, 0.245, 0.245, 0.245, 0.245, 0.245, 0.246, 0.246, 0.246, 0.246, 0.246, 0.246, 0.247, 0.247, 0.247, 0.247, 0.248, 0.249, 0.249, 0.249, 0.249, 0.249, 0.249, 0.249, 0.249, 0.252, 0.252, 0.252, 0.252, 0.252, 0.252, 0.252, 0.252, 0.252, 0.252, 0.252, 0.252, 0.253, 0.253, 0.253, 0.254, 0.254, 0.255, 0.255, 0.255, 0.255, 0.255, 0.255, 0.256, 0.256, 0.256, 0.256, 0.256, 0.257, 0.258, 0.259, 0.259, 0.26, 0.26, 0.26, 0.26, 0.26, 0.26, 0.26, 0.26, 0.26, 0.26, 0.261, 0.261, 0.261, 0.261, 0.261, 0.261, 0.261, 0.261, 0.261, 0.261, 0.261, 0.262, 0.262, 0.263, 0.263, 0.265, 0.265, 0.265, 0.266, 0.266, 0.266, 0.266, 0.266, 0.266, 0.266, 0.266, 0.266, 0.266, 0.267, 0.268, 0.268, 0.268, 0.268, 0.268, 0.268, 0.269, 0.269, 0.269, 0.269, 0.269, 0.269, 0.269, 0.269, 0.269, 0.269, 0.269, 0.269, 0.269, 0.269, 0.271, 0.271, 0.271, 0.271, 0.271, 0.271, 0.271, 0.272, 0.272, 0.273, 0.273, 0.273, 0.273, 0.274, 0.275, 0.275, 0.275, 0.275, 0.275, 0.275, 0.275, 0.275, 0.275, 0.275, 0.275, 0.275, 0.275, 0.275, 0.275, 0.276, 0.276, 0.276, 0.276, 0.277, 0.277, 0.277, 0.277, 0.277, 0.278, 0.278, 0.279, 0.28, 0.28, 0.281, 0.281, 0.281, 0.281, 0.282, 0.283, 0.283, 0.283, 0.283, 0.283, 0.283, 0.283, 0.283, 0.283, 0.284, 0.284, 0.284, 0.284, 0.285, 0.285, 0.286, 0.286, 0.288, 0.288, 0.288, 0.288, 0.288, 0.29, 0.29, 0.291, 0.291, 0.291, 0.291, 0.291, 0.292, 0.292, 0.293, 0.293, 0.293, 0.293, 0.293, 0.294, 0.295, 0.295, 0.295, 0.295, 0.295, 0.295, 0.295, 0.295, 0.295, 0.295, 0.297, 0.297, 0.297, 0.298, 0.298, 0.299, 0.299, 0.299, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.3, 0.301, 0.301, 0.301, 0.301, 0.301, 0.301, 0.301, 0.301, 0.301, 0.301, 0.301, 0.301, 0.301, 0.301, 0.301, 0.302, 0.302, 0.303, 0.303, 0.303, 0.303, 0.303, 0.303, 0.303, 0.304, 0.304, 0.304, 0.304, 0.304, 0.304, 0.304, 0.304, 0.304, 0.305, 0.305, 0.305, 0.305, 0.305, 0.305, 0.305, 0.306, 0.307, 0.307, 0.307, 0.307, 0.307, 0.307, 0.307, 0.307, 0.307, 0.308, 0.308, 0.308, 0.308, 0.309, 0.309, 0.31, 0.311, 0.311, 0.311, 0.311, 0.311, 0.311, 0.312, 0.312, 0.312, 0.312, 0.313, 0.313, 0.313, 0.313, 0.314, 0.314, 0.314, 0.314, 0.314, 0.315, 0.315, 0.316, 0.316, 0.316, 0.316, 0.316, 0.317, 0.317, 0.318, 0.319, 0.319, 0.32, 0.32, 0.32, 0.32, 0.32, 0.32, 0.32, 0.322, 0.322, 0.322, 0.322, 0.323, 0.323, 0.323, 0.323, 0.323, 0.324, 0.324, 0.324, 0.324, 0.324, 0.324, 0.324, 0.324, 0.324, 0.325, 0.325, 0.325, 0.326, 0.326, 0.326, 0.326, 0.326, 0.326, 0.327, 0.328, 0.328, 0.328, 0.329, 0.329, 0.329, 0.331, 0.331, 0.331, 0.331, 0.331, 0.331, 0.331, 0.331, 0.331, 0.331, 0.331, 0.331, 0.331, 0.331, 0.331, 0.331, 0.331, 0.331, 0.332, 0.332, 0.332, 0.333, 0.333, 0.333, 0.334, 0.334, 0.334, 0.334, 0.334, 0.334, 0.334, 0.334, 0.334, 0.334, 0.334, 0.334, 0.334, 0.334, 0.334, 0.334, 0.335, 0.335, 0.335, 0.335, 0.336, 0.336, 0.337, 0.337, 0.337, 0.337, 0.337, 0.338, 0.338, 0.338, 0.338, 0.338, 0.339, 0.339, 0.34, 0.341, 0.342, 0.342, 0.343, 0.343, 0.343, 0.343, 0.343, 0.343, 0.344, 0.344, 0.346, 0.346, 0.346, 0.347, 0.347, 0.347, 0.347, 0.347, 0.347, 0.347, 0.347, 0.347, 0.347, 0.347, 0.347, 0.348, 0.348, 0.349, 0.349, 0.35, 0.35, 0.35, 0.35, 0.35, 0.351, 0.351, 0.351, 0.351, 0.352, 0.354, 0.354, 0.354, 0.354, 0.355, 0.355, 0.355, 0.355, 0.355, 0.355, 0.355, 0.355, 0.355, 0.355, 0.355, 0.355, 0.355, 0.355, 0.355, 0.355, 0.355, 0.355, 0.355, 0.355, 0.355, 0.355, 0.356, 0.356, 0.356, 0.356, 0.356, 0.356, 0.357, 0.358, 0.358, 0.358, 0.358, 0.359, 0.359, 0.359, 0.359, 0.359, 0.359, 0.359, 0.359, 0.359, 0.359, 0.359, 0.359, 0.359, 0.359, 0.36, 0.36, 0.36, 0.36, 0.36, 0.36, 0.361, 0.361, 0.362, 0.362, 0.362, 0.362, 0.362, 0.362, 0.362, 0.362, 0.363, 0.363, 0.363, 0.363, 0.365, 0.365, 0.365, 0.366, 0.366, 0.367, 0.367, 0.367, 0.368, 0.368, 0.368, 0.372, 0.372, 0.372, 0.372, 0.372, 0.372, 0.373, 0.373, 0.373, 0.373, 0.373, 0.373, 0.373, 0.373, 0.373, 0.373, 0.373, 0.373, 0.374, 0.374, 0.374, 0.374, 0.375, 0.375, 0.375, 0.375, 0.375, 0.375, 0.375, 0.376, 0.376, 0.376, 0.376, 0.376, 0.376, 0.377, 0.378, 0.379, 0.38, 0.381, 0.381, 0.382, 0.382, 0.383, 0.383, 0.383, 0.383, 0.385, 0.385, 0.385, 0.385, 0.385, 0.385, 0.385, 0.385, 0.385, 0.385, 0.385, 0.385, 0.385, 0.385, 0.385, 0.386, 0.386, 0.386, 0.387, 0.387, 0.387, 0.387, 0.388, 0.388, 0.388, 0.388, 0.388, 0.39, 0.39, 0.391, 0.391, 0.391, 0.391, 0.393, 0.393, 0.394, 0.394, 0.394, 0.394, 0.394, 0.394, 0.394, 0.394, 0.395, 0.395, 0.396, 0.396, 0.397, 0.397, 0.397, 0.397, 0.397, 0.397, 0.397, 0.397, 0.397, 0.397, 0.397, 0.398, 0.398, 0.398, 0.398, 0.398, 0.399, 0.399, 0.399, 0.4, 0.4, 0.4, 0.401, 0.401, 0.401, 0.401, 0.402, 0.402, 0.402, 0.402, 0.402, 0.402, 0.402, 0.402, 0.402, 0.403, 0.403, 0.403, 0.403, 0.403, 0.403, 0.403, 0.403, 0.403, 0.404, 0.405, 0.406, 0.406, 0.406, 0.406, 0.406, 0.406, 0.406, 0.406, 0.406, 0.406, 0.407, 0.408, 0.409, 0.409, 0.409, 0.409, 0.409, 0.41, 0.41, 0.41, 0.41, 0.41, 0.41, 0.41, 0.41, 0.41, 0.41, 0.41, 0.411, 0.411, 0.411, 0.411, 0.411, 0.411, 0.411, 0.412, 0.412, 0.412, 0.412, 0.412, 0.413, 0.413, 0.413, 0.413, 0.413, 0.413, 0.414, 0.414, 0.414, 0.414, 0.415, 0.415, 0.416, 0.416, 0.416, 0.417, 0.419, 0.419, 0.42, 0.421, 0.421, 0.421, 0.421, 0.421, 0.421, 0.421, 0.421, 0.421, 0.421, 0.421, 0.421, 0.421, 0.421, 0.422, 0.423, 0.423, 0.423, 0.424, 0.425, 0.425, 0.425, 0.425, 0.425, 0.425, 0.426, 0.428, 0.428, 0.428, 0.429, 0.429, 0.429, 0.429, 0.429, 0.429, 0.429, 0.429, 0.429, 0.429, 0.43, 0.43, 0.43, 0.431, 0.431, 0.431, 0.431, 0.431, 0.431, 0.431, 0.431, 0.431, 0.431, 0.431, 0.431, 0.431, 0.431, 0.432, 0.432, 0.432, 0.432, 0.432, 0.432, 0.432, 0.433, 0.433, 0.433, 0.433, 0.434, 0.434, 0.434, 0.435, 0.435, 0.435, 0.436, 0.436, 0.436, 0.437, 0.437, 0.437, 0.438, 0.438, 0.438, 0.438, 0.438, 0.438, 0.438, 0.438, 0.438, 0.438, 0.439, 0.439, 0.439, 0.439, 0.44, 0.44, 0.44, 0.44, 0.441, 0.441, 0.442, 0.442, 0.443, 0.443, 0.443, 0.443, 0.443, 0.445, 0.445, 0.445, 0.445, 0.446, 0.446, 0.447, 0.448, 0.448, 0.448, 0.448, 0.448, 0.448, 0.448, 0.448, 0.448, 0.448, 0.448, 0.448, 0.448, 0.448, 0.448, 0.448, 0.448, 0.448, 0.448, 0.448, 0.448, 0.448, 0.448, 0.448, 0.448, 0.448, 0.448, 0.448, 0.448, 0.449, 0.451, 0.451, 0.451, 0.451, 0.451, 0.451, 0.451, 0.452, 0.453, 0.454, 0.454, 0.455, 0.455, 0.455, 0.455, 0.456, 0.456, 0.457, 0.457, 0.457, 0.457, 0.458, 0.458, 0.458, 0.459, 0.459, 0.46, 0.46, 0.461, 0.461, 0.461, 0.461, 0.461, 0.462, 0.462, 0.462, 0.462, 0.462, 0.462, 0.463, 0.463, 0.463, 0.463, 0.463, 0.463, 0.463, 0.463, 0.465, 0.465, 0.465, 0.466, 0.467, 0.467, 0.467, 0.468, 0.469, 0.469, 0.47, 0.47, 0.47, 0.47, 0.47, 0.47, 0.47, 0.47, 0.47, 0.471, 0.471, 0.472, 0.472, 0.472, 0.472, 0.472, 0.472, 0.472, 0.472, 0.472, 0.472, 0.472, 0.472, 0.472, 0.472, 0.472, 0.472, 0.472, 0.472, 0.472, 0.472, 0.472, 0.472, 0.472, 0.472, 0.473, 0.474, 0.474, 0.474, 0.474, 0.474, 0.475, 0.475, 0.475, 0.476, 0.476, 0.476, 0.476, 0.478, 0.478, 0.478, 0.478, 0.479, 0.48, 0.48, 0.48, 0.48, 0.48, 0.481, 0.481, 0.482, 0.482, 0.482, 0.482, 0.483, 0.483, 0.484, 0.484, 0.484, 0.484, 0.484, 0.484, 0.484, 0.484, 0.484, 0.484, 0.484, 0.484, 0.484, 0.484, 0.484, 0.484, 0.484, 0.484, 0.484, 0.485, 0.485, 0.485, 0.485, 0.485, 0.485, 0.485, 0.486, 0.486, 0.487, 0.487, 0.487, 0.489, 0.489, 0.489, 0.489, 0.49, 0.49, 0.49, 0.49, 0.49, 0.49, 0.49, 0.49, 0.49, 0.49, 0.49, 0.49, 0.49, 0.49, 0.49, 0.49, 0.49, 0.49, 0.49, 0.49, 0.49, 0.49, 0.49, 0.49, 0.49, 0.491, 0.491, 0.491, 0.491, 0.492, 0.492, 0.492, 0.492, 0.492, 0.492, 0.493, 0.493, 0.493, 0.493, 0.493, 0.493, 0.494, 0.495, 0.496, 0.497, 0.498, 0.498, 0.498, 0.498, 0.499, 0.499, 0.499, 0.499, 0.499, 0.499, 0.499, 0.499, 0.499, 0.499, 0.499, 0.499, 0.501, 0.501, 0.501, 0.501, 0.502, 0.502, 0.502, 0.502, 0.502, 0.502, 0.502, 0.502, 0.502, 0.502, 0.502, 0.502, 0.502, 0.502, 0.502, 0.502, 0.502, 0.502, 0.503, 0.504, 0.504, 0.504, 0.504, 0.504, 0.504, 0.505, 0.505, 0.506, 0.506, 0.507, 0.507, 0.507, 0.507, 0.507, 0.508, 0.508, 0.508, 0.509, 0.51, 0.51, 0.51, 0.51, 0.51, 0.511, 0.512, 0.512, 0.512, 0.512, 0.512, 0.512, 0.513, 0.513, 0.513, 0.513, 0.513, 0.513, 0.513, 0.513, 0.513, 0.513, 0.513, 0.513, 0.513, 0.513, 0.513, 0.513, 0.513, 0.514, 0.514, 0.515, 0.515, 0.516, 0.516, 0.516, 0.516, 0.516, 0.516, 0.516, 0.516, 0.518, 0.518, 0.518, 0.518, 0.518, 0.518, 0.518, 0.518, 0.518, 0.518, 0.518, 0.518, 0.519, 0.52, 0.52, 0.52, 0.52, 0.521, 0.521, 0.521, 0.521, 0.522, 0.522, 0.523, 0.523, 0.523, 0.524, 0.524, 0.524, 0.524, 0.524, 0.524, 0.524, 0.524, 0.524, 0.525, 0.525, 0.525, 0.525, 0.526, 0.526, 0.526, 0.526, 0.526, 0.526, 0.526, 0.526, 0.526, 0.527, 0.527, 0.527, 0.527, 0.528, 0.528, 0.528, 0.528, 0.528, 0.528, 0.528, 0.528, 0.528, 0.528, 0.528, 0.528, 0.528, 0.528, 0.529, 0.529, 0.529, 0.53, 0.53, 0.531, 0.531, 0.532, 0.532, 0.532, 0.532, 0.532, 0.533, 0.533, 0.533, 0.533, 0.534, 0.534, 0.534, 0.535, 0.536, 0.536, 0.536, 0.537, 0.537, 0.538, 0.538, 0.538, 0.538, 0.538, 0.538, 0.538, 0.539, 0.539, 0.54, 0.541, 0.541, 0.542, 0.543, 0.543, 0.543, 0.543, 0.543, 0.544, 0.544, 0.544, 0.544, 0.544, 0.544, 0.544, 0.544, 0.545, 0.545, 0.545, 0.545, 0.546, 0.547, 0.548, 0.548, 0.548, 0.549, 0.549, 0.549, 0.55, 0.55, 0.55, 0.55, 0.55, 0.55, 0.55, 0.55, 0.55, 0.551, 0.552, 0.552, 0.552, 0.552, 0.552, 0.552, 0.552, 0.553, 0.554, 0.554, 0.554, 0.554, 0.554, 0.554, 0.554, 0.554, 0.554, 0.554, 0.554, 0.554, 0.555, 0.555, 0.555, 0.555, 0.558, 0.558, 0.559, 0.559, 0.56, 0.56, 0.56, 0.56, 0.561, 0.561, 0.561, 0.561, 0.561, 0.561, 0.561, 0.561, 0.561, 0.561, 0.561, 0.561, 0.561, 0.562, 0.562, 0.562, 0.563, 0.563, 0.563, 0.563, 0.563, 0.563, 0.563, 0.563, 0.563, 0.563, 0.563, 0.563, 0.563, 0.563, 0.563, 0.563, 0.563, 0.563, 0.563, 0.563, 0.564, 0.564, 0.564, 0.564, 0.564, 0.564, 0.564, 0.564, 0.564, 0.564, 0.565, 0.565, 0.566, 0.566, 0.566, 0.566, 0.566, 0.567, 0.567, 0.567, 0.567, 0.567, 0.567, 0.567, 0.567, 0.568, 0.568, 0.568, 0.568, 0.568, 0.568, 0.568, 0.568, 0.568, 0.569, 0.569, 0.569, 0.569, 0.57, 0.571, 0.571, 0.571, 0.571, 0.571, 0.571, 0.571, 0.571, 0.571, 0.571, 0.571, 0.572, 0.573, 0.574, 0.574, 0.574, 0.575, 0.576, 0.576, 0.576, 0.576, 0.576, 0.576, 0.576, 0.576, 0.576, 0.576, 0.576, 0.576, 0.576, 0.576, 0.576, 0.577, 0.577, 0.577, 0.577, 0.577, 0.577, 0.577, 0.577, 0.577, 0.577, 0.577, 0.577, 0.577, 0.577, 0.577, 0.577, 0.577, 0.578, 0.578, 0.578, 0.578, 0.578, 0.578, 0.578, 0.579, 0.579, 0.579, 0.58, 0.58, 0.58, 0.58, 0.58, 0.581, 0.581, 0.583, 0.583, 0.583, 0.583, 0.583, 0.583, 0.583, 0.583, 0.583, 0.583, 0.583, 0.583, 0.584, 0.584, 0.584, 0.584, 0.584, 0.584, 0.584, 0.584, 0.584, 0.584, 0.584, 0.584, 0.584, 0.584, 0.584, 0.584, 0.584, 0.584, 0.584, 0.584, 0.584, 0.584, 0.584, 0.585, 0.585, 0.585, 0.585, 0.585, 0.585, 0.585, 0.585, 0.585, 0.585, 0.585, 0.585, 0.585, 0.585, 0.585, 0.585, 0.585, 0.585, 0.586, 0.586, 0.586, 0.586, 0.586, 0.587, 0.587, 0.587, 0.587, 0.587, 0.587, 0.587, 0.587, 0.587, 0.587, 0.587, 0.587, 0.587, 0.587, 0.587, 0.587, 0.587, 0.587, 0.587, 0.587, 0.587, 0.587, 0.587, 0.588, 0.588, 0.588, 0.588, 0.588, 0.588, 0.588, 0.588, 0.588, 0.588, 0.588, 0.589, 0.589, 0.589, 0.589, 0.589, 0.589, 0.589, 0.589, 0.589, 0.589, 0.589, 0.589, 0.589, 0.589, 0.589, 0.589, 0.589, 0.589, 0.589, 0.59, 0.59, 0.59, 0.59, 0.592, 0.593, 0.594, 0.594, 0.594, 0.595, 0.596, 0.596, 0.597, 0.597, 0.597, 0.597, 0.597, 0.597, 0.597, 0.597, 0.598, 0.599, 0.599, 0.599, 0.599, 0.599, 0.599, 0.599, 0.599, 0.599, 0.599, 0.599, 0.6, 0.6, 0.6, 0.6, 0.6, 0.6, 0.601, 0.602, 0.602, 0.602, 0.602, 0.602, 0.603, 0.603, 0.603, 0.603, 0.604, 0.604, 0.604, 0.604, 0.604, 0.604, 0.604, 0.604, 0.604, 0.604, 0.604, 0.604, 0.605, 0.605, 0.606, 0.606, 0.607, 0.608, 0.608, 0.608, 0.608, 0.608, 0.609, 0.609, 0.609, 0.609, 0.609, 0.609, 0.609, 0.609, 0.609, 0.609, 0.609, 0.609, 0.609, 0.609, 0.61, 0.61, 0.611, 0.611, 0.611, 0.611, 0.612, 0.612, 0.612, 0.612, 0.612, 0.612, 0.613, 0.614, 0.614, 0.614, 0.614, 0.614, 0.615, 0.615, 0.615, 0.616, 0.616, 0.617, 0.617, 0.618, 0.618, 0.619, 0.619, 0.62, 0.62, 0.62, 0.62, 0.62, 0.62, 0.62, 0.62, 0.62, 0.62, 0.62, 0.62, 0.62, 0.621, 0.621, 0.621, 0.621, 0.621, 0.621, 0.622, 0.622, 0.622, 0.623, 0.624, 0.624, 0.624, 0.624, 0.624, 0.624, 0.624, 0.624, 0.624, 0.624, 0.624, 0.624, 0.624, 0.624, 0.625, 0.626, 0.626, 0.627, 0.627, 0.628, 0.628, 0.628, 0.63, 0.63, 0.631, 0.631, 0.631, 0.632, 0.632, 0.632, 0.632, 0.632, 0.632, 0.632, 0.632, 0.632, 0.632, 0.632, 0.632, 0.632, 0.632, 0.632, 0.632, 0.632, 0.632, 0.633, 0.634, 0.634, 0.634, 0.634, 0.634, 0.634, 0.634, 0.635, 0.635, 0.635, 0.635, 0.635, 0.635, 0.637, 0.637, 0.637, 0.637, 0.637, 0.637, 0.637, 0.637, 0.637, 0.637, 0.637, 0.638, 0.638, 0.638, 0.638, 0.638, 0.638, 0.638, 0.639, 0.639, 0.639, 0.639, 0.639, 0.639, 0.641, 0.642, 0.642, 0.642, 0.642, 0.642, 0.642, 0.642, 0.643, 0.643, 0.643, 0.644, 0.644, 0.644, 0.644, 0.644, 0.644, 0.644, 0.645, 0.645, 0.646, 0.646, 0.646, 0.646, 0.646, 0.646, 0.646, 0.646, 0.646, 0.646, 0.646, 0.646, 0.646, 0.646, 0.646, 0.646, 0.647, 0.647, 0.647, 0.647, 0.647, 0.647, 0.648, 0.648, 0.648, 0.649, 0.649, 0.649, 0.649, 0.649, 0.649, 0.65, 0.65, 0.65, 0.65, 0.65, 0.651, 0.651, 0.652, 0.652, 0.652, 0.652, 0.652, 0.652, 0.653, 0.653, 0.653, 0.653, 0.653, 0.653, 0.653, 0.653, 0.653, 0.653, 0.653, 0.653, 0.654, 0.654, 0.654, 0.654, 0.654, 0.654, 0.655, 0.656, 0.656, 0.656, 0.656, 0.656, 0.656, 0.656, 0.656, 0.656, 0.656, 0.656, 0.656, 0.656, 0.656, 0.658, 0.659, 0.659, 0.659, 0.659, 0.66, 0.66, 0.66, 0.66, 0.66, 0.66, 0.66, 0.66, 0.66, 0.66, 0.66, 0.661, 0.661, 0.661, 0.661, 0.661, 0.661, 0.661, 0.661, 0.661, 0.661, 0.661, 0.662, 0.663, 0.664, 0.664, 0.664, 0.664, 0.664, 0.665, 0.665, 0.665, 0.665, 0.665, 0.665, 0.665, 0.665, 0.665, 0.665, 0.665, 0.665, 0.665, 0.665, 0.667, 0.667, 0.667, 0.668, 0.668, 0.668, 0.668, 0.668, 0.668, 0.67, 0.67, 0.67, 0.67, 0.671, 0.671, 0.671, 0.671, 0.671, 0.671, 0.671, 0.671, 0.671, 0.671, 0.672, 0.672, 0.672, 0.672, 0.672, 0.672, 0.672, 0.672, 0.673, 0.673, 0.673, 0.673, 0.673, 0.673, 0.673, 0.673, 0.673, 0.673, 0.673, 0.673, 0.673, 0.673, 0.673, 0.673, 0.673, 0.675, 0.675, 0.675, 0.675, 0.675, 0.675, 0.675, 0.675, 0.676, 0.676, 0.677, 0.677, 0.677, 0.677, 0.677, 0.678, 0.678, 0.678, 0.678, 0.678, 0.679, 0.679, 0.679, 0.679, 0.68, 0.68, 0.68, 0.68, 0.68, 0.681, 0.681, 0.681, 0.682, 0.682, 0.682, 0.682, 0.682, 0.682, 0.682, 0.683, 0.683, 0.683, 0.683, 0.683, 0.683, 0.684, 0.684, 0.684, 0.684, 0.684, 0.684, 0.684, 0.685, 0.685, 0.685, 0.685, 0.686, 0.687, 0.687, 0.687, 0.688, 0.689, 0.689, 0.689, 0.689, 0.689, 0.689, 0.689, 0.689, 0.689, 0.689, 0.689, 0.689, 0.69, 0.69, 0.69, 0.69, 0.691, 0.691, 0.691, 0.691, 0.691, 0.691, 0.691, 0.691, 0.692, 0.692, 0.692, 0.692, 0.692, 0.692, 0.692, 0.692, 0.692, 0.692, 0.692, 0.693, 0.693, 0.693, 0.693, 0.693, 0.694, 0.694, 0.694, 0.694, 0.694, 0.696, 0.696, 0.696, 0.696, 0.696, 0.696, 0.697, 0.697, 0.697, 0.697, 0.699, 0.699, 0.699, 0.699, 0.7, 0.7, 0.701, 0.701, 0.701, 0.701, 0.702, 0.702, 0.704, 0.705, 0.705, 0.705, 0.705, 0.705, 0.705, 0.705, 0.705, 0.705, 0.706, 0.706, 0.706, 0.706, 0.706, 0.706, 0.706, 0.708, 0.708, 0.708, 0.708, 0.708, 0.708, 0.708, 0.708, 0.708, 0.708, 0.709, 0.709, 0.71, 0.71, 0.71, 0.71, 0.71, 0.71, 0.71, 0.71, 0.71, 0.71, 0.711, 0.711, 0.711, 0.711, 0.711, 0.713, 0.713, 0.713, 0.713, 0.713, 0.713, 0.713, 0.715, 0.715, 0.715, 0.715, 0.716, 0.716, 0.716, 0.716, 0.716, 0.716, 0.716, 0.716, 0.716, 0.716, 0.716, 0.716, 0.716, 0.716, 0.716, 0.716, 0.716, 0.716, 0.716, 0.716, 0.716, 0.716, 0.716, 0.716, 0.716, 0.716, 0.716, 0.716, 0.716, 0.716, 0.716, 0.716, 0.716, 0.716, 0.716, 0.716, 0.716, 0.716, 0.716, 0.716, 0.716, 0.716, 0.716, 0.717, 0.718, 0.718, 0.718, 0.718, 0.718, 0.718, 0.718, 0.718, 0.718, 0.718, 0.718, 0.718, 0.719, 0.719, 0.719, 0.719, 0.719, 0.719, 0.719, 0.719, 0.719, 0.719, 0.719, 0.72, 0.72, 0.72, 0.72, 0.721, 0.722, 0.722, 0.722, 0.722, 0.722, 0.722, 0.722, 0.722, 0.722, 0.722, 0.722, 0.723, 0.723, 0.723, 0.723, 0.723, 0.725, 0.725, 0.725, 0.725, 0.725, 0.726, 0.726, 0.726, 0.726, 0.727, 0.728, 0.728, 0.728, 0.729, 0.729, 0.729, 0.729, 0.729, 0.729, 0.729, 0.729, 0.73, 0.73, 0.73, 0.73, 0.73, 0.73, 0.73, 0.73, 0.73, 0.731, 0.732, 0.733, 0.734, 0.734, 0.734, 0.734, 0.735, 0.735, 0.735, 0.736, 0.737, 0.738, 0.738, 0.738, 0.738, 0.739, 0.74, 0.74, 0.74, 0.74, 0.74, 0.74, 0.74, 0.74, 0.74, 0.74, 0.741, 0.741, 0.741, 0.741, 0.742, 0.742, 0.742, 0.742, 0.742, 0.742, 0.742, 0.742, 0.742, 0.742, 0.742, 0.743, 0.743, 0.744, 0.745, 0.745, 0.745, 0.745, 0.746, 0.746, 0.746, 0.747, 0.747, 0.747, 0.747, 0.747, 0.747, 0.747, 0.747, 0.747, 0.747, 0.747, 0.747, 0.747, 0.747, 0.748, 0.748, 0.748, 0.748, 0.748, 0.748, 0.748, 0.749, 0.749, 0.749, 0.75, 0.75, 0.75, 0.75, 0.751, 0.752, 0.752, 0.752, 0.752, 0.753, 0.753, 0.753, 0.753, 0.753, 0.753, 0.753, 0.753, 0.754, 0.756, 0.757, 0.757, 0.757, 0.757, 0.757, 0.757, 0.758, 0.758, 0.758, 0.758, 0.758, 0.758, 0.758, 0.758, 0.758, 0.758, 0.758, 0.76, 0.76, 0.76, 0.76, 0.76, 0.76, 0.76, 0.76, 0.76, 0.76, 0.76, 0.76, 0.76, 0.76, 0.76, 0.76, 0.761, 0.761, 0.761, 0.761, 0.761, 0.762, 0.762, 0.763, 0.763, 0.763, 0.763, 0.763, 0.763, 0.763, 0.763, 0.763, 0.763, 0.764, 0.764, 0.766, 0.766, 0.766, 0.767, 0.767, 0.767, 0.767, 0.767, 0.767, 0.767, 0.767, 0.767, 0.767, 0.767, 0.767, 0.768, 0.768, 0.77, 0.77, 0.77, 0.77, 0.77, 0.77, 0.77, 0.77, 0.77, 0.771, 0.771, 0.771, 0.771, 0.771, 0.772, 0.772, 0.772, 0.772, 0.772, 0.772, 0.772, 0.772, 0.772, 0.772, 0.772, 0.772, 0.772, 0.772, 0.772, 0.772, 0.772, 0.772, 0.772, 0.772, 0.772, 0.772, 0.772, 0.772, 0.772, 0.773, 0.773, 0.773, 0.773, 0.773, 0.773, 0.773, 0.773, 0.773, 0.774, 0.774, 0.774, 0.774, 0.774, 0.774, 0.774, 0.774, 0.775, 0.775, 0.775, 0.775, 0.775, 0.775, 0.776, 0.777, 0.777, 0.778, 0.778, 0.778, 0.778, 0.778, 0.778, 0.778, 0.779, 0.779, 0.779, 0.779, 0.779, 0.779, 0.779, 0.779, 0.779, 0.78, 0.78, 0.78, 0.78, 0.781, 0.781, 0.781, 0.781, 0.782, 0.782, 0.782, 0.782, 0.782, 0.782, 0.782, 0.783, 0.783, 0.783, 0.783, 0.783, 0.783, 0.784, 0.784, 0.784, 0.785, 0.785, 0.786, 0.787, 0.787, 0.787, 0.788, 0.788, 0.788, 0.788, 0.789, 0.789, 0.789, 0.789, 0.789, 0.789, 0.789, 0.789, 0.789, 0.79, 0.79, 0.79, 0.79, 0.79, 0.79, 0.79, 0.79, 0.79, 0.79, 0.79, 0.79, 0.79, 0.79, 0.79, 0.79, 0.79, 0.79, 0.79, 0.79, 0.79, 0.79, 0.79, 0.79, 0.79, 0.79, 0.79, 0.791, 0.791, 0.792, 0.793, 0.793, 0.793, 0.793, 0.793, 0.793, 0.793, 0.793, 0.793, 0.794, 0.795, 0.795, 0.795, 0.796, 0.797, 0.797, 0.797, 0.797, 0.797, 0.797, 0.797, 0.798, 0.799, 0.799, 0.8, 0.801, 0.801, 0.801, 0.801, 0.801, 0.801, 0.801, 0.801, 0.801, 0.801, 0.802, 0.802, 0.802, 0.802, 0.802, 0.802, 0.802, 0.802, 0.802, 0.802, 0.802, 0.802, 0.803, 0.803, 0.804, 0.804, 0.804, 0.804, 0.804, 0.804, 0.804, 0.804, 0.804, 0.804, 0.804, 0.804, 0.804, 0.804, 0.804, 0.804, 0.804, 0.804, 0.804, 0.804, 0.804, 0.806, 0.806, 0.806, 0.806, 0.806, 0.806, 0.806, 0.806, 0.806, 0.807, 0.807, 0.807, 0.807, 0.807, 0.807, 0.807, 0.808, 0.809, 0.809, 0.809, 0.809, 0.81, 0.81, 0.81, 0.81, 0.81, 0.81, 0.812, 0.812, 0.812, 0.812, 0.812, 0.812, 0.812, 0.813, 0.813, 0.813, 0.813, 0.813, 0.813, 0.813, 0.813, 0.815, 0.815, 0.815, 0.815, 0.816, 0.816, 0.816, 0.816, 0.816, 0.816, 0.817, 0.817, 0.817, 0.817, 0.817, 0.817, 0.818, 0.818, 0.818, 0.818, 0.818, 0.818, 0.818, 0.818, 0.818, 0.818, 0.818, 0.819, 0.819, 0.82, 0.82, 0.82, 0.82, 0.82, 0.822, 0.822, 0.822, 0.822, 0.822, 0.824, 0.824, 0.824, 0.824, 0.824, 0.824, 0.824, 0.825, 0.825, 0.825, 0.825, 0.826, 0.826, 0.826, 0.826, 0.826, 0.826, 0.826, 0.826, 0.827, 0.827, 0.828, 0.829, 0.83, 0.83, 0.83, 0.83, 0.831, 0.832, 0.832, 0.832, 0.832, 0.832, 0.832, 0.832, 0.833, 0.834, 0.834, 0.834, 0.834, 0.834, 0.834, 0.835, 0.836, 0.836, 0.838, 0.838, 0.838, 0.838, 0.838, 0.838, 0.838, 0.838, 0.838, 0.838, 0.839, 0.839, 0.839, 0.841, 0.841, 0.841, 0.841, 0.841, 0.841, 0.841, 0.841, 0.841, 0.841, 0.842, 0.842, 0.842, 0.843, 0.843, 0.843, 0.843, 0.843, 0.843, 0.843, 0.844, 0.844, 0.844, 0.845, 0.845, 0.845, 0.845, 0.845, 0.845, 0.846, 0.846, 0.846, 0.846, 0.847, 0.847, 0.847, 0.847, 0.847, 0.848, 0.848, 0.848, 0.848, 0.848, 0.848, 0.848, 0.848, 0.848, 0.848, 0.848, 0.848, 0.848, 0.848, 0.848, 0.848, 0.848, 0.848, 0.848, 0.848, 0.848, 0.848, 0.849, 0.849, 0.849, 0.849, 0.85, 0.851, 0.852, 0.852, 0.852, 0.852, 0.852, 0.852, 0.852, 0.853, 0.854, 0.854, 0.854, 0.854, 0.854, 0.854, 0.854, 0.854, 0.854, 0.854, 0.855, 0.856, 0.856, 0.856, 0.858, 0.858, 0.858, 0.858, 0.858, 0.859, 0.859, 0.859, 0.859, 0.859, 0.859, 0.859, 0.859, 0.859, 0.859, 0.859, 0.859, 0.859, 0.859, 0.859, 0.859, 0.86, 0.86, 0.86, 0.861, 0.861, 0.861, 0.861, 0.861, 0.861, 0.861, 0.861, 0.861, 0.861, 0.861, 0.861, 0.861, 0.861, 0.861, 0.861, 0.861, 0.861, 0.861, 0.861, 0.861, 0.861, 0.861, 0.863, 0.863, 0.863, 0.863, 0.863, 0.864, 0.864, 0.864, 0.864, 0.865, 0.865, 0.865, 0.866, 0.866, 0.866, 0.866, 0.867, 0.867, 0.867, 0.867, 0.867, 0.867, 0.869, 0.869, 0.869, 0.869, 0.87, 0.87, 0.87, 0.87, 0.87, 0.871, 0.871, 0.871, 0.871, 0.871, 0.871, 0.871, 0.872, 0.872, 0.873, 0.873, 0.873, 0.873, 0.874, 0.874, 0.874, 0.874, 0.874, 0.874, 0.874, 0.874, 0.875, 0.876, 0.876, 0.877, 0.877, 0.878, 0.879, 0.879, 0.879, 0.879, 0.879, 0.879, 0.879, 0.879, 0.88, 0.88, 0.88, 0.88, 0.88, 0.88, 0.881, 0.881, 0.882, 0.882, 0.882, 0.882, 0.882, 0.882, 0.882, 0.883, 0.884, 0.884, 0.884, 0.885, 0.885, 0.885, 0.887, 0.887, 0.887, 0.887, 0.887, 0.887, 0.887, 0.887, 0.887, 0.887, 0.887, 0.887, 0.887, 0.887, 0.887, 0.887, 0.887, 0.888, 0.889, 0.891, 0.891, 0.891, 0.891, 0.891, 0.891, 0.892, 0.892, 0.892, 0.893, 0.893, 0.893, 0.893, 0.893, 0.893, 0.895, 0.896, 0.896, 0.896, 0.896, 0.896, 0.896, 0.896, 0.896, 0.896, 0.896, 0.896, 0.896, 0.897, 0.897, 0.897, 0.897, 0.897, 0.897, 0.897, 0.897, 0.897, 0.897, 0.897, 0.898, 0.899, 0.899, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.9, 0.901, 0.901, 0.902, 0.902, 0.902, 0.902, 0.903, 0.903, 0.903, 0.903, 0.903, 0.903, 0.903, 0.903, 0.903, 0.903, 0.903, 0.903, 0.903, 0.903, 0.903, 0.904, 0.904, 0.905, 0.905, 0.905, 0.905, 0.905, 0.905, 0.905, 0.905, 0.906, 0.906, 0.906, 0.906, 0.906, 0.906, 0.906, 0.906, 0.907, 0.908, 0.908, 0.908, 0.908, 0.908, 0.908, 0.909, 0.909, 0.909, 0.909, 0.909, 0.909, 0.909, 0.909, 0.91, 0.91, 0.91, 0.91, 0.91, 0.91, 0.91, 0.91, 0.911, 0.911, 0.911, 0.911, 0.911, 0.911, 0.911, 0.911, 0.912, 0.912, 0.912, 0.912, 0.912, 0.913, 0.913, 0.913, 0.914, 0.914, 0.915, 0.915, 0.915, 0.915, 0.915, 0.915, 0.915, 0.915, 0.915, 0.915, 0.915, 0.917, 0.917, 0.917, 0.917, 0.917, 0.917, 0.917, 0.917, 0.917, 0.917, 0.917, 0.917, 0.917, 0.917, 0.917, 0.917, 0.917, 0.918, 0.918, 0.918, 0.919, 0.919, 0.92, 0.92, 0.92, 0.92, 0.92, 0.92, 0.92, 0.92, 0.92, 0.92, 0.92, 0.92, 0.921, 0.921, 0.921, 0.921, 0.922, 0.923, 0.923, 0.923, 0.923, 0.923, 0.923, 0.923, 0.923, 0.924, 0.924, 0.924, 0.924, 0.924, 0.924, 0.924, 0.924, 0.924, 0.924, 0.924, 0.924, 0.924, 0.924, 0.924, 0.924, 0.924, 0.924, 0.924, 0.924, 0.924, 0.924, 0.924, 0.924, 0.924, 0.925, 0.925, 0.925, 0.925, 0.925, 0.925, 0.926, 0.927, 0.927, 0.927, 0.927, 0.927, 0.928, 0.929, 0.929, 0.929, 0.929, 0.929, 0.929, 0.929, 0.929, 0.929, 0.929, 0.929, 0.929, 0.929, 0.929, 0.929, 0.929, 0.929, 0.929, 0.929, 0.929, 0.929, 0.929, 0.929, 0.929, 0.929, 0.929, 0.929, 0.929, 0.93, 0.93, 0.931, 0.931, 0.932, 0.933, 0.933, 0.933, 0.933, 0.933, 0.933, 0.933, 0.933, 0.933, 0.933, 0.933, 0.934, 0.935, 0.935, 0.935, 0.935, 0.935, 0.935, 0.935, 0.935, 0.935, 0.935, 0.936, 0.936, 0.936, 0.937, 0.937, 0.937, 0.937, 0.938, 0.938, 0.938, 0.938, 0.939, 0.939, 0.939, 0.939, 0.939, 0.939, 0.94, 0.94, 0.94, 0.94, 0.94, 0.94, 0.94, 0.941, 0.941, 0.942, 0.942, 0.942, 0.943, 0.944, 0.944, 0.945, 0.945, 0.945, 0.946, 0.946, 0.946, 0.946, 0.946, 0.946, 0.946, 0.947, 0.947, 0.947, 0.947, 0.947, 0.947, 0.948, 0.948, 0.948, 0.949, 0.949, 0.951, 0.951, 0.951, 0.952, 0.953, 0.953, 0.953, 0.954, 0.954, 0.954, 0.954, 0.954, 0.954, 0.955, 0.955, 0.955, 0.955, 0.956, 0.956, 0.957, 0.957, 0.957, 0.957, 0.957, 0.957, 0.958, 0.958, 0.958, 0.958, 0.958, 0.958, 0.959, 0.959, 0.96, 0.96, 0.96, 0.96, 0.96, 0.962, 0.963, 0.964, 0.964, 0.964, 0.964, 0.964, 0.964, 0.964, 0.964, 0.964, 0.964, 0.964, 0.964, 0.964, 0.964, 0.965, 0.965, 0.966, 0.966, 0.966, 0.966, 0.966, 0.966, 0.966, 0.966, 0.966, 0.966, 0.966, 0.966, 0.966, 0.967, 0.968, 0.968, 0.968, 0.968, 0.968, 0.968, 0.968, 0.969, 0.969, 0.969, 0.969, 0.969, 0.969, 0.969, 0.97, 0.97, 0.97, 0.971, 0.971, 0.971, 0.971, 0.972, 0.972, 0.972, 0.972, 0.973, 0.973, 0.973, 0.973, 0.973, 0.974, 0.974, 0.975, 0.975, 0.975, 0.975, 0.975, 0.975, 0.976, 0.976, 0.976, 0.976, 0.976, 0.976, 0.976, 0.976, 0.976, 0.976, 0.976, 0.976, 0.976, 0.976, 0.976, 0.976, 0.978, 0.978, 0.978, 0.979, 0.979, 0.98, 0.98, 0.981, 0.981, 0.981, 0.981, 0.981, 0.981, 0.982, 0.983, 0.983, 0.983, 0.983, 0.983, 0.983, 0.983, 0.983, 0.984, 0.984, 0.984, 0.984, 0.984, 0.984, 0.985, 0.985, 0.985, 0.985, 0.985, 0.985, 0.985, 0.985, 0.985, 0.985, 0.985, 0.985, 0.985, 0.985, 0.985, 0.986, 0.987, 0.987, 0.987, 0.987, 0.987, 0.987, 0.987, 0.987, 0.988, 0.988, 0.988, 0.988, 0.988, 0.989, 0.989, 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 0.99, 0.991, 0.991, 0.991, 0.991, 0.991, 0.991, 0.991, 0.991, 0.992, 0.993, 0.993, 0.994, 0.995, 0.995, 0.997, 0.998, 0.998, 0.998, 0.998, 0.998, 0.998, 0.998, 0.998, 0.998, 0.999, 0.999, 0.999, 0.999, 0.999, 0.999, 0.999, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.001, 1.001, 1.001, 1.001, 1.002, 1.002, 1.003, 1.004, 1.004, 1.004, 1.004, 1.004, 1.004, 1.004, 1.004, 1.004, 1.004, 1.004, 1.004, 1.005, 1.005, 1.006, 1.007, 1.007, 1.008, 1.008, 1.008, 1.009, 1.009, 1.009, 1.009, 1.01, 1.011, 1.011, 1.011, 1.011, 1.011, 1.011, 1.011, 1.011, 1.011, 1.011, 1.011, 1.011, 1.011, 1.011, 1.011, 1.011, 1.011, 1.011, 1.012, 1.013, 1.014, 1.016, 1.016, 1.018, 1.018, 1.018, 1.018, 1.019, 1.02, 1.02, 1.02, 1.02, 1.021, 1.021, 1.021, 1.021, 1.021, 1.021, 1.021, 1.021, 1.021, 1.021, 1.022, 1.023, 1.023, 1.023, 1.023, 1.023, 1.023, 1.024, 1.024, 1.024, 1.024, 1.024, 1.025, 1.025, 1.025, 1.025, 1.026, 1.026, 1.027, 1.027, 1.027, 1.027, 1.027, 1.027, 1.027, 1.027, 1.027, 1.028, 1.028, 1.028, 1.029, 1.029, 1.029, 1.029, 1.029, 1.029, 1.029, 1.029, 1.029, 1.03, 1.03, 1.03, 1.03, 1.032, 1.032, 1.032, 1.032, 1.032, 1.032, 1.032, 1.032, 1.032, 1.032, 1.032, 1.032, 1.032, 1.032, 1.032, 1.032, 1.032, 1.032, 1.032, 1.033, 1.033, 1.033, 1.033, 1.033, 1.033, 1.033, 1.033, 1.034, 1.035, 1.036, 1.036, 1.036, 1.036, 1.036, 1.036, 1.036, 1.036, 1.036, 1.036, 1.036, 1.036, 1.036, 1.036, 1.037, 1.037, 1.037, 1.037, 1.037, 1.037, 1.037, 1.037, 1.037, 1.038, 1.038, 1.038, 1.038, 1.038, 1.038, 1.038, 1.038, 1.038, 1.038, 1.039, 1.039, 1.039, 1.039, 1.039, 1.039, 1.04, 1.04, 1.04, 1.041, 1.041, 1.041, 1.041, 1.041, 1.042, 1.042, 1.042, 1.042, 1.043, 1.044, 1.044, 1.044, 1.044, 1.044, 1.044, 1.044, 1.044, 1.044, 1.045, 1.045, 1.045, 1.045, 1.045, 1.045, 1.045, 1.045, 1.045, 1.045, 1.045, 1.045, 1.046, 1.046, 1.046, 1.047, 1.047, 1.047, 1.047, 1.047, 1.047, 1.047, 1.047, 1.048, 1.048, 1.049, 1.049, 1.049, 1.049, 1.05, 1.05, 1.051, 1.052, 1.052, 1.052, 1.053, 1.054, 1.054, 1.055, 1.055, 1.055, 1.055, 1.055, 1.055, 1.055, 1.055, 1.055, 1.055, 1.055, 1.055, 1.056, 1.056, 1.056, 1.056, 1.056, 1.056, 1.056, 1.056, 1.056, 1.057, 1.058, 1.058, 1.058, 1.058, 1.058, 1.058, 1.058, 1.058, 1.058, 1.058, 1.058, 1.058, 1.058, 1.058, 1.058, 1.059, 1.059, 1.059, 1.059, 1.059, 1.059, 1.059, 1.06, 1.06, 1.06, 1.06, 1.06, 1.06, 1.06, 1.06, 1.06, 1.06, 1.062, 1.062, 1.062, 1.062, 1.062, 1.062, 1.062, 1.062, 1.062, 1.062, 1.062, 1.063, 1.063, 1.063, 1.064, 1.064, 1.065, 1.065, 1.065, 1.065, 1.065, 1.065, 1.066, 1.067, 1.067, 1.067, 1.067, 1.067, 1.07, 1.07, 1.07, 1.07, 1.07, 1.07, 1.07, 1.07, 1.07, 1.071, 1.071, 1.071, 1.071, 1.071, 1.071, 1.071, 1.071, 1.071, 1.071, 1.071, 1.071, 1.071, 1.071, 1.071, 1.071, 1.071, 1.071, 1.072, 1.072, 1.072, 1.072, 1.072, 1.073, 1.073, 1.073, 1.073, 1.073, 1.073, 1.073, 1.073, 1.073, 1.073, 1.073, 1.073, 1.073, 1.073, 1.073, 1.073, 1.073, 1.073, 1.074, 1.075, 1.075, 1.075, 1.075, 1.075, 1.075, 1.075, 1.075, 1.075, 1.075, 1.075, 1.075, 1.075, 1.077, 1.077, 1.077, 1.078, 1.078, 1.078, 1.078, 1.078, 1.078, 1.079, 1.079, 1.079, 1.079, 1.079, 1.079, 1.079, 1.08, 1.081, 1.081, 1.081, 1.081, 1.081, 1.081, 1.081, 1.081, 1.082, 1.082, 1.082, 1.082, 1.082, 1.082, 1.082, 1.082, 1.082, 1.082, 1.082, 1.082, 1.082, 1.082, 1.082, 1.082, 1.082, 1.082, 1.082, 1.082, 1.082, 1.082, 1.082, 1.082, 1.082, 1.082, 1.082, 1.082, 1.082, 1.082, 1.082, 1.082, 1.083, 1.083, 1.084, 1.086, 1.087, 1.088, 1.088, 1.089, 1.089, 1.089, 1.089, 1.089, 1.09, 1.09, 1.09, 1.09, 1.09, 1.09, 1.091, 1.092, 1.092, 1.092, 1.092, 1.092, 1.092, 1.093, 1.093, 1.093, 1.093, 1.093, 1.093, 1.093, 1.093, 1.093, 1.093, 1.093, 1.093, 1.093, 1.093, 1.093, 1.094, 1.094, 1.094, 1.094, 1.095, 1.095, 1.096, 1.096, 1.096, 1.096, 1.096, 1.096, 1.096, 1.096, 1.096, 1.096, 1.096, 1.096, 1.096, 1.096, 1.097, 1.097, 1.097, 1.097, 1.098, 1.098, 1.098, 1.098, 1.098, 1.098, 1.1, 1.1, 1.101, 1.101, 1.101, 1.101, 1.102, 1.102, 1.103, 1.104, 1.105, 1.105, 1.105, 1.106, 1.106, 1.106, 1.106, 1.106, 1.106, 1.106, 1.107, 1.107, 1.107, 1.107, 1.107, 1.107, 1.107, 1.107, 1.107, 1.108, 1.108, 1.108, 1.109, 1.109, 1.109, 1.109, 1.109, 1.109, 1.109, 1.11, 1.111, 1.111, 1.111, 1.111, 1.111, 1.111, 1.112, 1.112, 1.112, 1.112, 1.112, 1.112, 1.112, 1.112, 1.114, 1.115, 1.115, 1.115, 1.115, 1.116, 1.117, 1.117, 1.117, 1.117, 1.117, 1.117, 1.118, 1.119, 1.119, 1.119, 1.12, 1.12, 1.12, 1.12, 1.12, 1.12, 1.12, 1.121, 1.121, 1.121, 1.121, 1.121, 1.121, 1.121, 1.121, 1.121, 1.121, 1.121, 1.121, 1.121, 1.121, 1.121, 1.121, 1.121, 1.121, 1.122, 1.122, 1.122, 1.122, 1.122, 1.122, 1.122, 1.122, 1.122, 1.122, 1.122, 1.122, 1.122, 1.123, 1.123, 1.124, 1.124, 1.124, 1.124, 1.124, 1.124, 1.124, 1.124, 1.124, 1.124, 1.124, 1.124, 1.124, 1.124, 1.125, 1.125, 1.125, 1.125, 1.125, 1.125, 1.125, 1.125, 1.125, 1.125, 1.125, 1.125, 1.125, 1.125, 1.125, 1.125, 1.126, 1.126, 1.126, 1.126, 1.127, 1.127, 1.127, 1.127, 1.127, 1.128, 1.128, 1.129, 1.129, 1.129, 1.129, 1.129, 1.13, 1.13, 1.131, 1.131, 1.132, 1.132, 1.132, 1.132, 1.133, 1.133, 1.133, 1.133, 1.134, 1.134, 1.134, 1.134, 1.134, 1.134, 1.134, 1.134, 1.134, 1.134, 1.134, 1.134, 1.134, 1.134, 1.134, 1.134, 1.135, 1.135, 1.136, 1.136, 1.136, 1.136, 1.136, 1.137, 1.137, 1.137, 1.137, 1.137, 1.137, 1.137, 1.137, 1.137, 1.137, 1.137, 1.137, 1.138, 1.138, 1.139, 1.139, 1.139, 1.14, 1.14, 1.14, 1.14, 1.14, 1.14, 1.14, 1.14, 1.14, 1.14, 1.14, 1.14, 1.14, 1.14, 1.14, 1.141, 1.141, 1.141, 1.141, 1.142, 1.142, 1.143, 1.143, 1.143, 1.143, 1.143, 1.143, 1.143, 1.143, 1.143, 1.143, 1.143, 1.143, 1.144, 1.144, 1.146, 1.146, 1.146, 1.146, 1.148, 1.148, 1.148, 1.148, 1.148, 1.148, 1.148, 1.148, 1.148, 1.148, 1.148, 1.148, 1.148, 1.148, 1.149, 1.149, 1.149, 1.149, 1.149, 1.15, 1.152, 1.152, 1.152, 1.152, 1.152, 1.152, 1.152, 1.152, 1.152, 1.152, 1.152, 1.152, 1.152, 1.152, 1.152, 1.153, 1.153, 1.154, 1.155, 1.155, 1.155, 1.156, 1.156, 1.157, 1.157, 1.157, 1.158, 1.158, 1.158, 1.158, 1.158, 1.158, 1.158, 1.158, 1.158, 1.158, 1.158, 1.158, 1.158, 1.158, 1.159, 1.159, 1.159, 1.159, 1.159, 1.16, 1.16, 1.16, 1.16, 1.16, 1.16, 1.16, 1.16, 1.161, 1.161, 1.161, 1.161, 1.161, 1.161, 1.161, 1.161, 1.162, 1.162, 1.162, 1.162, 1.162, 1.162, 1.162, 1.162, 1.162, 1.163, 1.163, 1.164, 1.164, 1.165, 1.165, 1.165, 1.165, 1.165, 1.165, 1.165, 1.165, 1.166, 1.166, 1.166, 1.166, 1.166, 1.166, 1.166, 1.166, 1.166, 1.166, 1.166, 1.166, 1.166, 1.166, 1.166, 1.167, 1.167, 1.167, 1.168, 1.168, 1.169, 1.17, 1.17, 1.17, 1.17, 1.171, 1.171, 1.171, 1.171, 1.172, 1.172, 1.172, 1.173, 1.173, 1.173, 1.174, 1.174, 1.174, 1.174, 1.174, 1.174, 1.174, 1.174, 1.174, 1.174, 1.175, 1.175, 1.175, 1.175, 1.175, 1.175, 1.175, 1.175, 1.175, 1.175, 1.175, 1.175, 1.175, 1.175, 1.175, 1.175, 1.176, 1.176, 1.176, 1.176, 1.176, 1.176, 1.177, 1.177, 1.177, 1.177, 1.177, 1.177, 1.177, 1.177, 1.177, 1.177, 1.177, 1.177, 1.177, 1.178, 1.178, 1.178, 1.178, 1.178, 1.179, 1.179, 1.179, 1.179, 1.179, 1.179, 1.179, 1.179, 1.18, 1.181, 1.181, 1.181, 1.181, 1.181, 1.181, 1.183, 1.184, 1.184, 1.184, 1.184, 1.184, 1.184, 1.184, 1.184, 1.185, 1.185, 1.186, 1.187, 1.187, 1.188, 1.188, 1.188, 1.189, 1.189, 1.19, 1.19, 1.19, 1.19, 1.19, 1.19, 1.191, 1.192, 1.194, 1.194, 1.194, 1.194, 1.194, 1.196, 1.196, 1.196, 1.196, 1.196, 1.197, 1.197, 1.197, 1.197, 1.197, 1.197, 1.198, 1.198, 1.198, 1.198, 1.198, 1.199, 1.199, 1.2, 1.2, 1.2, 1.2, 1.2, 1.2, 1.201, 1.201, 1.201, 1.201, 1.201, 1.201, 1.201, 1.201, 1.201, 1.201, 1.201, 1.201, 1.202, 1.202, 1.202, 1.202, 1.203, 1.203, 1.204, 1.204, 1.204, 1.205, 1.205, 1.205, 1.205, 1.206, 1.206, 1.207, 1.207, 1.209, 1.209, 1.209, 1.209, 1.209, 1.209, 1.209, 1.209, 1.209, 1.209, 1.209, 1.209, 1.209, 1.209, 1.209, 1.211, 1.211, 1.211, 1.211, 1.211, 1.211, 1.211, 1.211, 1.211, 1.211, 1.212, 1.212, 1.212, 1.212, 1.213, 1.214, 1.215, 1.215, 1.216, 1.216, 1.216, 1.216, 1.218, 1.218, 1.218, 1.218, 1.218, 1.219, 1.22, 1.221, 1.221, 1.221, 1.222, 1.222, 1.222, 1.222, 1.222, 1.223, 1.223, 1.223, 1.224, 1.224, 1.225, 1.225, 1.225, 1.226, 1.226, 1.227, 1.227, 1.227, 1.227, 1.228, 1.228, 1.228, 1.228, 1.229, 1.229, 1.229, 1.229, 1.229, 1.229, 1.229, 1.229, 1.23, 1.23, 1.23, 1.232, 1.232, 1.233, 1.233, 1.234, 1.234, 1.234, 1.234, 1.234, 1.236, 1.237, 1.237, 1.237, 1.238, 1.239, 1.239, 1.239, 1.239, 1.241, 1.242, 1.242, 1.242, 1.242, 1.242, 1.242, 1.242, 1.242, 1.242, 1.242, 1.242, 1.242, 1.243, 1.243, 1.246, 1.246, 1.246, 1.246, 1.246, 1.246, 1.246, 1.246, 1.246, 1.246, 1.246, 1.246, 1.246, 1.246, 1.246, 1.246, 1.246, 1.246, 1.247, 1.247, 1.247, 1.247, 1.247, 1.247, 1.247, 1.247, 1.249, 1.249, 1.249, 1.249, 1.25, 1.25, 1.25, 1.252, 1.252, 1.253, 1.253, 1.254, 1.254, 1.254, 1.254, 1.254, 1.254, 1.254, 1.254, 1.254, 1.254, 1.254, 1.255, 1.256, 1.256, 1.257, 1.258, 1.258, 1.259, 1.259, 1.259, 1.259, 1.26, 1.261, 1.261, 1.261, 1.261, 1.261, 1.261, 1.261, 1.261, 1.261, 1.261, 1.262, 1.262, 1.262, 1.262, 1.262, 1.262, 1.262, 1.262, 1.263, 1.263, 1.263, 1.263, 1.263, 1.264, 1.264, 1.264, 1.264, 1.264, 1.265, 1.265, 1.265, 1.268, 1.268, 1.268, 1.268, 1.268, 1.268, 1.268, 1.268, 1.268, 1.268, 1.268, 1.268, 1.268, 1.268, 1.268, 1.268, 1.268, 1.268, 1.27, 1.27, 1.27, 1.27, 1.27, 1.27, 1.27, 1.27, 1.27, 1.27, 1.27, 1.27, 1.27, 1.27, 1.27, 1.27, 1.27, 1.27, 1.27, 1.27, 1.271, 1.271, 1.271, 1.272, 1.273, 1.274, 1.274, 1.274, 1.274, 1.275, 1.276, 1.276, 1.276, 1.276, 1.276, 1.277, 1.277, 1.278, 1.278, 1.278, 1.278, 1.279, 1.279, 1.28, 1.281, 1.281, 1.281, 1.281, 1.281, 1.281, 1.282, 1.282, 1.282, 1.282, 1.282, 1.282, 1.282, 1.282, 1.282, 1.282, 1.282, 1.282, 1.282, 1.282, 1.283, 1.283, 1.283, 1.284, 1.284, 1.284, 1.284, 1.285, 1.285, 1.285, 1.285, 1.285, 1.285, 1.285, 1.285, 1.285, 1.285, 1.286, 1.286, 1.286, 1.286, 1.286, 1.286, 1.287, 1.287, 1.287, 1.288, 1.288, 1.288, 1.288, 1.288, 1.288, 1.289, 1.289, 1.289, 1.289, 1.289, 1.29, 1.29, 1.29, 1.29, 1.291, 1.291, 1.291, 1.291, 1.291, 1.292, 1.292, 1.292, 1.292, 1.292, 1.293, 1.293, 1.293, 1.293, 1.293, 1.294, 1.295, 1.295, 1.295, 1.295, 1.296, 1.296, 1.296, 1.296, 1.296, 1.297, 1.297, 1.297, 1.299, 1.3, 1.301, 1.301, 1.302, 1.302, 1.302, 1.303, 1.303, 1.304, 1.304, 1.304, 1.305, 1.305, 1.305, 1.305, 1.305, 1.306, 1.306, 1.306, 1.308, 1.308, 1.308, 1.308, 1.308, 1.308, 1.309, 1.309, 1.309, 1.311, 1.311, 1.311, 1.311, 1.311, 1.311, 1.312, 1.312, 1.312, 1.315, 1.315, 1.315, 1.315, 1.315, 1.315, 1.315, 1.315, 1.315, 1.316, 1.317, 1.317, 1.317, 1.317, 1.317, 1.317, 1.317, 1.317, 1.317, 1.317, 1.317, 1.317, 1.317, 1.317, 1.317, 1.318, 1.318, 1.318, 1.318, 1.318, 1.318, 1.318, 1.318, 1.318, 1.319, 1.319, 1.32, 1.321, 1.321, 1.321, 1.321, 1.322, 1.322, 1.322, 1.322, 1.322, 1.323, 1.323, 1.323, 1.323, 1.323, 1.323, 1.323, 1.323, 1.323, 1.323, 1.323, 1.323, 1.323, 1.323, 1.323, 1.323, 1.323, 1.324, 1.324, 1.324, 1.324, 1.325, 1.325, 1.325, 1.325, 1.326, 1.326, 1.327, 1.327, 1.327, 1.328, 1.328, 1.328, 1.33, 1.33, 1.33, 1.331, 1.331, 1.331, 1.331, 1.332, 1.332, 1.332, 1.332, 1.332, 1.332, 1.334, 1.334, 1.335, 1.335, 1.335, 1.335, 1.335, 1.335, 1.335, 1.336, 1.336, 1.336, 1.336, 1.336, 1.336, 1.336, 1.337, 1.337, 1.337, 1.337, 1.338, 1.339, 1.339, 1.339, 1.339, 1.339, 1.339, 1.339, 1.339, 1.339, 1.339, 1.339, 1.339, 1.34, 1.341, 1.341, 1.341, 1.341, 1.342, 1.342, 1.342, 1.342, 1.342, 1.343, 1.343, 1.343, 1.344, 1.344, 1.344, 1.344, 1.345, 1.345, 1.345, 1.345, 1.345, 1.345, 1.346, 1.347, 1.347, 1.347, 1.347, 1.348, 1.348, 1.348, 1.348, 1.348, 1.348, 1.349, 1.35, 1.35, 1.35, 1.35, 1.35, 1.35, 1.35, 1.35, 1.351, 1.351, 1.351, 1.352, 1.352, 1.352, 1.352, 1.352, 1.353, 1.353, 1.354, 1.354, 1.354, 1.354, 1.354, 1.354, 1.354, 1.354, 1.354, 1.354, 1.354, 1.355, 1.355, 1.356, 1.357, 1.358, 1.358, 1.358, 1.359, 1.36, 1.36, 1.361, 1.362, 1.362, 1.363, 1.363, 1.363, 1.363, 1.363, 1.364, 1.364, 1.364, 1.365, 1.365, 1.365, 1.365, 1.365, 1.366, 1.366, 1.366, 1.366, 1.366, 1.367, 1.367, 1.367, 1.367, 1.367, 1.367, 1.367, 1.367, 1.367, 1.367, 1.367, 1.367, 1.367, 1.367, 1.367, 1.367, 1.368, 1.368, 1.368, 1.368, 1.369, 1.37, 1.37, 1.37, 1.37, 1.37, 1.37, 1.37, 1.37, 1.37, 1.37, 1.371, 1.371, 1.371, 1.371, 1.371, 1.372, 1.372, 1.372, 1.373, 1.373, 1.373, 1.373, 1.373, 1.374, 1.374, 1.374, 1.374, 1.374, 1.375, 1.375, 1.375, 1.375, 1.376, 1.376, 1.376, 1.376, 1.376, 1.376, 1.376, 1.376, 1.377, 1.378, 1.378, 1.378, 1.378, 1.379, 1.379, 1.379, 1.379, 1.379, 1.379, 1.379, 1.379, 1.379, 1.379, 1.379, 1.38, 1.38, 1.382, 1.382, 1.383, 1.384, 1.385, 1.386, 1.387, 1.387, 1.387, 1.387, 1.388, 1.388, 1.388, 1.388, 1.388, 1.388, 1.388, 1.388, 1.388, 1.388, 1.388, 1.388, 1.388, 1.388, 1.389, 1.389, 1.389, 1.389, 1.389, 1.391, 1.391, 1.391, 1.392, 1.392, 1.392, 1.393, 1.393, 1.393, 1.393, 1.394, 1.394, 1.394, 1.394, 1.394, 1.394, 1.395, 1.395, 1.395, 1.395, 1.396, 1.396, 1.396, 1.396, 1.396, 1.396, 1.396, 1.397, 1.397, 1.397, 1.398, 1.398, 1.398, 1.398, 1.398, 1.398, 1.398, 1.398, 1.398, 1.399, 1.4, 1.4, 1.4, 1.4, 1.4, 1.4, 1.4, 1.4, 1.4, 1.4, 1.401, 1.401, 1.401, 1.401, 1.401, 1.401, 1.401, 1.402, 1.402, 1.403, 1.403, 1.403, 1.404, 1.404, 1.404, 1.404, 1.404, 1.405, 1.405, 1.405, 1.405, 1.405, 1.405, 1.405, 1.405, 1.405, 1.405, 1.405, 1.405, 1.405, 1.406, 1.406, 1.406, 1.406, 1.406, 1.406, 1.406, 1.406, 1.406, 1.407, 1.407, 1.407, 1.407, 1.407, 1.407, 1.407, 1.407, 1.407, 1.407, 1.407, 1.409, 1.41, 1.41, 1.41, 1.41, 1.41, 1.41, 1.411, 1.411, 1.411, 1.412, 1.412, 1.412, 1.413, 1.414, 1.414, 1.414, 1.414, 1.414, 1.415, 1.415, 1.415, 1.415, 1.415, 1.415, 1.416, 1.416, 1.416, 1.416, 1.416, 1.417, 1.417, 1.417, 1.417, 1.417, 1.417, 1.417, 1.418, 1.419, 1.419, 1.419, 1.419, 1.419, 1.419, 1.419, 1.419, 1.419, 1.419, 1.419, 1.42, 1.42, 1.42, 1.42, 1.42, 1.42, 1.42, 1.42, 1.42, 1.42, 1.42, 1.421, 1.421, 1.423, 1.424, 1.425, 1.425, 1.426, 1.426, 1.426, 1.427, 1.427, 1.427, 1.427, 1.427, 1.427, 1.427, 1.427, 1.428, 1.428, 1.428, 1.428, 1.429, 1.429, 1.429, 1.429, 1.43, 1.431, 1.431, 1.431, 1.432, 1.432, 1.433, 1.433, 1.434, 1.434, 1.434, 1.434, 1.434, 1.434, 1.434, 1.434, 1.434, 1.435, 1.435, 1.435, 1.435, 1.435, 1.435, 1.435, 1.435, 1.435, 1.435, 1.435, 1.436, 1.436, 1.436, 1.436, 1.436, 1.437, 1.437, 1.437, 1.437, 1.437, 1.437, 1.437, 1.437, 1.437, 1.437, 1.437, 1.438, 1.438, 1.438, 1.438, 1.438, 1.438, 1.438, 1.438, 1.438, 1.438, 1.438, 1.438, 1.438, 1.438, 1.438, 1.439, 1.439, 1.44, 1.44, 1.44, 1.44, 1.44, 1.44, 1.44, 1.443, 1.443, 1.443, 1.443, 1.443, 1.443, 1.444, 1.445, 1.445, 1.445, 1.445, 1.445, 1.445, 1.445, 1.445, 1.445, 1.445, 1.445, 1.446, 1.446, 1.446, 1.447, 1.447, 1.447, 1.447, 1.447, 1.447, 1.447, 1.447, 1.447, 1.447, 1.447, 1.447, 1.447, 1.447, 1.447, 1.447, 1.447, 1.447, 1.447, 1.447, 1.447, 1.448, 1.448, 1.448, 1.449, 1.449, 1.45, 1.451, 1.452, 1.452, 1.452, 1.452, 1.453, 1.453, 1.453, 1.453, 1.453, 1.453, 1.454, 1.456, 1.456, 1.456, 1.456, 1.457, 1.457, 1.457, 1.458, 1.458, 1.458, 1.458, 1.458, 1.458, 1.458, 1.458, 1.458, 1.458, 1.458, 1.46, 1.46, 1.46, 1.46, 1.46, 1.46, 1.46, 1.46, 1.46, 1.461, 1.462, 1.462, 1.462, 1.462, 1.462, 1.462, 1.462, 1.462, 1.462, 1.462, 1.462, 1.462, 1.462, 1.462, 1.462, 1.462, 1.462, 1.462, 1.462, 1.462, 1.462, 1.462, 1.462, 1.463, 1.463, 1.463, 1.463, 1.464, 1.464, 1.464, 1.464, 1.464, 1.464, 1.464, 1.464, 1.464, 1.464, 1.464, 1.464, 1.464, 1.464, 1.464, 1.464, 1.464, 1.464, 1.464, 1.464, 1.465, 1.465, 1.466, 1.467, 1.467, 1.467, 1.467, 1.467, 1.467, 1.467, 1.467, 1.467, 1.467, 1.467, 1.467, 1.467, 1.467, 1.468, 1.468, 1.468, 1.468, 1.47, 1.47, 1.47, 1.47, 1.471, 1.471, 1.471, 1.472, 1.473, 1.473, 1.473, 1.473, 1.473, 1.473, 1.474, 1.474, 1.474, 1.474, 1.474, 1.474, 1.474, 1.474, 1.474, 1.475, 1.476, 1.477, 1.477, 1.477, 1.477, 1.477, 1.477, 1.478, 1.478, 1.478, 1.478, 1.478, 1.478, 1.478, 1.478, 1.478, 1.478, 1.478, 1.479, 1.479, 1.479, 1.479, 1.479, 1.479, 1.479, 1.479, 1.479, 1.479, 1.479, 1.479, 1.479, 1.479, 1.48, 1.48, 1.48, 1.48, 1.48, 1.481, 1.481, 1.481, 1.481, 1.481, 1.481, 1.481, 1.481, 1.482, 1.482, 1.482, 1.482, 1.482, 1.483, 1.483, 1.483, 1.483, 1.484, 1.484, 1.484, 1.484, 1.484, 1.484, 1.485, 1.485, 1.485, 1.485, 1.485, 1.486, 1.486, 1.486, 1.487, 1.487, 1.487, 1.487, 1.487, 1.487, 1.487, 1.487, 1.487, 1.487, 1.488, 1.488, 1.489, 1.489, 1.489, 1.489, 1.489, 1.489, 1.489, 1.489, 1.489, 1.489, 1.489, 1.489, 1.489, 1.489, 1.489, 1.489, 1.489, 1.489, 1.489, 1.489, 1.489, 1.49, 1.49, 1.49, 1.491, 1.491, 1.492, 1.493, 1.493, 1.493, 1.494, 1.494, 1.495, 1.495, 1.495, 1.495, 1.495, 1.495, 1.495, 1.495, 1.495, 1.495, 1.496, 1.496, 1.496, 1.497, 1.497, 1.497, 1.498, 1.499, 1.499, 1.499, 1.499, 1.499, 1.499, 1.499, 1.499, 1.499, 1.499, 1.499, 1.5, 1.5, 1.501, 1.501, 1.501, 1.501, 1.501, 1.501, 1.501, 1.501, 1.501, 1.501, 1.501, 1.501, 1.502, 1.503, 1.504, 1.504, 1.506, 1.506, 1.506, 1.506, 1.506, 1.506, 1.506, 1.506, 1.507, 1.507, 1.507, 1.508, 1.508, 1.508, 1.508, 1.508, 1.508, 1.509, 1.511, 1.511, 1.511, 1.511, 1.511, 1.511, 1.511, 1.511, 1.511, 1.511, 1.511, 1.511, 1.511, 1.511, 1.511, 1.511, 1.511, 1.511, 1.511, 1.511, 1.511, 1.511, 1.511, 1.511, 1.511, 1.511, 1.511, 1.512, 1.512, 1.512, 1.514, 1.514, 1.514, 1.514, 1.514, 1.514, 1.514, 1.515, 1.515, 1.515, 1.515, 1.515, 1.515, 1.515, 1.515, 1.516, 1.516, 1.516, 1.516, 1.517, 1.517, 1.517, 1.517, 1.517, 1.517, 1.517, 1.517, 1.517, 1.517, 1.518, 1.518, 1.519, 1.519, 1.519, 1.519, 1.52, 1.52, 1.52, 1.52, 1.52, 1.52, 1.52, 1.52, 1.52, 1.521, 1.521, 1.521, 1.521, 1.521, 1.522, 1.522, 1.523, 1.523, 1.523, 1.523, 1.523, 1.523, 1.523, 1.523, 1.523, 1.523, 1.524, 1.524, 1.524, 1.524, 1.524, 1.524, 1.526, 1.526, 1.526, 1.526, 1.526, 1.527, 1.527, 1.527, 1.527, 1.527, 1.527, 1.527, 1.527, 1.528, 1.528, 1.528, 1.528, 1.528, 1.528, 1.528, 1.528, 1.528, 1.528, 1.528, 1.528, 1.528, 1.528, 1.528, 1.528, 1.528, 1.529, 1.529, 1.529, 1.529, 1.529, 1.529, 1.529, 1.529, 1.529, 1.529, 1.529, 1.53, 1.53, 1.53, 1.53, 1.531, 1.531, 1.531, 1.531, 1.532, 1.532, 1.532, 1.532, 1.533, 1.533, 1.533, 1.533, 1.533, 1.533, 1.533, 1.534, 1.535, 1.535, 1.535, 1.535, 1.535, 1.535, 1.535, 1.535, 1.535, 1.535, 1.535, 1.535, 1.535, 1.535, 1.535, 1.535, 1.535, 1.535, 1.535, 1.535, 1.535, 1.535, 1.535, 1.536, 1.536, 1.536, 1.536, 1.536, 1.536, 1.537, 1.537, 1.537, 1.537, 1.537, 1.537, 1.538, 1.538, 1.538, 1.538, 1.539, 1.539, 1.539, 1.54, 1.541, 1.542, 1.542, 1.542, 1.542, 1.542, 1.544, 1.544, 1.544, 1.544, 1.545, 1.545, 1.546, 1.546, 1.547, 1.547, 1.548, 1.549, 1.55, 1.55, 1.55, 1.55, 1.55, 1.55, 1.551, 1.551, 1.552, 1.552, 1.553, 1.554, 1.554, 1.554, 1.554, 1.554, 1.554, 1.554, 1.554, 1.554, 1.554, 1.554, 1.554, 1.554, 1.554, 1.554, 1.554, 1.554, 1.554, 1.554, 1.554, 1.554, 1.555, 1.555, 1.555, 1.555, 1.555, 1.555, 1.555, 1.555, 1.555, 1.555, 1.555, 1.555, 1.555, 1.555, 1.555, 1.555, 1.555, 1.555, 1.555, 1.555, 1.555, 1.556, 1.556, 1.556, 1.557, 1.557, 1.558, 1.558, 1.558, 1.558, 1.558, 1.558, 1.558, 1.558, 1.56, 1.56, 1.562, 1.563, 1.563, 1.563, 1.563, 1.563, 1.563, 1.563, 1.563, 1.563, 1.563, 1.563, 1.563, 1.563, 1.563, 1.563, 1.563, 1.563, 1.563, 1.563, 1.563, 1.563, 1.563, 1.563, 1.563, 1.565, 1.565, 1.565, 1.566, 1.566, 1.567, 1.567, 1.567, 1.567, 1.567, 1.567, 1.567, 1.567, 1.567, 1.568, 1.568, 1.568, 1.568, 1.568, 1.569, 1.569, 1.569, 1.569, 1.569, 1.569, 1.57, 1.57, 1.571, 1.571, 1.571, 1.571, 1.573, 1.573, 1.573, 1.573, 1.573, 1.574, 1.574, 1.574, 1.574, 1.575, 1.575, 1.576, 1.576, 1.576, 1.576, 1.576, 1.576, 1.576, 1.576, 1.576, 1.576, 1.576, 1.577, 1.577, 1.577, 1.578, 1.578, 1.578, 1.578, 1.579, 1.579, 1.579, 1.58, 1.58, 1.58, 1.58, 1.58, 1.58, 1.58, 1.58, 1.58, 1.58, 1.58, 1.58, 1.58, 1.58, 1.58, 1.58, 1.58, 1.58, 1.581, 1.581, 1.581, 1.582, 1.582, 1.584, 1.584, 1.584, 1.584, 1.584, 1.584, 1.585, 1.586, 1.586, 1.586, 1.586, 1.586, 1.586, 1.587, 1.587, 1.587, 1.587, 1.587, 1.587, 1.587, 1.587, 1.587, 1.589, 1.589, 1.59, 1.59, 1.591, 1.591, 1.593, 1.595, 1.595, 1.595, 1.595, 1.596, 1.597, 1.597, 1.597, 1.597, 1.597, 1.597, 1.598, 1.598, 1.599, 1.599, 1.599, 1.601, 1.601, 1.601, 1.601, 1.601, 1.601, 1.601, 1.601, 1.601, 1.601, 1.603, 1.604, 1.604, 1.604, 1.604, 1.605, 1.605, 1.605, 1.606, 1.606, 1.606, 1.606, 1.606, 1.606, 1.606, 1.606, 1.606, 1.606, 1.607, 1.607, 1.607, 1.607, 1.607, 1.607, 1.608, 1.608, 1.608, 1.608, 1.608, 1.609, 1.609, 1.609, 1.609, 1.61, 1.61, 1.61, 1.61, 1.61, 1.61, 1.611, 1.612, 1.612, 1.612, 1.612, 1.612, 1.612, 1.612, 1.612, 1.612, 1.613, 1.614, 1.614, 1.614, 1.614, 1.614, 1.614, 1.615, 1.615, 1.615, 1.615, 1.616, 1.618, 1.618, 1.619, 1.62, 1.62, 1.62, 1.62, 1.62, 1.62, 1.62, 1.62, 1.62, 1.621, 1.622, 1.622, 1.622, 1.622, 1.623, 1.623, 1.623, 1.623, 1.623, 1.624, 1.624, 1.624, 1.624, 1.624, 1.624, 1.624, 1.624, 1.624, 1.625, 1.625, 1.625, 1.625, 1.625, 1.625, 1.625, 1.625, 1.625, 1.625, 1.625, 1.625, 1.626, 1.626, 1.626, 1.626, 1.627, 1.627, 1.628, 1.628, 1.628, 1.628, 1.628, 1.628, 1.628, 1.628, 1.629, 1.63, 1.63, 1.63, 1.63, 1.63, 1.63, 1.63, 1.63, 1.631, 1.631, 1.631, 1.631, 1.631, 1.632, 1.632, 1.633, 1.633, 1.633, 1.633, 1.634, 1.634, 1.635, 1.635, 1.636, 1.636, 1.637, 1.637, 1.637, 1.637, 1.637, 1.637, 1.638, 1.638, 1.638, 1.638, 1.638, 1.639, 1.639, 1.639, 1.639, 1.639, 1.641, 1.641, 1.641, 1.641, 1.641, 1.641, 1.641, 1.641, 1.641, 1.641, 1.641, 1.641, 1.642, 1.642, 1.642, 1.642, 1.642, 1.642, 1.642, 1.642, 1.642, 1.642, 1.642, 1.642, 1.642, 1.642, 1.642, 1.642, 1.642, 1.642, 1.642, 1.642, 1.643, 1.643, 1.643, 1.643, 1.643, 1.643, 1.643, 1.644, 1.645, 1.645, 1.645, 1.645, 1.646, 1.646, 1.646, 1.646, 1.646, 1.648, 1.648, 1.648, 1.648, 1.649, 1.649, 1.649, 1.649, 1.649, 1.65, 1.65, 1.65, 1.651, 1.651, 1.651, 1.652, 1.652, 1.652, 1.652, 1.652, 1.652, 1.653, 1.654, 1.654, 1.654, 1.654, 1.654, 1.655, 1.655, 1.655, 1.655, 1.655, 1.655, 1.655, 1.655, 1.655, 1.655, 1.655, 1.655, 1.655, 1.655, 1.655, 1.655, 1.655, 1.655, 1.656, 1.656, 1.658, 1.66, 1.66, 1.66, 1.66, 1.66, 1.66, 1.66, 1.66, 1.66, 1.66, 1.66, 1.66, 1.661, 1.661, 1.662, 1.663, 1.664, 1.664, 1.664, 1.664, 1.664, 1.664, 1.664, 1.664, 1.664, 1.664, 1.664, 1.664, 1.665, 1.665, 1.665, 1.665, 1.665, 1.665, 1.665, 1.666, 1.666, 1.666, 1.666, 1.668, 1.668, 1.668, 1.668, 1.668, 1.668, 1.668, 1.668, 1.668, 1.669, 1.669, 1.669, 1.671, 1.671, 1.671, 1.671, 1.671, 1.672, 1.672, 1.672, 1.672, 1.672, 1.672, 1.673, 1.673, 1.673, 1.673, 1.673, 1.673, 1.673, 1.673, 1.673, 1.673, 1.673, 1.673, 1.673, 1.673, 1.673, 1.673, 1.673, 1.673, 1.673, 1.673, 1.673, 1.673, 1.673, 1.674, 1.674, 1.674, 1.674, 1.674, 1.674, 1.674, 1.674, 1.674, 1.674, 1.674, 1.674, 1.674, 1.674, 1.674, 1.674, 1.674, 1.674, 1.674, 1.674, 1.674, 1.674, 1.674, 1.674, 1.674, 1.674, 1.675, 1.675, 1.675, 1.675, 1.675, 1.675, 1.676, 1.676, 1.676, 1.676, 1.676, 1.676, 1.676, 1.677, 1.677, 1.678, 1.678, 1.679, 1.679, 1.679, 1.679, 1.679, 1.679, 1.68, 1.68, 1.681, 1.681, 1.681, 1.681, 1.681, 1.681, 1.681, 1.682, 1.682, 1.682, 1.682, 1.682, 1.682, 1.682, 1.682, 1.682, 1.682, 1.682, 1.682, 1.683, 1.684, 1.684, 1.684, 1.684, 1.684, 1.684, 1.684, 1.685, 1.685, 1.685, 1.685, 1.686, 1.686, 1.686, 1.687, 1.687, 1.687, 1.687, 1.687, 1.687, 1.688, 1.689, 1.69, 1.69, 1.69, 1.69, 1.69, 1.691, 1.691, 1.691, 1.692, 1.692, 1.692, 1.692, 1.692, 1.692, 1.692, 1.692, 1.692, 1.692, 1.692, 1.692, 1.692, 1.692, 1.692, 1.692, 1.692, 1.692, 1.692, 1.692, 1.693, 1.693, 1.693, 1.693, 1.693, 1.694, 1.694, 1.695, 1.695, 1.695, 1.695, 1.695, 1.695, 1.697, 1.697, 1.697, 1.697, 1.697, 1.698, 1.698, 1.698, 1.698, 1.698, 1.699, 1.7, 1.7, 1.702, 1.703, 1.703, 1.703, 1.703, 1.703, 1.703, 1.703, 1.703, 1.703, 1.703, 1.703, 1.703, 1.703, 1.703, 1.703, 1.703, 1.703, 1.704, 1.704, 1.704, 1.704, 1.704, 1.704, 1.704, 1.704, 1.704, 1.704, 1.704, 1.704, 1.704, 1.704, 1.704, 1.704, 1.704, 1.704, 1.705, 1.705, 1.705, 1.705, 1.705, 1.705, 1.705, 1.706, 1.707, 1.707, 1.707, 1.707, 1.707, 1.707, 1.707, 1.708, 1.708, 1.708, 1.709, 1.709, 1.709, 1.709, 1.709, 1.709, 1.709, 1.709, 1.709, 1.709, 1.709, 1.71, 1.71, 1.71, 1.71, 1.71, 1.71, 1.71, 1.71, 1.71, 1.71, 1.71, 1.71, 1.71, 1.71, 1.71, 1.71, 1.71, 1.71, 1.71, 1.71, 1.71, 1.71, 1.71, 1.71, 1.711, 1.711, 1.711, 1.711, 1.711, 1.711, 1.713, 1.714, 1.714, 1.714, 1.714, 1.714, 1.714, 1.714, 1.714, 1.715, 1.716, 1.718, 1.718, 1.718, 1.718, 1.718, 1.719, 1.719, 1.719, 1.719, 1.719, 1.719, 1.719, 1.719, 1.719, 1.719, 1.719, 1.719, 1.72, 1.72, 1.72, 1.721, 1.721, 1.721, 1.721, 1.721, 1.721, 1.721, 1.721, 1.721, 1.721, 1.721, 1.721, 1.722, 1.722, 1.723, 1.723, 1.723, 1.723, 1.723, 1.723, 1.723, 1.723, 1.723, 1.723, 1.724, 1.724, 1.724, 1.724, 1.725, 1.725, 1.727, 1.727, 1.727, 1.727, 1.727, 1.727, 1.728, 1.728, 1.729, 1.73, 1.73, 1.73, 1.73, 1.73, 1.73, 1.731, 1.731, 1.731, 1.731, 1.731, 1.731, 1.731, 1.731, 1.731, 1.731, 1.731, 1.731, 1.731, 1.731, 1.732, 1.732, 1.732, 1.732, 1.732, 1.733, 1.733, 1.733, 1.733, 1.734, 1.734, 1.734, 1.734, 1.734, 1.734, 1.735, 1.735, 1.735, 1.735, 1.735, 1.735, 1.736, 1.736, 1.736, 1.736, 1.736, 1.736, 1.737, 1.738, 1.738, 1.738, 1.739, 1.74, 1.74, 1.74, 1.741, 1.741, 1.741, 1.741, 1.741, 1.741, 1.741, 1.741, 1.741, 1.741, 1.741, 1.742, 1.742, 1.742, 1.742, 1.743, 1.743, 1.743, 1.743, 1.744, 1.744, 1.744, 1.744, 1.744, 1.744, 1.744, 1.744, 1.744, 1.745, 1.745, 1.745, 1.745, 1.745, 1.745, 1.745, 1.745, 1.746, 1.746, 1.746, 1.746, 1.746, 1.746, 1.746, 1.746, 1.747, 1.747, 1.747, 1.747, 1.747, 1.747, 1.747, 1.747, 1.747, 1.747, 1.747, 1.747, 1.747, 1.747, 1.747, 1.747, 1.747, 1.747, 1.747, 1.747, 1.747, 1.747, 1.747, 1.749, 1.749, 1.749, 1.749, 1.749, 1.749, 1.749, 1.749, 1.749, 1.749, 1.75, 1.75, 1.75, 1.75, 1.75, 1.75, 1.75, 1.75, 1.75, 1.75, 1.75, 1.75, 1.751, 1.752, 1.752, 1.752, 1.752, 1.753, 1.753, 1.753, 1.753, 1.753, 1.753, 1.753, 1.753, 1.753, 1.753, 1.754, 1.756, 1.756, 1.756, 1.756, 1.756, 1.756, 1.756, 1.756, 1.756, 1.756, 1.756, 1.756, 1.756, 1.756, 1.756, 1.756, 1.756, 1.756, 1.756, 1.756, 1.756, 1.756, 1.756, 1.757, 1.757, 1.758, 1.758, 1.758, 1.758, 1.758, 1.758, 1.758, 1.759, 1.76, 1.76, 1.76, 1.76, 1.76, 1.76, 1.76, 1.76, 1.76, 1.76, 1.76, 1.76, 1.76, 1.76, 1.76, 1.76, 1.76, 1.76, 1.76, 1.76, 1.76, 1.76, 1.76, 1.76, 1.761, 1.761, 1.762, 1.762, 1.762, 1.762, 1.763, 1.763, 1.764, 1.764, 1.764, 1.764, 1.765, 1.765, 1.765, 1.765, 1.765, 1.765, 1.765, 1.765, 1.765, 1.765, 1.765, 1.765, 1.765, 1.765, 1.765, 1.766, 1.767, 1.767, 1.767, 1.767, 1.768, 1.768, 1.768, 1.768, 1.769, 1.769, 1.769, 1.769, 1.769, 1.77, 1.77, 1.771, 1.771, 1.771, 1.771, 1.771, 1.771, 1.771, 1.771, 1.771, 1.771, 1.771, 1.771, 1.772, 1.772, 1.772, 1.772, 1.772, 1.772, 1.773, 1.773, 1.773, 1.773, 1.774, 1.774, 1.775, 1.776, 1.776, 1.776, 1.777, 1.777, 1.777, 1.778, 1.779, 1.779, 1.78, 1.78, 1.781, 1.781, 1.781, 1.781, 1.781, 1.781, 1.781, 1.781, 1.782, 1.783, 1.784, 1.784, 1.784, 1.784, 1.784, 1.784, 1.784, 1.784, 1.784, 1.784, 1.784, 1.785, 1.785, 1.785, 1.785, 1.787, 1.787, 1.787, 1.787, 1.787, 1.788, 1.788, 1.788, 1.788, 1.788, 1.788, 1.788, 1.788, 1.788, 1.788, 1.788, 1.788, 1.789, 1.789, 1.789, 1.789, 1.789, 1.789, 1.789, 1.789, 1.789, 1.789, 1.789, 1.789, 1.789, 1.789, 1.789, 1.789, 1.79, 1.79, 1.79, 1.79, 1.79, 1.79, 1.79, 1.79, 1.79, 1.79, 1.79, 1.79, 1.79, 1.79, 1.791, 1.791, 1.792, 1.792, 1.793, 1.793, 1.793, 1.795, 1.795, 1.795, 1.795, 1.795, 1.796, 1.796, 1.796, 1.798, 1.798, 1.798, 1.798, 1.798, 1.798, 1.799, 1.799, 1.799, 1.799, 1.799, 1.799, 1.799, 1.8, 1.8, 1.801, 1.801, 1.801, 1.801, 1.801, 1.801, 1.802, 1.802, 1.803, 1.803, 1.804, 1.804, 1.805, 1.805, 1.806, 1.806, 1.806, 1.806, 1.806, 1.806, 1.806, 1.806, 1.806, 1.806, 1.806, 1.807, 1.807, 1.807, 1.808, 1.808, 1.808, 1.808, 1.809, 1.809, 1.809, 1.809, 1.809, 1.809, 1.809, 1.81, 1.81, 1.811, 1.812, 1.812, 1.813, 1.814, 1.815, 1.815, 1.816, 1.816, 1.817, 1.817, 1.817, 1.817, 1.817, 1.817, 1.817, 1.817, 1.817, 1.818, 1.818, 1.82, 1.82, 1.82, 1.821, 1.821, 1.822, 1.822, 1.822, 1.822, 1.823, 1.824, 1.824, 1.825, 1.825, 1.825, 1.825, 1.825, 1.825, 1.825, 1.825, 1.825, 1.825, 1.825, 1.825, 1.825, 1.825, 1.825, 1.825, 1.825, 1.825, 1.825, 1.825, 1.825, 1.826, 1.826, 1.827, 1.828, 1.828, 1.828, 1.828, 1.828, 1.828, 1.829, 1.829, 1.829, 1.83, 1.83, 1.83, 1.83, 1.831, 1.831, 1.833, 1.834, 1.834, 1.834, 1.835, 1.835, 1.835, 1.835, 1.835, 1.835, 1.835, 1.835, 1.835, 1.835, 1.835, 1.835, 1.835, 1.835, 1.835, 1.835, 1.835, 1.836, 1.836, 1.836, 1.836, 1.836, 1.836, 1.836, 1.837, 1.837, 1.837, 1.837, 1.837, 1.837, 1.837, 1.837, 1.837, 1.837, 1.837, 1.837, 1.837, 1.837, 1.837, 1.837, 1.838, 1.838, 1.838, 1.838, 1.838, 1.838, 1.838, 1.839, 1.839, 1.839, 1.839, 1.839, 1.839, 1.839, 1.839, 1.839, 1.839, 1.839, 1.839, 1.839, 1.84, 1.84, 1.84, 1.84, 1.84, 1.84, 1.84, 1.84, 1.84, 1.84, 1.841, 1.842, 1.842, 1.842, 1.842, 1.842, 1.843, 1.843, 1.843, 1.844, 1.844, 1.844, 1.845, 1.845, 1.845, 1.845, 1.845, 1.845, 1.846, 1.846, 1.846, 1.846, 1.846, 1.846, 1.846, 1.846, 1.848, 1.848, 1.848, 1.848, 1.848, 1.849, 1.85, 1.85, 1.85, 1.851, 1.851, 1.854, 1.854, 1.855, 1.855, 1.856, 1.856, 1.856, 1.857, 1.857, 1.857, 1.858, 1.858, 1.858, 1.858, 1.858, 1.858, 1.858, 1.858, 1.858, 1.858, 1.858, 1.858, 1.858, 1.859, 1.859, 1.859, 1.859, 1.859, 1.859, 1.859, 1.859, 1.859, 1.859, 1.859, 1.859, 1.859, 1.859, 1.859, 1.861, 1.861, 1.861, 1.861, 1.861, 1.861, 1.861, 1.861, 1.861, 1.861, 1.861, 1.861, 1.861, 1.861, 1.861, 1.861, 1.861, 1.861, 1.861, 1.862, 1.862, 1.862, 1.862, 1.863, 1.864, 1.864, 1.864, 1.864, 1.865, 1.866, 1.866, 1.868, 1.868, 1.869, 1.869, 1.871, 1.871, 1.871, 1.871, 1.871, 1.871, 1.871, 1.872, 1.872, 1.872, 1.873, 1.873, 1.873, 1.873, 1.873, 1.874, 1.874, 1.875, 1.875, 1.875, 1.875, 1.875, 1.875, 1.875, 1.875, 1.875, 1.876, 1.876, 1.876, 1.876, 1.876, 1.876, 1.876, 1.876, 1.876, 1.876, 1.876, 1.876, 1.876, 1.876, 1.876, 1.876, 1.876, 1.876, 1.876, 1.876, 1.876, 1.876, 1.876, 1.876, 1.876, 1.876, 1.876, 1.876, 1.878, 1.878, 1.878, 1.878, 1.878, 1.878, 1.88, 1.88, 1.881, 1.882, 1.882, 1.882, 1.882, 1.882, 1.882, 1.882, 1.882, 1.882, 1.882, 1.882, 1.882, 1.882, 1.882, 1.883, 1.883, 1.883, 1.883, 1.883, 1.883, 1.883, 1.884, 1.884, 1.884, 1.884, 1.884, 1.884, 1.884, 1.884, 1.884, 1.884, 1.885, 1.885, 1.885, 1.885, 1.885, 1.885, 1.885, 1.886, 1.886, 1.886, 1.886, 1.886, 1.886, 1.886, 1.886, 1.887, 1.887, 1.887, 1.887, 1.887, 1.887, 1.887, 1.887, 1.887, 1.888, 1.888, 1.888, 1.888, 1.889, 1.889, 1.889, 1.889, 1.889, 1.89, 1.89, 1.891, 1.891, 1.891, 1.892, 1.892, 1.892, 1.892, 1.892, 1.892, 1.892, 1.892, 1.892, 1.892, 1.892, 1.892, 1.892, 1.892, 1.892, 1.892, 1.892, 1.892, 1.892, 1.892, 1.892, 1.892, 1.892, 1.892, 1.893, 1.893, 1.893, 1.894, 1.894, 1.894, 1.894, 1.895, 1.895, 1.895, 1.895, 1.895, 1.896, 1.896, 1.896, 1.896, 1.897, 1.898, 1.898, 1.899, 1.899, 1.899, 1.899, 1.899, 1.9, 1.9, 1.901, 1.901, 1.902, 1.902, 1.902, 1.902, 1.902, 1.902, 1.902, 1.902, 1.903, 1.903, 1.903, 1.903, 1.903, 1.903, 1.903, 1.903, 1.903, 1.903, 1.903, 1.903, 1.903, 1.903, 1.903, 1.903, 1.903, 1.903, 1.903, 1.903, 1.903, 1.903, 1.904, 1.904, 1.905, 1.905, 1.905, 1.905, 1.905, 1.906, 1.906, 1.906, 1.906, 1.906, 1.907, 1.908, 1.91, 1.91, 1.91, 1.911, 1.911, 1.911, 1.912, 1.914, 1.914, 1.914, 1.914, 1.914, 1.914, 1.914, 1.914, 1.914, 1.914, 1.914, 1.914, 1.914, 1.914, 1.914, 1.914, 1.914, 1.915, 1.915, 1.915, 1.915, 1.915, 1.915, 1.915, 1.915, 1.915, 1.915, 1.915, 1.915, 1.915, 1.915, 1.915, 1.916, 1.916, 1.916, 1.916, 1.916, 1.916, 1.916, 1.916, 1.916, 1.916, 1.916, 1.916, 1.916, 1.917, 1.917, 1.917, 1.918, 1.918, 1.918, 1.918, 1.918, 1.918, 1.918, 1.918, 1.918, 1.918, 1.919, 1.919, 1.919, 1.919, 1.919, 1.919, 1.919, 1.919, 1.919, 1.919, 1.919, 1.919, 1.919, 1.919, 1.919, 1.919, 1.919, 1.92, 1.92, 1.92, 1.92, 1.92, 1.92, 1.92, 1.921, 1.921, 1.922, 1.923, 1.923, 1.923, 1.923, 1.923, 1.923, 1.924, 1.925, 1.925, 1.925, 1.925, 1.926, 1.927, 1.927, 1.927, 1.927, 1.927, 1.927, 1.927, 1.928, 1.928, 1.928, 1.928, 1.928, 1.928, 1.93, 1.93, 1.931, 1.931, 1.931, 1.931, 1.931, 1.931, 1.931, 1.933, 1.933, 1.933, 1.934, 1.934, 1.935, 1.935, 1.935, 1.935, 1.936, 1.936, 1.936, 1.936, 1.936, 1.936, 1.936, 1.936, 1.936, 1.936, 1.936, 1.936, 1.936, 1.937, 1.938, 1.938, 1.938, 1.938, 1.938, 1.938, 1.938, 1.938, 1.939, 1.94, 1.94, 1.94, 1.94, 1.94, 1.94, 1.941, 1.941, 1.941, 1.942, 1.942, 1.942, 1.942, 1.942, 1.942, 1.942, 1.943, 1.943, 1.944, 1.944, 1.945, 1.945, 1.945, 1.945, 1.945, 1.945, 1.945, 1.945, 1.945, 1.947, 1.948, 1.948, 1.948, 1.948, 1.948, 1.948, 1.948, 1.948, 1.948, 1.948, 1.948, 1.948, 1.949, 1.949, 1.949, 1.949, 1.949, 1.949, 1.949, 1.949, 1.951, 1.951, 1.951, 1.951, 1.951, 1.951, 1.951, 1.951, 1.951, 1.952, 1.952, 1.952, 1.952, 1.952, 1.952, 1.952, 1.952, 1.952, 1.953, 1.954, 1.954, 1.954, 1.954, 1.955, 1.955, 1.955, 1.955, 1.955, 1.955, 1.955, 1.955, 1.955, 1.955, 1.955, 1.955, 1.955, 1.955, 1.955, 1.955, 1.955, 1.955, 1.956, 1.957, 1.957, 1.957, 1.957, 1.958, 1.958, 1.958, 1.958, 1.958, 1.958, 1.958, 1.958, 1.958, 1.958, 1.958, 1.959, 1.959, 1.96, 1.96, 1.96, 1.96, 1.96, 1.96, 1.96, 1.96, 1.96, 1.96, 1.96, 1.96, 1.96, 1.96, 1.96, 1.96, 1.96, 1.961, 1.961, 1.961, 1.961, 1.961, 1.962, 1.962, 1.963, 1.963, 1.963, 1.963, 1.963, 1.963, 1.963, 1.964, 1.964, 1.964, 1.964, 1.964, 1.964, 1.964, 1.964, 1.964, 1.964, 1.964, 1.964, 1.964, 1.964, 1.964, 1.964, 1.964, 1.965, 1.965, 1.966, 1.966, 1.966, 1.966, 1.966, 1.966, 1.966, 1.966, 1.966, 1.966, 1.966, 1.966, 1.966, 1.966, 1.966, 1.966, 1.966, 1.966, 1.966, 1.967, 1.967, 1.967, 1.967, 1.967, 1.967, 1.967, 1.967, 1.967, 1.967, 1.967, 1.967, 1.967, 1.967, 1.967, 1.967, 1.967, 1.967, 1.967, 1.967, 1.967, 1.967, 1.967, 1.968, 1.969, 1.969, 1.969, 1.969, 1.97, 1.971, 1.971, 1.971, 1.971, 1.971, 1.971, 1.971, 1.972, 1.972, 1.972, 1.972, 1.972, 1.973, 1.973, 1.974, 1.974, 1.974, 1.974, 1.974, 1.974, 1.976, 1.976, 1.976, 1.976, 1.976, 1.976, 1.976, 1.976, 1.976, 1.976, 1.976, 1.976, 1.976, 1.976, 1.976, 1.976, 1.976, 1.977, 1.977, 1.977, 1.977, 1.977, 1.977, 1.977, 1.978, 1.979, 1.979, 1.979, 1.979, 1.979, 1.979, 1.979, 1.979, 1.979, 1.979, 1.979, 1.979, 1.979, 1.979, 1.979, 1.979, 1.979, 1.979, 1.979, 1.98, 1.98, 1.98, 1.98, 1.98, 1.98, 1.98, 1.98, 1.98, 1.98, 1.982, 1.982, 1.982, 1.982, 1.982, 1.982, 1.983, 1.986, 1.986, 1.986, 1.986, 1.986, 1.986, 1.986, 1.987, 1.988, 1.988, 1.988, 1.988, 1.988, 1.988, 1.988, 1.99, 1.99, 1.99, 1.99, 1.99, 1.99, 1.99, 1.99, 1.99, 1.99, 1.99, 1.99, 1.99, 1.99, 1.99, 1.99, 1.99, 1.992, 1.992, 1.992, 1.992, 1.992, 1.992, 1.992, 1.992, 1.992, 1.992, 1.992, 1.992, 1.992, 1.992, 1.992, 1.992, 1.992, 1.992, 1.992, 1.993, 1.993, 1.993, 1.994, 1.994, 1.994, 1.994, 1.995, 1.995, 1.996, 1.997, 1.997, 1.997, 1.998, 1.998, 1.998, 1.999, 1.999, 1.999, 1.999, 1.999, 1.999, 1.999, 1.999, 1.999, 1.999, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.0, 2.001, 2.001, 2.001, 2.001, 2.002, 2.002, 2.002, 2.002, 2.002, 2.003, 2.003, 2.005, 2.005, 2.005, 2.005, 2.005, 2.005, 2.005, 2.005, 2.005, 2.005, 2.005, 2.005, 2.005, 2.005, 2.005, 2.006, 2.006, 2.006, 2.006, 2.006, 2.006, 2.007, 2.007, 2.007, 2.008, 2.008, 2.008, 2.008, 2.009, 2.009, 2.01, 2.01, 2.01, 2.01, 2.01, 2.011, 2.011, 2.011, 2.012, 2.012, 2.012, 2.012, 2.012, 2.012, 2.013, 2.013, 2.014, 2.015, 2.015, 2.016, 2.017, 2.017, 2.017, 2.017, 2.017, 2.018, 2.018, 2.018, 2.019, 2.02, 2.02, 2.02, 2.02, 2.02, 2.02, 2.02, 2.02, 2.02, 2.02, 2.02, 2.02, 2.02, 2.02, 2.021, 2.021, 2.021, 2.021, 2.021, 2.021, 2.021, 2.021, 2.021, 2.021, 2.021, 2.021, 2.021, 2.021, 2.021, 2.021, 2.021, 2.021, 2.021, 2.021, 2.021, 2.021, 2.021, 2.021, 2.021, 2.021, 2.021, 2.021, 2.021, 2.021, 2.021, 2.021, 2.021, 2.021, 2.021, 2.021, 2.021, 2.021, 2.022, 2.022, 2.022, 2.022, 2.022, 2.023, 2.023, 2.023, 2.023, 2.023, 2.023, 2.023, 2.023, 2.023, 2.024, 2.024, 2.025, 2.025, 2.025, 2.025, 2.025, 2.027, 2.027, 2.027, 2.028, 2.028, 2.028, 2.028, 2.029, 2.029, 2.029, 2.029, 2.031, 2.031, 2.032, 2.032, 2.032, 2.032, 2.032, 2.033, 2.034, 2.034, 2.034, 2.035, 2.035, 2.035, 2.035, 2.036, 2.036, 2.036, 2.037, 2.037, 2.038, 2.038, 2.038, 2.038, 2.038, 2.038, 2.039, 2.039, 2.039, 2.039, 2.039, 2.039, 2.039, 2.039, 2.04, 2.04, 2.041, 2.041, 2.041, 2.041, 2.041, 2.042, 2.042, 2.042, 2.042, 2.043, 2.043, 2.043, 2.044, 2.044, 2.044, 2.044, 2.044, 2.044, 2.044, 2.044, 2.044]],\"toyplot\"); (function(axis, axis_id, projection)         {             axis.show_coordinates(axis_id, projection);         })(modules[\"toyplot.coordinates.Axis\"],\"t5adf7adbcd7641c6ae65780a89bdf1aa\",[{\"domain\": {\"bounds\": {\"max\": Infinity, \"min\": -Infinity}, \"max\": 12000.0, \"min\": 0.0}, \"range\": {\"bounds\": {\"max\": Infinity, \"min\": -Infinity}, \"max\": 500.0, \"min\": 0.0}, \"scale\": \"linear\"}]); (function(axis, axis_id, projection)         {             axis.show_coordinates(axis_id, projection);         })(modules[\"toyplot.coordinates.Axis\"],\"t9996507335044785bddc77a270a827cc\",[{\"domain\": {\"bounds\": {\"max\": Infinity, \"min\": -Infinity}, \"max\": 2.1404428733110348, \"min\": -0.0}, \"range\": {\"bounds\": {\"max\": Infinity, \"min\": -Infinity}, \"max\": 500.0, \"min\": 0.0}, \"scale\": \"linear\"}]); })(); <pre><code># now a try, evolve a sequence under k2p but correct with jc to see how wrong it is\n</code></pre> <pre><code>R = 0.5 # ration of transtitions/transversions\nalpha = R / R + 1\nbeta = (1/2) * 1 / R + 1\n</code></pre> <pre><code>alpha = 1e-2 # substitution rates for transitions (substitutions_site_year only for transitions)\nbeta = 1e-2 # substitution rates for transversions (substitutions_site_year only for transversions)\nR = alpha / beta\n</code></pre> <pre><code>R\n</code></pre> <pre><code>0.01\n</code></pre> <pre><code># in k2p Q matrix is:\n\n#Let the substitution rates be \u03b1 for transitions and \u03b2 for transversions\n#                                A     C     G     T\nQ_k2p = np.array([[-(alpha+2*beta), beta, alpha, beta],  # A\n                  [beta, -(alpha+2*beta), beta, alpha],  # C\n                  [alpha, beta, -(alpha+2*beta), beta],  # G\n                  [beta, alpha, beta, -(alpha+2*beta)]   # T\n                 ])\nQ_k2p\n</code></pre> <pre><code>array([[-104.,   51.,    2.,   51.],\n       [  51., -104.,   51.,    2.],\n       [   2.,   51., -104.,   51.],\n       [  51.,    2.,   51., -104.]])\n</code></pre> <pre><code>expm(Q_k2p)\n</code></pre> <pre><code>array([[9.89901347e-01, 9.99800027e-05, 9.89869341e-03, 9.99800027e-05],\n       [9.99800027e-05, 9.89901347e-01, 9.99800027e-05, 9.89869341e-03],\n       [9.89869341e-03, 9.99800027e-05, 9.89901347e-01, 9.99800027e-05],\n       [9.99800027e-05, 9.89869341e-03, 9.99800027e-05, 9.89901347e-01]])\n</code></pre> <pre><code># in k2p the P matrix (transition probabilities) is given by the following elements P0 P1 and P2\n</code></pre> <pre><code>\n</code></pre> <pre><code>\n</code></pre> <pre><code>## tsting expm(Q_k2p) to get transition probabilities matrix\n</code></pre> <pre><code>generations = 10000\nresults = np.zeros((generations, 2))\nol = lineage(expm(Q_k2p), length=1000)\nol.evolve(100)\nch1, ch2 = ol.cladogenesis()\n\nfor g in range(generations):\n    ch1.evolve()\n    ch2.evolve()\n    p_distance = np.not_equal(ch1._sequence, ch2._sequence).sum() / ch1.length\n    real_distance = (ch1.real_changes.sum() + ch2.real_changes.sum()) / ch1.length\n    # if distances is greater than 3/4 the equation does not exist\n    if p_distance &lt; 3/4:\n        # correct distance using jc model\n        corrected_distance_jc = -3/4 * np.log(1 - 4/3 * p_distance)\n    else:\n        corrected_distance_jc = np.inf\n\n    results[g] = [corrected_distance_jc, p_distance, real_distance]\n</code></pre> <pre><code>import toyplot\ncanvas, axes, mark = toyplot.plot(results, ylabel=\"Distance\", xlabel=\"Generations\");\naxes.text(generations, results[-1][0], \"With model\", style={\"text-anchor\":\"start\", \"-toyplot-anchor-shift\":\"5px\"});\naxes.text(generations, results[-1][1], \"Without model\", style={\"text-anchor\":\"start\", \"-toyplot-anchor-shift\":\"5px\"});\n</code></pre> With modelWithout model04000800012000Generations-0.50.00.5Distance(function() { var modules={}; modules[\"toyplot/tables\"] = (function()     {         var tables = [];          var module = {};          module.set = function(owner, key, names, columns)         {             tables.push({owner: owner, key: key, names: names, columns: columns});         }          module.get = function(owner, key)         {             for(var i = 0; i != tables.length; ++i)             {                 var table = tables[i];                 if(table.owner != owner)                     continue;                 if(table.key != key)                     continue;                 return {names: table.names, columns: table.columns};             }         }          module.get_csv = function(owner, key)         {             var table = module.get(owner, key);             if(table != undefined)             {                 var csv = \"\";                 csv += table.names.join(\",\") + \"\\n\";                 for(var i = 0; i != table.columns[0].length; ++i)                 {                   for(var j = 0; j != table.columns.length; ++j)                   {                     if(j)                       csv += \",\";                     csv += table.columns[j][i];                   }                   csv += \"\\n\";                 }                 return csv;             }         }          return module;     })(); modules[\"toyplot/root/id\"] = \"t9b2d5743ff2b4910a719f987b2eb196b\"; modules[\"toyplot/root\"] = (function(root_id)     {         return document.querySelector(\"#\" + root_id);     })(modules[\"toyplot/root/id\"]); modules[\"toyplot/canvas/id\"] = \"taa8a90c996234450962e6215cab099f6\"; modules[\"toyplot/canvas\"] = (function(canvas_id)     {         return document.querySelector(\"#\" + canvas_id);     })(modules[\"toyplot/canvas/id\"]); modules[\"toyplot/menus/context\"] = (function(root, canvas)     {         var wrapper = document.createElement(\"div\");         wrapper.innerHTML = \"&lt;ul class='toyplot-context-menu' style='background:#eee; border:1px solid #b8b8b8; border-radius:5px; box-shadow: 0px 0px 8px rgba(0%,0%,0%,0.25); margin:0; padding:3px 0; position:fixed; visibility:hidden;'&gt;&lt;/ul&gt;\"         var menu = wrapper.firstChild;          root.appendChild(menu);          var items = [];          var ignore_mouseup = null;         function open_menu(e)         {             var show_menu = false;             for(var index=0; index != items.length; ++index)             {                 var item = items[index];                 if(item.show(e))                 {                     item.item.style.display = \"block\";                     show_menu = true;                 }                 else                 {                     item.item.style.display = \"none\";                 }             }              if(show_menu)             {                 ignore_mouseup = true;                 menu.style.left = (e.clientX + 1) + \"px\";                 menu.style.top = (e.clientY - 5) + \"px\";                 menu.style.visibility = \"visible\";                 e.stopPropagation();                 e.preventDefault();             }         }          function close_menu()         {             menu.style.visibility = \"hidden\";         }          function contextmenu(e)         {             open_menu(e);         }          function mousemove(e)         {             ignore_mouseup = false;         }          function mouseup(e)         {             if(ignore_mouseup)             {                 ignore_mouseup = false;                 return;             }             close_menu();         }          function keydown(e)         {             if(e.key == \"Escape\" || e.key == \"Esc\" || e.keyCode == 27)             {                 close_menu();             }         }          canvas.addEventListener(\"contextmenu\", contextmenu);         canvas.addEventListener(\"mousemove\", mousemove);         document.addEventListener(\"mouseup\", mouseup);         document.addEventListener(\"keydown\", keydown);          var module = {};         module.add_item = function(label, show, activate)         {             var wrapper = document.createElement(\"div\");             wrapper.innerHTML = \"&lt;li class='toyplot-context-menu-item' style='background:#eee; color:#333; padding:2px 20px; list-style:none; margin:0; text-align:left;'&gt;\" + label + \"&lt;/li&gt;\"             var item = wrapper.firstChild;              items.push({item: item, show: show});              function mouseover()             {                 this.style.background = \"steelblue\";                 this.style.color = \"white\";             }              function mouseout()             {                 this.style.background = \"#eee\";                 this.style.color = \"#333\";             }              function choose_item(e)             {                 close_menu();                 activate();                  e.stopPropagation();                 e.preventDefault();             }              item.addEventListener(\"mouseover\", mouseover);             item.addEventListener(\"mouseout\", mouseout);             item.addEventListener(\"mouseup\", choose_item);             item.addEventListener(\"contextmenu\", choose_item);              menu.appendChild(item);         };         return module;     })(modules[\"toyplot/root\"],modules[\"toyplot/canvas\"]); modules[\"toyplot/io\"] = (function()     {         var module = {};         module.save_file = function(mime_type, charset, data, filename)         {             var uri = \"data:\" + mime_type + \";charset=\" + charset + \",\" + data;             uri = encodeURI(uri);              var link = document.createElement(\"a\");             if(typeof link.download != \"undefined\")             {               link.href = uri;               link.style = \"visibility:hidden\";               link.download = filename;                document.body.appendChild(link);               link.click();               document.body.removeChild(link);             }             else             {               window.open(uri);             }         };         return module;     })(); modules[\"toyplot.coordinates.Axis\"] = (         function(canvas)         {             function sign(x)             {                 return x &lt; 0 ? -1 : x &gt; 0 ? 1 : 0;             }              function mix(a, b, amount)             {                 return ((1.0 - amount) * a) + (amount * b);             }              function log(x, base)             {                 return Math.log(Math.abs(x)) / Math.log(base);             }              function in_range(a, x, b)             {                 var left = Math.min(a, b);                 var right = Math.max(a, b);                 return left &lt;= x &amp;&amp; x &lt;= right;             }              function inside(range, projection)             {                 for(var i = 0; i != projection.length; ++i)                 {                     var segment = projection[i];                     if(in_range(segment.range.min, range, segment.range.max))                         return true;                 }                 return false;             }              function to_domain(range, projection)             {                 for(var i = 0; i != projection.length; ++i)                 {                     var segment = projection[i];                     if(in_range(segment.range.bounds.min, range, segment.range.bounds.max))                     {                         if(segment.scale == \"linear\")                         {                             var amount = (range - segment.range.min) / (segment.range.max - segment.range.min);                             return mix(segment.domain.min, segment.domain.max, amount)                         }                         else if(segment.scale[0] == \"log\")                         {                             var amount = (range - segment.range.min) / (segment.range.max - segment.range.min);                             var base = segment.scale[1];                             return sign(segment.domain.min) * Math.pow(base, mix(log(segment.domain.min, base), log(segment.domain.max, base), amount));                         }                     }                 }             }              var axes = {};              function display_coordinates(e)             {                 var current = canvas.createSVGPoint();                 current.x = e.clientX;                 current.y = e.clientY;                  for(var axis_id in axes)                 {                     var axis = document.querySelector(\"#\" + axis_id);                     var coordinates = axis.querySelector(\".toyplot-coordinates-Axis-coordinates\");                     if(coordinates)                     {                         var projection = axes[axis_id];                         var local = current.matrixTransform(axis.getScreenCTM().inverse());                         if(inside(local.x, projection))                         {                             var domain = to_domain(local.x, projection);                             coordinates.style.visibility = \"visible\";                             coordinates.setAttribute(\"transform\", \"translate(\" + local.x + \")\");                             var text = coordinates.querySelector(\"text\");                             text.textContent = domain.toFixed(2);                         }                         else                         {                             coordinates.style.visibility= \"hidden\";                         }                     }                 }             }              canvas.addEventListener(\"click\", display_coordinates);              var module = {};             module.show_coordinates = function(axis_id, projection)             {                 axes[axis_id] = projection;             }              return module;         })(modules[\"toyplot/canvas\"]); (function(tables, context_menu, io, owner_id, key, label, names, columns, filename)         {             tables.set(owner_id, key, names, columns);              var owner = document.querySelector(\"#\" + owner_id);             function show_item(e)             {                 return owner.contains(e.target);             }              function choose_item()             {                 io.save_file(\"text/csv\", \"utf-8\", tables.get_csv(owner_id, key), filename + \".csv\");             }              context_menu.add_item(\"Save \" + label + \" as CSV\", show_item, choose_item);         })(modules[\"toyplot/tables\"],modules[\"toyplot/menus/context\"],modules[\"toyplot/io\"],\"ta59c38b2c1fc47ef85d3890d2dc662b6\",\"data\",\"plot data\",[\"x\", \"y0\", \"ytoyplot\"); (function(axis, axis_id, projection)         {             axis.show_coordinates(axis_id, projection);         })(modules[\"toyplot.coordinates.Axis\"],\"t8166db051af84950ada4d10028156fec\",[{\"domain\": {\"bounds\": {\"max\": Infinity, \"min\": -Infinity}, \"max\": 12000.0, \"min\": 0.0}, \"range\": {\"bounds\": {\"max\": Infinity, \"min\": -Infinity}, \"max\": 500.0, \"min\": 0.0}, \"scale\": \"linear\"}]); (function(axis, axis_id, projection)         {             axis.show_coordinates(axis_id, projection);         })(modules[\"toyplot.coordinates.Axis\"],\"t2415fc98a9df49f1bcc7b8d453f2b03d\",[{\"domain\": {\"bounds\": {\"max\": Infinity, \"min\": -Infinity}, \"max\": 0.5, \"min\": -0.5}, \"range\": {\"bounds\": {\"max\": Infinity, \"min\": -Infinity}, \"max\": 500.0, \"min\": 0.0}, \"scale\": \"linear\"}]); })(); <pre><code># 11.17\nimport math\nu = rate\nt = ch1.generations\nds = 3/4 * (1 - math.e ** (-4/3 * u * t))\nds\n</code></pre> <pre><code># 11.18\ncorrected_distance_jc = -3/4 * np.log(1 - 4/3 * ds)\ncorrected_distance_jc\n</code></pre> <pre><code>\n</code></pre> <pre><code>\n</code></pre>"},{"location":"chapter-5/5.0-introduction/","title":"Tree Inference (Parsimony) (TO BE UPDATED)","text":""},{"location":"chapter-5/5.0-introduction/#learning-objectives","title":"Learning objectives","text":"<p>By the end of this notebook you will:</p> <ol> <li>Understand the principle of maximum parsimony.</li> <li>Be able to calculate a Fitch Parsimony score for data given a tree.</li> <li>Know how to count evolutionary changes along branches of a tree.</li> </ol>"},{"location":"chapter-5/5.0-introduction/#phylogenetic-inference","title":"Phylogenetic inference","text":"<p>This chapter is the first in a series that will continue throughout several of the following chapters, which together will introduce the most common algorithmic and statistical methods for inferring phylogenetic trees from  data.</p> <p>The challenge of inferring phylogenetic trees has been a topic of interest  to biologists, mathematicians, statisticians, and computer scientists for  over half a century. In this time, numerous approaches have been developed  that differ in philosophical principles; in the evolutionary assumptions that they make; in their statistical consistency; in the types of data they can be applied to; and in many other ways. </p>"},{"location":"chapter-5/5.0-introduction/#history-of-tree-inference","title":"History of tree inference","text":"<ul> <li>Algorithmic approaches begin in the 1950's with the growing availability  of computers.</li> <li>Prior to this, was the development of evolutionary systematics, during the  modern synthesis. </li> <li>Hennig, cladistics, </li> </ul> <p>Although phylogenies have been used to describe evolutionary relationships among taxa since Darwin, the  application of algorithmic approaches to inferring trees arose only much  later, with the availability of computers in the 1950s. Prior to this, </p>"},{"location":"chapter-5/5.0-introduction/#the-principle-of-parsimony","title":"The principle of parsimony","text":"<p>The principle of parsimony, also termed Occam's razor, is widely used in biology as a technique for finding a solution to a problem. It advocates that when presented with competing hypotheses about the same prediction --  such as different phylogenetic hypotheses for a set of samples -- one should select the solution that requires the fewest assumptions. In evolutionary  terms, this is often interpreted to mean that the most parsimonious  solution is the one that requires the fewest observed evolutionary changes.</p>"},{"location":"chapter-5/5.0-introduction/#terminology","title":"Terminology","text":"<ul> <li> <p>make this as a table...</p> </li> <li> <p>convergence</p> </li> <li>homoplasy</li> <li>monophyletic</li> <li>paraphyletic</li> <li>systematics</li> <li>cladistics</li> <li>evolutionary taxonomy/systematics</li> <li>Linnaean taxonomy</li> <li>...</li> </ul>"},{"location":"chapter-5/5.0-introduction/#references","title":"References","text":"<ul> <li>Felsenstein chapter 10</li> <li>Wikipedia articles...</li> <li></li> </ul>"},{"location":"chapter-6/6.0-fitch-parsimony/","title":"Tree Inference (Parsimony) (TO BE UPDATED)","text":"<p> Follow along in a binder jupyter notebook:  fitch-parsimony.ipynb</p>"},{"location":"chapter-6/6.0-fitch-parsimony/#learning-objectives","title":"Learning objectives","text":"<p>By the end of this chapter you will:</p> <ol> <li>Understand how the principle of parsimony is used in phylogenetic tree inference.</li> <li>Be able to write a function to calculate a parsimony score.</li> <li>Know the difference between Fitch and Sankoff parsimony algorithms.</li> </ol>"},{"location":"chapter-6/6.0-fitch-parsimony/#the-principle-of-parsimony","title":"The principle of parsimony","text":"<p>The principle of parsimony, also termed Occam's razor, is widely used in biology. It advocates that when presented with competing hypotheses about the  same prediction -- such as different phylogenetic hypotheses for a set of  samples -- one should select the solution that requires the fewest  assumptions. In evolutionary terms, this is often interpreted to mean that  the most parsimonious solution is the one that requires the fewest  observed evolutionary changes/events.</p>"},{"location":"chapter-6/6.0-fitch-parsimony/#maximum-parsimony","title":"Maximum parsimony","text":"<p>Finding the most parsimonious tree given a phylogenetic dataset thus  requires, most importantly, an algorithm for counting the number of  evolutionary changes on a phylogenetic tree. This turns out to be  relatively simple to code algorithmically, but can be quite complex in terms of the underlying philosophical and statistical interpretations of what these changes mean. A subject we will return to later. In this chapter we will learn algorithmic methods for counting evolutionary changes,  by introducing two algorithms, Fitch parsimony and Sankoff parsimony.</p> <p>The number of evolutionary changes that must occur on a tree, given a  dataset of character states at the tips, can be referred to as its  parsimony score. Given a method for computing parsimony scores, one could in theory apply it to every possible tree topology to N taxa to find the one or more trees that require the minimum number of changes. Because the total number of possible trees is typically far too large to compute on,  heuristic search methods are employed instead, which score only a subset  of trees. This general approach, of comparing parsimony scores  on many trees to find the best scoring tree is termed maximum parsimony (MP).</p>"},{"location":"chapter-6/6.0-fitch-parsimony/#parsimony-for-teaching-evolution","title":"Parsimony for teaching evolution","text":"<p>Because parsimony is simple, it is frequently used in introductory evolution textbooks, and other resources, to show evidence for evolution without the need for describing more complex statistical models. For example, we could compare two hypotheses for the evolution of relationships among vertebrate lineages using a number of discrete character traits to show that one tree requires more evolutionary events than the other. In hypothesis 1 the  evolution of a bony skeleton is inferred to have occurred only once,  whereas in hypothesis 2 it is inferred to have evolved twice independently.</p> <ul> <li>add textbook style images here of two trees with apomorphies, one with homoplasy.</li> </ul>"},{"location":"chapter-6/6.0-fitch-parsimony/#phylogenetic-data","title":"Phylogenetic data","text":"<p>As with most phylogenetic inference algorithms, parsimony is intended to  apply to discrete character measurements, such as binary data  (<code>0</code> or <code>1</code>) or multistate characters (e.g., <code>A</code>, <code>B</code>, <code>C</code> or <code>D</code>). We discuss discrete data in much detail in chapter 3. Parsimony can be applied to DNA sequence data, and is frequently used alongside other methods for analyzing DNA, such as likelihood and distance-based inference methods. However, the niche where maximum parsimony remains most commonly used today, is in  the analysis of morphological datasets, especially in paleontology, where DNA sequence data is often not available.</p> <ul> <li>describe assumptions about traits used in the image above, such as  the number of possible states.</li> <li>describe that there is active debate about the continued value of  morphological data for inferring trees, as opposed to just being studied on trees inferred with other data. Link to readings.</li> </ul>"},{"location":"chapter-6/6.0-fitch-parsimony/#characters-on-a-tree","title":"Characters on a tree","text":"<p>Let's start with a simple example where we have measured a single discrete binary character for five different species, and we want to  examine this character with respect to a particular phylogenetic  hypothesis. We will make the assumption that the character can only be in one of two possible states, and thus that the only possible evolutionary changes are from <code>0 -&gt; 1</code> or <code>1 -&gt; 0</code>. We only have data for the tip samples, but from these data we can infer the minimum number of  evolutionary changes that must occur, given a tree, for the character states to be distributed among tips in the way that they are. </p> <pre><code>import toytree\n\n# an example five tip tree (with tip names alpha-epsilon)\ntree = toytree.tree(\"(((alpha,delta),gamma),(beta,epsilon));\")\n\n# a single binary trait character state for each species\ntrait = {\n    \"alpha\": 1,\n    \"beta\": 0,\n    \"delta\": 1,\n    \"epsilon\": 0,\n    \"gamma\": 1,\n}\n</code></pre> <p>We can easily visualize this trait in <code>toytree</code> by setting it as an attribute of the Nodes, for example by using the <code>set_node_data</code> ToyTree function. In  this example we store the trait as a feature named <code>trait</code>. We can then get  and show the data for this feature in a dataframe using <code>get_node_data</code>.  This dataframe shows node <code>idx</code> labels in the row index, and the values for each selected Node feature (here <code>name</code> and <code>trait</code>). As we can see in this table, and in the plots below, there are four internal Nodes that do not have a name or trait values assigned.</p> <pre><code># sets a .trait attribute to each Node in trait dictionary\ntree.set_node_data(\n    feature=\"trait\",\n    mapping=trait,\n    inplace=True,\n)\n\n# get and display the Node data as a dataframe\ntree.get_node_data(['name', 'trait'])\n</code></pre> name trait 0 alpha 1 1 delta 1 2 gamma 1 3 beta 0 4 epsilon 0 5 6 7 8 <p>Our current knowledge is only of the data at the tips, which looks like this on our tree hypothesis:</p> <pre><code># draw tree with tip Nodes colored by feature 'trait' \ntree.draw(\n    tree_style='s',\n    use_edge_lengths=False, \n    tip_labels_style={\"font-size\": 18},\n    node_labels=\"trait\",\n    node_colors=[\n        toytree.color.COLORS1[i] if i !=\"\" else \"lightgrey\" \n        for i in tree.get_node_data(\"trait\")\n    ],\n);\n</code></pre> <p> </p> Fig. 6.1"},{"location":"chapter-6/6.0-fitch-parsimony/#reconstruction-by-eye","title":"Reconstruction by eye","text":"<p>Given that this is a fairly small tree, we can try to estimate  the number of evolutionary changes by eye, by counting the number of events that would be required to explain the data at the tips. This is  similar to what was done in the vertebrate tree example above. Try doing this now. </p> <p>You should find that the minimum number of changes to explain this data is 1. Depending on where that change occurred in the past, there are two equally good reconstructions for this character on this tree topology. Either the  root state was <code>1</code> and transitioned to <code>0</code> in the common ancestor of  (beta, epsilon); or, the root state <code>0</code> and transitioned to <code>1</code> in the  common ancestor of (alpha, delta, gamma).</p> <p> </p> Fig. 6.2"},{"location":"chapter-6/6.0-fitch-parsimony/#fitch-algorithm","title":"Fitch algorithm","text":"<ul> <li> <p>description of Fitch...</p> </li> <li> <p>set intersection</p> </li> <li> <p>set union</p> </li> </ul> <p>Like we have done before, we will begin with a very simple implementation of the Fitch algorithm for computing parsimony scores, and build to a  more complex version. This is intended both to demonstrate how the algorithm works as clearly as possible, as well as to demonstrate some common coding practices that will be helpful for coding similar algorithms. </p> <pre><code>from typing import Dict, Any\n\ndef fitch_parsimony_single(tree: toytree.ToyTree, trait: Dict[str,Any]) -&gt; int:\n\"\"\"Return Fitch parsimony score given a tree and single trait.\n\n    For didactic purposes this function will also store a feature named \n    'fitch' to every Node which can be examined/visualized afterwards.\n\n    Parameters\n    ----------\n    tree: ToyTree\n        A tree on which to count state changes.\n    trait: Dict\n        A dict mapping tip names to a single discrete character state.\n\n    Returns\n    -------\n    int\n        The minimum changes required for trait data to evolve on this tree.\n    \"\"\"\n    # counter to keep track of change events\n    nchanges = 0\n\n    # iterate over Nodes in idxorder (postorder sorted) traversal\n    for node in tree:\n\n        # leaves are visited first, and converted to a set type\n        if node.is_leaf():\n            node.fitch = set(trait[node.name])\n\n        # internal Nodes examine the sets of their children's states\n        if not node.is_leaf():\n\n            # check for shared (intersecting) states\n            shared = set.intersection(*(i.fitch for i in node.children))\n\n            # if any states are shared then ancestor inherits this state\n            if shared:\n                node.fitch = shared\n\n            # if none shared, then store the union and increment counter\n            else:\n                node.fitch = set.union(*(i.fitch for i in node.children))\n                nchanges += 1\n    return nchanges\n</code></pre> <p>Applying this function to our example trait dataset returns a score of 1,  just as we expected from examining the tree above.  <pre><code>fitch_parsimony_single(tree, trait)\n</code></pre> <pre><code># 1\n</code></pre></p> <p>Because our function was coded to also record the set of states at each Node during the tree traversal, we can visualize this after running the function to ensure that it performed as we expected. This data was stored to a feature named \"fitch\" on each Node, and so we can extract it easily with <code>toytree</code> by entering this feature name to the <code>node_labels</code> draw argument.</p> <pre><code># draw tree to show Fitch parsimony sets at each Node as rectangle markers.\ntree.draw(\n    width=500, \n    use_edge_lengths=False,\n    node_sizes=25, \n    node_markers='r2x1',\n    node_mask=False,\n    node_colors=\"lightgrey\",\n    node_labels=\"fitch\", \n    node_labels_style={'font-size': 15},\n    tip_labels_style={'font-size': 15, '-toyplot-anchor-shift': 30}\n);\n</code></pre> <p> </p> Fig. 6.3"},{"location":"chapter-6/6.0-fitch-parsimony/#effect-of-rooting","title":"Effect of Rooting","text":"<p>As mentioned earlier, although this algorithm is applied in a postorder  traversal (from tips to the root), it does not actually rely on information about the rooting to count the number of changes. In fact, we could  arbitrarily root the tree on any edge and it would return the same score.  Let's verify this now by re-rooting the tree on each possible edge and  printing the Fitch parsimony score.</p> <pre><code># iterate over each edge that can become new root\nfor node in tree:\n    if not node.is_root():\n        # get a copy of tree rooted on new edge (selected by Node below)\n        new_rooted_tree = tree.root(node)\n\n        # print the parsimony score of this new tree\n        score = fitch_parsimony_single(new_rooted_tree, trait)\n        clade = node.get_leaf_names()\n        print(f'score={score} when rooted on {clade}')\n</code></pre> <pre><code># score=1 when rooted on ['alpha']\n# score=1 when rooted on ['delta']\n# score=1 when rooted on ['gamma']\n# score=1 when rooted on ['beta']\n# score=1 when rooted on ['epsilon']\n# score=1 when rooted on ['alpha', 'delta']\n# score=1 when rooted on ['alpha', 'delta', 'gamma']\n# score=1 when rooted on ['beta', 'epsilon']\n</code></pre> <p>Once again we can visualize the sets of one of these re-rooted trees to  see that regardless of the rooting, this tree still requires a minimum  of only one event to explain the data at the tips.</p> <pre><code># root original tree on edge above (alpha, delta)\nnew_rooted_tree = tree.root('alpha', 'delta')\n\n# get Fitch set reconstruction on Nodes\nfitch_parsimony_single(new_rooted_tree, trait)\n\n# draw the tree to show Node sets\nnew_rooted_tree.draw(\n    width=500, \n    use_edge_lengths=False,\n    node_sizes=25, \n    node_markers='r2x1',\n    node_mask=False,\n    node_colors=\"lightgrey\",\n    node_labels=\"fitch\", \n    node_labels_style={'font-size': 15},\n    tip_labels_style={'font-size': 15, '-toyplot-anchor-shift': 30}\n);\n</code></pre> <p> </p> Fig. 6.4"},{"location":"chapter-6/6.0-fitch-parsimony/#alternate-trees","title":"Alternate Trees","text":"<p>When applied to alternative tree hypotheses the parsimony score may be  higher or lower depending on their fit to the data. The example below has a higher Fitch parsimony score (worse fit to the data). </p> <p><pre><code># get an alternate tree topology\ntree2 = toytree.tree(\"(((alpha,beta),gamma),(delta,epsilon));\")\n\n# print the fitch score\nscore = fitch_parsimony_single(tree2, trait)\nprint(f\"score={score}\")\n\n# draw the tree showing sets on the Node labels.\ntree2.draw(\n    width=500, \n    use_edge_lengths=False,\n    node_sizes=25, \n    node_markers='r2x1',\n    node_mask=False,\n    node_colors=\"lightgrey\",\n    node_labels=\"fitch\", \n    node_labels_style={'font-size': 15},\n    tip_labels_style={'font-size': 15, '-toyplot-anchor-shift': 30}\n)\n</code></pre> <pre><code># score=2\n</code></pre></p> <p> </p> Fig. 6.5"},{"location":"chapter-6/6.0-fitch-parsimony/#summary","title":"Summary","text":"<p>...</p>"},{"location":"chapter-6/6.1-fitch-multiple-traits/","title":"6.1 - Character matrices","text":""},{"location":"chapter-6/6.1-fitch-multiple-traits/#learning-objectives","title":"Learning objectives","text":"<p>In this lesson you will:</p> <ul> <li>Learn methods for filtering a two dimensional character array with <code>numpy</code>.</li> <li>Write a function to calculate Fitch parsimony score for multiple traits.</li> <li></li> </ul>"},{"location":"chapter-6/6.1-fitch-multiple-traits/#character-matrix","title":"Character matrix","text":"<p>Most phylogenetic datasets will contain measurements of many traits, and  so let's now expand our Fitch parsimony algorithm to accomodate such data,  where the returned score will represent the sum of events across each measured  trait. A collection of multiple trait measurements is typically stored in a 2-dimensional matrix (also termed an array). An example character matrix  is shown below, and in Python would typically be stored either as  a <code>numpy.ndarray</code>, or as a <code>pandas.DataFrame</code>. </p> <p>This example includes seven binary characters measured across five taxa.  Another common type of data matrix is a sequence alignment, which can often  span many thousands of columns, where each can take one of four possible  states (A, C, G, T), or sometimes even ambiguous states (recorded as IUPAC  character R, S, Y, W, M). Typically, the rows of a character matrix will represent the taxa, and the columns are each a different trait; however, this is not always the case, and so it is useful to examine your data and check for row and column labels.</p> <p>In this lesson, because we are still focused on the topic of parsimony tree  inference, we will focus only on discrete characters, and not on quantitative  character matrices. Ideally, the Fitch algorithm that we design below should  work properly to return a score for any discrete character matrix. Let's  start with an example using a tree and the binary character matrix below.</p> <pre><code>import pandas as pd\nimport numpy as np\nimport toytree\n</code></pre> <pre><code># example five tip tree (with tip names alpha-epsilon)\ntree = toytree.tree(\"(((alpha,delta),gamma),(beta,epsilon));\")\n\n# example character array\narr = np.array([\n    [1, 0, 0, 1, 1 ,0, 0],\n    [0, 0, 1, 0, 0, 0, 0],\n    [1, 1, 0, 0, 0, 0, 0],\n    [1, 1, 0, 1, 1, 1, 0],\n    [0, 0, 1, 1, 1, 0, 0],\n])\n</code></pre>"},{"location":"chapter-6/6.1-fitch-multiple-traits/#data-organization","title":"Data Organization","text":"<p>In the last notebook we used the <code>ToyTree.set_node_data</code> function to set  character data as attributes of Nodes of a tree, which provided an easy  way to keep data correctly associated with the proper taxon names. In the  example above, you can see that the data matrix stored as a <code>numpy.array</code>  is less clear, and could be interpreted ambiguously about which rows  correspond to which taxon names. To reduce errors, it is good practice to  retain clarity about the assignment of data to tips in a tree, since the  order of tips is changeable, and often arbitrary. </p> <p>One way to more clearly label an array is to wrap it as a <code>pandas.DataFrame</code> object, like below. This has similar functionality to a <code>numpy.ndarray</code>, and in fact stores the data as an array under the hood, but it also includes labels on the rows and columns. These labels can be used to index items from the dataframe by row (index) and column names, as well as by indexing with numeric indices, like in <code>numpy</code>. <code>pandas</code> has several convenient  functions for reading and writing data from CSV and other tabular formatted  data files, and thus is commonly used for keeping data organized and  displaying it.</p> <pre><code># generate an example character matrix as a pandas dataframe\ndata = pd.DataFrame(\n    index=[\"alpha\", \"beta\", \"gamma\", \"delta\", \"epsilon\"],\n    data=arr,\n)\n\n# display the dataframe\ndata\n</code></pre> 0 1 2 3 4 5 6 alpha 1 0 0 1 1 0 0 beta 0 0 1 0 0 0 0 gamma 1 1 0 0 0 0 0 delta 1 1 0 1 1 1 0 epsilon 0 0 1 1 1 0 0 <p>add plot of data on the tips of tree here, demonstrating indexing from DF.</p>"},{"location":"chapter-6/6.1-fitch-multiple-traits/#array-operations","title":"Array Operations","text":"<p>Although dataframes are great for clarity and organization, they are  considerably slower than working with <code>numpy</code> arrays, and so when writing efficient code I tend to extract the array from a dataframe and operate on it directly. The example below is a somewhat complex function, named  <code>preprocess_matrix</code>, that we will use in this lesson to greatly speed up  calculations of parsimony scores from a character matrix. </p> <p>The goal of this function is to reduce the total number of characters that  actually need to be analyzed independently. In this respect, it performs three operations: (1) we can skip any data columns that are invariant, such  as \"t6\" in the table above, since we know that these will have zero events  under parsimony; (2) Similarly, we can skip any columns that have only a  single difference, such as \"t5\", since we know that regardless of the tree  topology this will require only a 1 event under parsimony, and so we can  simply count 1 for each of these; (3) Finally, we can reduce the amount of  work by counting how many unique site patterns there are, and only applying  our algorithm to these, and again multiplying the result by the number of  times it occured. For example, columns \"t3\" and \"t4\" are identical, and  similarly, \"t0\" and \"t2\" are the same, but simply inverted. </p> <p>Tricks like this are common in phylogenetic algorithms, especially when dealing with very large character matrices. Reducing the number of  unique characters that need to be independently analyzed will have a large effect when the algorithm must be repeated thousands of times, as is common when performing a full tree inference algorithm. The full <code>preprocess_matrix</code> function can be found below. We will go through it step by step to describe  each operation, with reference to the line numbers of code blocks.</p> preprocess_matrix function definition <pre><code>from typing import Tuple\n\ndef preprocess_matrix(data: pd.DataFrame) -&gt; Tuple[int, np.ndarray, pd.DataFrame]:\n\"\"\"Return a score and dict of sites to be processed.\n\n    This func will remove invariant sites and sites with only a single\n    autapomorphy to get a reduced DataFrame with only unique patterns. \n\n    Parameters\n    ----------\n    data: pandas.DataFrame\n        A pandas dataframe character matrix with taxon names as index.\n\n    Returns\n    -------\n    Tuple \n        A 3-part tuple with (score, counts, data). The score is an int \n        for the number of singleton sites; the counts is an array of ints\n        for the number of occurrence of each unique site pattern; the data\n        is a DataFrame with the unique site patterns.\n    \"\"\"\n    # get data as a numpy array\n    arr = np.array(data)\n\n    # get int array counting how many samples match the state of \n    # the first sample in each column. We will use this for filtering.\n    counts = np.sum(arr == arr[0], axis=0)\n\n    # get boolean array of invariant columns, i.e., all items match the first.\n    invariant = counts == arr.shape[0]\n\n    # get boolean array of singleton columns, i.e., nmaching is 1 or N-1\n    singletons = (counts == 1) | (counts == arr.shape[0] - 1)\n\n    # combine boolean masks and filter columns from data\n    arr = arr[:, np.invert(invariant | singletons)]\n\n    # count the number of singleton sites\n    score = singletons.sum()\n\n    # get unique site patterns and their counts\n    arr, counts = np.unique(arr, axis=1, return_counts=True)\n\n    # find columns that are the same PATTERN as others, i.e., recode patterns\n    # such that [0, 1, 1, 2] == [1, 2, 2, 0] == [2, 0, 0, 1], etc.\n    uniq_dict = {}\n    for cidx in range(arr.shape[1]):\n\n        # get a column of data. e.g., [1, 1, 0, 1, 2]\n        col = arr[:, cidx]\n\n        # get index of first occurrence of each unique base, e.g., [0, 2, 4],\n        _, idxs = np.unique(col, return_index=True)\n\n        # get order of indices, e.g., [0, 1, 2]\n        order = np.argsort(idxs).tolist()\n\n        # get site as ordered index of unique patterns, e.g., [0, 0, 1, 0, 2]\n        site = tuple((order.index(i) for i in col))\n\n        # record each uniq pattern, or add to it if already mirrored.\n        if site not in uniq_dict:\n            uniq_dict[site] = counts[cidx]\n        else:\n            uniq_dict[site] += counts[cidx]\n\n    # convert unique patterns and counts back into a dataframe and array\n    arr = np.column_stack(list(uniq_dict))\n    data = pd.DataFrame(data=arr, index=data.index)\n    counts = np.array(list(uniq_dict.values()))\n\n    # return the score, counts, and data\n    return score, counts, data\n</code></pre> <p>As an example, when we apply this function to our data it is reduced from  7 sites to only 3 unique sites, two of which occurred twice, and one that occurred once. In addition, the parsimony score for this matrix is already 1, since there was one site that had a pattern with only one sample different from the others. </p>"},{"location":"chapter-6/6.1-fitch-multiple-traits/#pandas-vs-numpy-speed","title":"Pandas vs Numpy speed","text":"<p>This preprocessing function will only need to be run once, at the beginning of a tree inference program, and therefore its overall speed is not of  great concern. However, in many other functions that we write the speed of the code will be important, since the function may need to be iterated many thousands of times, such as a function to calculate the fitch parsimony  score. Thus it is useful to learn some tricks for writing more efficient  Python code.</p> <p>One trick that I mentioned concerns the use of <code>pandas</code> versus <code>numpy</code>. A quick demonstration can show clearly that <code>numpy</code> is much faster, even for very simple operations like 2-dimensional indexing. Let's look a quick example,  using our handy <code>%%timeit</code> magic command. </p> <pre><code># create a numpy array of all zeros of size (100 x 100)\narr = np.zeros(shape=(100, 100), dtype=int)\n\n# create a dataframe containing the same data\ndata = pd.DataFrame(data=arr)\n</code></pre> <p>First let's measure the time to index a single element using <code>numpy</code>: <pre><code>%%timeit\narr[50, 50]\n</code></pre> <pre><code># 90.7 ns \u00b1 2.88 ns per loop (mean \u00b1 std. dev. of 7 runs, 10,000,000 loops each)\n</code></pre> And next let's index a single element using <code>pandas</code>: <pre><code>%%timeit\ndata.iloc[50, 50]\n</code></pre> <pre><code># 20.1 \u00b5s \u00b1 447 ns per loop (mean \u00b1 std. dev. of 7 runs, 10,000 loops each)\n</code></pre> Indexing with <code>numpy</code> is &gt;200X faster! Thus, if your function involves  indexing or performing almost any operation over a dataframe many times, it almost always beneficial to convert it to a numpy array first. </p> <p>For example, in our preprocessing function, we convert the dataframe to an  array at the beginning on line 23...</p> <pre><code>    # get data as a numpy array\n    arr = np.array(data)\n</code></pre> <p>... then we perform operations of the array, before finally converting it back to a dataframe at the end, on line 69, so that the data is returned  to the user still containing nice labels.</p> <pre><code>    data = pd.DataFrame(data=arr, index=data.index)\n</code></pre>"},{"location":"chapter-6/6.1-fitch-multiple-traits/#boolean-masking","title":"Boolean masking","text":"<p>One of the fastest and most useful ways to filter data in <code>numpy</code> arrays is by using boolean masking. This involves generating an array full of <code>boolean</code> values and using it to index the original array. This will  return the values of the array at all positions where the boolean mask is <code>True</code>, and not return where it is <code>False</code>. This can be applied to individual cells of an array, but even more useful is to apply it to columns or rows of an array. Let's walk through the  example below:</p> <pre><code>    # get int array counting how many samples match the state of \n    # the first sample in each column. We will use this for filtering.\n    counts = np.sum(arr == arr[0], axis=0)\n</code></pre> <p>This one line is actually doing something fairly complex, so let's look in more detail. Below you can see the value of the original <code>arr</code>, as well  as of the value represented by the operation inside of the function,  <code>arr == arr[0]</code>. This statement, which uses <code>==</code> operator, is asking \"are these things equal?\". Because this statement is applied to a <code>numpy</code> array,  it is broadcast to apply to each item. In this case, that involves asking  for each item, whether it matches the corresponding item in the first row. </p> <p>A bit tricky, right? But this turns out to be a very useful and common  operation when working with arrays of this type. The result of this statement is shown below as a variable named <code>mask</code>. You can see that it is a boolean  array where the first row is all True, but other items may be True or False. This function will work regardless of whether the data is binary or composed of some other multistate characters.</p> <p>The final statement below is the same as in our function. It takes the  boolean array (which we named <code>mask</code>) and calculates the sum over <code>axis=0</code>,  which means to get the sum of each column. Our final result is an integer  array with the number of values matching the first row item. As we'll see,  these counts are useful for applying our next filters to ask whether a site is invariant, or if it contains only one difference.</p> <p><pre><code># view the original data arr\nprint(f\"arr:\\n{arr}\")\n\n# compare arr columns-wise to the value in the first row of arr\nmask = arr == arr[0]\nprint(f\"\\nmask:\\n{mask}\")\n\n# get sum of True values in each column of the boolean mask\ncounts = np.sum(arr == arr[0], axis=0)\nprint(f\"\\ncounts:\\n{counts}\")\n</code></pre> <pre><code># arr:\n# [[1 0 0 1 1 0 0]\n#  [0 0 1 0 0 0 0]\n#  [1 1 0 0 0 0 0]\n#  [1 1 0 1 1 1 0]\n#  [0 0 1 1 1 0 0]]\n\n# mask:\n# [[ True  True  True  True  True  True  True]\n#  [False  True False False False  True  True]\n#  [ True False  True False False  True  True]\n#  [ True False  True  True  True False  True]\n#  [False  True False  True  True  True  True]]\n\n# counts:\n# [3 3 3 3 3 4 5]\n</code></pre></p> <p>TODO</p> <pre><code>    # get boolean array of invariant columns, i.e., all items match the first.\n    invariant = counts == arr.shape[0]\n\n    # get boolean array of singleton columns, i.e., nmaching is 1 or N-1\n    singletons = (counts == 1) | (counts == arr.shape[0] - 1)\n\n    # combine boolean masks and filter columns from data\n    arr = arr[:, np.invert(invariant | singletons)]\n</code></pre>"},{"location":"chapter-6/6.1-fitch-multiple-traits/#array-indexing","title":"Array indexing","text":"<p>TODO</p>"},{"location":"chapter-6/6.1-fitch-multiple-traits/#unique-patterns","title":"Unique patterns","text":"<p>TODO</p> <pre><code># example to reduce character matrix to unique patterns\nscore, counts, reduced_data = preprocess_matrix(data)\nprint(score)\nprint(counts)\nprint(reduced_data)\n</code></pre> <pre><code># 1\n# [1 2 2]\n#          0  1  2\n# alpha    0  0  0\n# beta     0  1  1\n# gamma    1  0  1\n# delta    1  0  0\n# epsilon  0  1  0\n</code></pre>"},{"location":"chapter-6/6.1-fitch-multiple-traits/#fitch-parsimony-function","title":"Fitch Parsimony Function","text":"<p>Now we can compute the rest of the parsimony score by  analyzing these remaining unique patterns on the tree. For this, we can  use a modification of our function from the last page which includes our <code>preprocess_matrix</code> function within it.</p> <pre><code>def fitch_parsimony(tree: toytree.ToyTree, data: pd.DataFrame) -&gt; int:\n\"\"\"Return Fitch parsimony score given a tree and single trait.\n\n    Parameters\n    ----------\n    tree: ToyTree\n        A tree on which to count state changes.\n    data: DataFrame\n        A DataFrame with tree tip labels in the index and &gt;=1 columns\n        of discrete character data as int or str.\n\n    Returns\n    -------\n    int\n        The minimum changes required for trait data to evolve on this tree.\n    \"\"\"\n    # reduce matrix to unique sites and counts, and get initial score\n    score, counts, data = preprocess_matrix(data)\n\n    # sort data to tip idxorder and convert to array (for faster indexing)\n    data = data.loc[tree.get_tip_labels()].values\n\n    # iterate over each column index of data\n    for cidx in range(data.shape[1]):\n\n        # iterate over Nodes in idxorder (postorder sorted) traversal\n        for node in tree:\n\n            # leaves are visited first, and converted to a set type\n            if node.is_leaf():\n                char = data[node.idx, cidx]\n                node._fitch = set([char])\n\n            # internal Nodes examine the sets of their children's states\n            if not node.is_leaf():\n\n                # check for shared (intersecting) states\n                shared = set.intersection(*(i._fitch for i in node.children))\n\n                # if any states are shared then ancestor inherits this state\n                if shared:\n                    node._fitch = shared\n\n                # if none shared, then store the union and increment counter\n                else:\n                    node._fitch = set.union(*(i._fitch for i in node.children))\n                    score += counts[cidx]\n    return score\n</code></pre> <p>An implementation on our example dataset: <pre><code>fitch_parsimony(tree, data)\n</code></pre></p> <pre><code># 5\n</code></pre>"},{"location":"chapter-6/6.x-additional-reading/","title":"Additional reading","text":""},{"location":"chapter-6/6.x-additional-reading/#integrating-molecular-and-morphological-data","title":"Integrating molecular and morphological data","text":"<ol> <li> <p>Morphological Phylogenetics in the Genomic Age</p> </li> <li> <p>Morphological and molecular convergences in mammalian phylogenetics</p> </li> <li> <p>The Role of Morphological Data in Phylogeny Reconstruction</p> </li> <li> <p>Morphology should not be forgotten in the era of genomics\u2013a phylogenetic perspective</p> <ul> <li>this one highly recommended.</li> </ul> </li> </ol>"},{"location":"chapter-6/6.x-additional-reading/#speed-and-other-properties-of-parsimony","title":"Speed and other properties of parsimony","text":"<ul> <li>sample addition methods, such as parsimony (e.g., mega COVID trees)</li> </ul>"},{"location":"chapter-6/6.x-heuristic-search/","title":"6.x heuristic search","text":"<ul> <li>reference back to, or copy, the enumerating-trees chapter. Maybe that can be put into chapter 5. </li> </ul>"},{"location":"chapter-6/6.x-morphology-debate/","title":"Additional readings","text":""},{"location":"chapter-6/6.x-morphology-debate/#integrating-molecular-and-morphological-data","title":"Integrating molecular and morphological data","text":"<ol> <li> <p>Morphological Phylogenetics in the Genomic Age</p> </li> <li> <p>Morphological and molecular convergences in mammalian phylogenetics</p> </li> <li> <p>The Role of Morphological Data in Phylogeny Reconstruction</p> </li> <li> <p>Morphology should not be forgotten in the era of genomics\u2013a phylogenetic perspective</p> <ul> <li>this one highly recommended.</li> </ul> </li> </ol>"},{"location":"chapter-6/6.x-paleontology/","title":"6.x paleontology","text":"<ul> <li>See Additional reading 4, and ...</li> </ul>"},{"location":"chapter-6/6.x-sankoff-parsimony/","title":"6.x sankoff parsimony","text":""},{"location":"chapter-6/6.x-sankoff-parsimony/#sankoff-parsimony","title":"Sankoff parsimony","text":"<ul> <li>Sankoff algorithm describe.</li> <li>Views calculating 3 arrays for each edge as if it were the root<ul> <li>relate back to fitch arbitrary rooting.</li> </ul> </li> <li>Relationship between the two.</li> <li>Attempt to code Fitch in groups.</li> </ul>"},{"location":"chapter-7/7.0-introduction/","title":"Distance-based tree inference","text":"<ul> <li>docs/notebooks/phylogenetic-data-science/docs/chapter-1/notebooks/chapter-11.ipynb#Expected-number-of-differences</li> </ul>"},{"location":"chapter-7/7.0-introduction/#learning-objectives-for-this-chapter","title":"Learning objectives for this chapter:","text":"<ul> <li>The effect of homoplasy on distances.</li> <li>Algorithms for inferring trees from distances.</li> <li>Simulation practice for comparing methods.</li> </ul>"},{"location":"chapter-7/7.0-introduction/#_1","title":"7.0 - Distance based trees","text":""},{"location":"chapter-7/7.0-introduction/#probability-of-no-event","title":"Probability of no event","text":"<p>Given a Markov process with some number of possible states (e.g., 4),  and parameters for the rates of change (e.g., \\(\\mu\\)), one can derive probabilistic statements about the state that the process is likely to  be in after some amount of time (\\(t\\)). At first, this may seem daunting,  given that a Markov process could take numerous possible paths through a series of states over some amount of time. However, it turns out that we can define several very useful probabilistic statements by simplifying the way in which we state probabilities we wish to compute.</p> <p>For example, let's start with the alpha parameter of the Jukes-Cantor model. This parameter is \u2153, because when an event occurs in transitions to one of three possible alternative states. </p> \\[ P(event,\\mu,t) = e^{-\\frac{4}{3}\\mu t}  \\] \\[ P(no\\ event, \\mu, t) = 1 - (e^{-\\frac{4}{3}\\mu t})  \\]"},{"location":"chapter-7/7.0-introduction/#prob-of-specific-event","title":"Prob of specific event","text":"<p>If there is at least one event, no matter how many there are, the  probability that the last one resulted in a particular nucleotide, given  that we are calculating event probabilities as 4\\(\\mu\\)/3, is just \u00bc. So,  the probability of <code>C</code> at then end of a branch that started with <code>A</code> is:</p> \\[ P(C|A,\\mu,t) = \\frac{1}{4}(1 - e^{-\\frac{4}{3}\\mu t})  \\]"},{"location":"chapter-7/7.0-introduction/#prob-of-ending-in-a-different-state","title":"Prob of ending in a different state","text":"<p>There are three states different from the starting state, so this can be calculated as:</p> \\[ D_S = \\frac{3}{4}(1 - e^{-\\frac{4}{3}\\mu t}) \\] plot prob. of ending in different state.<pre><code># get a range of branch lengths\nbranch_lengths = np.linspace(0, 5/mu, 100)\n\n# get prob for each branch length\nprob_of_diff_state = (3/4) * (1 - np.exp((-4/3) * mu * branch_lengths))\n\n# plot probabilities\ncanvas = toyplot.Canvas(width=350, height=300)\naxes = canvas.cartesian(\n    ymax=1.0, \n    xlabel=\"Branch length (t)\", \n    ylabel=\"Differences per site\", \n    label=\"Expected Diff/site under JC69\")\nmark0 = axes.plot(branch_lengths, prob_of_diff_state, stroke_width=3);\n\n# style axes\naxes.x.ticks.show = True\naxes.y.ticks.show = True\n</code></pre>"},{"location":"chapter-7/7.0-introduction/#homoplasy","title":"Homoplasy","text":""},{"location":"chapter-7/7.0-introduction/#computing-distances","title":"Computing distances","text":""},{"location":"chapter-7/7.0-introduction/#expected-distance-number-of-differences","title":"Expected distance (number of differences)","text":"<p>...</p>"},{"location":"chapter-7/7.0-introduction/#challenges-with-distances","title":"Challenges with distances","text":"<p>Although distance-based inference methods work very nicely in theory, when the true distances are known, in practice these distances are not known  and must be measured from some type of data.   - gaps and missing data: normalize for missing in each pair, or remove for all taxa? - ascertainment bias: if morphology, were the characters selected randomly, or because they exhibited variation? if DNA, how were base calls and alignments  made? - homoplasy: decay of signal over time. - selection: ... - rate variation: ...</p>"},{"location":"chapter-7/7.0-introduction/#additive-distances","title":"Additive distances","text":"<p>For distance-based tree inference ethods to work properly it is important  that the distance matrices that compose the input data to these methods  represent distances that are proportional to the true branch lengths between the samples. For example, if two species share a most recent common ancestor from which spA is a length X from it, and spB is a length Y from it, then the distance between spA and spB should be X + Y. </p> <p>The most simple assumption might be that species will accumulate differences linearly with time. But we can see clearly from above that that is not the case. The expected number of observed distances will be significantly less than expected, especially for longer branches, which plateau in the total number of changes that are expected, as each site converges towards a probablity of matching with prob=0.25. As a result, the number of  differences will be underestimated, and the amount of underestimation is  biased among sample pairs.</p>"},{"location":"chapter-7/7.0-introduction/#co-variance-among-distances","title":"Co-variance among distances","text":"<p>...</p>"},{"location":"chapter-7/7.1-least-squares/","title":"Least-squares distance-based tree inference","text":""},{"location":"chapter-7/7.1-least-squares/#introduction","title":"Introduction","text":"<p>..</p>"},{"location":"chapter-7/7.1-least-squares/#criterion-method","title":"Criterion method","text":"<p>...</p>"},{"location":"chapter-7/7.1-least-squares/#maximum-likelihood-least-squares-inference","title":"Maximum Likelihood Least Squares Inference","text":"<p>...</p>"},{"location":"chapter-7/7.1-least-squares/#generalized-least-squares","title":"Generalized Least Squares","text":"<p>...</p>"},{"location":"chapter-7/7.1-least-squares/#minimum-evolution","title":"Minimum Evolution","text":"<p>...</p>"},{"location":"chapter-7/7.2-upgma/","title":"UPGMA","text":""},{"location":"chapter-7/7.2-upgma/#assumptions","title":"Assumptions","text":"<p>...</p>"},{"location":"chapter-7/7.2-upgma/#algorithm","title":"Algorithm","text":"<p>...</p> <p>For very large data sets, even when employing bootstrapping to re-sample a data matrix and infer multiple trees, the greedy algorithmic approach to building using clustering results in only a very tiny proportion of tree  space being explored.</p>"},{"location":"chapter-7/7.2-upgma/#python-implementation","title":"Python Implementation","text":"<pre><code>import numpy as np\nimport pandas as pd\nimport toytree\n</code></pre> <pre><code>def infer_upgma_tree(data: pd.DataFrame) -&gt; toytree.ToyTree:\n\"\"\"Return a ToyTree inferred by UPGMA from a distance matrix.\n\n    ...\n    \"\"\"\n    # convert data to an array for faster processing.\n    arr = np.array(data, dtype=float)\n\n    # store tip Nodes, and add ntips attribute.\n    nodes = {}\n    for name in data.index:\n        node = toytree.Node(name=name, dist=0)\n        node._ntips = 1\n        nodes[name] = node\n\n    # loop to cluster and reduce matrix until only 1 sample left.\n    while arr.shape[0] &gt; 1:\n\n        # get ordered names from nodes dict\n        names = list(nodes.keys())\n\n        # get index (i,j) of minvalue on off-diagonal.\n        mask = np.ones(arr.shape, dtype=bool)\n        np.fill_diagonal(mask, False)\n        min_value = arr[mask].min()\n        idxs = np.where(arr == min_value)[0]\n\n        # create a new interior Node as ancestor of (i,j)\n        new_name = f\"internal-{arr.shape[0]}\"\n        new_node = toytree.Node(name=new_name, dist=0)\n        nodes[new_name] = new_node\n\n        # connect i,j to new Node with equal branch lengths\n        for idx in idxs:\n            name = names[idx]\n            node = nodes[name]\n            node._dist = (min_value / 2) - node._height\n            new_node._add_child(node)\n\n        # set height of new Node to be used by its parent to find dist.\n        new_node._height = node._height + node._dist\n\n        # count n leaves descended from new Node\n        new_node._ntips = sum(i._ntips for i in new_node._children)\n\n        # update the distance matrix to remove i,j and add new Node.\n        new_dim = arr.shape[0] - 1\n        new_arr = np.zeros(shape=(new_dim, new_dim))\n\n        # index of rows to keep\n        nidxs = [i for i in range(arr.shape[0]) if i not in idxs]\n\n        # # fill kept rows into the new_arr\n        new_arr[:new_dim - 1, :][:, :new_dim-1] = arr[nidxs, :][:, nidxs]\n\n        # remove i,j from nodes, and get ntips of each.\n        nti = nodes.pop(names[idxs[0]])._ntips\n        ntj = nodes.pop(names[idxs[1]])._ntips\n\n        # get avg distance of new Node to every other Node.\n        diks = arr[idxs[0], nidxs]\n        djks = arr[idxs[1], nidxs]\n        wdiks = (nti / (nti + ntj)) * diks\n        wdjks = (ntj / (nti + ntj)) * djks\n        avg_dists = wdiks + wdjks\n        new_arr[-1, :-1] = avg_dists\n        new_arr[:-1, -1] = avg_dists\n\n        # advance internal node name counter\n        arr = new_arr\n\n    # return the top-level Node as a ToyTree\n    return toytree.ToyTree(nodes[new_name])\n</code></pre> <p>use toyplot table cells to show matrix reducing and filling.</p>"},{"location":"chapter-7/7.2-upgma/#shortcomings","title":"Shortcomings","text":"<p>...</p>"},{"location":"chapter-7/7.3-neighbor-joining/","title":"Neighbor-Joining Tree Inference","text":""},{"location":"chapter-7/7.3-neighbor-joining/#introduction","title":"Introduction","text":"<p>Neighbor-joining (NJ) is an algorithm for inferring trees from distance data, first described by Saitou and Nei (1987). In contrast to UPGMA it  does not assume a clock, and is therefore is less likely to infer the  wrong tree due to rate variation. In fact, the NJ method is guaranteed to  recover the true tree if the distance matrix is an exact reflection of  distances on the true tree. </p> <p>For very large data sets, even when employing bootstrapping to re-sample a data matrix and infer multiple trees, the greedy algorithmic approach to building using clustering results in only a very tiny proportion of tree  space being explored.</p>"},{"location":"chapter-7/7.3-neighbor-joining/#example-data","title":"Example Data","text":"<p>To demonstrate the neighbor-joining algorithm we will re-use the same  dataset as in the previous lessons, which is a distance matrix from  Sarich (1969), and which was similarly used as an example in Felsenstein (2004). </p> <pre><code>NAMES = [\"dog\", \"bear\", \"raccoon\", \"weasel\", \"seal\", \"sea lion\", \"cat\", \"monkey\"]\nDATA = pd.DataFrame(\n    index=NAMES, columns=NAMES,\n    data=np.array([\n        [0, 32, 48, 51, 50, 48, 98, 148],\n        [32, 0, 26, 34, 29, 33, 84, 136],\n        [48, 26, 0, 42, 44, 44, 92, 152],\n        [51, 34, 42, 0, 44, 38, 86, 142],\n        [50, 29, 44, 44, 0, 24, 89, 142],\n        [48, 33, 44, 38, 24, 0, 90, 142],\n        [98, 84, 92, 86, 89, 90, 0, 148],\n        [148, 136, 152, 142, 142, 142, 148, 0],\n    ])\n)\n</code></pre>"},{"location":"chapter-7/7.3-neighbor-joining/#example-analysis","title":"Example Analysis","text":"<p>The code that we will develop below to implement a neighbor-joining tree inference algorithm is available in the <code>toytree.infer</code> subpackage:</p> <pre><code># infer an NJ tree from a distance matrix and plot it.\nTREE = toytree.infer.neighbor_joining(DATA)\nTREE.draw();\n</code></pre> <p>TODO: insert tree drawing here.</p>"},{"location":"chapter-7/7.3-neighbor-joining/#algorithm","title":"Algorithm","text":"<p>An algorithm for neighbor-joining is described by Studier and Keppler 1988, starting from a distance matrix for N samples, where the distance between sample \\(i\\) and \\(j\\) is \\(D_{ij}\\). Below this algorithm is described both  verbally, as well as in mathematical notation, and with Python code. To  demonstrate how to translate these equations into code, we will start first with how to interpret them, followed by writing psuedo-code to  convert logic into Python, and finally, we will write a full Python neighbor-joining algorithm.</p>"},{"location":"chapter-7/7.3-neighbor-joining/#1-get-average-distances","title":"1: get average distances","text":"<p>Compute the average distance (\\(u_i\\)) from each sample in the distance matrix to the others (excluding a comparison of a sample to itself):</p> \\[ u_i = \\sum\\limits_{j:j{\\neq}i}^{n} \\frac{D_{ij}}{(n-2)} \\] <p>The stated goal of this step is to compute a value for each sample, so  we know to expect the output to be a list or 1-D array of values. To  compute this for each sample at a time we could perform a for-loop that will visit each sample. So let's begin first by just writing the very first  step of this algorithm, a for-loop to iterate over each sample. This could be done with indexing, or, in this case where we have a DataFrame object, we can simply iterate over the <code>.index</code> attribute (row names).</p> <pre><code># iterate over each sample in the data\nfor sample_i in data.index:\n    # ... do whatever comes next.\n    print(sample_i)\n</code></pre> <p>Next, we see a summation symbol (\\(\\sum\\limits_{j:j{\\neq}i}^{n}\\)). Based on the lower and upper bounds of the summation, this can be interpreted to mean that we will sum something for each item \\(j\\) from a collection of items that ranges from \\(j\\) to \\(n\\). In code-think, this sounds like  another for-loop, iterating over the samples once again, but now referring to their index as \\(j\\). It also says \\({j:j{\\neq}i}\\), which means that we  should skip any iteration where the \\(j\\) is the same as \\(i\\). In other words, skip the iterations where a sample is compared to itself.  Here's what we have now:</p> <pre><code># iterate over each sample in the data\nfor sample_i in data.index:\n    for sample_j in data.index:\n        if sample_i != sample_j:\n            # ... do whatever comes next.\n            print(sample_i, sample_j)\n</code></pre> <p>Finally, we are to the part of the equation that defines the measurement that awe are summing over: \\(\\frac{D_{ij}}{(n-2)}\\). At this point in the code, we have both \\(i\\) and \\(j\\), which we can use to index a value from the  matrix \\(D\\). And we know that \\(n\\) is the number of samples, which is the same as the number of columns in the matrix. So let's calculate the \\(u_i\\) now by putting this all together. Here I use a dictionary to store values that will be summed during the iteration.</p> <p><pre><code># a dict to store u_i values\nu_values = {}\n\n# get number of samples\nnsamples = data.shape[1]\n\n# iterate over samples\nfor sample_i in data.index:\n    # start u_i value at 0\n    u_values[sample_i] = 0\n    for sample_j in data.index:\n        if sample_i != sample_j:\n            # add this value to summed u_i\n            u_values[sample_i] += data.loc[sample_i, sample_j] / (nsamples - 2)\nprint(u_values)\n</code></pre> <pre><code># {'dog': 79.16666666666667,\n#  'bear': 62.33333333333333,\n#  'raccoon': 74.66666666666667,\n#  'weasel': 72.83333333333334,\n#  'seal': 70.33333333333333,\n#  'sea lion': 69.83333333333333,\n#  'cat': 114.5,\n#  'monkey': 168.33333333333334}\n</code></pre></p> <p>The example above was written to be easy to read and understand. But,  we can actually compute the same result much faster, and more concisely, using broadcasting with <code>numpy</code> arrays (or with <code>pandas</code>).  For example, we can compute the sum of distance values across each row of  the distance matrix by calling <code>.sum(axis=0)</code>, and then divide all of the  row sums by the same constant to get the result as an array. We will use  this notation in our final function.</p> <p><pre><code>arr = np.array(data)\nuvals = arr.sum(axis=0) / (arr.shape[0] - 2)\nprint(uvals)\n</code></pre> <pre><code># array([ 79.16666667,  62.33333333,  74.66666667,  72.83333333,\n#         70.33333333,  69.83333333, 114.5       , 168.33333333])\n</code></pre></p>"},{"location":"chapter-7/7.3-neighbor-joining/#2-find-smallest-distance","title":"2: find smallest distance","text":"<p>We now have our 2-D distance matrix \\(D_{ij}\\), and a 1-D array of  \\(u_{i}\\) values. In step 2, we need to find the smallest value of \\(D_{ij} - u_i - j_i\\), which represents a modified distance that is corrected for neighbor-ness. The indices of the smallest values will represent the two samples that will be clustered  in this iteration of the algorithm. </p> <p>In the code below I subtract the \\(u_i\\) values (<code>uvals</code>) from each column of  the distance matrix (<code>arr</code>) using numpy broadcasting, and also subtract <code>uvals</code> from each row of <code>arr</code> with broadcasting by first expanding the  dimension of <code>uvals</code> so that its shape is <code>(n, 1)</code>. This is a  simple trick in numpy to broadcast row-wise versus column-wise. The new distance values are stored as <code>c_arr</code>. The following code block creates a mask to select only the values not on the diagonal, and then finds the index of the minimum value.</p> <pre><code># subtract neighbor distances column-wise and row-wise from D\nc_arr = arr - uvals - np.expand_dims(uvals, 1)\n\n# find index of min value not on the matrix diagonal\nmask = np.ones(c_arr.shape, dtype=bool)\nnp.fill_diagonal(mask, False)\nidxs, jdxs = np.where(c_arr == c_arr[mask].min())\n\n# get first index value in case there is a tie\ni = idxs[0]\nj = jdxs[0]\n</code></pre> <p>To further demonstrate, you can see below what <code>uvals</code> looks like before  and after adding a dimension, and how it is subtracted from each column or row of the distance array. (To make these arrays easier to read by  showing only two floating point values I called  <code>np.set_printoptions(precision=2)</code>).</p> <p>The values in the 2-D distance array <code>arr</code>: <pre><code>print(arr)\n</code></pre> <pre><code># [[  0  32  48  51  50  48  98 148]\n#  [ 32   0  26  34  29  33  84 136]\n#  [ 48  26   0  42  44  44  92 152]\n#  [ 51  34  42   0  44  38  86 142]\n#  [ 50  29  44  44   0  24  89 142]\n#  [ 48  33  44  38  24   0  90 142]\n#  [ 98  84  92  86  89  90   0 148]\n#  [148 136 152 142 142 142 148   0]]\n</code></pre></p> <p>Subtract the \\(i^{th}\\) \\(u_i\\) value from all items in the \\(i^{th}\\) column of <code>arr</code>: <pre><code>print(uvals)\n</code></pre> <pre><code># [ 79.17  62.33  74.67  72.83  70.33  69.83 114.5  168.33]\n</code></pre> <pre><code># subtract column-wise\nprint((data - uvals)\n</code></pre> <pre><code># [[ -79.17  -30.33  -26.67  -21.83  -20.33  -21.83  -16.5   -20.33]\n#  [ -47.17  -62.33  -48.67  -38.83  -41.33  -36.83  -30.5   -32.33]\n#  [ -31.17  -36.33  -74.67  -30.83  -26.33  -25.83  -22.5   -16.33]\n#  [ -28.17  -28.33  -32.67  -72.83  -26.33  -31.83  -28.5   -26.33]\n#  [ -29.17  -33.33  -30.67  -28.83  -70.33  -45.83  -25.5   -26.33]\n#  [ -31.17  -29.33  -30.67  -34.83  -46.33  -69.83  -24.5   -26.33]\n#  [  18.83   21.67   17.33   13.17   18.67   20.17 -114.5   -20.33]\n#  [  68.83   73.67   77.33   69.17   71.67   72.17   33.5  -168.33]]\n</code></pre></p> <p>Alternatively, subtract the \\(i^{th}\\) \\(u_i\\) value from all items in the  \\(i^{th}\\) row of <code>arr</code>. <pre><code># reshape to (n,1) to align row-wise with arr\nprint(np.expand_dims(uvals, 1))\n</code></pre> <pre><code># [[ 79.17]\n#  [ 62.33]\n#  [ 74.67]\n#  [ 72.83]\n#  [ 70.33]\n#  [ 69.83]\n#  [114.5 ]\n#  [168.33]]\n</code></pre></p> <p><pre><code># subtract row-wise\nprint((data - np.expand_dims(uvals, 1)))\n</code></pre> <pre><code># [[ -79.17  -47.17  -31.17  -28.17  -29.17  -31.17   18.83   68.83]\n#  [ -30.33  -62.33  -36.33  -28.33  -33.33  -29.33   21.67   73.67]\n#  [ -26.67  -48.67  -74.67  -32.67  -30.67  -30.67   17.33   77.33]\n#  [ -21.83  -38.83  -30.83  -72.83  -28.83  -34.83   13.17   69.17]\n#  [ -20.33  -41.33  -26.33  -26.33  -70.33  -46.33   18.67   71.67]\n#  [ -21.83  -36.83  -25.83  -31.83  -45.83  -69.83   20.17   72.17]\n#  [ -16.5   -30.5   -22.5   -28.5   -25.5   -24.5  -114.5    33.5 ]\n#  [ -20.33  -32.33  -16.33  -26.33  -26.33  -26.33  -20.33 -168.33]]\n</code></pre></p> <p>The final result was to perform both subtractions on the distance matrix and then to find the index of the lowest off-diagonal value. In the matrix below the lowest value is -134.83, at index <code>(6, 7)</code>,  or <code>(7, 6)</code>, depending on which side of the matrix is searched first.</p> <p><pre><code>print(arr - uvals - np.expand_dims(uvals, 1))\n</code></pre> <pre><code># [[-158.33 -109.5  -105.83 -101.    -99.5  -101.    -95.67  -99.5 ]\n#  [-109.5  -124.67 -111.   -101.17 -103.67  -99.17  -92.83  -94.67]\n#  [-105.83 -111.   -149.33 -105.5  -101.   -100.5   -97.17  -91.  ]\n#  [-101.   -101.17 -105.5  -145.67  -99.17 -104.67 -101.33  -99.17]\n#  [ -99.5  -103.67 -101.    -99.17 -140.67 -116.17  -95.83  -96.67]\n#  [-101.    -99.17 -100.5  -104.67 -116.17 -139.67  -94.33  -96.17]\n#  [ -95.67  -92.83  -97.17 -101.33  -95.83  -94.33 -229.   -134.83]\n#  [ -99.5   -94.67  -91.    -99.17  -96.67  -96.17 -134.83 -336.67]]\n</code></pre></p>"},{"location":"chapter-7/7.3-neighbor-joining/#3-get-branch-lengths","title":"3: get branch lengths","text":"<p>Given that we just found the \\(i\\) and \\(j\\) indices above, the code to calculate the branch lengths of these Nodes to their internal Node parent  is very simple:</p> \\[  v_i = \\frac{1}{2}D_{ij} + \\frac{1}{2}(u_i - u_j)  \\] \\[ v_j = \\frac{1}{2}D_{ij} + \\frac{1}{2}(u_j - u_i)  \\] <pre><code># get branch lengths for Nodes i and j\nv_i = 0.5 * arr[i, j] + 0.5 * (uvals[i] - uvals[j])\nv_j = 0.5 * arr[i, j] + 0.5 * (uvals[j] - uvals[i])\n</code></pre> <p>This information could be used right away to begin to construct a tree,  for example by creating <code>toytree.Node</code> instances and connecting them; or, this information could be stored until the end, after all iterations of  the algorithm are finished, and the final tree constructed then. Either way, the information that exists at this point in the algorithm, during our first iteration, is that two Nodes have now been joined, and the other tips remain not yet joined. Before we can proceed to the next  iteration, we need to update the distance matrix to remove the two tip  Nodes that are not longer relevant, and to replace them with their new parent Node, and its distances to the other Nodes.</p> <p>TODO: insert drawing here...</p>"},{"location":"chapter-7/7.3-neighbor-joining/#4-update-matrix-distances","title":"4: update matrix distances","text":"<p>We now need to update the distance matrix so that ...</p> <pre><code># get dimension of the new matrix and make a new empty array\nnew_dim = arr.shape[0] - 1\nnew_arr = np.zeros(shape=(new_dim, new_dim))\n\n# create a boolean mask of old matrix size, with False at i and j.\nmask = np.ones(arr.shape[0], dtype=bool)\nmask[[i, j]] = False\n\n# fill new matrix with dists from old matrix for non-i,j samples\nnew_arr[:new_dim - 1, :][:, :new_dim - 1] = arr[mask, :][:, mask]\n\n# get distances from each remaining sample to the new ancestor of i,j\nnew_arr[-1, :-1] = new_arr[:-1, -1] = (arr[i] + arr[j] - arr[i, j])[mask] / 2.\n\n# replace arr with the new arr\narr = new_arr\n</code></pre>"},{"location":"chapter-7/7.3-neighbor-joining/#5-repeat-if-2-samples-remain","title":"5: repeat if &gt;2 samples remain","text":""},{"location":"chapter-7/7.3-neighbor-joining/#next","title":"NEXT...","text":""},{"location":"chapter-7/7.4-applied/","title":"Distance-methods applied","text":"<pre><code>import toytree\nimport ipcoal\n</code></pre>"},{"location":"chapter-7/7.4-applied/#simulate-data","title":"Simulate data","text":""},{"location":"chapter-7/7.4-applied/#get-distances","title":"Get Distances","text":""},{"location":"chapter-7/7.4-applied/#infinite-alleles","title":"Infinite alleles","text":""},{"location":"chapter-7/7.4-applied/#_1","title":"7.4 - Applied examples","text":""},{"location":"chapter-7/7.4-applied/#infer-trees","title":"Infer trees","text":""},{"location":"chapter-7/7.4-applied/#using-toytree","title":"Using toytree","text":""},{"location":"chapter-7/7.4-applied/#using-external-software","title":"Using external software","text":""},{"location":"chapter-7/7.4-applied/#upgma-shortcoming","title":"UPGMA shortcoming","text":""},{"location":"chapter-7/7.4-applied/#nj-shortcoming","title":"NJ shortcoming","text":""},{"location":"chapter-7/7.4-applied/#least-squares-shortcoming","title":"Least-squares shortcoming","text":"<p>Speed. As the tree becomes quite large this method has a speed of ???</p> <p>We can see this by plotting the time to infer the tree against the  number of tips in the tree...</p>"},{"location":"chapter-7/7.5-new-applications/","title":"7.5 - New Applications","text":""},{"location":"chapter-7/7.5-new-applications/#additional-reading","title":"Additional reading","text":"<p>Researchers continue to develop new and improved Neighbor-joining algorithms, and to explore the properties and applications of clustering algorithms for  inferring phylogenetic trees, as well as other types of information, ranging from networks to community structure. Distance-based evolutionary inference methods remain a hot topic of research:</p> <ul> <li> <p>Gascuel O, Steel M. Neighbor-joining revealed. Mol Biol Evol. 2006 Nov;23(11):1997-2000. doi: 10.1093/molbev/msl072. Epub 2006 Jul 28. PMID: 16877499. A summary of mathematical work on neighbor-joining 10 years after Saitou and Nei.</p> </li> <li> <p>Bryant D, Moulton V. Neighbor-net: an agglomerative method for the construction of phylogenetic networks. Mol Biol Evol. 2004 Feb;21(2):255-65. doi: 10.1093/molbev/msh018. Epub 2003 Dec 5. PMID: 14660700. The application of a neighbor-joining-like method to estimating phylogenetic networks.</p> </li> <li> <p>Mailund T, Brodal GS, Fagerberg R, Pedersen CN, Phillips D. Recrafting the neighbor-joining method. BMC Bioinformatics. 2006 Jan 19;7:29. doi: 10.1186/1471-2105-7-29. PMID: 16423304; PMCID: PMC3271233. Algorithmic and approximate methods for speeding up calculations of neighbor-joining tree inference.</p> </li> <li> <p>Levy D, Yoshida R, Pachter L. Beyond pairwise distances: neighbor-joining with phylogenetic diversity estimates. Mol Biol Evol. 2006 Mar;23(3):491-8. doi: 10.1093/molbev/msj059. Epub 2005 Nov 9. PMID: 16280538. The application of a neighbor-joining method to studying communities.</p> </li> <li> <p>Lacey MR, Chang JT. A signal-to-noise analysis of phylogeny estimation by neighbor-joining: Insufficiency of polynomial length sequences. Math Biosci. 2006 Feb;199(2):188-215. doi: 10.1016/j.mbs.2005.11.003. Epub 2006 Jan 18. PMID: 16412478. An examination of whether sufficient information exists for NJ to be accurate for large datasets.</p> </li> <li> <p>Tamura K, Nei M, Kumar S. Prospects for inferring very large phylogenies by using the neighbor-joining method. Proc Natl Acad Sci U S A. 2004 Jul 27;101(30):11030-5. doi: 10.1073/pnas.0404206101. Epub 2004 Jul 16. PMID: 15258291; PMCID: PMC491989. Another examination of whether sufficient information exists for NJ to be accurate for large datasets.</p> </li> </ul> <p>...</p> <ul> <li>species tree and distance tree papers</li> <li>logdet papers</li> <li>...</li> </ul>"},{"location":"chapter-8/8.0-intro/","title":"8.0 intro","text":""},{"location":"chapter-8/8.0-intro/#in-progress","title":"In progress.","text":""},{"location":"chapter-8/8.0-intro/#likelihood","title":"Likelihood","text":"<p>In statistics, the likelihood is defined as the probability of observing  data given a parameterized model. In practice, we have usually have data  in the form of an observation, and want to know the parameters of a model,  as a way of interpreting the observation in a statistical way. </p> <p>Maximum likelihood estimation is a method for estimating the parameters  of a model based on observed data. It aims to find the model parameters that  best fit the data. Once you understand the basic outline of the Maximum  likelihood approach, it can be intuitive, and even simple to implement. For  this reason it has become widely used. However, there are several common mistakes or misconceptions that are often made when first learning  likelihood that we will aim to dispel here. </p>"},{"location":"chapter-8/8.0-intro/#probability-and-likelihood","title":"Probability and Likelihood","text":"<p>What is the difference between a probability and a likelihood?  - probability distribution sums to 1. - likelihood distribution is not required to sum to 1, and can be infinite? - https://jaketae.github.io/study/likelihood/</p>"},{"location":"chapter-8/8.0-intro/#statistical-models","title":"Statistical Models","text":"<p>In order to test and compare hypotheses about the way the world works we often formulate our hypotheses into statistical models -- simplified  mathematical representations. In order to simplify the world of possible  outcomes, such models are usually formulated to describe a  generative process, based on statistical assumptions, for how a  set of observed data could be generated. </p> <p>For example, if were modeling a coin toss we could assume the heads and  tails are the only possible outcomes, and each toss is statistically  independent of the results of any previous toss. Similarly, if we were  modeling a linear relationship between height and weight we would assume that these two variables have a linear relationship and that any deviations from this line will be randomly distributed according to a normal  distribution. These assumptions are imperfect -- it is possible, though unlikely, that a coin toss could land on its thin edge, and similarly,  that that the relationship between height and weight is strongly  dependent on other variables, or that the error is distributed  non-normally. </p>"},{"location":"chapter-8/8.0-intro/#phylogenetic-likelihoods","title":"Phylogenetic likelihoods","text":"<p>The goal of maximum likelihood in phylogenetics is to find the best set of  model parameters to explain a set of observed data. This is the same  description as above, for very different types of models, and that is fine, since phylogenetic models themselves can also come in many different forms,  as can the data. For example, the data that is being fit in a phylogenetic  model may be many different types of discrete or continuous character data,  from morphology to genetic sequences, to biogeograpic observations. Many  of the most exciting new phylogenetic inference methods aim to combine many of these types of data into a single integrated analyses, as can be performed in the software RevBayes [cite]. </p>"},{"location":"chapter-8/8.0-intro/#an-introduction-to-likelihood","title":"An introduction to likelihood","text":""},{"location":"chapter-8/8.0-intro/#generative-models","title":"Generative Models","text":"<p>An incredibly useful procedure to ... <code>numpy.random</code> package. </p> <pre><code># initialize a random number generator from a seed\nrng = np.random.default_rng(seed=123)\n\n# sample from a binomial statistical distribution with p=0.5\ntosses = rng.binomical(n=1, p=0.5, size=1000)\n\n# sample from a normal distribution with std=0.5\nerrors = rng.normal(scale=0.5, size=1000)\n</code></pre>"},{"location":"chapter-8/8.0-intro/#bayesian-statistics","title":"Bayesian statistics","text":"\\[ P(H|D) = \\frac{P(H~and~D)}{P(D)} = P(D|H)\\frac{P(H)}{P(D)} \\] <p>Therefore,</p> \\[ \\frac{P(H_1|D) = P(D|H_1)~P(D)} {P(H_2|D) = P(D|H_2)~P(D)} \\]"},{"location":"cookbooks/1-amaranthus-dioecy-api/","title":"1 amaranthus dioecy api","text":""},{"location":"cookbooks/1-amaranthus-dioecy-api/#workflow-diagram","title":"Workflow diagram","text":"<pre><code>%%{init: {'theme': 'dark', \"flowchart\" : { \"curve\" : \"basis\" } } }%%\ngraph LR\n    A(kcount)\n    B(kfilter)\n    C(kextract)\n    D(kassemble)\n    A --&gt; B --&gt; C --&gt; D\n</code></pre>"},{"location":"cookbooks/1-amaranthus-dioecy-api/#study-description","title":"Study description","text":"<p>Here we implement the study by Neves et al. to detect a male linked  genomic region involved in sex determination in the dioecious plant species Amaranthus palmeri. This study uses pool-seq to sequence four populations composing male and female plants from two geographically distinct populations.</p> <p>Ca\u0301tia Jose\u0301 Neves, Maor Matzrafi, Meik Thiele, Anne Lorant, Mohsen B Mesgaran, Markus G Stetter, Male Linked Genomic Region Determines Sex in Dioecious Amaranthus palmeri, Journal of Heredity, Volume 111, Issue 7, October 2020, Pages 606\u2013612, https://doi.org/10.1093/jhered/esaa047</p>"},{"location":"cookbooks/1-amaranthus-dioecy-api/#get-the-fastq-data","title":"Get the fastq data","text":"<p>If you wish to follow along you can dowload the data with these instructions.</p> download fastq data using wget <pre><code># make a directory to store the raw fastq data files\nmkdir -p ./fastq-data\n\nURLS=(\nftp://ftp.sra.ebi.ac.uk/vol1/fastq/ERR416/001/ERR4161581/ERR4161581_1.fastq.gz\n    ftp://ftp.sra.ebi.ac.uk/vol1/fastq/ERR416/001/ERR4161582/ERR4161582_1.fastq.gz\n    ftp://ftp.sra.ebi.ac.uk/vol1/fastq/ERR416/001/ERR4161583/ERR4161583_1.fastq.gz\n    ftp://ftp.sra.ebi.ac.uk/vol1/fastq/ERR416/001/ERR4161584/ERR4161584_1.fastq.gz\n)\n\n# download files to the specified fastq directory\nfor url in ERR4161581 ERR4161582 ERR4161583 ERR4161584; do\nwget $url;\ndone\n</code></pre> or, download fastq data using sra-tools <p>Download the latest version of the sratools from https://github.com/ncbi/sra-tools/wiki/01.-Downloading-SRA-Toolkit by selecting the compiled binaries that are  appropriate for your system (e.g., Linux or MacOSX). (I really do  recommend that you use the latest version since this software is updated frequently and does not maintain compatibility with older versions. Follow the instructions to setup gcloud or aws to dramatically improve speed.) Then run the command below to download the fastq data for this study  into a new directory. The total filesize will be about 140Gb.</p> <pre><code># make a directory to store the raw fastq data files\nmkdir -p ./fastq-data\n\n# download files to the specified fastq directory\nfor run in ERR4161581 ERR4161582 ERR4161583 ERR4161584; do\nfasterq-dump --progress --outdir ./fastq-data --temp /tmp $run;\ndone\n</code></pre>"},{"location":"cookbooks/1-amaranthus-dioecy-api/#setup-imports-and-data-files","title":"Setup: imports and data files","text":"<p>Set the logging level on kmerkit to specify more or less logged info. <pre><code>import kmerkit\nkmerkit.set_loglevel(\"INFO\")\n</code></pre></p> <p>Load the files to a dictionary mapping sample names to a list of  file names. <pre><code># create a dictionary mapping study sample names to list of file paths\nFASTQ_DICT = {\n    \"california-male\": [\"ERS4574576_R1.fastq.gz\", \"ERS4574576_R2.fastq.gz\"],\n    \"california-female\": [\"ERS4574577_R1.fastq.gz\", \"ERS4574577_R2.fastq.gz\"],\n    \"kansas-male\": [\"ERS4574578_R1.fastq.gz\", \"ERS4574578_R2.fastq.gz\"],\n    \"kansas-female\": [\"ERS4574579_R1.fastq.gz\", \"ERS4574579_R2.fastq.gz\"],\n}\n</code></pre></p> FASTQ_DICT grouping of sample names to list of file paths. <pre><code>\n</code></pre>"},{"location":"cookbooks/1-amaranthus-dioecy-api/#create-kmer-databases","title":"Create kmer databases","text":"<pre><code># init counter class object\ntool = Kcount(\n    fastq_dict=FASTQ_DICT,\n    name=\"hybridus\", \n    workdir=\"/tmp/\", \n    kmersize=35,\n    trim_reads=True,\n    mindepth=15,\n    maxdepth=2000,\n    maxcount=65535,       # max count possible with 16 bit integers\n    canonical=True,\n)\n\n# run the analysis\ntool.run()\n\n# optionally access a stats summary for the run\nprint(tool.statsdf)\n</code></pre> kmerkit logged output <pre><code>...\n</code></pre>"},{"location":"cookbooks/1-amaranthus-dioecy-api/#filter-kmers-unique-to-males","title":"Filter kmers: unique to males","text":"<pre><code>tool = Kfilter(\n    name=\"hybridus\",\n    workdir=\"/tmp\",\n    trait_dict={\n        0: [\"california-female\", \"kansas-female\"],\n        1: [\"california-male\", \"kansas-male\"],\n    },\n    mincov=0.0,        # no global min applied.\n    minmap={\n        0: 0.0,        # group 0 can have as little as 0 coverage\n        1: 0.5,        # group 1 must have at least 50% coverage\n    },\n    maxmap={\n        0: 0.0,        # group 0 must have 0 coverage\n        1: 1.0,        # group 1 can have up to 100% coverage\n    },\n    mincov_canon={\n        0: 0.0,        # no canonical min in group 0\n        1: 0.5,        # kmer must be canonical in 50% of group 1 samples\n    }\n)\ntool.run()\nprint(tool.statsdf)\n</code></pre> kmerkit logged output <pre><code>...\n</code></pre> <p>The resulting files are KMC database files written with the name prefix <code>{workdir}/{name}-{sample-name}-kfilter.[pre,suf]</code></p> peek at workdir file structure <pre><code>.\n|---workdir\n    |\n    ------- a\n    |-------b\n    --------c\n    ...\n</code></pre>"},{"location":"cookbooks/1-amaranthus-dioecy-api/#extract-reads-unique-to-males","title":"Extract reads unique to males","text":"<pre><code># set up filter tool\ntool = Kextract(\n    name=\"hybridus\",\n    workdir=\"/tmp\",\n    fastq_path=FASTQ_DICT,\n    group_kmers=\"/tmp/kfilter_hybridus_filtered\",\n    mindepth=1,\n)\ntool.run()\nprint(tool.statsdf.T)\n</code></pre> kmerkit logged output <pre><code>...\n</code></pre>"},{"location":"cookbooks/1-amaranthus-dioecy-api/#assemble-contigs-from-extracted-reads","title":"Assemble contigs from extracted reads","text":"<p>For every <code>--sample</code> provided to <code>kassemble</code> </p> <pre><code>kmerkit kextract \\\n    --name amaranth-dioecy \\\n    --workdir ./cookbook1 \\\n    --sample A ./data/sample-A.fastq.gz \\\n    --sample B ./data/sample-B.fastq.gz \\\n    --sample C ./data/sample-C.fastq.gz \\\n</code></pre> kmerkit logged output <pre><code>...\n</code></pre>"},{"location":"cookbooks/1-amaranthus-dioecy/","title":"1 amaranthus dioecy","text":""},{"location":"cookbooks/1-amaranthus-dioecy/#workflow-diagram","title":"Workflow diagram","text":"<pre><code>%%{init: {'theme': 'dark', \"flowchart\" : { \"curve\" : \"basis\" } } }%%\ngraph LR\n    0(kinit)\n    1(ktrim)\n    A(kcount)\n    B(kfilter)\n    C(kextract)\n    D(kassemble)\n    0 --&gt; 1 --&gt; A --&gt; B --&gt; C --&gt; D\n\nlinkStyle default stroke-width:2px,fill:none,stroke:grey;       \n</code></pre>"},{"location":"cookbooks/1-amaranthus-dioecy/#study-description","title":"Study description","text":"<p>Here we re-implement the study by Neves et al. to detect a male linked  genomic region involved in sex determination in the dioecious plant species  Amaranthus palmeri. This study uses pool-seq to sequence four populations  composing male and female plants from two geographically distinct populations.</p> <p>Ca\u0301tia Jose\u0301 Neves, Maor Matzrafi, Meik Thiele, Anne Lorant, Mohsen B      Mesgaran, Markus G Stetter, Male Linked Genomic Region Determines Sex in      Dioecious Amaranthus palmeri, Journal of Heredity, Volume 111, Issue 7,      October 2020, Pages 606\u2013612,      https://doi.org/10.1093/jhered/esaa047</p>"},{"location":"cookbooks/1-amaranthus-dioecy/#fetch-fastq-data","title":"Fetch fastq data","text":"<p>If you wish to follow along you can dowload the data from ERA with the instructions below: </p> <ul> <li>ERR4161581 (California_male_pool),</li> <li>ERR4161582 (California_female_pool),</li> <li>ERR4161583 (Kansas_male_pool),</li> <li>ERR4161584 (Kansas_female_pool)</li> </ul> Download fastq data using sra-tools <p>Download the latest version of the sratools from https://github.com/ncbi/sra-tools/wiki/01.-Downloading-SRA-Toolkit by selecting the compiled binaries that are  appropriate for your system (e.g., Linux or MacOSX). (I really do  recommend that you use the latest version since this software is updated frequently and does not maintain compatibility with older versions.) Run the command below to download the fastq data for this study  into a new directory. The total file size will be about 140Gb.</p> <pre><code># make a directory to store the raw fastq data files\nmkdir -p ./fastq-data\n\n# download files to the specified fastq directory\nfor run in ERR4161581 ERR4161582 ERR4161583 ERR4161584; do\nfasterq-dump --progress --outdir ./fastq-data --temp . $run;\ndone\n</code></pre>"},{"location":"cookbooks/1-amaranthus-dioecy/#kmerkit-analysis","title":"Kmerkit analysis","text":""},{"location":"cookbooks/1-amaranthus-dioecy/#initialize-a-new-project","title":"Initialize a new project","text":"<p>Start a new project by entering a name and working directory to <code>init</code>,  representing the filename prefix and location where all files will be saved. The directory will be created if it doesn't yet exist. Multiple input fastq  files can be entered as arguments, or multiple can be selected using a  regular expression selector like below. Paired reads are automatically  detected based on name matching. Sample names are automatically extracted  from file names. Paired file names should be identical up until some  delimiter (e.g., <code>_</code>), after which the tail is trimmed (<code>_R1.fastq.gz</code>).  You can set the delimiter explicitly.</p> <pre><code>kmerkit init --name dioecy --workdir /tmp --delim \"_\" ./fastq-data/*.gz </code></pre> <p>This step creates a project JSON file, which will contain fully reproducible  information about each step in a kmerkit analysis. It will be updated  upon each kmerkit module that is run. This file can be read directly,  or, you can view it easily by calling <code>kmerkit stats</code>, like below.</p> kmerkit stats output <pre><code>kmerkit stats --json /tmp/dioecy.json\n</code></pre> <pre><code>Project JSON data:\n{\n\"name\": \"Neves\",\n\"workdir\": \"/pinky/deren/palmeri\",\n\"versions\": {\n\"kmerkit\": \"0.0.12\",\n\"kmc\": \"3.1.1\",\n\"gemma\": \"0.9.83\",\n\"sklearn\": \"0.24.1\"\n},\n\"kinit\": {\n\"data\": {\n\"ERR4161581\": [\n\"/pinky/DATASTORE/Amaranthus_palmeri_PRJEB38372/ERR4161581_1.fastq.gz\",\n\"/pinky/DATASTORE/Amaranthus_palmeri_PRJEB38372/ERR4161581_2.fastq.gz\"\n],\n\"ERR4161582\": [\n\"/pinky/DATASTORE/Amaranthus_palmeri_PRJEB38372/ERR4161582_1.fastq.gz\",\n\"/pinky/DATASTORE/Amaranthus_palmeri_PRJEB38372/ERR4161582_2.fastq.gz\"\n],\n\"ERR4161583\": [\n\"/pinky/DATASTORE/Amaranthus_palmeri_PRJEB38372/ERR4161583_1.fastq.gz\",\n\"/pinky/DATASTORE/Amaranthus_palmeri_PRJEB38372/ERR4161583_2.fastq.gz\"\n],\n\"ERR4161584\": [\n\"/pinky/DATASTORE/Amaranthus_palmeri_PRJEB38372/ERR4161584_1.fastq.gz\",\n\"/pinky/DATASTORE/Amaranthus_palmeri_PRJEB38372/ERR4161584_2.fastq.gz\"\n]\n},\n\"commands\": {}\n},\n}\n</code></pre>"},{"location":"cookbooks/1-amaranthus-dioecy/#read-trimming-optional","title":"Read trimming (optional)","text":"<p>You can perform read trimming on your own before using kmerkit, but we also provide the option to trim, filter, or subsample your reads within kmerkit by calling the program <code>fastp</code>. Trimmed read files are written to the workdir,  and subsequent modules (e.g., <code>count</code> and <code>extract</code>) will  use the trimmed reads instead of the raw reads (both sets of filepaths can  be viewed in the project JSON file).</p> <pre><code>kmerkit trim -j /tmp/dioecy.json --workers 4\n</code></pre> <p>Like before we can access the results from the JSON file by calling the <code>stats</code> module. In this case I also provide a module name (trim) to  select only results for this module. </p> kmerkit stats output <pre><code>kmerkit stats -j /tmp/dioecy.json trim\n</code></pre> <pre><code>...\n</code></pre>"},{"location":"cookbooks/1-amaranthus-dioecy/#count-kmers","title":"Count kmers","text":"<p>Kmers are counted for each sample using  kmc at the specified kmer-size.  Kmers occurring above or below the specified thresholds will be excluded.  See the <code>kmerkit count</code> page for details on parallelization and memory consumption for optimizing the speed of this step, which is usually  the most time consuming. </p> <pre><code>kmerkit count -j /tmp/dioecy.json --kmer-size 35 --min-depth 5 --workers 4 </code></pre> kmerkit stats output <pre><code>kmerkit stats -j /tmp/dioecy.json count\n</code></pre> <pre><code>...\n</code></pre>"},{"location":"cookbooks/1-amaranthus-dioecy/#filter-kmers","title":"Filter kmers","text":"<p>Apply filters to identify target kmers that are enriched in one group of  samples versus another. In this case, we aim to identify male-specific kmers, meaning those that are present in males but not females. This can be done  by setting a high <code>min-map</code> for group 1 (kmers must be present in group 1) and  setting a low <code>max-map</code> for group 0 (kmers cannot be present in group 0). We must also assign samples to groups 0 or 1. For studies with many samples this is most easily done by entering a CSV file (see the kfilter docs section). Here because there are few samples I use the simpler option of entering the sample names directly using the <code>-0</code> and <code>-1</code> options to assign to their respective groups. The min_map and max_map entries each take two ordered values, assigned to group 0 and 1, respectively.</p> <pre><code>kmerkit filter \\\n--json /tmp/dioecy.json \\\n-1 'ERR4161581' -1 'ERR4161583' \\\n-0 'ERR4161582' -0 'ERR4161584' \\\n--min_map 0.0 0.5 \\\n--max_map 0.0 1.0  </code></pre> kmerkit filter results <pre><code>kmerkit stats -j /tmp/dioecy.json filter\n</code></pre> <pre><code>...\n</code></pre>"},{"location":"cookbooks/1-amaranthus-dioecy/#extract-reads","title":"Extract reads","text":"<p>Now that we've identified a set of target kmers we will extract reads from  fastq data files that contain these kmers. This is expected to pull out reads mapping to male-specific regions of the A. palmeri genome. Here you  can enter new fastq files to extract data from, or enter the names of samples already in the project database, which will use the (trimmed) fastq data files referenced in the JSON file. Here I don't enter any sample names, which  defaults to performing extractions on all 4 samples in the database (we expect to not recover any reads for the two female pop samples).</p> <pre><code>kmerkit extract --json /tmp/dioecy.json --min-kmers-per-read 5\n</code></pre> kmerkit stats output <pre><code>...\n</code></pre>"},{"location":"cookbooks/1-amaranthus-dioecy/#assemble-contigs","title":"Assemble contigs","text":"<p>From the extracted reads created in the last step, we can now assemble contigs for each sample (or for all samples pooled together) using the <code>assemble</code>  module. Here we use the default assembler, spades. This creates a number of output files in the workdir, which can be summarized with <code>stats</code>. </p> <pre><code>kmerkit assemble --json /tmp/dioecy.json ...\n</code></pre> <p>The main result of Neves et al. was the identification of an approximately 2Mb assembled contig representing a large contiguous male-specific genomic region. The summary here shows the ...</p> kmerkit stats output <pre><code>...\n</code></pre>"},{"location":"cookbooks/1-amaranthus-dioecy/#reproducibility","title":"Reproducibility","text":"<p>In addition to your scripts that can be used to reproduce your analysis, the  JSON project file contains a full record of the samples, parameters, and the order of analysis steps that make up your analysis.</p> kmerkit project JSON file <pre><code>...\n</code></pre>"},{"location":"cookbooks/1-amaranthus-dioecy/#todo-post-pipeline-analysis-api","title":"TODO: Post-pipeline analysis API","text":"<p>The <code>kmerkit</code> Python API can be used to perform post-pipeline analyses  in a jupyter notebook. Here we create a plot of </p> <pre><code>import kmerkit\n\nproject = kmerkit.load_json(\"/tmp/dioecy.json\")\n...\n</code></pre>"},{"location":"cookbooks/2-arabidopsis-gwas/","title":"2 arabidopsis gwas","text":""},{"location":"cookbooks/2-arabidopsis-gwas/#workflow-diagram","title":"Workflow diagram","text":"<pre><code>%%{init: {'theme': 'base', 'themeVariables': { 'primaryColor': 'grey', 'titleColor': '#262626', 'background': green}}}%%\ngraph LR\n    A(kcount)\n    B(kfilter)\n    C(kmatrix)\n    D(kgwas)\n    subgraph kmerkit modules\n        A --&gt; B --&gt; C --&gt; D\n    end\n    style A fill:teal,stroke:#333,stroke-width:2px,color:#262626\n    style B fill:goldenrod,stroke:#333,stroke-width:2px,color:#262626\n</code></pre>"},{"location":"cookbooks/2-arabidopsis-gwas/#study-description","title":"Study description","text":"<p>Explain and cite Arabidopsis studies here...</p>"},{"location":"cookbooks/2-arabidopsis-gwas/#_1","title":"...","text":""},{"location":"cookbooks/3-pedicularis-RAD-gwas/","title":"3 pedicularis RAD gwas","text":""},{"location":"cookbooks/3-pedicularis-RAD-gwas/#workflow-diagram","title":"Workflow diagram","text":"<pre><code>%%{init: {'theme': 'dark', \"flowchart\" : { \"curve\" : \"basis\" } } }%%\ngraph LR\n    0(kinit)\n    1(ktrim)\n    A(kcount)\n    B(kfilter)\n    C(kmatrix)\n    D(kgwas)\n    0 --&gt; 1 --&gt; A --&gt; B --&gt; C --&gt; D\n\nlinkStyle default stroke-width:2px,fill:none,stroke:grey;       \n</code></pre>"},{"location":"cookbooks/3-pedicularis-RAD-gwas/#study-description","title":"Study description","text":"<p>Here we re-implement the study by Eaton et al. (in prep) to detect  genomic loci associated with a novel floral trait in the plant species complex Pedicularis cranolopha. This study uses single-end RAD-seq data  to sequence 100 individuals from 18 populations which vary in presence/absence of the trait of interest in a way that is discordant with the phylogeny.</p> <p>Citation in future</p>"},{"location":"cookbooks/3-pedicularis-RAD-gwas/#fetch-fastq-data","title":"Fetch fastq data","text":"<p>If you wish to follow along you can dowload the data from SRA with the instructions below. </p> Download fastq data using sra-tools <p>Download the latest version of the sratools from https://github.com/ncbi/sra-tools/wiki/01.-Downloading-SRA-Toolkit by selecting the compiled binaries that are  appropriate for your system (e.g., Linux or MacOSX). (I really do  recommend that you use the latest version since this software is updated frequently and does not maintain compatibility with older versions.) Run the command below to download the fastq data for this study  into a new directory.</p> <pre><code># make a directory to store the raw fastq data files\nmkdir -p ./fastq-data\n\n# download files to the specified fastq directory\nfor run in ERR4161581 ERR4161582 ERR4161583 ERR4161584; do\nfasterq-dump --progress --outdir ./fastq-data --temp . $run;\ndone\n</code></pre>"},{"location":"cookbooks/3-pedicularis-RAD-gwas/#kmerkit-analysis","title":"Kmerkit analysis","text":""},{"location":"cookbooks/3-pedicularis-RAD-gwas/#initialize-a-new-project","title":"Initialize a new project","text":"<p>We start by initing a new project to assign samples names to files. The data are single-end</p> <pre><code>kmerkit init --name forked --workdir /tmp --delim \"_\" ./fastq-data/*.gz </code></pre> <p>This step creates a project JSON file, which will contain the fully reproducible  information about each step in a kmerkit analysis. This file is updated  upon each kmerkit module that is run. This file can be read directly,  or, you can access a more nicely formatted view of specific results by calling <code>kmerkit stats</code> and specifying a specific module.</p> <pre><code>kmerkit stats --json /tmp/forked.json init\n</code></pre> kmerkit stats output <pre><code>...\n</code></pre>"},{"location":"cookbooks/3-pedicularis-RAD-gwas/#read-trimming-optional","title":"Read trimming (optional)","text":"<p>We applied read-trimming using the default options in <code>fastp</code>, but also used the option <code>--subsample 2e6</code> to normalize the number of reads among samples to a maximum of 2M. </p> <pre><code>kmerkit trim --json /tmp/forked.json --workers 4\n</code></pre> <pre><code>kmerkit stats --json /tmp/forked.json trim\n</code></pre> kmerkit stats output <pre><code>...\n</code></pre>"},{"location":"cookbooks/3-pedicularis-RAD-gwas/#count-kmers","title":"Count kmers","text":"<p>Because RAD-seq generates data that extends directionally away from a cut-site the resulting reads will have specific orientations. Thus, we turn off  canonical kmer counting here to count each kmer and its reverse-complement  as separate patterns. </p> <pre><code>kmerkit count --json /tmp/forked.json \\\n--no-canonical --kmer-size 17 --min-depth 5 --workers 4 </code></pre> <pre><code>kmerkit stats --json /tmp/forked.json count\n</code></pre> kmerkit stats output <pre><code>...\n</code></pre>"},{"location":"cookbooks/3-pedicularis-RAD-gwas/#filter-kmers","title":"Filter kmers","text":"<p>Here I assign samples to either the target group (1) or the filter group (0) and keep kmers that occur in the frequency range 0.5-1.0 in the target, and  exclude any that occur at all (i.e., in the range 0.0-1.0) in the filter  group. </p> <pre><code>kmerkit filter \\\n--json /tmp/forked.json \\\n-1 '...' \\\n-0 '...' \\\n--min_map 0.0 0.5 \\\n--max_map 0.0 1.0  </code></pre> <pre><code>kmerkit stats -j /tmp/dioecy.json filter\n</code></pre> kmerkit filter results <pre><code>...\n</code></pre>"},{"location":"cookbooks/3-pedicularis-RAD-gwas/#perform-gwas","title":"Perform GWAS","text":"<p>Now that we've identified a set of target kmers we will extract reads from  fastq data files that contain these kmers. This is expected to pull out reads mapping to male-specific regions of the A. palmeri genome. Here you  can enter new fastq files to extract data from, or enter the names of samples already in the project database, which will use the (trimmed) fastq data files referenced in the JSON file. Here I don't enter any sample names, which  defaults to performing extractions on all 4 samples in the database (we expect to not recover any reads for the two female pop samples).</p> <pre><code>kmerkit gwas --json /tmp/forked.json --kinship --logistic\n</code></pre> kmerkit stats output <pre><code>...\n</code></pre>"},{"location":"cookbooks/3-pedicularis-RAD-gwas/#reproducibility","title":"Reproducibility","text":"<p>In addition to your scripts that can be used to reproduce your analysis, the  JSON project file contains a full record of the samples, parameters, and the order of analysis steps that make up your analysis.</p> kmerkit project JSON file <pre><code>...\n</code></pre>"},{"location":"cookbooks/3-pedicularis-RAD-gwas/#todo-post-pipeline-analysisvisualization-api","title":"TODO: Post-pipeline analysis/visualization API","text":"<p>The <code>kmerkit</code> Python API can be used to perform post-pipeline analyses  in a jupyter notebook. Here we create a plot of </p> <pre><code>import kmerkit\n\nproject = kmerkit.load_json(\"/tmp/forked.json\")\n...\n</code></pre>"}]}